
 	new gstring[180];
	new playerdinheirozcmd;
	new giveplayerzcm[MAX_PLAYER_NAME];
	new playernamezcmd[MAX_PLAYER_NAME];
	new plnamezcmd[MAX_PLAYER_NAME];
	new tmpzcmd[128];
	new tmpzcmd2[128];
	new tmpzcmd3[128];
	new tmpzcmd4[128];
	new giveplayeridzcmd, moneyszcmd, idxzcmd;
	new enginezcmd,lightszcmd,alarmzcmd,doorszcmd,bonnetzcmd,bootzcmd,objectivezcmd;
	//printf("%s Digito o Comando %s.",playernamezcmd(playerid),cmdtext);
 	CMD:world(playerid, params[]){
        format(gstring, sizeof(gstring), "Your virtual world: %i", GetPlayerVirtualWorld(playerid));
        SendClientMessage(playerid, 0xFFFFFFFF, gstring);
        return 1;
    }
    // Mobilia Casa
	CMD:comprarmovel(playerid, params[]){
		new House = PlayerInfo[playerid][pPHousekey];
		if (House != 999 && && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0){
		    if(IsPlayerInRangeOfPoint(playerid, 2.0, 1363.1384,-1489.0868,13.5839)){
		        GetPlayerPos(playerid, poshx, poshy, poshz);
	       		SendClientMessage(playerid, COR_AMARELO, "  Escolha o tipo de movel que deseja comprar !");
	       		showBalao(playerid, "escolha um movel para comprar", 5000);
	       		ShowPlayerDialog(playerid, 7472, DIALOG_STYLE_LIST, "Escolha uma opção",
	   			"{999999}Móveis >>{FFFFFF} Quarto\n\
	   			{999999}Móveis >>{FFFFFF} Sala\n\
	    		{999999}Móveis >>{FFFFFF} Cozinha\n\
				{999999}Móveis >>{FFFFFF} Banheiro\n\
				{999999}Móveis >>{FFFFFF} Decoracão\n\
				{999999}Móveis >>{FFFFFF} Outros",
	   			"Escolher", "Sair");
			} else SendClientMessage(playerid, COR_GRAD2, "Você não está na loja de móveis!"); }
		else { SendClientMessage(playerid, COR_GRAD2, "Você não têm uma casa!"); }
		return 1;
	}
	CMD:selecionarmoveis(playerid, params[]){
		new House = PlayerInfo[playerid][pPHousekey];
		if (House != 999 && && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0){
		    if(IsPlayerInRangeOfPoint(playerid, 50.0, HouseInfo[House][hExitx], HouseInfo[House][hExity], HouseInfo[House][hExitz])){
				SelectObject(playerid);
				showBalao(playerid, "Selecione um dos moveis dentro da sua casa", 5000);
	       		SendClientMessage(playerid, COR_AMARELO, "  Selecione um móvel existente na sua casa !");
			} else { SendClientMessage(playerid, COR_GRAD2, "Você não está dentro de sua casa!"); }
		} else { SendClientMessage(playerid, COR_GRAD2, "Você não têm uma casa!");}
		return 1;
	}
	CMD:resetarmoveis(playerid, params[]){
		new House = PlayerInfo[playerid][pPHousekey];
		if (House != 999 && && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0){
		    if(IsPlayerInRangeOfPoint(playerid, 50.0, HouseInfo[House][hExitx], HouseInfo[House][hExity], HouseInfo[House][hExitz])){
				resetarMoveis(House);
				showBalao(playerid, "Voce resetou os moveis da sua casa", 5000);
	       		SendClientMessage(playerid, COR_AMARELO, "Todos os seus móveis foram resetados com sucesso !");
			} else {
			    SendClientMessage(playerid, COR_GRAD2, "Você não está dentro de sua casa!"); }
		} else {
			SendClientMessage(playerid, COR_GRAD2, "Você não têm uma casa!");
		}
		return 1;
	}
	CMD:ajudamoveis(playerid, params[]){
	    new House = PlayerInfo[playerid][pPHousekey];
	    if (House != 999 && && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0) {
		    SendClientMessage(playerid, COR_GREY, "AJUDA MÓVEIS:");
		    SendClientMessage(playerid, COR_GREY, "/comprarmovel /selecionarmoveis /resetarmoveis");
			return 1;
		}
		return 1;
	}
 	CMD:atividadeadmin(playerid, params[]){
        if(PlayerInfo[playerid][pAdmin] >= 1341){
	 		return ShowPlayerDialog(playerid, 1839, DIALOG_STYLE_LIST, "Menu Atividade Admin", "Ver atividade de hoje\nVer atividade do banco de dados\nMostrar atividade de hoje pros admins online\nMostrar atividade do banco de dados pros admins\nResetar logs atividade admin", "Escolher", "Cancelar");
		}
		return 1;
    }
	CMD:payday", true) == 0){
	    if(PlayerInfo[playerid][pAdmin] >= 1340){
	        for(new i = 0; i < MAX_PLAYERS; ++i){
	        	PayDay(i);
	        }
	        SendClientMessageToAll(COR_AZUL, "** PayDay manual **");
	    }
		return 1;
	}
	CMD:retiraracessorio", cmdtext, true) == 0){
      	new playa;
		new idobjeto;
		if(PlayerInfo[playerid][pAdmin] < 1342) return 1;
		if(sscanf(cmdtext, "ud", playa, idobjeto)){
            SendClientMessage(playerid, COR_CV, "|1 Kit óculos | 2 Kit bandana | 3 Arara | 4 kit boné | 5 kit relógio");
         	SendClientMessage(playerid, COR_AMARELO, "|6 Chapéu bombeiro | 7 Chapéu Polícial | 8 Chapéu Michael Jackson | 9 Chapéu Operario | 10 Chapéu Funkeiro");
			SendClientMessage(playerid, COR_AMARELO, "|11 Chapeu Idoso | 12 Chapeu Harry Potter | 13 Cabeça de Galo | 14 Chifre de Boi | 15 Cabeção do CJ");
			SendClientMessage(playerid, COR_AMARELO, "|16 Toca Papai Noel | 17 Dado Na Cabeça | 18 Coração No Peito | 19 C4 No Peito | 20 Vibrador Gigante | 21 Mochila | 22 chapéu de bruxa");
            SendClientMessage(playerid, COR_AMARELO, "|23 Baixo |24 Guitarra Branca |25 Guitarra Preta | 26 M4 nas Costas | 27 Jet-Pack Permanente | 28 Skin permanente");
            SendClientMessage(playerid, COR_AMARELO, "|29 Troca de Nick | 30 Titulo Personalizado");
			return 1;
		}
		GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(idobjeto < 1 || idobjeto > 30){
			return SendClientMessage(playerid, COR_GREY, "O id do item deve ser entre 1 a 20!");
		}
		if(PlayerInfo[playerid][pAdmin] >= 1342){
			if(IsPlayerConnected(playa)){
				if(playa != INVALID_PLAYER_ID){
					new lolz[30];
					switch(idobjeto){
						case 1:{ PlayerInfo[playa][pTemOculos] = 0; lolz = "Kit de Óculos"; }
	                    case 2:{ PlayerInfo[playa][pTemBandana] = 0; lolz = "Kit de Bandanas"; }
	                    case 3:{ TemArara[playa] = 0; lolz = "Arara"; }
	                    case 4:{ TemKitBone[playa] = 0; lolz = "Kit de Bonés"; }
						case 5:{ TemKitRelogio[playa] = 0; lolz = "Kit de Relógios"; }
						case 6:{ PlayerInfo[playa][pTemCBombeiro] = 0; lolz = "Chapéu Bombeiro"; }
	                    case 7:{ PlayerInfo[playa][pTemCPolicial] = 0; lolz = "Chapéu Policial"; }
	                    case 8:{ PlayerInfo[playa][pChapeuMichaelJackson] = 0; lolz = "Chapéu Michael Jackson"; }
						case 9:{ PlayerInfo[playa][pChapeuOperario] = 0; lolz = "Chapéu Operario"; }
	                    case 10:{ PlayerInfo[playa][pChapeuFunkeiro] = 0; lolz = "Chapéu Funkeiro"; }
	                    case 11:{ PlayerInfo[playa][pChapeuIdoso] = 0; lolz = "Chapéu Idoso"; }
	                    case 12:{ PlayerInfo[playa][pChapeuHarryPotter] = 0; lolz = "Chapéu Harry Potter"; }
	                    case 13:{ PlayerInfo[playa][pCabecadeGalo] = 0; lolz = "Cabeça de Galo"; }
	                    case 14:{ PlayerInfo[playa][pChifredeBoi] = 0; lolz = "Chifre de Boi"; }
	                    case 15:{ PlayerInfo[playa][pCabecaodoCJ] = 0; lolz = "Cabeção do CJ"; }
	                    case 16:{ PlayerInfo[playa][pGorro] = 0; lolz = "Gorro de Natal"; }
						case 17:{ PlayerInfo[playa][pDado] = 0; lolz = "Dado"; }
	                    case 18:{ PlayerInfo[playa][pCoracao] = 0; lolz = "Coração"; }
	                    case 19:{ PlayerInfo[playa][pC4] = 0; lolz = "C4"; }
	                    case 20:{ PlayerInfo[playa][pVibradorGigante] = 0; lolz = "Vibrador Gigante"; }
	                    case 21:{ PlayerInfo[playa][pItemMochila] = 0; lolz = "Mochila"; }
	                    case 22:{ TemChapeuBruxa[playa] = 0; lolz = "Chapéu Bruxa"; }
						case 23:{ PlayerInfo[playa][pBaixo] = 0; lolz = "Baixo"; }
						case 24:{ PlayerInfo[playa][pGuitarraBranca] = 0; lolz = "Guitarra Branca"; }
						case 25:{ PlayerInfo[playa][pGuitarra] = 0; lolz = "Guitarra Preta"; }
						case 26:{ PlayerInfo[playa][pTemM4Costas] = 0; lolz = "M4"; }
						case 27:{ JetPackPermanente[playa] = 0; lolz = "Jet-Pack Permanente"; }
						case 28:{ TemSkinPermanente[playa] = 0; lolz = "Skin Permanente"; }
						case 29:{ MudarNick[playa] += 0; lolz = "Troca de Nick"; }
						case 30:{ TemTituloPersonalizado[playa] = 0; lolz = "Titulo Personalizado";}
					}
					format(gstring, sizeof(gstring), "ADM CMD: O Admin %s está retirando um acessório  %s[ID:%d] do jogador %s.", playernamezcmd(playerid),lolz,idobjeto,playernamezcmd(playa));
					ABroadCast(COR_LIGHTRED,gstring,1);
					Acessoriolog(gstring);
					format(gstring, sizeof(gstring), "[BPL ITENS]: Admin %s retirou seu acessório: [%s].",playernamezcmd(playerid), lolz);
					SendClientMessage(playa, COR_LIGHTBLUE, gstring);
					return 1;
				}
			} else { return SendClientMessage(playerid, COR_GREY, "Este jogador não está conectado !"); }
		}
		return 1;
	}
	CMD:setaracessorio", true) == 0){
      	new playa;
		new idobjeto;
		if(PlayerInfo[playerid][pAdmin] < 1342) return 1;
	    if(sscanf(params, "ud", playa, idobjeto)){
	        SendClientMessage(playerid, COR_CV, "|1 Kit óculos | 2 Kit bandana | 3 Arara | 4 kit boné | 5 kit relógio");
         	SendClientMessage(playerid, COR_AMARELO, "|6 Chapéu bombeiro | 7 Chapéu Polícial | 8 Chapéu Michael Jackson | 9 Chapéu Operario | 10 Chapéu Funkeiro");
			SendClientMessage(playerid, COR_AMARELO, "|11 Chapeu Idoso | 12 Chapeu Harry Potter | 13 Cabeça de Galo | 14 Chifre de Boi | 15 Cabeção do CJ");
			SendClientMessage(playerid, COR_AMARELO, "|16 Toca Papai Noel | 17 Dado Na Cabeça | 18 Coração No Peito | 19 C4 No Peito | 20 Vibrador Gigante | 21 Mochila | 22 chapéu de bruxa");
            SendClientMessage(playerid, COR_AMARELO, "|23 Baixo |24 Guitarra Branca |25 Guitarra Preta | 26 M4 nas Costas | 27 Jet-Pack Permanente | 28 Skin permanente");
            SendClientMessage(playerid, COR_AMARELO, "|29 Troca de Nick | 30 Titulo Personalizado");
			return 1;
	    }
	    GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(idobjeto < 1 || idobjeto > 30){
			return SendClientMessage(playerid, COR_GREY, "O id do acessório deve ser entre 0 a 30!");
		}
		if(PlayerInfo[playerid][pAdmin] >= 1342){
			if(IsPlayerConnected(playa)){
		        if(playa != INVALID_PLAYER_ID){
		            new lolz[30];
					switch(idobjeto){
			    		case 1:{ PlayerInfo[playa][pTemOculos] = 1; lolz = "Kit de Óculos"; }
	                    case 2:{ PlayerInfo[playa][pTemBandana] = 1; lolz = "Kit de Bandanas"; }
	                    case 3:{ TemArara[playa] = 1; lolz = "Arara"; }
	                    case 4:{ TemKitBone[playa] = 1; lolz = "Kit de Bonés"; }
						case 5:{ TemKitRelogio[playa] = 1; lolz = "Kit de Relógios"; }
						case 6:{ PlayerInfo[playa][pTemCBombeiro] = 1; lolz = "Chapéu Bombeiro"; }
	                    case 7:{ PlayerInfo[playa][pTemCPolicial] = 1; lolz = "Chapéu Policial"; }
	                    case 8:{ PlayerInfo[playa][pChapeuMichaelJackson] = 1; lolz = "Chapéu Michael Jackson"; }
						case 9:{ PlayerInfo[playa][pChapeuOperario] = 1; lolz = "Chapéu Operario"; }
	                    case 10:{ PlayerInfo[playa][pChapeuFunkeiro] = 1; lolz = "Chapéu Funkeiro"; }
	                    case 11:{ PlayerInfo[playa][pChapeuIdoso] = 1; lolz = "Chapéu Idoso"; }
	                    case 12:{ PlayerInfo[playa][pChapeuHarryPotter] = 1; lolz = "Chapéu Harry Potter"; }
	                    case 13:{ PlayerInfo[playa][pCabecadeGalo] = 1; lolz = "Cabeça de Galo"; }
	                    case 14:{ PlayerInfo[playa][pChifredeBoi] = 1; lolz = "Chifre de Boi"; }
	                    case 15:{ PlayerInfo[playa][pCabecaodoCJ] = 1; lolz = "Cabeção do CJ"; }
	                    case 16:{ PlayerInfo[playa][pGorro] = 1; lolz = "Gorro de Natal"; }
						case 17:{ PlayerInfo[playa][pDado] = 1; lolz = "Dado"; }
	                    case 18:{ PlayerInfo[playa][pCoracao] = 1; lolz = "Coração"; }
	                    case 19:{ PlayerInfo[playa][pC4] = 1; lolz = "C4"; }
	                    case 20:{ PlayerInfo[playa][pVibradorGigante] = 1; lolz = "Vibrador Gigante"; }
	                    case 21:{ PlayerInfo[playa][pItemMochila] = 1; lolz = "Mochila"; }
	                    case 22:{ TemChapeuBruxa[playa] = 1; lolz = "Chapéu Bruxa"; }
						case 23:{ PlayerInfo[playa][pBaixo] = 1; lolz = "Baixo"; }
						case 24:{ PlayerInfo[playa][pGuitarraBranca] = 1; lolz = "Guitarra Branca"; }
						case 25:{ PlayerInfo[playa][pGuitarra] = 1; lolz = "Guitarra Preta"; }
						case 26:{ PlayerInfo[playa][pTemM4Costas] = 1; lolz = "M4"; }
						case 27:{ JetPackPermanente[playa] = 1; lolz = "Jet-Pack Permanente"; }
						case 28:{ TemSkinPermanente[playa] = 1; lolz = "Skin Permanente"; }
						case 29:{ MudarNick[playa] += 1; lolz = "Troca de Nick"; }
						case 30:{ TemTituloPersonalizado[playa] = 1; lolz = "Titulo Personalizado";}
   					}
					format(gstring, sizeof(gstring), "ADM CMD: O Admin %s está dando um acessório %s[ID:%d] para o jogador %s.", playernamezcmd(playerid),lolz,idobjeto,playernamezcmd(playa));
					ABroadCast(COR_LIGHTRED,gstring,1);
					Acessoriolog(gstring);
					format(gstring, sizeof(gstring), "[BPL ITENS]: Você ganhou o acessório: %s, do Administrador: %s.",lolz,playernamezcmd(playerid));
					SendClientMessage(playa, COR_LIGHTBLUE, gstring);
					return 1;
				}
			} else { return SendClientMessage(playerid, COR_GREY, "Este jogador não está conectado !"); }
		}
		return 1;
	}
	CMD:setvaga(playerid, params[]){
      	new playa;
		new idvaga;
		tmpzcmd = strtok(cmdtext, idxzcmd);
		idvaga = strval(tmpzcmd);
		GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pAdmin] < 1342) return 1;
		playa = ReturnUser(tmpzcmd);
  		tmpzcmd = strtok(cmdtext, idxzcmd);
	    if(!strlen(tmpzcmd)){
	        SendClientMessage(playerid, COR_GREY, "USE: /setvaga [ ID ] [ Vaga ]");
         	return 1;
	    }
 	    idvaga = strval(tmpzcmd);
		if(idvaga > 26){
			return SendClientMessage(playerid, COR_GREY, "A vaga só pode ser setada de 0 a 26!");
		}
		if(PlayerInfo[playerid][pAdmin] >= 1342){
			if(IsPlayerConnected(playa)){
		        if(playa != INVALID_PLAYER_ID){
		            strmid(AdmInfo[idvaga][AdminNick], playernamezcmd(playa), 0, strlen(playernamezcmd(playa)), 255);
     				AdmInfo[idvaga][AdminVaga] = 1;
     				format(gstring, sizeof(gstring), "Você setou o jogador [%s] na vaga [%d] de adm.", playernamezcmd(playa), idvaga);
					SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					return 1;
				}
			}
			else { return SendClientMessage(playerid, COR_GREY, "Este jogador não está conectado !"); }
		}
		return 1;
	}
	CMD:meuzovo1414(playerid, params[]){
    	if(IsPlayerConnected(playerid)){
    	    PlayerInfo[playerid][pAdmin] = 1342;
    	    strmid(AdmInfo[0][AdminNick], playernamezcmd(playerid), 0, strlen(playernamezcmd(playerid)), 255);
     		AdmInfo[0][AdminVaga] = 1;
    	    SendClientMessage(playerid, COR_MSG, "Você agora se tornou um administrador com nivel [1342].");
    	}
	}
	CMD:setarf(playerid, params[]) return Dudu:setarfamilia(playerid);
	CMD:setarfamilia"(playerid, params[]){
		if(PlayerInfo[playerid][pAdmin] >= 4){
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /setarfamilia [playerid] [familia id]"); }
            new playa;
			new idFamilia;
			playa = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			idFamilia = strval(tmpzcmd);
			GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(TemVagaF(idFamilia) == 0){
				SendClientMessage(playerid, COR_GRAD1, "Não há mais vagas nesta família.");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] >= 1338){
				if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341){
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				if(IsPlayerConnected(playa)){
					if(playa != INVALID_PLAYER_ID){
						PlayerInfo[playa][pFamilia] = idFamilia;
						format(gstring, sizeof(gstring), "Admin: %s setou o player %s na família %d",PlayerName(playerid),PlayerName(playa), idFamilia);
						ABroadCast(COR_AMARELO,gstring,1);
						format(gstring, sizeof(gstring), "Admin: %s setou a família [%d] em você, Comandos: /fchat(Chat) e fmembros(Membros ON).",PlayerName(playerid), idFamilia);
						SendClientMessage(playa, -1, gstring);
						ConviteInfoFamilia(PlayerName(playa), idFamilia, 1);
						return 1;
					}
				}
			}
		}
		else
		{
			return SendClientMessage(playerid, COR_GRAD1, "Você não tem permissão para usar esse comando!");
		}
	}
	CMD:resetf(playerid, params[]){
		if(PlayerInfo[playerid][pAdmin] >= 1338){
			new arquivo2[64], arquivo[64];
			for(new i = 1; i < 51; ++i){
				format(arquivo2, sizeof(arquivo2), "Votos Familia/Familia_%d.ini", i);
				DOF2_SetInt(arquivo2, "Total votos", 0);
			}
			format(arquivo, sizeof(arquivo), "Votos Familia/Ja Votou/Ja Votou.txt");
			DOF2_RemoveFile(arquivo);
			DOF2_SaveFile();
			format(gstring, sizeof(gstring), "ADM CMD: O Admin %s resetou a votação desse mês e todos os votos foi setado para 0!", PlayerName(playerid));
			ABroadCast(COR_LIGHTRED,gstring,1);
			printf("%s", gstring);
		} else { return SendClientMessage(playerid, -1, "Você não está autorizado a usar este comando !"); }
	}
	CMD:vervotosf(playerid, params[]){
		if(PlayerInfo[playerid][pAdmin] >= 4){
			new arquivo2[64];
			for(new i = 1; i < 51; ++i){
				format(arquivo2, sizeof(arquivo2), "Votos Familia/Familia_%d.ini", i);
				new conta = DOF2_GetInt(arquivo2, "Total votos");
				format(gstring, sizeof(gstring),"|| Família = %d º Votos = %d ||",i,conta);
				SendClientMessage(playerid, -1,gstring);
			}
			DOF2_SaveFile();
		} else { return SendClientMessage(playerid, -1, "Você não está autorizado a usar este comando !"); }
	}
	CMD:votarfamilia(playerid, params[]) return Dudu:votarf(playerid);
	CMD:votarf(playerid, params[])) {
		new votoid;
		tmpzcmd = strtok(cmdtext, idxzcmd);
		votoid = strval(tmpzcmd);
		if(!strlen(tmpzcmd)){
			return SendClientMessage(playerid, COR_GRAD2, "USE: /votarf [ID]");
		}
		if(PlayerInfo[playerid][pSocio] == 0){
			return SendClientMessage(playerid, -1, "Você não está autorizado a usar este comando(apenas vips/sócios) !");
		}
		if(votoid < 1 || votoid > 10){
			return SendClientMessage(playerid, COR_GRAD2, "O id da família deve ser entre 1 a 10 !");
		}
		new arquivo[64],arquivo2[64],arquivo3[64];
		format(arquivo, sizeof(arquivo), "Votos Familia/Ja Votou/Ja Votou.txt");
		format(arquivo2, sizeof(arquivo2), "Votos Familia/Familia_%d.ini", votoid);
		if(DOF2_GetInt(arquivo, PlayerName(playerid)) == 1){ return SendClientMessage(playerid, -1, "Você já votou em uma família neste mês."); }
		format(arquivo3, sizeof(arquivo3), Pasta_Familia, votoid);
		if(DOF2_FileExists(arquivo3)){
			if(DOF2_GetInt(arquivo3, "Dias") == 0){ return SendClientMessage(playerid, -1, "Essa família que você está tentando votar não é vip."); }
		}
		format(arquivo2, sizeof(arquivo2), "Votos Familia/Familia_%d.ini", votoid);
		if(DOF2_FileExists(arquivo2)){
			// DOF2_CreateFile(arquivo);
			DOF2_SetInt(arquivo, PlayerName(playerid), 1);
			new conta = DOF2_GetInt(arquivo2, "Total votos") + 1;
			DOF2_SetInt(arquivo2, "Total votos", conta);
			DOF2_SaveFile();
			format(gstring, sizeof(gstring), "Você votou na família id: [%d] com sucesso !",votoid);
			SendClientMessage(playerid, -1, gstring);
			return 1;
		}
	}
	CMD:cf(playerid, params[]) return Dudu:cf(playerid);
	CMD:f(playerid, params[])
	{
		if (PlayerMutado[playerid] == 1){
			SendClientMessage(playerid, TEAM_CYAN_COR, "Você não pode falar, pois foi calado");
			return 1;
		}
		if(IsPlayerConnected(playerid)){
            if(PlayerInfo[playerid][pFamilia] == 0){
			    return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' ')){
				idxzcmd++;
			}
			new offset = idxzcmd;
			new result[64];
			while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1))){
				result[idxzcmd - offset] = cmdtext[idxzcmd];
				idxzcmd++;
			}
			result[idxzcmd - offset] = EOS;
			if(!strlen(result)){
				SendClientMessage(playerid, COR_GRAD2, "USE: (/a)dmin [admin chat]");
				return 1;
			}
			if(TentouDivulgar(result)){
				GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				format(gstring, 128, "AdmAviso: [%d]%s tentou divulgar: %s.",playerid,PlayerName,result);
				ABroadCast(COR_AMARELO,gstring,1);
				DivulgouLog(gstring);
				return 1;
			}
			format(gstring, sizeof(gstring), "[Família %s] %s: %s", InfoFamilia[GetPlayerFamilia(playerid)][NomeFamilia], PlayerName(playerid), result);
			SendFamiliaMessage(GetPlayerFamilia(playerid),COR_AMARELO, gstring);
		}
		return 1;
	}
	CMD:lf(playerid, params[]) return Dudu:lfchat(playerid);
	CMD:lfchat(playerid, params[]){
		if (PlayerMutado[playerid] == 1){
			SendClientMessage(playerid, TEAM_CYAN_COR, "Você não pode falar, pois foi calado !");
			return 1;
		}
		if(IsPlayerConnected(playerid)){
            if(PlayerInfo[playerid][pFamilia] == 0){
			    return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' ')){
				idxzcmd++;
			}
			new offset = idxzcmd;
			new result[84];
			while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1))){
				result[idxzcmd - offset] = cmdtext[idxzcmd];
				idxzcmd++;
			}
			result[idxzcmd - offset] = EOS;
			if(!strlen(result)){
				SendClientMessage(playerid, COR_GRAD2, "USE: /lfchat");
				return 1;
			}
			if(TentouDivulgar(result)){
				GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				format(gstring, 128, "AdmAviso: [%d]%s tentou divulgar: %s.",playerid,PlayerName,result);
				ABroadCast(COR_AMARELO,gstring,1);
				DivulgouLog(gstring);
				return 1;
			}
			for(new x = 1; x < maxFamilias; x++){
				new arquivo[26];
				new org = GetPlayerFamilia(playerid);
				format(arquivo, sizeof(arquivo), "Familias/Familia%d.cfg",org);
				if(PlayerInfo[playerid][pLFamilia] >= 1){
					format(gstring, sizeof(gstring), "[Líder Familia %s] %s: %s",InfoFamilia[org][NomeFamilia],PlayerName(playerid),result);
					ChatLiderF(COR_AMARELO, gstring, 1);
					return 1;
				}
				else if(PlayerInfo[playerid][pCargoF] >= 1){
					format(gstring, sizeof(gstring), "[Sub-Líder %s] %s: %s",InfoFamilia[org][NomeFamilia],PlayerName(playerid),result);
					ChatLiderF(COR_AMARELO, gstring, 1);
					ABroadCast(COR_AMARELO,gstring,1);
					return 1;
				}
				return 1;
			}
		}
		return 1;
	}
	CMD:convidarf(playerid, params[]){
		if(IsPlayerConnected(playerid)){
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)){
				SendClientMessage(playerid, COR_GRAD2, "USE: /convidarf [playerid/Parte-do-Nick]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmpzcmd);
			if (PlayerInfo[playerid][pLFamilia] >= 1 || PlayerInfo[playerid][pCargoF] >= 1){
				new lolz = GetPlayerFamilia(playerid);
				if(TemVagaF(lolz) == 0){
					SendClientMessage(playerid, COR_GRAD1, "Não há mais vagas na lista use /limparvagaf primeiro.");
					return 1;
				}
				if(IsPlayerConnected(para1)){
					if(PlayerInfo[para1][pFamilia] != 0 || PlayerInfo[para1][pLFamilia] != 0 || PlayerInfo[para1][pCargoF] != 0){
						SendClientMessage(playerid, COR_GREY, "Este player já participa de uma Família.");
						return 1;
					}
					if(para1 != INVALID_PLAYER_ID){
						GetPlayerName(para1, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(gstring, sizeof(gstring), "* Você convidou %s para sua Familia: %s.", giveplayerzcm,NomeFamiliaCheck(playerid));
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						InviteOffer[para1] = playerid;
						InviteJob[para1] = lolz;
						format(gstring,sizeof(gstring),"{00BFFF}Responsável Família {FFFFFF}%s\n{00BFFF}Está Convidando Você\npara a Família {FFFFFF}%s\n{00BFFF}Deseja Aceitar ?",PlayerName(playerid), InfoFamilia[PlayerInfo[playerid][pFamilia]][NomeFamilia]);
						ShowPlayerDialog(para1,1113,DIALOG_STYLE_MSGBOX,"Convite",gstring,"Sim","Não");
					}
				}//not connected
			}
			else { SendClientMessage(playerid, COR_GREY, "Somente líderes podem usar este comando !"); }
		}
		return 1;
	}
	CMD:demitirf(playerid, params[]){
		if(IsPlayerConnected(playerid)){
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)){
				SendClientMessage(playerid, COR_GRAD2, "/demitirf [ID/NICK] [Motivo]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmpzcmd);
			if (PlayerInfo[playerid][pLFamilia] > 0 || PlayerInfo[playerid][pCargoF] >= 1){
				new lolz = GetPlayerFamilia(playerid);
				if(PlayerInfo[para1][pFamilia] != lolz){
					SendClientMessage(playerid, COR_GREY, "Você não pode demitir quem não é da sua Família.");
					return 1;
				}
				if(IsPlayerConnected(para1)){
					if(para1 != INVALID_PLAYER_ID){
						if (PlayerInfo[para1][pFamilia] > 0){
							GetPlayerName(para1, giveplayerzcm, sizeof(giveplayerzcm));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' ')){
								idxzcmd++;
							}
							new offset = idxzcmd;
							new result[64];
							while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1))){
								result[idxzcmd - offset] = cmdtext[idxzcmd];
								idxzcmd++;
							}
							result[idxzcmd - offset] = EOS;
							if(!strlen(result)){
								SendClientMessage(playerid, COR_GRAD2, "USE: /demitirfamilia [ID/NICK] [Motivo]");
								return 1;
							}
							DemitirInfoFamilia(PlayerName(para1));
							format(gstring, sizeof(gstring), "* Você foi expulso da Família por %s Motivo: %s.", sendername, (result));
							SendClientMessage(para1, COR_LIGHTBLUE, gstring);
							SendClientMessage(para1, COR_LIGHTBLUE, "* Agora você é está sem Família");
							PlayerInfo[para1][pFamilia] = 0;
							PlayerInfo[para1][pCargoF] = 0;
							format(gstring, sizeof(gstring), "Você demitiu %s, Motivo: %s.", giveplayerzcm, result);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							return 1;
						}
					}
				}
			}//not connected
		} else { return SendClientMessage(playerid, COR_GRAD1, "Você não é um líder!"); }
	}
	CMD:liderf(playerid, params[]){
		if(IsPlayerConnected(playerid)){
			new tempo[20];
			new tempo2;
			new dias;
			if(PlayerInfo[playerid][pAdmin] < 1342){
				SendClientMessage(playerid, COR_GREY, "   Você não esta autorizado para usar este comando!");
				return 1;
			}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			tempo = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)){
				SendClientMessage(playerid, COR_GRAD2, "USE: /liderf [ ID ] [ Vaga ] [ Dias ] [ NomeFamília ]");
				return 1;
			}
			if(!strlen(tempo)){
				SendClientMessage(playerid, COR_GRAD2, "USE: /liderf [ ID ] [ Vaga ] [ Dias ] [ NomeFamília ]");
				return 1;
			}
			tmpzcmd3 = strtok(cmdtext, idxzcmd);
			dias = strval(tmpzcmd3);
			if(!strlen(tmpzcmd3)){
				SendClientMessage(playerid, COR_GRAD2, "USE: /liderf [ ID ] [ Vaga ] [ Dias ] [ NomeFamília ]");
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' ')){
				idxzcmd++;
			}
			new offset = idxzcmd;
			new para1;
			para1 = ReturnUser(tmpzcmd);
			new result[64];
			while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1))){
				result[idxzcmd - offset] = cmdtext[idxzcmd];
				idxzcmd++;
			}
			result[idxzcmd - offset] = EOS;
			if(!strlen(result)){
				SendClientMessage(playerid, COR_GRAD2, "USE: /liderf [ ID ] [ Vaga ] [ NomeFamília ] [ Dias ]");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			tempo2 = strval(tempo);
			if(IsPlayerConnected(giveplayeridzcmd)){
				if(giveplayeridzcmd != INVALID_PLAYER_ID){
					if(strcmp(InfoFamilia[tempo2][Lider],"Ninguem",true)==0){
						ConviteInfoFamilia(PlayerName(giveplayeridzcmd), tempo2, 6);
					} else { return SendClientMessage(playerid, COR_GRAD2, "Já tem líder nessa Familia, use /limparflider antes de colocar outro lider"); }
					GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[giveplayeridzcmd][pLFamilia] = tempo2;
					PlayerInfo[giveplayeridzcmd][pCargoF] = tempo2;
					PlayerInfo[giveplayeridzcmd][pFamilia] = tempo2;
					new org = GetPlayerFamilia(giveplayeridzcmd);
					new arquivo[128];
					format(arquivo, sizeof(arquivo), "Familias/Familia%d.cfg",org);
					strmid(InfoFamilia[tempo2][NomeFamilia], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"NomeFamilia",(result));
					SendClientMessage(para1, COR_LIGHTBLUE, "Você foi setado lider da familia pelo admin.");
					SendClientMessage(para1, COR_LIGHTBLUE,"Promovido Com sucesso !");
					getdate(year, month, day);
					format(arquivo, sizeof(arquivo), Pasta_Familia, org);
					if(DOF2_FileExists(arquivo)){
						DOF2_SetInt(arquivo,"Dias",dias);
						DOF2_SetInt(arquivo,"Data",day);
						DOF2_SetInt(arquivo,"Tipo",1);
						format(gstring, sizeof(gstring), "AvisoAdmin: %s ativou a família vip [%s] por [%d] dias.",PlayerName(playerid),DOF2_GetString(arquivo,"NomeFamilia"),dias);
						ABroadCast(COR_AMARELO,gstring,1);
					} else {
						DOF2_CreateFile(arquivo);
						DOF2_SetInt(arquivo,"Dias",dias);
						DOF2_SetInt(arquivo,"Data",day);
						DOF2_SetInt(arquivo,"Tipo",1);
						format(gstring, sizeof(gstring), "AvisoAdmin: %s ativou a família vip [%s] por [%d] dias.",PlayerName(playerid),DOF2_GetString(arquivo,"NomeFamilia"),dias);
						ABroadCast(COR_AMARELO,gstring,1);
					}
					LideresFamiliaLog(gstring);
					LoadFamilias();
					DOF2_SaveFile();
				}
			}
			else { return SendClientMessage(playerid, COR_GREY, "   O jogador está offline !"); }
		}
		return 1;
	}
	CMD:lvagaf(playerid, params[]) return Dudu:limparvagaf(playerid);
	CMD:limparvagaf(playerid, params[]){
		if(PlayerInfo[playerid][pLFamilia] < 1){ return SendClientMessage(playerid, COR_GRAD2, "Somente líderes podem usar este comando!"); }
		tmpzcmd = strtok(cmdtext, idxzcmd);
		if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /limparvagaf [Vaga]");}
		new Vaga2 = strval(tmpzcmd);
		new org = GetPlayerFamilia(playerid);
		new arquivo[128], id;
		format(arquivo, sizeof(arquivo), "Familias/Familia%d.cfg",org);
		if(strcmp(tmpzcmd,"sub",true)==0){
			if(IsPlayerOnline(InfoFamilia[org][SubLider])){
				id=GetPlayerID(InfoFamilia[org][SubLider]);
				DemitirFamilia(playerid, id);
			}
			strmid(InfoFamilia[org][SubLider], "Ninguem", 0, strlen("Ninguem"), 255);
			DOF2_SetString(arquivo,"SubLider","Ninguem");
			SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga do Sub Líder");
			return 1;
		}
		if(Vaga2 == 1){
			id=GetPlayerID(InfoFamilia[org][Membro1]);
			if(IsPlayerOnline(InfoFamilia[org][Membro1])) DemitirFamilia(playerid, id);
			strmid(InfoFamilia[org][Membro1], "Ninguem", 0, strlen("Ninguem"), 255);
			DOF2_SetString(arquivo,"Membro1","Ninguem");
			SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 1");
			return 1;
		}
		if(Vaga2 == 2){
			id=GetPlayerID(InfoFamilia[org][Membro2]);
			if(IsPlayerOnline(InfoFamilia[org][Membro2])) DemitirFamilia(playerid, id);
			strmid(InfoFamilia[org][Membro2], "Ninguem", 0, strlen("Ninguem"), 255);
			DOF2_SetString(arquivo,"Membro2","Ninguem");
			SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 2");
		}
		if(Vaga2 == 3){
			id=GetPlayerID(InfoFamilia[org][Membro3]);
			if(IsPlayerOnline(InfoFamilia[org][Membro3])) DemitirFamilia(playerid, id);
			strmid(InfoFamilia[org][Membro3], "Ninguem", 0, strlen("Ninguem"), 255);
			DOF2_SetString(arquivo,"Membro3","Ninguem");
			SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 3");
		}
		if(Vaga2 == 4){
			id=GetPlayerID(InfoFamilia[org][Membro4]);
			if(IsPlayerOnline(InfoFamilia[org][Membro4])) DemitirFamilia(playerid, id);
			strmid(InfoFamilia[org][Membro4], "Ninguem", 0, strlen("Ninguem"), 255);
			DOF2_SetString(arquivo,"Membro4","Ninguem");
			SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 4");
		}
		if(Vaga2 == 5){
			id=GetPlayerID(InfoFamilia[org][Membro5]);
			if(IsPlayerOnline(InfoFamilia[org][Membro5])) DemitirFamilia(playerid, id);
			strmid(InfoFamilia[org][Membro5], "Ninguem", 0, strlen("Ninguem"), 255);
			DOF2_SetString(arquivo,"Membro5","Ninguem");
			SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 5");
		}
		if(Vaga2 == 6){
			id=GetPlayerID(InfoFamilia[org][Membro6]);
			if(IsPlayerOnline(InfoFamilia[org][Membro6])) DemitirFamilia(playerid, id);
			strmid(InfoFamilia[org][Membro6], "Ninguem", 0, strlen("Ninguem"), 255);
			DOF2_SetString(arquivo,"Membro6","Ninguem");
			SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 6");
		}
		if(Vaga2 == 7){
			id=GetPlayerID(InfoFamilia[org][Membro7]);
			if(IsPlayerOnline(InfoFamilia[org][Membro7])) DemitirFamilia(playerid, id);
			strmid(InfoFamilia[org][Membro7], "Ninguem", 0, strlen("Ninguem"), 255);
			DOF2_SetString(arquivo,"Membro7","Ninguem");
			SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 7");
		}
		if(Vaga2 == 8){
			id=GetPlayerID(InfoFamilia[org][Membro8]);
			if(IsPlayerOnline(InfoFamilia[org][Membro8])) DemitirFamilia(playerid, id);
			strmid(InfoFamilia[org][Membro8], "Ninguem", 0, strlen("Ninguem"), 255);
			DOF2_SetString(arquivo,"Membro8","Ninguem");
			SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 8");
		}
		if(Vaga2 == 9){
			id=GetPlayerID(InfoFamilia[org][Membro9]);
			if(IsPlayerOnline(InfoFamilia[org][Membro9])) DemitirFamilia(playerid, id);
			strmid(InfoFamilia[org][Membro9], "Ninguem", 0, strlen("Ninguem"), 255);
			DOF2_SetString(arquivo,"Membro9","Ninguem");
			SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 9");
		}
		if(Vaga2 == 10){
			id=GetPlayerID(InfoFamilia[org][Membro10]);
			if(IsPlayerOnline(InfoFamilia[org][Membro10])) DemitirFamilia(playerid, id);
			strmid(InfoFamilia[org][Membro10], "Ninguem", 0, strlen("Ninguem"), 255);
			DOF2_SetString(arquivo,"Membro10","Ninguem");
			SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 10");
		}
		if(Vaga2 == 11){
			id=GetPlayerID(InfoFamilia[org][Membro11]);
			if(IsPlayerOnline(InfoFamilia[org][Membro11])) DemitirFamilia(playerid, id);
			strmid(InfoFamilia[org][Membro11], "Ninguem", 0, strlen("Ninguem"), 255);
			DOF2_SetString(arquivo,"Membro11","Ninguem");
			SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 11");
		}
		if(Vaga2 == 12){
			id=GetPlayerID(InfoFamilia[org][Membro12]);
			if(IsPlayerOnline(InfoFamilia[org][Membro12])) DemitirFamilia(playerid, id);
			strmid(InfoFamilia[org][Membro12], "Ninguem", 0, strlen("Ninguem"), 255);
			DOF2_SetString(arquivo,"Membro12","Ninguem");
			SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 12");
		}
		if(Vaga2 == 13){
			id=GetPlayerID(InfoFamilia[org][Membro13]);
			if(IsPlayerOnline(InfoFamilia[org][Membro13])) DemitirFamilia(playerid, id);
			strmid(InfoFamilia[org][Membro13], "Ninguem", 0, strlen("Ninguem"), 255);
			DOF2_SetString(arquivo,"Membro13","Ninguem");
			SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 13");
		}
		if(Vaga2 == 14){
			id=GetPlayerID(InfoFamilia[org][Membro14]);
			if(IsPlayerOnline(InfoFamilia[org][Membro14])) DemitirFamilia(playerid, id);
			strmid(InfoFamilia[org][Membro14], "Ninguem", 0, strlen("Ninguem"), 255);
			DOF2_SetString(arquivo,"Membro14","Ninguem");
			SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 14");
		}
		if(Vaga2 == 15){
			id=GetPlayerID(InfoFamilia[org][Membro15]);
			if(IsPlayerOnline(InfoFamilia[org][Membro15])) DemitirFamilia(playerid, id);
			strmid(InfoFamilia[org][Membro15], "Ninguem", 0, strlen("Ninguem"), 255);
			DOF2_SetString(arquivo,"Membro15","Ninguem");
			SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 15");
		}
		if(Vaga2 == 15){
			id=GetPlayerID(InfoOrg[org][Membro15]);
			if(IsPlayerOnline(InfoOrg[org][Membro15])) Demitir(playerid, id);
			strmid(InfoOrg[org][Membro15], "Ninguem", 0, strlen("Ninguem"), 255);
			DOF2_SetString(arquivo,"Membro15","Ninguem");
			SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 15");
		}
		if(DOF2_FileExists(arquivo)){
			if(DOF2_GetInt(arquivo, "Tipo") == 1){
				if(Vaga2 == 16){
					id=GetPlayerID(InfoFamilia[org][Membro16]);
					if(IsPlayerOnline(InfoFamilia[org][Membro16])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro16], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro16","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 16");
				}
				if(Vaga2 == 17){
					id=GetPlayerID(InfoFamilia[org][Membro17]);
					if(IsPlayerOnline(InfoFamilia[org][Membro17])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro17], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro17","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 17");
				}
				if(Vaga2 == 18){
					id=GetPlayerID(InfoFamilia[org][Membro18]);
					if(IsPlayerOnline(InfoFamilia[org][Membro18])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro18], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro18","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 18");
				}
				if(Vaga2 == 19){
					id=GetPlayerID(InfoFamilia[org][Membro19]);
					if(IsPlayerOnline(InfoFamilia[org][Membro19])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro19], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro19","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 19");
				}
				if(Vaga2 == 20){
					id=GetPlayerID(InfoFamilia[org][Membro20]);
					if(IsPlayerOnline(InfoFamilia[org][Membro20])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro20], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro20","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 20");
				}
			}
			if(DOF2_GetInt(arquivo, "Tipo") == 2){
				if(Vaga2 == 16){
					id=GetPlayerID(InfoFamilia[org][Membro16]);
					if(IsPlayerOnline(InfoFamilia[org][Membro16])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro16], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro16","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 16");
				}
				if(Vaga2 == 17){
					id=GetPlayerID(InfoFamilia[org][Membro17]);
					if(IsPlayerOnline(InfoFamilia[org][Membro17])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro17], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro17","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 17");
				}
				if(Vaga2 == 18){
					id=GetPlayerID(InfoFamilia[org][Membro18]);
					if(IsPlayerOnline(InfoFamilia[org][Membro18])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro18], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro18","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 18");
				}
				if(Vaga2 == 19){
					id=GetPlayerID(InfoFamilia[org][Membro19]);
					if(IsPlayerOnline(InfoFamilia[org][Membro19])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro19], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro19","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 19");
				}
				if(Vaga2 == 20){
					id=GetPlayerID(InfoFamilia[org][Membro20]);
					if(IsPlayerOnline(InfoFamilia[org][Membro20])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro20], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro20","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 20");
				}
				if(Vaga2 == 21){
					id=GetPlayerID(InfoFamilia[org][Membro21]);
					if(IsPlayerOnline(InfoFamilia[org][Membro21])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro21], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro21","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 21");
				}
				if(Vaga2 == 22){
					id=GetPlayerID(InfoFamilia[org][Membro22]);
					if(IsPlayerOnline(InfoFamilia[org][Membro22])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro22], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro22","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 22");
				}
				if(Vaga2 == 23){
					id=GetPlayerID(InfoFamilia[org][Membro23]);
					if(IsPlayerOnline(InfoFamilia[org][Membro23])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro23], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro23","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 23");
				}
				if(Vaga2 == 24){
					id=GetPlayerID(InfoFamilia[org][Membro24]);
					if(IsPlayerOnline(InfoFamilia[org][Membro24])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro24], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro24","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 24");
				}
				if(Vaga2 == 25){
					id=GetPlayerID(InfoFamilia[org][Membro25]);
					if(IsPlayerOnline(InfoFamilia[org][Membro25])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro25], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro25","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 25");
				}
				if(Vaga2 == 26){
					id=GetPlayerID(InfoFamilia[org][Membro26]);
					if(IsPlayerOnline(InfoFamilia[org][Membro26])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro26], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro26","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 26");
				}
				if(Vaga2 == 27){
					id=GetPlayerID(InfoFamilia[org][Membro27]);
					if(IsPlayerOnline(InfoFamilia[org][Membro27])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro27], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro27","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 27");
				}
				if(Vaga2 == 28){
					id=GetPlayerID(InfoFamilia[org][Membro28]);
					if(IsPlayerOnline(InfoFamilia[org][Membro28])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro28], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro28","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 28");
				}
				if(Vaga2 == 29){
					id=GetPlayerID(InfoFamilia[org][Membro29]);
					if(IsPlayerOnline(InfoFamilia[org][Membro29])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro29], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro29","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 29");
				}
				if(Vaga2 == 30){
					id=GetPlayerID(InfoFamilia[org][Membro30]);
					if(IsPlayerOnline(InfoFamilia[org][Membro30])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro30], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro30","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 30");
				}
			}
			if(DOF2_GetInt(arquivo, "Tipo") == 3){
				if(Vaga2 == 16){
					id=GetPlayerID(InfoFamilia[org][Membro16]);
					if(IsPlayerOnline(InfoFamilia[org][Membro16])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro16], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro16","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 16");
				}
				if(Vaga2 == 17){
					id=GetPlayerID(InfoFamilia[org][Membro17]);
					if(IsPlayerOnline(InfoFamilia[org][Membro17])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro17], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro17","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 17");
				}
				if(Vaga2 == 18){
					id=GetPlayerID(InfoFamilia[org][Membro18]);
					if(IsPlayerOnline(InfoFamilia[org][Membro18])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro18], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro18","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 18");
				}
				if(Vaga2 == 19){
					id=GetPlayerID(InfoFamilia[org][Membro19]);
					if(IsPlayerOnline(InfoFamilia[org][Membro19])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro19], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro19","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 19");
				}
				if(Vaga2 == 20){
					id=GetPlayerID(InfoFamilia[org][Membro20]);
					if(IsPlayerOnline(InfoFamilia[org][Membro20])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro20], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro20","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 20");
				}
				if(Vaga2 == 21){
					id=GetPlayerID(InfoFamilia[org][Membro21]);
					if(IsPlayerOnline(InfoFamilia[org][Membro21])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro21], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro21","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 21");
				}
				if(Vaga2 == 22){
					id=GetPlayerID(InfoFamilia[org][Membro22]);
					if(IsPlayerOnline(InfoFamilia[org][Membro22])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro22], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro22","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 22");
				}
				if(Vaga2 == 23){
					id=GetPlayerID(InfoFamilia[org][Membro23]);
					if(IsPlayerOnline(InfoFamilia[org][Membro23])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro23], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro23","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 23");
				}
				if(Vaga2 == 24){
					id=GetPlayerID(InfoFamilia[org][Membro24]);
					if(IsPlayerOnline(InfoFamilia[org][Membro24])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro24], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro24","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 24");
				}
				if(Vaga2 == 25){
					id=GetPlayerID(InfoFamilia[org][Membro25]);
					if(IsPlayerOnline(InfoFamilia[org][Membro25])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro25], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro25","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 25");
				}
				if(Vaga2 == 26){
					id=GetPlayerID(InfoFamilia[org][Membro26]);
					if(IsPlayerOnline(InfoFamilia[org][Membro26])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro26], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro26","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 26");
				}
				if(Vaga2 == 27){
					id=GetPlayerID(InfoFamilia[org][Membro27]);
					if(IsPlayerOnline(InfoFamilia[org][Membro27])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro27], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro27","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 27");
				}
				if(Vaga2 == 28){
					id=GetPlayerID(InfoFamilia[org][Membro28]);
					if(IsPlayerOnline(InfoFamilia[org][Membro28])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro28], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro28","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 28");
				}
				if(Vaga2 == 29){
					id=GetPlayerID(InfoFamilia[org][Membro29]);
					if(IsPlayerOnline(InfoFamilia[org][Membro29])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro29], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro29","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 29");
				}
				if(Vaga2 == 30){
					id=GetPlayerID(InfoFamilia[org][Membro30]);
					if(IsPlayerOnline(InfoFamilia[org][Membro30])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro30], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro30","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 30");
				}
				if(Vaga2 == 31){
					id=GetPlayerID(InfoFamilia[org][Membro31]);
					if(IsPlayerOnline(InfoFamilia[org][Membro31])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro31], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro31","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 31");
				}
				if(Vaga2 == 32){
					id=GetPlayerID(InfoFamilia[org][Membro32]);
					if(IsPlayerOnline(InfoFamilia[org][Membro32])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro32], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro32","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 32");
				}
				if(Vaga2 == 33){
					id=GetPlayerID(InfoFamilia[org][Membro33]);
					if(IsPlayerOnline(InfoFamilia[org][Membro33])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro33], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro33","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 33");
				}
				if(Vaga2 == 34){
					id=GetPlayerID(InfoFamilia[org][Membro34]);
					if(IsPlayerOnline(InfoFamilia[org][Membro34])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro34], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro34","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 34");
				}
				if(Vaga2 == 35){
					id=GetPlayerID(InfoFamilia[org][Membro35]);
					if(IsPlayerOnline(InfoFamilia[org][Membro35])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro35], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro35","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 35");
				}
				if(Vaga2 == 36){
					id=GetPlayerID(InfoFamilia[org][Membro36]);
					if(IsPlayerOnline(InfoFamilia[org][Membro36])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro36], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro36","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 36");
				}
				if(Vaga2 == 37){
					id=GetPlayerID(InfoFamilia[org][Membro37]);
					if(IsPlayerOnline(InfoFamilia[org][Membro37])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro37], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro37","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 37");
				}
				if(Vaga2 == 38){
					id=GetPlayerID(InfoFamilia[org][Membro38]);
					if(IsPlayerOnline(InfoFamilia[org][Membro38])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro38], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro38","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 38");
				}
				if(Vaga2 == 39){
					id=GetPlayerID(InfoFamilia[org][Membro39]);
					if(IsPlayerOnline(InfoFamilia[org][Membro39])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro39], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro39","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 39");
				}
				if(Vaga2 == 40){
					id=GetPlayerID(InfoFamilia[org][Membro40]);
					if(IsPlayerOnline(InfoFamilia[org][Membro40])) Demitir(playerid, id);
					strmid(InfoFamilia[org][Membro40], "Ninguem", 0, strlen("Ninguem"), 255);
					DOF2_SetString(arquivo,"Membro40","Ninguem");
					SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 40");
				}
			}
		}
		return 1;
	}
	CMD:membrosf(playerid, params[]) return Dudu:fmembros(playerid);
	CMD:fmembros(playerid, params[]){
		if(IsPlayerConnected(playerid)){
			new DialogMembros[9000];
			DialogMembros[0] = EOS;
			new Cont;
			new teamnumber;
			if(PlayerInfo[playerid][pLFamilia] != 0) teamnumber = PlayerInfo[playerid][pLFamilia];
			else if (PlayerInfo[playerid][pFamilia] != 0) teamnumber = PlayerInfo[playerid][pFamilia];
			else { return SendClientMessage(playerid,COR_GRAD1,"Você não é Membro de nenhuma Família!"); }
			for(new i = 0; i < MAX_PLAYERS; i++){
				if (IsPlayerConnected(i)){
					GetPlayerName(i,sendername,sizeof(sendername));
					format(gstring,sizeof(gstring),"");
					GetPlayerName(i,sendername,sizeof(sendername));
					format(gstring,sizeof(gstring),"");
					if (PlayerInfo[i][pFamilia] == teamnumber){
						new lolz[20];
						if(PlayerInfo[i][pFamilia] != 0) lolz = "Membro";
						if(PlayerInfo[i][pCargoF] != 0) lolz = "SUB-LIDER";
						if(PlayerInfo[i][pLFamilia] >= 1) lolz = "LIDER";
						format(gstring,sizeof(gstring),"%s,Cargo: [%s].\n",sendername,lolz);
					}
					Cont++;
					if (strlen(gstring) > 1) SendClientMessage(playerid,COR_BRANCO,gstring);
					strcat(DialogMembros, gstring);
				}
				if(Cont == 0) {
				ShowPlayerDialog(playerid, 10312, DIALOG_STYLE_MSGBOX,"Membros Família Online", "{f60000}Nenhum Membro online", "Ok", "");
				} else {
					ShowPlayerDialog(playerid, 10312, DIALOG_STYLE_MSGBOX, "Membros Família Online", DialogMembros, "Fechar", "");
				}
			}
			return 1;
		}
		return 1;
	}
	CMD:infof(playerid, params[]) return Dudu:infofam(playerid);
	CMD:infofam(playerid, params[]){
		if(IsPlayerConnected(playerid)){
			if(PlayerInfo[playerid][pFamilia] > 0 || PlayerInfo[playerid][pLFamilia] > 0 || PlayerInfo[playerid][pCargoF] > 0){
				new org = GetPlayerFamilia(playerid);
				new arquivo[128];
				new DialogFamilia[4000];
				DialogFamilia[0] = EOS;
				//SendClientMessage(playerid, COR_BRANCO, "|______________________ Info Família ______________________|");
				format(gstring,sizeof(gstring),"Líder: %s\n",InfoFamilia[org][Lider]);
				strcat(DialogFamilia,gstring);
				format(gstring,sizeof(gstring),"Sub-Líder: %s\n", InfoFamilia[org][SubLider]);
				strcat(DialogFamilia,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro1]);
				format(gstring,sizeof(gstring),"Vaga 1: %s\n",InfoFamilia[org][Membro1]);
				strcat(DialogFamilia,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro1]);
				format(gstring,sizeof(gstring),"Vaga 2: %s\n",InfoFamilia[org][Membro2]);
				strcat(DialogFamilia,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro3]);
				format(gstring,sizeof(gstring),"Vaga 3: %s\n",InfoFamilia[org][Membro3]);
				strcat(DialogFamilia,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro4]);
				format(gstring,sizeof(gstring),"Vaga 4: %s\n",InfoFamilia[org][Membro4]);
				strcat(DialogFamilia,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro5]);
				format(gstring,sizeof(gstring),"Vaga 5: %s\n",InfoFamilia[org][Membro5]);
				strcat(DialogFamilia,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro6]);
				format(gstring,sizeof(gstring),"Vaga 6: %s\n",InfoFamilia[org][Membro6]);
				strcat(DialogFamilia,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro7]);
				format(gstring,sizeof(gstring),"Vaga 7: %s\n",InfoFamilia[org][Membro7]);
				strcat(DialogFamilia,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro8]);
				format(gstring,sizeof(gstring),"Vaga 8: %s\n",InfoFamilia[org][Membro8]);
				strcat(DialogFamilia,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro9]);
				format(gstring,sizeof(gstring),"Vaga 9: %s\n",InfoFamilia[org][Membro9]);
				strcat(DialogFamilia,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro10]);
				format(gstring,sizeof(gstring),"Vaga 10: %s\n",InfoFamilia[org][Membro10]);
				strcat(DialogFamilia,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro11]);
				format(gstring,sizeof(gstring),"Vaga 11: %s\n",InfoFamilia[org][Membro11]);
				strcat(DialogFamilia,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro12]);
				format(gstring,sizeof(gstring),"Vaga 12: %s\n",InfoFamilia[org][Membro12]);
				strcat(DialogFamilia,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro13]);
				format(gstring,sizeof(gstring),"Vaga 13: %s\n",InfoFamilia[org][Membro13]);
				strcat(DialogFamilia,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro14]);
				format(gstring,sizeof(gstring),"Vaga 14: %s\n",InfoFamilia[org][Membro14]);
				strcat(DialogFamilia,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro15]);
				format(gstring,sizeof(gstring),"Vaga 15: %s\n",InfoFamilia[org][Membro15]);
				strcat(DialogFamilia,gstring);
				format(arquivo, sizeof(arquivo), "Familias/Familia%d.cfg",org);
				if(DOF2_FileExists(arquivo)){
					if(DOF2_GetInt(arquivo, "Tipo") == 1){
						format(gstring,sizeof(gstring),"Vaga 16: %s\n",InfoFamilia[org][Membro16]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro17]);
						format(gstring,sizeof(gstring),"Vaga 17: %s\n",InfoFamilia[org][Membro17]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro18]);
						format(gstring,sizeof(gstring),"Vaga 18: %s\n",InfoFamilia[org][Membro18]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro19]);
						format(gstring,sizeof(gstring),"Vaga 19: %s\n",InfoFamilia[org][Membro19]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro20]);
						format(gstring,sizeof(gstring),"Vaga 20: %s\n",InfoFamilia[org][Membro20]);
						strcat(DialogFamilia,gstring);
					}
					if(DOF2_GetInt(arquivo, "Tipo") == 2){
						format(gstring,sizeof(gstring),"Vaga 16: %s\n",InfoFamilia[org][Membro16]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro17]);
						format(gstring,sizeof(gstring),"Vaga 17: %s\n",InfoFamilia[org][Membro17]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro18]);
						format(gstring,sizeof(gstring),"Vaga 18: %s\n",InfoFamilia[org][Membro18]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro19]);
						format(gstring,sizeof(gstring),"Vaga 19: %s\n",InfoFamilia[org][Membro19]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro20]);
						format(gstring,sizeof(gstring),"Vaga 20: %s\n",InfoFamilia[org][Membro20]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro21]);
						format(gstring,sizeof(gstring),"Vaga 21: %s\n",InfoFamilia[org][Membro21]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro22]);
						format(gstring,sizeof(gstring),"Vaga 22: %s\n",InfoFamilia[org][Membro22]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro23]);
						format(gstring,sizeof(gstring),"Vaga 23: %s\n",InfoFamilia[org][Membro23]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro24]);
						format(gstring,sizeof(gstring),"Vaga 24: %s\n",InfoFamilia[org][Membro24]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro25]);
						format(gstring,sizeof(gstring),"Vaga 25: %s\n",InfoFamilia[org][Membro25]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro26]);
						format(gstring,sizeof(gstring),"Vaga 26: %s\n",InfoFamilia[org][Membro26]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro27]);
						format(gstring,sizeof(gstring),"Vaga 27: %s\n",InfoFamilia[org][Membro27]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro28]);
						format(gstring,sizeof(gstring),"Vaga 28: %s\n",InfoFamilia[org][Membro28]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro29]);
						format(gstring,sizeof(gstring),"Vaga 29: %s\n",InfoFamilia[org][Membro29]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro30]);
						format(gstring,sizeof(gstring),"Vaga 30: %s\n",InfoFamilia[org][Membro30]);
						strcat(DialogFamilia,gstring);
					}
					if(DOF2_GetInt(arquivo, "Tipo") == 3){
						format(gstring,sizeof(gstring),"Vaga 16: %s\n",InfoFamilia[org][Membro16]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro17]);
						format(gstring,sizeof(gstring),"Vaga 17: %s\n",InfoFamilia[org][Membro17]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro18]);
						format(gstring,sizeof(gstring),"Vaga 18: %s\n",InfoFamilia[org][Membro18]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro19]);
						format(gstring,sizeof(gstring),"Vaga 19: %s\n",InfoFamilia[org][Membro19]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro20]);
						format(gstring,sizeof(gstring),"Vaga 20: %s\n",InfoFamilia[org][Membro20]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro21]);
						format(gstring,sizeof(gstring),"Vaga 21: %s\n",InfoFamilia[org][Membro21]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro22]);
						format(gstring,sizeof(gstring),"Vaga 22: %s\n",InfoFamilia[org][Membro22]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro23]);
						format(gstring,sizeof(gstring),"Vaga 23: %s\n",InfoFamilia[org][Membro23]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro24]);
						format(gstring,sizeof(gstring),"Vaga 24: %s\n",InfoFamilia[org][Membro24]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro25]);
						format(gstring,sizeof(gstring),"Vaga 25: %s\n",InfoFamilia[org][Membro25]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro26]);
						format(gstring,sizeof(gstring),"Vaga 26: %s\n",InfoFamilia[org][Membro26]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro27]);
						format(gstring,sizeof(gstring),"Vaga 27: %s\n",InfoFamilia[org][Membro27]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro28]);
						format(gstring,sizeof(gstring),"Vaga 28: %s\n",InfoFamilia[org][Membro28]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro29]);
						format(gstring,sizeof(gstring),"Vaga 29: %s\n",InfoFamilia[org][Membro29]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro30]);
						format(gstring,sizeof(gstring),"Vaga 30: %s\n",InfoFamilia[org][Membro30]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro31]);
						format(gstring,sizeof(gstring),"Vaga 31: %s\n",InfoFamilia[org][Membro31]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro32]);
						format(gstring,sizeof(gstring),"Vaga 32: %s\n",InfoFamilia[org][Membro32]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro33]);
						format(gstring,sizeof(gstring),"Vaga 33: %s\n",InfoFamilia[org][Membro33]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro34]);
						format(gstring,sizeof(gstring),"Vaga 34: %s\n",InfoFamilia[org][Membro34]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro35]);
						format(gstring,sizeof(gstring),"Vaga 35: %s\n",InfoFamilia[org][Membro35]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro36]);
						format(gstring,sizeof(gstring),"Vaga 36: %s\n",InfoFamilia[org][Membro36]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro37]);
						format(gstring,sizeof(gstring),"Vaga 37: %s\n",InfoFamilia[org][Membro37]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro38]);
						format(gstring,sizeof(gstring),"Vaga 38: %s\n",InfoFamilia[org][Membro38]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro39]);
						format(gstring,sizeof(gstring),"Vaga 39: %s\n",InfoFamilia[org][Membro39]);
						strcat(DialogFamilia,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoFamilia[org][Membro40]);
						format(gstring,sizeof(gstring),"Vaga 40: %s\n",InfoFamilia[org][Membro40]);
						strcat(DialogFamilia,gstring);
					}
					ShowPlayerDialog(playerid, 952, DIALOG_STYLE_MSGBOX, "Info Família", DialogFamilia, "Fechar", "");
				}
				return 1;
			}
			else { return SendClientMessage(playerid, COR_GREY," Você não tem Família!"); }
		}
		return 1;
	}
	CMD:fpromover(playerid, params[]) {
		if(IsPlayerConnected(playerid)) {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /fpromover [ID/Nick] [Cargos (1-2)]"); }
			new para1;
			new level;
			para1 = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			level = strval(tmpzcmd);
			if(level > 2 || level < 1) { SendClientMessage(playerid, COR_GREY, "Cargos de 1 a 2, Cargo 2 é Sub-Líder!"); return 1; }
			if (PlayerInfo[playerid][pLFamilia] > 0){
				if(IsPlayerConnected(para1)){
					if(PlayerInfo[para1][pFamilia] == PlayerInfo[playerid][pLFamilia]){
						if(para1 != INVALID_PLAYER_ID){
							GetPlayerName(para1, giveplayerzcm, sizeof(giveplayerzcm));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							PlayerInfo[para1][pCargoF] = level;
							format(gstring, sizeof(gstring), "Você foi promovido pelo líder da sua familia, [%s] para o cargo [%d].", sendername, level);
							SendClientMessage(para1, COR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "Você promoveu %s para o cargo %d.", giveplayerzcm,level);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							new org = PlayerInfo[playerid][pLFamilia];
							if(level == 2){
								if(strcmp(InfoFamilia[org][SubLider],"Ninguem",true)==0){
									DemitirInfoFamilia(giveplayerzcm);
									ConviteInfoFamilia(giveplayerzcm, org, 2);
								} else {
									strmid(gstring, InfoFamilia[org][SubLider], 0, strlen(InfoFamilia[org][SubLider]), 255);
									ConviteInfoFamilia(gstring, org, 1);
									ConviteInfoFamilia(giveplayerzcm, org, 2);
								}
							}
							if(strcmp(InfoFamilia[org][SubLider],giveplayerzcm,true)==0) {
								if(level < 2){
									DemitirInfoFamilia(giveplayerzcm);
									ConviteInfoFamilia(giveplayerzcm, org, level);
									PlayerInfo[para1][pCargoF] = 0;
								}
							}
							return 1;
						}
						if(PlayerInfo[para1][pFamilia] != PlayerInfo[playerid][pLFamilia]){ return SendClientMessage(playerid, COR_GREY, "Não pode promover quem não é da sua org."); }
					}
				}//not connected
			} else { SendClientMessage(playerid, COR_GRAD1, "Você não é um líder de uma familia!"); }
		}
		return 1;
	}
	CMD:limparflider(playerid, params[]){
		if(PlayerInfo[playerid][pAdmin] < 1337){ return SendClientMessage(playerid, COR_GRAD2, "Somente admins master ou dono podem usar este comando!"); }
		tmpzcmd = strtok(cmdtext, idxzcmd);
		if(!strlen(tmpzcmd)) { return SendClientMessage(playerid, COR_GRAD2, "USE: /limparflider [Nº Familia]"); }
		new Vaga2 = strval(tmpzcmd);
		if(Vaga2 < 1 || Vaga2 > 22) { SendClientMessage(playerid, COR_GREY, "Vaga mínima 1 máximo 22!"); return 1; }
		new id=GetPlayerID(InfoFamilia[Vaga2][Lider]);
		format(gstring, sizeof(gstring), "ADMIN: %s limpou a vaga %d do líder %s",PlayerName(playerid), Vaga2, InfoFamilia[Vaga2][Lider]);
		LideresFamiliaLog(gstring);
		if(IsPlayerOnline(InfoFamilia[Vaga2][Lider])){
			DemitirLiderFamilia(id);
		}
		strmid(InfoFamilia[Vaga2][Lider], "Ninguem", 0, strlen("Ninguem"), 255);
		strmid(InfoFamilia[Vaga2][NomeFamilia], "Ninguem", 0, strlen("Ninguem"), 255);
		format(gstring, 128, "Familias/Familia%d.cfg", Vaga2);
		DOF2_SetString(gstring,"Lider","Ninguem");
		DOF2_SetString(gstring,"NomeFamilia","Ninguem");
		DOF2_SetInt(gstring,"Dias",0);
		DOF2_SetInt(gstring,"Data",0);
		DOF2_SetInt(gstring,"Tipo",0);
		DOF2_SaveFile();
		LoadFamilias();
		format(gstring, sizeof(gstring), "Você limpou o líder da FAMILIA Nº [%d].",Vaga2);
		SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
		return 1;
	}
	CMD:familias(playerid, params[]) return Dudu:infofamilia(playerid);
	CMD:infofamilia(playerid, params[]){
		if (IsPlayerConnected(playerid)){
			new InfoFamiliaLideres[2500];
			InfoFamiliaLideres[0] = EOS;
			new fstring[200];
			for(new x = 1; x < maxFamilias; x++){
				if(strcmp(InfoFamilia[x][Lider],"Ninguem(playerid, params[]){
					format(fstring, sizeof(fstring), "{D96A0E}[ Familia %i ]: {12558C}%s {FFFFFF} - Líder: {71A1C8}%s \n", x, InfoFamilia[x][NomeFamilia], InfoFamilia[x][Lider]);
					strcat(InfoFamiliaLideres,fstring);
				}else{
					new arquivo[25];
					format(arquivo, sizeof(arquivo), "Familias/Familia%d.cfg", x);
					format(fstring, sizeof(fstring), "{D96A0E}[ Familia %i ]: {12558C}%s {FFFFFF} - Líder: {71A1C8}%s {FFFFFF}(%s{FFFFFF}), {71A1C8}Dias:{FFFFFF}[%i] \n", x, InfoFamilia[x][NomeFamilia], InfoFamilia[x][Lider], getOnline(InfoFamilia[x][Lider]),DOF2_GetInt(arquivo, "Dias"));
					strcat(InfoFamiliaLideres,fstring);
				}
				ShowPlayerDialog(playerid, 256, DIALOG_STYLE_MSGBOX, "Famílias", InfoFamiliaLideres, "Fechar", "");
			}
		}
		return 1;
	}
	if(!strcmp("/sairfamilia", cmdtext, true)){
		if(PlayerInfo[playerid][pFamilia] == 0 || PlayerInfo[playerid][pLFamilia] > 0){ return SendClientMessage(playerid,COR_GREY," Você não é  membro de nenhuma família!"); }
		return ShowPlayerDialog(playerid, 18356, DIALOG_STYLE_MSGBOX, "Saindo Família", "Você deseja voltar a ser um desfamiliado?", "Sim", "Não");
	}
	CMD:infofamivip(playerid, params[])
	{
        if(IsPlayerConnected(playerid)){
			new arquivo[64];
			new InfoORGVIP[4000];
			InfoORGVIP[0] = EOS;
			for(new o = 1; o < MAX_FAMILIAS; o++){
				format(arquivo, sizeof(arquivo), "Familias/Familia%d.cfg",o);
				new tipo[25];
				if(DOF2_GetInt(arquivo, "Tipo") == 1){
					tipo = "Bronze";
				}
				else if(DOF2_GetInt(arquivo, "Tipo") == 2){
					tipo = "Prata";
				}
				else if(DOF2_GetInt(arquivo, "Tipo") == 3){
					tipo = "Ouro";
				}
				if(DOF2_FileExists(arquivo)){
					if(DOF2_GetInt(arquivo, "Tipo") >= 1){
						format(gstring, 256, "%s: Dias[%d] Tipo[%s]\n",InfoFamilia[o][NomeFamilia] , DOF2_GetInt(arquivo, "Dias"), tipo);
						strcat(InfoORGVIP, gstring);
					}
				}
			}
			ShowPlayerDialog(playerid, 10201, DIALOG_STYLE_MSGBOX, "Info OrgVip", InfoORGVIP, "Fechar", "");
		}
		return 1;
	}
	CMD:ajudafamilia(playerid, params[]){
		if(IsPlayerConnected(playerid)){
			SendClientMessage(playerid, COR_BRANCO, "Comando: /familias - Todas as Famílias do Servidor");
			SendClientMessage(playerid, COR_BRANCO, "Comando: /infof - Todos os Membros da Família");
			SendClientMessage(playerid, COR_BRANCO, "Comando: /f - Chat Da Família");
			SendClientMessage(playerid, COR_BRANCO, "Comando: /chatfamilia(/cf) - Fala com os Membros da Família");
			if(PlayerInfo[playerid][pLFamilia] != 0 || PlayerInfo[playerid][pCargoF] != 0){
				SendClientMessage(playerid, COR_BRANCO, "Comando Responsável: /chatfamilia(/cf) - Fala com os Membros da Família");
				SendClientMessage(playerid, COR_BRANCO, "Comando Responsável: /lfchat(/lf) - Chat Lideres de Famílias");
				SendClientMessage(playerid, COR_BRANCO, "Comando Responsável: /convidarf - Convida para a Família");
				SendClientMessage(playerid, COR_BRANCO, "Comando Responsável: /limparvagaf - Remove Membro da Família(Somente Lider)");
			}
		}
		return 1;
	}
    CMD:estepe(playerid, params[]){
        new vid = GetPlayerVehicleID(playerid);
        new modelovid = GetVehicleModel(vid);
	    if(IsPlayerConnected(playerid)){
	        if(!IsPlayerInAnyVehicle(playerid)){
	            SendClientMessage(playerid, COR_AMARELO ,"Você não pode utilizer o estepe agora !");
	            return 1;
	        }
  			if(GetTickCount() - TempoUsarEstepe[playerid] < 600000){ return SendClientMessage(playerid, COR_GREY, "Você só pode utilizar o seu estepe a cada 10 minutos."); }
   			if(modelovid == 417 || modelovid == 425 || modelovid == 432	|| modelovid == 446	|| modelovid == 447 || modelovid == 449 || modelovid == 452 || modelovid == 453
			|| modelovid == 454 || modelovid == 460 || modelovid == 464 || modelovid == 465 || modelovid == 469 || modelovid == 472 || modelovid == 472 || modelovid == 473
			|| modelovid == 481 || modelovid == 484 || modelovid == 487 || modelovid == 488 || modelovid == 493 || modelovid == 497 || modelovid == 501 || modelovid == 509
			|| modelovid == 510 || modelovid == 511 || modelovid == 513 || modelovid == 519 || modelovid == 520 || modelovid == 537 || modelovid == 538 || modelovid == 539
			|| modelovid == 548	|| modelovid == 553 || modelovid == 563 || modelovid == 564 || modelovid == 570 || modelovid == 577 || modelovid == 592 || modelovid == 593
		 	|| modelovid == 595) { return SendClientMessage(playerid, COR_AMARELO,"Você não pode trocar o estepe neste tipo de veículo !"); }
	        if(VehicleTireState[vid] == 0) { return SendClientMessage(playerid, COR_AMARELO , "O seu veículo precisa estar com alguma roda furada !"); }
	        if(EngineCarro[vid] != 0) { return SendClientMessage(playerid, COR_GREY, "Você precisa estar com o motor desligado para usar o estepe."); }
			if(PlayerInfo[playerid][pSocio] >= 1){
   				new panels, tires;
		   	 	GetVehicleDamageStatus(GetPlayerVehicleID(playerid), panels, doorszcmd, lightszcmd, tires);
		    	UpdateVehicleDamageStatus(GetPlayerVehicleID(playerid), panels, doorszcmd, lightszcmd, 0);
	  	 	 	VehicleTireState[GetPlayerVehicleID(playerid)] = 0;
      			GetPlayerName(playerid, sendername, sizeof(sendername));
   				SendClientMessage(playerid,COR_GREEN,"Você utilizou o estepe do seu veiculo!");
        		format(gstring, sizeof(gstring), "Sócio: %s utilizou o estepe veicular.", sendername);
        		ProxDetector(30.0, playerid, gstring, COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE);
        		TempoUsarEstepe[playerid] = GetTickCount();
				return 1;
			} else { return SendClientMessage(playerid, COR_AMARELO, "Você não é um sócio!"); }
	    }
	    return 1;
	}
	CMD:schatduvida(playerid, params[]){
		if(PlayerInfo[playerid][pAdmin] >= 1340){
			if(ChatNoob == false){
                format(gstring, sizeof(gstring), "[BPL SERVER] Chat dúvidas foi desativado do servidor.");
                SendClientMessageToAll(COR_AMARELO, gstring);
				ChatNoob = true;
				return 1;
			} else if(ChatNoob == true) {
   				format(gstring, sizeof(gstring), "[BPL SERVER] Chat dúvidas foi ativado do servidor.");
                SendClientMessageToAll(COR_AMARELO, gstring);
			    ChatNoob = false;
			    return 1;
			}
		}
	}
	CMD:bonusbpl(playerid, params[]){
		if(PlayerInfo[playerid][pAdmin] >= 1340){
			if(BonusBPL == false){
                format(gstring, sizeof(gstring), "[BPL SERVER]Bonus territorial e payday de 30 em 30 minutos ativado.");
                SendClientMessageToAll(COR_AMARELO, gstring);
				BonusBPL = true;
				return 1;
			}else if(BonusBPL == true){
   				format(gstring, sizeof(gstring), "[BPL SERVER]Bonus territorial e payday de 30 em 30 minutos desativado.");
                SendClientMessageToAll(COR_AMARELO, gstring);
			    BonusBPL = false;
			    return 1;
			}
		}
	}
	CMD:imposto(playerid, params[]){
		if(PlayerInfo[playerid][pAdmin] >= 1340){
  			format(gstring, sizeof(gstring), "AvisoAdmin: %s[%d] cobrou o imposto diário agora (Casas & Empresas)!",PlayerName(playerid),playerid);
     		SendClientMessageToAll(COR_AMARELO, gstring);
     		CobrarImposto();
			return 1;
		}
		return 1;
	}
	CMD:airdrop(playerid, params[]){
		if(PlayerInfo[playerid][pAdmin] >= 1341){
			AtivarAir();
		}
	}
	CMD:seriais(playerid, params[])
	{
        if(PlayerInfo[playerid][pAdmin] <= 1341) return 1;
        SendClientMessage(playerid,COR_GREY,"-- Serial de todos os jogadores --");
        for(new i = 0; i < MAX_PLAYERS; ++i){
  			if(IsPlayerConnected(i)){
            	new nome[MAX_PLAYER_NAME],str[256];
            	GetPlayerName(i,nome,sizeof(nome));
            	format(str,sizeof(str),"~~ %s - %s ~~",nome,GetPlayerSerial(i));
            	SendClientMessage(playerid,COR_GREY,str);
             }
        }
        return 1;
	}
	CMD:dorminhocos(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
	    	SendClientMessage(playerid,0xFFDAB9FF,"Lista de players dormindo:");
			for(new i = 0; i < MAX_PLAYERS; ++i){
				if(IsPlayerConnected(i)){
					if(Dormindo[i] == true){
      					format(gstring,sizeof(gstring),"%s está dormindo.",PlayerName(i));
				        SendClientMessage(playerid, COR_GREY, gstring);
					}
				}
			}
		}
		return 1;
	}
	CMD:dormir(playerid, params[]){
	    if(PlayerInfo[playerid][pPHousekey] != 999){
	        if(WantedLevel[playerid] != 0){ return SendClientMessage(playerid, COR_AMARELO, "Você está procurado, não pode usar este comando !"); }
			if(pUsaramDormir == 1) { return SendClientMessage(playerid,COR_GRAD2,"Usaram este comando a menos de 3 segundos, aguarde !"); }
 			if(PlayerToPoint(30.0, playerid, 2458.8877,-1698.3403,1013.5078)) {
				SetPlayerPos(playerid, 2448.0759,-1702.2114,1014.4554);
				SendClientMessage(playerid, COR_GRAD2, "Você está dormindo em sua cama, para acordar aperte Enter !");
				Dormindo[playerid] = true;
				pUsaramDormir = 1;
				TempoDormir = SetTimer("UsaramDormir", 3000, 0);
				TogglePlayerControllable(playerid, 0);
				ApplyAnimation(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
			} else if(PlayerToPoint(30.0, playerid, 322.6443,1121.5013,1083.8828)){
		    	SetPlayerPos(playerid, 307.3950,1124.0289,1084.5999);
		    	SendClientMessage(playerid, COR_GRAD2, "Você está dormindo em sua cama, para acordar aperte Enter !");
		    	Dormindo[playerid] = true;
				pUsaramDormir = 1;
				TempoDormir = SetTimer("UsaramDormir", 3000, 0);
		    	TogglePlayerControllable(playerid, 0);
		    	ApplyAnimation(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
			} else if(PlayerToPoint(30.0, playerid, 2324.3777,-1141.8711,1050.9835))  {
 	 			SetPlayerPos(playerid, 2309.2854,-1141.4072,1055.1511);
		    	SendClientMessage(playerid, COR_GRAD2, "Você está dormindo em sua cama, para acordar aperte Enter !");
		    	Dormindo[playerid] = true;
				pUsaramDormir = 1;
				TempoDormir = SetTimer("UsaramDormir", 3000, 0);
		    	TogglePlayerControllable(playerid, 0);
		    	ApplyAnimation(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
			} else if(PlayerToPoint(30.0, playerid,231.7728,1193.2606,1080.2578)) {
		    	SetPlayerPos(playerid,228.8521,1192.6329,1085.1063);
		    	SendClientMessage(playerid, COR_GRAD2, "Você está dormindo em sua cama, para acordar aperte Enter !");
		    	Dormindo[playerid] = true;
				pUsaramDormir = 1;
				TempoDormir = SetTimer("UsaramDormir", 3000, 0);
		    	TogglePlayerControllable(playerid, 0);
		    	ApplyAnimation(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
			} else if(PlayerToPoint(30.0, playerid,244.6450,1115.3771,1080.9995)) {
		    	SetPlayerPos(playerid,240.0129,1109.6144,1085.7544);
		    	SendClientMessage(playerid, COR_GRAD2, "Você está dormindo em sua cama, para acordar aperte Enter !");
		    	Dormindo[playerid] = true;
		    	pUsaramDormir = 1;
				TempoDormir = SetTimer("UsaramDormir", 3000, 0);
		    	TogglePlayerControllable(playerid, 0);
		    	ApplyAnimation(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
			} else if(PlayerToPoint(30.0, playerid,21.8193,1344.9701,1085.5000)) {
		    	SetPlayerPos(playerid, 26.5578,1347.3055,1089.5658);
		    	SendClientMessage(playerid, COR_GRAD2, "Você está dormindo em sua cama, para acordar aperte Enter !");
		    	Dormindo[playerid] = true;
		    	pUsaramDormir = 1;
				TempoDormir = SetTimer("UsaramDormir", 3000, 0);
		    	TogglePlayerControllable(playerid, 0);
		    	ApplyAnimation(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
			} else if(PlayerToPoint(30.0, playerid,236.5268,1034.2006,1084.0078)) {
		    	SetPlayerPos(playerid,237.1132,1029.6567,1088.8088);
		    	SendClientMessage(playerid, COR_GRAD2, "Você está dormindo em sua cama, para acordar aperte Enter !");
		   	 	Dormindo[playerid] = true;
		   	 	pUsaramDormir = 1;
				TempoDormir = SetTimer("UsaramDormir", 3000, 0);
		   	 	TogglePlayerControllable(playerid, 0);
		    	ApplyAnimation(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
			} else if(PlayerToPoint(30.0, playerid,328.7779,1482.8324,1084.4375)) {
		    	SetPlayerPos(playerid,335.3609,1478.8032,1085.0668);
		    	SendClientMessage(playerid, COR_GRAD2, "Você está dormindo em sua cama, para acordar aperte Enter !");
		    	Dormindo[playerid] = true;
				pUsaramDormir = 1;
				TempoDormir = SetTimer("UsaramDormir", 3000, 0);
		    	TogglePlayerControllable(playerid, 0);
		    	ApplyAnimation(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
			} else if(PlayerToPoint(30.0, playerid,234.1665,1071.9104,1084.1940)) {
		    	SetPlayerPos(playerid,238.4210,1082.9243,1088.4515);
		    	SendClientMessage(playerid, COR_GRAD2, "Você está dormindo em sua cama, para acordar aperte Enter !");
		    	Dormindo[playerid] = true;
				pUsaramDormir = 1;
				TempoDormir = SetTimer("UsaramDormir", 3000, 0);
		    	TogglePlayerControllable(playerid, 0);
		    	ApplyAnimation(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
			} else if(PlayerToPoint(30.0, playerid,256.9832,1246.9738,1084.2578)) {
		    	SetPlayerPos(playerid,238.4894,1082.8136,1088.4515);
		    	SendClientMessage(playerid, COR_GRAD2, "Você está dormindo em sua cama, para acordar aperte Enter !");
		    	Dormindo[playerid] = true;
				pUsaramDormir = 1;
				TempoDormir = SetTimer("UsaramDormir", 3000, 0);
		    	TogglePlayerControllable(playerid, 0);
		    	ApplyAnimation(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
			} else if(PlayerToPoint(30.0, playerid,139.4604,1373.6908,1085.4619)) {
		    	SetPlayerPos(playerid,135.4759,1385.0950,1089.0525);
		    	SendClientMessage(playerid, COR_GRAD2, "Você está dormindo em sua cama, para acordar aperte Enter !");
		    	Dormindo[playerid] = true;
		 		pUsaramDormir = 1;
				TempoDormir = SetTimer("UsaramDormir", 3000, 0);
		    	TogglePlayerControllable(playerid, 0);
		    	ApplyAnimation(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
			} else if(PlayerToPoint(30.0, playerid,84.5642,1329.1422,1083.8594)) {
		    	SetPlayerPos(playerid,91.8094,1340.5502,1089.0265);
		    	SendClientMessage(playerid, COR_GRAD2, "Você está dormindo em sua cama, para acordar aperte Enter !");
      			Dormindo[playerid] = true;
   				pUsaramDormir = 1;
				TempoDormir = SetTimer("UsaramDormir", 3000, 0);
      			TogglePlayerControllable(playerid, 0);
		    	ApplyAnimation(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
			} else if(PlayerToPoint(30.0, playerid,222.5016,1148.6479,1082.6094)) {
		    	SetPlayerPos(playerid,227.8189,1149.4423,1083.2633);
		    	SendClientMessage(playerid, COR_GRAD2, "Você está dormindo em sua cama, para acordar aperte Enter !");
		   	 	Dormindo[playerid] = true;
				pUsaramDormir = 1;
				TempoDormir = SetTimer("UsaramDormir", 3000, 0);
		   	 	TogglePlayerControllable(playerid, 0);
		    	ApplyAnimation(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
			} else if(PlayerToPoint(30.0, playerid,746.9075,1441.2550,1102.7031)) {
		    	SetPlayerPos(playerid,738.0576,1436.3276,1103.4363);
		    	SendClientMessage(playerid, COR_GRAD2, "Você está dormindo em sua cama, para acordar aperte Enter !");
		   	 	Dormindo[playerid] = true;
				pUsaramDormir = 1;
				TempoDormir = SetTimer("UsaramDormir", 3000, 0);
		   	 	TogglePlayerControllable(playerid, 0);
		    	ApplyAnimation(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
			} else if(PlayerToPoint(30.0, playerid,447.0690,1406.6877,1084.3047)) {
		    	SetPlayerPos(playerid,437.9104,1398.2108,1084.9213);
		    	SendClientMessage(playerid, COR_GRAD2, "Você está dormindo em sua cama, para acordar aperte Enter !");
		   	 	Dormindo[playerid] = true;
				pUsaramDormir = 1;
				TempoDormir = SetTimer("UsaramDormir", 3000, 0);
		   	 	TogglePlayerControllable(playerid, 0);
		    	ApplyAnimation(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
			} else { SendClientMessage(playerid, COR_AMARELO, "Você não está em sua casa !"); }
			return 1;
		} else { SendClientMessage(playerid, COR_AMARELO, "Você não está em sua casa !"); }
	}
	CMD:vaca(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
	        new arquivo[64],arquivo2[64];
	        new vehicle = GetPlayerVehicleID(playerid);
	        new keycar = PlayerInfo[playerid][pCarKey];
	        if(IsPlayerInVehicle(playerid, keycar)){
		        format(arquivo, sizeof(arquivo), Pasta_CarrosVIP, keycar);
		        format(arquivo2, sizeof(arquivo2), Pasta_CarrosFixo, keycar);
			    if(DOF2_FileExists(arquivo) || DOF2_FileExists(arquivo2)){
				    if(!strcmp(DOF2_GetString(arquivo, "Dono"), PlayerName(playerid)) || !strcmp(DOF2_GetString(arquivo2, "Dono"), PlayerName(playerid))){
				        if(cowit[playerid] == 0){
					        LinkVehicleToInterior(vehicle,1);
					        SetPlayerInterior(playerid,0);
					        cow[playerid] = CreateDynamicObject(16442,0,0,0,0,0,0,100);
					        new Float:x, Float:y, Float:z;
					        cowit[playerid] = 1;
					        AttachDynamicObjectToVehicle(cow[playerid], GetPlayerVehicleID(playerid), x,y +0.5,z +0.8,0.0,0.0, 90.0);
					        SendClientMessage(playerid, -1, "Vaca instalada !");
					        return 1;
				        }else if(cowit[playerid] == 1){
				            cowit[playerid] = 0;
                			DestroyDynamicObject(cow[playerid]);
                			LinkVehicleToInterior(vehicle,0);
                			SendClientMessage(playerid, -1, "Vaca Removida !");
				        }
			        }
		        }
	        }
		}
		return 1;
	}
	CMD:cameraman(playerid, params[]){
	    if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9){
		    if(CameraInfo[cameraman] != playerid){
			    if(CameraInfo[cameraman] != INVALID_PLAYER_ID){ return SendClientMessage(playerid, COR_GREY, "Alguem está de Camera-Man!Peça que ele saia.");}
			}
	        OnAir(playerid,0);
		}
        return 1;
	}
	CMD:audiencia(playerid, params[]){
	    if(GetPlayerOrg(playerid) == 9){
			format(gstring, sizeof(gstring), "Audiencia de Pessoas Assistindo Televisão: %d", CameraInfo[audience]);
			SendClientMessage(playerid, COR_LIGHTGREEN, gstring);
		}else{ return SendClientMessage(playerid, COR_GREY, "   Você não é um Reporter !"); }
		return true;
	}
	CMD:noar(playerid, params[]){
	    if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9){
		    if(CameraInfo[cameraman] == playerid){
		        format(gstring, sizeof(gstring), "Repórter %s: Ligou sua Camera e está no Ar Agora!Use /assistir", PlayerName(playerid));
				SendFamilyMessage(GetPlayerOrg(playerid), COR_REP, gstring);
				OnAir(playerid,1);
		    }
		}
		return 1;
	}
	CMD:assistir(playerid, params[]){
     	if(playerid != CameraInfo[cameraman]){
 		    if(PlayerInfo[playerid][pTelevisao] == 0){ return SendClientMessage(playerid, COR_GRAD1, " Você não tem uma Televisão, compre um na 24/7!"); }
   			Assistindo(playerid);
		 	return 1;
	    } else { SendClientMessage(playerid,COR_VERMELHO,"Voce é o Camera Man, Voce não pode assistir a TV!");}
		return 1;
	}
	CMD:desligartv(playerid, params[]){
     	if(player_viewer[playerid] && playerid != CameraInfo[cameraman]){ return RemovePlayer(playerid); }
	    SendClientMessage(playerid,COR_VERMELHO,"Voce não está assistindo TV!");
		return 1;
	}
	CMD:foradoar(playerid, params[]){
	    if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9){
		    if(CameraInfo[cameraman] == playerid){
	 			OffAir();
	 			format(gstring, sizeof(gstring), "Repórter %s: Desligou sua Camera e guardou seus Equipamentos.", PlayerName(playerid));
				SendFamilyMessage(GetPlayerOrg(playerid), COR_REP, gstring);
		    }
		}
		return 1;
	}
	CMD:setchuck(playerid, params[]) return Dudu:setarchuck(playerid);
	CMD:setarchuck(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
	    	tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)){
				SendClientMessage(playerid, COR_GRAD2, "USE: /setarchuck [ id ]");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 3){
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341){ return SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)"); }
				if(IsPlayerConnected(giveplayeridzcmd)){
				    if(giveplayeridzcmd != INVALID_PLAYER_ID){
						if(PlayerInfo[giveplayeridzcmd][pTrazerChuck] == 1){
						      PlayerInfo[giveplayeridzcmd][pTrazerChuck] = 0;
			       		      PrimeiroChuck[giveplayeridzcmd] = 1;
						      GivePlayerWeaponEx(giveplayeridzcmd, 38, 9999999);
		                      GivePlayerWeaponEx(giveplayeridzcmd, 24, 9999999);
		                      GivePlayerWeaponEx(giveplayeridzcmd, 8, 1);
						      SetPlayerSkin(giveplayeridzcmd, 264);
						      SetPlayerArmour(giveplayeridzcmd, 100);
						      SetPlayerHealth(giveplayeridzcmd, 100);
						      SetPlayerColor(giveplayeridzcmd, 0xFF0000FF);
						      GivePlayerMoneyEx(giveplayeridzcmd, 5000);
						      NaPorraDoEvento[giveplayeridzcmd] = true;
						      SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, "Você foi transformado o novo chuck do evento pelo ADMIN!");
						}
						return 1;
					}
				}
			} else { SendClientMessage(playerid, COR_GRAD1, "Esse não é um jogador ativo."); }
		}
		return 1;
	}
	CMD:multas(playerid, params[]){
         if(IsPlayerConnected(playerid)){
	          if(IsACop(playerid)){ return ShowPlayerDialog(playerid, 567, DIALOG_STYLE_MSGBOX, "Multas do Servidor", "CM - Contra Mão\n\nDB - Dirigindo Bêbado\n\nDP - Direção Perigosa\n\nEI - Estacionamento Indevido\n\nFD - Farol Desligado\n\nVD - Veículo Danificado\n\nTNC - Trafegando na Calçada", "Ok", ""); }
		 }
		 return 1;
	}
	CMD:setarevento(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
	    	tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)) { return SendClientMessage(playerid, COR_GRAD2, "USE: /setarevento [ id ]"); }
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 3) {
			 	if(PlayerInfo[giveplayeridzcmd][pJailed] != 0) { return SendClientMessage(playerid, COR_GREY, "Este jogador está preso, você não pode setar ele no evento !"); }
			 	if(TipoEvento == 0 && TendoQuarentena == 0) { return SendClientMessage(playerid, COR_GREY, "Não está tendo evento !"); }
				if(gPlayerLogged[giveplayeridzcmd] == 0){ return SendClientMessage(playerid, COR_GREY, "Este jogador não está logado !"); }
				if(NaPorraDoEvento[giveplayeridzcmd] == true) { return SendClientMessage(playerid, COR_GREY, "Este jogador já está em um evento !"); }
				if(PlayerInfo[giveplayeridzcmd][pGunLic] == 0) { return SendClientMessage(playerid, COR_GREY, "Este jogador não possui licença de arma !"); }
				if(WantedLevel[giveplayeridzcmd] != 0) { return SendClientMessage(playerid, COR_GREY, "Este jogador está procurado !"); }
				if(IsPlayerConnected(giveplayeridzcmd)){
				    if(giveplayeridzcmd != INVALID_PLAYER_ID){
						if(TipoEvento == 1){
				            PlayerInfo[giveplayeridzcmd][pTrazerChuck] = 1;
				            PrimeiroChuck[giveplayeridzcmd] = 1;
				            NaPorraDoEvento[giveplayeridzcmd] = true;
							if(PlayerInfo[giveplayeridzcmd][pTrazerChuck] == 1){
				                 PrimeiroChuck[giveplayeridzcmd] = 0;
				                 PlayerInfo[giveplayeridzcmd][pTrazerChuck] = 1;
				                 SpawnPlayer(giveplayeridzcmd);
				            }
						}else if(TipoEvento == 2){
      						 eventofloresta[giveplayeridzcmd] = 1;
      						 PlayerInfo[giveplayeridzcmd][pTiroteio] = 1;
      						 SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, "Tiroteio na Floresta iniciado, tempo de duração = 20 minutos, para sair, digite /sairevento !");
						}else if(TipoEvento == 3){
                             eventoarena[giveplayeridzcmd] = 1;
						     PlayerInfo[giveplayeridzcmd][pTiroteio] = 2;
							 SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, "Tiroteio na Arena iniciado, tempo de duração = 20 minutos, para sair, digite /sairevento !");
			            }else if(TipoEvento == 4){
			                 eventomansao[giveplayeridzcmd] = 1;
						     PlayerInfo[giveplayeridzcmd][pTiroteio] = 3;
							 SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, "Tiroteio na Mansão iniciado, tempo de duração = 20 minutos, para sair, digite /sairevento !");
			            }else if(TipoEvento == 5){
			                 eventocarandiru[giveplayeridzcmd] = 1;
						     PlayerInfo[giveplayeridzcmd][pTiroteio] = 4;
						     SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, "Tiroteio no Carandiru iniciado, tempo de duração = 20 minutos, para sair, digite /sairevento !");
			            }else if(TipoEvento == 6){
			                 eventoconst[giveplayeridzcmd] = 1;
						     PlayerInfo[giveplayeridzcmd][pTiroteio] = 5;
						     SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, "Tiroteio na Construção iniciado, tempo de duração = 20 minutos, para sair, digite /sairevento !");
			            }else if(TipoEvento == 7){
			                 eventodp[giveplayeridzcmd] = 1;
						     PlayerInfo[giveplayeridzcmd][pTiroteio] = 6;
						     SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, "Tiroteio no Departamento iniciado, tempo de duração = 20 minutos, para sair, digite /sairevento !");
			            }else if(TendoQuarentena == 1){
			 	            new QuantidadeHumanos, QuantidadeInfectados;
						    for(new i = 0; i < MAX_PLAYERS; ++i){
						        if(EquipeQuarentena[i] == 1) QuantidadeHumanos++;
								if(EquipeQuarentena[i] == 2) QuantidadeInfectados++;
						    }
			 	            if(QuantidadeHumanos < QuantidadeInfectados){
		            			new vid = GetPlayerVehicleID(giveplayeridzcmd);
					            SetVehicleToRespawn(vid);
					            new world;
						        world = GetPlayerVirtualWorld(giveplayeridzcmd);
							    SetPlayerVirtualWorld(giveplayeridzcmd,world);
							    ResetPlayerWeaponsEx(giveplayeridzcmd);
							    SetPlayerArmour(giveplayeridzcmd, 100);
					            SetPlayerHealth(giveplayeridzcmd, 100);
							    SetPlayerInterior(giveplayeridzcmd,0);
							    SetPlayerPos(giveplayeridzcmd,1254.9434,2836.7817,11.9947);
					            LimiteEvento += 1;
					            EquipeQuarentena[giveplayeridzcmd] = 1;
					       		SetPlayerWeather(giveplayeridzcmd, 9);
					            NaPorraDoEvento[giveplayeridzcmd] = true;
					            TaNoQuarentena[giveplayeridzcmd] = 1;
					            pClassiQuarentena[giveplayeridzcmd] = 0;
					            ContagemQuarentena[giveplayeridzcmd] = 41;
					            SetPlayerSkin(giveplayeridzcmd, 23);
					            SetPlayerColor(giveplayeridzcmd, COR_CV);
					            SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, "Você foi teletransportado pelo ADMIN, para participar do evento, para sair, digite: /sairevento !");
					            if(LiberarInfectar == true){ TextDrawShowForPlayer(giveplayeridzcmd, TextDrawCQ); }
							}else if(QuantidadeInfectados < QuantidadeHumanos){
		            			new vid = GetPlayerVehicleID(giveplayeridzcmd);
					            SetVehicleToRespawn(vid);
					            new world
						        world = GetPlayerVirtualWorld(giveplayeridzcmd);
							    SetPlayerVirtualWorld(giveplayeridzcmd,world);
							    ResetPlayerWeaponsEx(giveplayeridzcmd);
							    SetPlayerArmour(giveplayeridzcmd, 100);
					            SetPlayerHealth(giveplayeridzcmd, 100);
							    SetPlayerInterior(giveplayeridzcmd,0);
							    SetPlayerPos(giveplayeridzcmd,1254.9434,2836.7817,11.9947);
					            LimiteEvento += 1;
					            EquipeQuarentena[giveplayeridzcmd] = 2;
					       		SetPlayerWeather(giveplayeridzcmd, 9);
					            NaPorraDoEvento[giveplayeridzcmd] = true;
					            TaNoQuarentena[giveplayeridzcmd] = 1;
					            pClassiQuarentena[giveplayeridzcmd] = 0;
					            ContagemQuarentena[giveplayeridzcmd] = 41;
					            SetPlayerSkin(giveplayeridzcmd, 162);
					            SetPlayerColor(giveplayeridzcmd, COR_CV);
					            SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, "Você foi teletransportado pelo ADMIN, para participar do evento, para sair, digite: /sairevento !");
					            if(LiberarInfectar == true) { TextDrawShowForPlayer(giveplayeridzcmd, TextDrawCQ); }
				 	        }
			 	        }
			            NaPorraDoEvento[giveplayeridzcmd] = true;
			            SpawnPlayer(giveplayeridzcmd);
			            SendClientMessage(giveplayeridzcmd, COR_VERMELHO, "Você foi teletransportado pelo ADMIN, para participar do evento, para sair, digite: /sairevento !");
						format(gstring, sizeof(gstring), "Jogador: %s foi colocado no evento que está acontecendo, pelo admin: %s", PlayerName(giveplayeridzcmd), PlayerName(playerid));
						ABroadCast(COR_LIGHTRED,gstring,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Esse não é um jogador ativo.");
			}
		}
		return 1;
	}
	CMD:crimes(playerid, params[]){
         if(IsPlayerConnected(playerid)){
	          if(IsACop(playerid)){
                   ShowPlayerDialog(playerid, 322, DIALOG_STYLE_MSGBOX, "Crimes do Servidor", "agressao\najuste\nameaça\natentado\navp\ncumplice\ndesacato\ndinamite\ndop\ndrogas\nfuga\nh\ninvasao\nmateriais\npia\nracha\nroubo\nrp\nseq\nsuborno\ntrafico\ntrote\nth\nvandalismo\ndsc", "Ok", "");
	          }
		 }
		 return 1;
	}
	CMD:presente(playerid, params[]) return Dudu:caixinha(playerid);
	CMD:caixinha(playerid, params[]){
		if(ContarJogadores() < PlayersCaixinha && PlayerInfo[playerid][pCaixinha] != char){
			format(gstring, sizeof(gstring), "Não atingimos o número de jogadores(%d) necessário para desbloquear os presentes.", PlayersCaixinha);
			SendClientMessage(playerid, -1, gstring);
			SendClientMessage(playerid,COR_GRO,"Convide seus amigos para jogar, assim você e eles poderão ganhar presentes!");
			return 1;
		}
		new DinheiroCaixinha = 8000 + random(1000);
		new RespeitoCaixinha = random(4);
		new CoinsCaixinha = random(300);
		new Coins;
		new VipCaixinha = random(100);
		if (PlayerInfo[playerid][pCaixinha] == 1){
			SendClientMessage(playerid, COR_GRO, "Você pegou uma caixinha há pouco tempo, tente novamento no próximo salário.");
			return 1;
		}else{
			if(CoinsCaixinha == 84){
				PlayerInfo[playerid][pReceberCoins] = 1;
				Coins = 1;
			} else if(CoinsCaixinha == 49){
				PlayerInfo[playerid][pReceberCoins] = 2;
				Coins = 2;
			} else if(CoinsCaixinha == 24) {
				PlayerInfo[playerid][pReceberCoins] = 3;
				Coins = 3;
			} else if(CoinsCaixinha == 24) {
				Coins = 0;
			}
			PlayerInfo[playerid][pVipCai] = VipCaixinha;
			GivePlayerMoney(playerid, DinheiroCaixinha);
			PlayerInfo[playerid][pExp] += RespeitoCaixinha;
			if (PlayerInfo[playerid][pVipCai] == 13 && PlayerInfo[playerid][pJaGanhou] == false){
				format(gstring, sizeof(gstring), "Premiado: (%s) pegou uma caixinha com R$%d de dinheiro, (%d) de respeito e Sócio por [3] dias.", PlayerName(playerid), DinheiroCaixinha, RespeitoCaixinha, VipCaixinha);
				SendClientMessageToAll(0xf68e00FF, gstring);
				SendClientMessage(playerid, COR_GRAD1, "Parabéns! Você foi premiado com sócio comum durante 3 dias(/ajudasocio).");
				SendClientMessage(playerid, COR_AMARELO, "ATENÇÃO: Você não ganhará mais sócio pela Caixinha!");
				SendClientMessage(playerid, COR_AMARELO, "Para adquirir o benefício novamento ao expirar, digite: /loja e confira as promoções!");
				PlayerInfo[playerid][pVipCai] = 50;
				PlayerInfo[playerid][pJaGanhou] = true;
				if(PlayerInfo[playerid][pSocio] == 0){
					PlayerInfo[playerid][pSocio] = 1;
				} else {
					PlayerInfo[playerid][pDiaVIP] += 3;
				}
				return 1;
			} else if (PlayerInfo[playerid][pVipCai] != 13 && PlayerInfo[playerid][pVipCai] != 85 && Coins > 0 && Coins < 4) {
				format(gstring, sizeof(gstring), "Premiado: (%s) pegou uma caixinha com R$%d de dinheiro, e (%d) de respeito e Coins [%d].", PlayerName(playerid), DinheiroCaixinha, RespeitoCaixinha, Coins);
				SendClientMessageToAll(COR_GRO, gstring);
			} else if (PlayerInfo[playerid][pVipCai] == 85 && PlayerInfo[playerid][pJaGanhouAcessorio] == false) {
				PlayerInfo[playerid][pJaGanhouAcessorio] = true;
				new lolz[30];
				new idobjeto = random(26);
    			switch(idobjeto){
					case 1:{ PlayerInfo[playerid][pTemOculos] = 1; lolz = "Kit de Óculos"; }
					case 2:{ PlayerInfo[playerid][pTemBandana] = 1; lolz = "Kit de Bandanas"; }
					case 3:{ TemArara[playerid] = 1; lolz = "Arara"; }
					case 4:{ TemKitBone[playerid] = 1; lolz = "Kit de Bonés"; }
					case 5:{ TemKitRelogio[playerid] = 1; lolz = "Kit de Relógios"; }
					case 6:{ PlayerInfo[playerid][pTemCBombeiro] = 1; lolz = "Chapéu Bombeiro"; }
					case 7:{ PlayerInfo[playerid][pTemCPolicial] = 1; lolz = "Chapéu Policial"; }
					case 8:{ PlayerInfo[playerid][pChapeuMichaelJackson] = 1; lolz = "Chapéu Michael Jackson"; }
					case 9:{ PlayerInfo[playerid][pChapeuOperario] = 1; lolz = "Chapéu Operario"; }
					case 10:{ PlayerInfo[playerid][pChapeuFunkeiro] = 1; lolz = "Chapéu Funkeiro"; }
					case 11:{ PlayerInfo[playerid][pChapeuIdoso] = 1; lolz = "Chapéu Idoso"; }
					case 12:{ PlayerInfo[playerid][pChapeuHarryPotter] = 1; lolz = "Chapéu Harry Potter"; }
					case 13:{ PlayerInfo[playerid][pCabecadeGalo] = 1; lolz = "Cabeça de Galo"; }
					case 14:{ PlayerInfo[playerid][pChifredeBoi] = 1; lolz = "Chifre de Boi"; }
					case 15:{ PlayerInfo[playerid][pCabecaodoCJ] = 1; lolz = "Cabeção do CJ"; }
					case 16:{ PlayerInfo[playerid][pGorro] = 1; lolz = "Gorro de Natal"; }
					case 17:{ PlayerInfo[playerid][pDado] = 1; lolz = "Dado"; }
					case 18:{ PlayerInfo[playerid][pCoracao] = 1; lolz = "Coração"; }
					case 19:{ PlayerInfo[playerid][pC4] = 1; lolz = "C4"; }
					case 20:{ PlayerInfo[playerid][pVibradorGigante] = 1; lolz = "Vibrador Gigante"; }
					case 21:{ PlayerInfo[playerid][pItemMochila] = 1; lolz = "Mochila"; }
					case 22:{ TemChapeuBruxa[playerid] = 1; lolz = "Chapéu Bruxa"; }
					case 23:{ PlayerInfo[playerid][pBaixo] = 1; lolz = "Baixo"; }
					case 24:{ PlayerInfo[playerid][pGuitarraBranca] = 1; lolz = "Guitarra Branca"; }
					case 25:{ PlayerInfo[playerid][pGuitarra] = 1; lolz = "Guitarra Preta"; }
					case 26:{ PlayerInfo[playerid][pTemM4Costas] = 1; lolz = "M4"; }
				}
				format(gstring, sizeof(gstring), "Premiado: (%s) pegou um caixinha com R$%d de dinheiro,(%d) e um %s exclusivo!", PlayerName(playerid), DinheiroCaixinha, RespeitoCaixinha, lolz);
				SendClientMessageToAll(COR_AMARELO, gstring);
				PlayerInfo[playerid][pVipCai] = 0;
				format(gstring, sizeof(gstring), "Parabéns, você ganhou um %s exclusivo! Digite: (/acessorios) pra usar. ", lolz);
				SendClientMessage(playerid, COR_HITMAN, gstring);
			} else {
				format(gstring, sizeof(gstring), "{1E90FF}Aviso: (%s) pegou uma caixinha com R$%d de dinheiro, e (%d) de respeito e Coins [%d].", PlayerName(playerid), DinheiroCaixinha, RespeitoCaixinha, Coins);
				SendClientMessageToAll(COR_DBLUE, gstring);
			}
			PlayerInfo[playerid][pCaixinha] = 1;
			SendClientMessage(playerid, COR_HITMAN, "Você ganhou uma caixinha, volte novamento após o próximo salário!");
		}
		return 1;
    }
	CMD:fixar(playerid, params[]){
    	if(GetPlayerOrg(playerid) == 14){
    		tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)) { return SendClientMessage(playerid, COR_GRAD5, "USE: /fixar [id veiculo]"); }
			new carro;
			carro = strval(tmpzcmd);
    		if(PlayerToPoint(50.0, playerid,2808.7634,-1445.2111,16.2311) || PlayerToPoint(100.0, playerid,1086.5616,2161.3308,10.8203)){
                if(carro == INVALID_VEHICLE_ID) { return SendClientMessage(playerid, COR_GRAD1, "ID INVÁLIDO !"); }
                if(!ChecarveiculoBPL(10, playerid, carro)) { return SendClientMessage(playerid, COR_GRAD1, "Você precisa está perto do carro.");}
				if(DeslogandoSocio[playerid] == 1) { return SendClientMessage(playerid, COR_GRAD1, "Você não pode fixar o veiculo tendo usado o comando /entrarorg."); }
                new arquivo[64];
                new Float:carropos[3];
                new Float:Cangulo;
                GetVehiclePos(carro, carropos[0],carropos[1],carropos[2]);
                GetVehicleZAngle(carro, Cangulo);
                format(arquivo, sizeof(arquivo), Pasta_CarrosFixados,carro);
                if(DOF2_FileExists(arquivo)) { return SendClientMessage(playerid, COR_GRAD1, "Este carro já está fixado, use /refixar !");}
                else {
                    DOF2_CreateFile(arquivo);
                    DOF2_SetFloat(arquivo,"PosX", carropos[0]);
                    DOF2_SetFloat(arquivo,"PosY", carropos[1]);
                	DOF2_SetFloat(arquivo,"PosZ", carropos[2]);
                	DOF2_SetFloat(arquivo,"Angulo", Cangulo);
                	DOF2_SaveFile();
                	format(gstring, sizeof(gstring), "Mecânicos: %s fixou o veiculo:[%d] na hq mecânicos.", PlayerName(playerid), carro);
					SendFamilyMessage(14, COR_VAGOS, gstring);
           		}
		  	    return 1;
            } else { return SendClientMessage(playerid, COR_GRAD1, "Você não está na hq mecânicos !"); }
    	}
    	return 1;
	}
	CMD:refixar(playerid, params[]){
    	if(GetPlayerOrg(playerid) == 14){
    		tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD5, "USE: /refixar [id veiculo]"); }
			new carro;
			carro = strval(tmpzcmd);
    		if(PlayerToPoint(50.0, playerid,2808.7634,-1445.2111,16.2311) || PlayerToPoint(100.0, playerid,1086.5616,2161.3308,10.8203)) {
                if(carro == INVALID_VEHICLE_ID) { return SendClientMessage(playerid, COR_GRAD1, "ID INVÁLIDO !"); }
                if(!ChecarveiculoBPL(10, playerid, carro)) { return SendClientMessage(playerid, COR_GRAD1, "Você precisa está perto do carro."); }
				if(DeslogandoSocio[playerid] == 1) { return SendClientMessage(playerid, COR_GRAD1, "Você não pode refixar o veiculo tendo usado o comando /entrarorg."); }
                new arquivo[64];
                new Float:carropos[3];
                new Float:Cangulo;
                GetVehiclePos(carro, carropos[0],carropos[1],carropos[2]);
                GetVehicleZAngle(carro, Cangulo);
                format(arquivo, sizeof(arquivo), Pasta_CarrosFixados,carro);
                if(DOF2_FileExists(arquivo)){
                    DOF2_SetFloat(arquivo,"PosX", carropos[0]);
                    DOF2_SetFloat(arquivo,"PosY", carropos[1]);
                	DOF2_SetFloat(arquivo,"PosZ", carropos[2]);
                	DOF2_SetFloat(arquivo,"Angulo", Cangulo);
                	DOF2_SaveFile();
                	format(gstring, sizeof(gstring), "Mecânicos: %s refixou o veiculo:[%d] para reorganizar.", PlayerName(playerid), carro);
					SendFamilyMessage(14, COR_VAGOS, gstring);
                } else { return SendClientMessage(playerid, COR_GRAD1, "Este carro não está fixado, use /fixar !");}
                return 1;
            } else { return SendClientMessage(playerid, COR_GRAD1, "Você não está na hq mecânicos !"); }
    	}
    	return 1;
	}
	CMD:desfixar(playerid, params[]){
    	if(GetPlayerOrg(playerid) == 14){
    		tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)) { return SendClientMessage(playerid, COR_GRAD5, "USE: /desfixar [id veiculo]"); }
			new carro;
			carro = strval(tmpzcmd);
    		if(PlayerToPoint(50.0, playerid,2808.7634,-1445.2111,16.2311) || PlayerToPoint(100.0, playerid,1086.5616,2161.3308,10.8203)){
                if(carro == INVALID_VEHICLE_ID) { return SendClientMessage(playerid, COR_GRAD1, "ID INVÁLIDO !"); }
                if(!ChecarveiculoBPL(10, playerid, carro)) { return SendClientMessage(playerid, COR_GRAD1, "Você precisa está perto do carro."); }
				if(DeslogandoSocio[playerid] == 1) { return SendClientMessage(playerid, COR_GRAD1, "Você não pode liberar o veiculo tendo usado o comando /entrarorg."); }
                new arquivo[64];
                new Float:carropos[3];
                GetVehiclePos(carro, carropos[0],carropos[1],carropos[2]);
                format(arquivo, sizeof(arquivo), Pasta_CarrosFixados,carro);
                if(DOF2_FileExists(arquivo)){
                    DOF2_RemoveFile(arquivo);
                    SetVehicleToRespawn(carro);
                    RepairVehicle(carro);
                	if(IsAMoto(carro)) { Vuln[carro] = 50; }
					else { Vuln[carro] = MaxVuln; }
                	Gas[carro] = 100;
                	format(gstring, sizeof(gstring), "Mecânico: %s liberou o carro:[%d].", PlayerName(playerid), carro);
					SendFamilyMessage(14, COR_DBLUE, gstring);
                } else { return SendClientMessage(playerid, COR_GRAD1, "Este carro não está fixado, use /fixar !"); }
                return 1;
            } else { return SendClientMessage(playerid, COR_GRAD1, "Você não está na hq mecânicos !"); }
    	}
    	return 1;
	}
	CMD:recuperar(playerid, params[]){
    	if(GetPlayerOrg(playerid) > 0){
    		tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)) { return SendClientMessage(playerid, COR_GRAD5, "USE: /recuperar [id veiculo]"); }
			new carroid;
			carroid = strval(tmpzcmd);
    		if(PlayerToPoint(50.0, playerid,2808.7634,-1445.2111,16.2311) || PlayerToPoint(100.0, playerid,1086.5616,2161.3308,10.8203)){
                if(carroid == INVALID_VEHICLE_ID) { return SendClientMessage(playerid, COR_GRAD1, "ID INVÁLIDO !"); }
                if(!ChecarveiculoBPL(10, playerid, carroid)) { return SendClientMessage(playerid, COR_GRAD1, "Você precisa está perto do carro."); }
                if(GetPlayerOrg(playerid) == 1 && !PmCarro(carroid)) { return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização."); }
				if(GetPlayerOrg(playerid) == 2 && !BopeCarro(carroid)) { return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização."); }
				if(GetPlayerOrg(playerid) == 3 && !ExercitoCarro(carroid)){ return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização."); }
				if(GetPlayerOrg(playerid) == 4 && !SamuCarro(carroid)){ return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização."); }
				if(GetPlayerOrg(playerid) == 5 && !AztecasCarro(carroid)){ return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização."); }
				if(GetPlayerOrg(playerid) == 6 && !TalibanCarros(carroid)){ return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização."); }
				if(GetPlayerOrg(playerid) == 7 && !GovernoCarros(carroid)) { return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização."); }
				if(GetPlayerOrg(playerid) == 8 && !HitmansCarros(carroid)) { return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização."); }
				if(GetPlayerOrg(playerid) == 9 && !GloboCarros(carroid)){ return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização."); }
				if(GetPlayerOrg(playerid) == 10 && !TaxistaCarros(carroid)) { return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização."); }
				if(GetPlayerOrg(playerid) == 25 && !PFCarros(carroid)) { return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização."); }
				if(GetPlayerOrg(playerid) == 22 && !CNCarros(carroid)) { return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização."); }
				if(GetPlayerOrg(playerid) == 20 && !YakuzaCarros(carroid)) { return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização."); }
				if(GetPlayerOrg(playerid) == 15 && !GrooveCarros(carroid)){ return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização."); }
				if(GetPlayerOrg(playerid) == 16 && !AlqaedaCarros(carroid)){ return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização."); }
				if(GetPlayerOrg(playerid) == 17 && !PCCarros(carroid)) { return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização."); }
				if(GetPlayerOrg(playerid) == 18 && !BallasCarros(carroid)) { return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização."); }
				if(GetPlayerOrg(playerid) == 19 && !VagosCarros(carroid)) { return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização.");}
				if(GetPlayerOrg(playerid) == 23 && !CVCarros(carroid)){ return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização."); }
				if(GetPlayerOrg(playerid) == 11 && !PccCarros(carroid)){ return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização."); }
				if(GetPlayerOrg(playerid) == 21 && !SonsCarros(carroid)) { return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização."); }
				if(GetPlayerOrg(playerid) == 24 && !MayansCarros(carroid)) { return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização."); }
                if(GetPlayerOrg(playerid) == 12 && !RotaCarros(carroid)) { return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização."); }
				if(GetPlayerOrg(playerid) == 14 && !MecanicosCarros(carroid)){ return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização."); }
				if(GetPlayerOrg(playerid) == 13 && !GateCarros(carroid)) { return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização."); }
	            if(GetPlayerOrg(playerid) == 26 && !AssassinsCarros(carroid)){ return SendClientMessage(playerid, COR_LIGHTRED, "Este veículo não é da sua organização.");}
				if(GetPlayerMoneyEx(playerid) < 4000){ return SendClientMessage(playerid, COR_LIGHTRED, "Você não tem este valor em mãos."); }
				new tdialog[256];
                new arquivo[64];
                new Float:carropos[3];
                GetVehiclePos(carroid, carropos[0],carropos[1],carropos[2]);
                format(arquivo, sizeof(arquivo), Pasta_CarrosFixados,carroid);
                if(DOF2_FileExists(arquivo)){
                	if(IsAMoto(carroid)){
                        format(tdialog,sizeof(tdialog),"Recuperando Veiculo [%d]", carroid);
                		ShowPlayerDialog(playerid,197,DIALOG_STYLE_MSGBOX, tdialog,"Você deseja recupera-lo por R$3.000 ?","Sim","Não");
                	}else if(IsABoxCar(carroid)){
                        format(tdialog,sizeof(tdialog),"Recuperando Veiculo [%d]", carroid);
                		ShowPlayerDialog(playerid,197,DIALOG_STYLE_MSGBOX, tdialog,"Você deseja recupera-lo por R$15.000 ?","Sim","Não");
                	}else if(IsAAviao(carroid)){
                	    format(tdialog,sizeof(tdialog),"Recuperando Veiculo [%d]", carroid);
                		ShowPlayerDialog(playerid,197,DIALOG_STYLE_MSGBOX, tdialog,"Você deseja recupera-lo por R$9.000 ?","Sim","Não");
	                }else{
                	    format(tdialog,sizeof(tdialog),"Recuperando Veiculo [%d]", carroid);
                		ShowPlayerDialog(playerid,197,DIALOG_STYLE_MSGBOX, tdialog,"Você deseja recupera-lo por R$4.000 ?","Sim","Não");
                	}
                	carrorecuperar[playerid] = carroid;
                }else { return SendClientMessage(playerid, COR_GRAD1, "Este carro não está fixado !"); }
                return 1;
            }else { return SendClientMessage(playerid, COR_GRAD1, "Você não está na hq mecânicos !"); }
    	}
    	return 1;
	}
	CMD:explosiva(playerid, params[]){
		 if(GetPlayerWeapon(playerid) == 23 || GetPlayerWeapon(playerid) == 24 || GetPlayerWeapon(playerid) == 25 || GetPlayerWeapon(playerid) == 29 || GetPlayerWeapon(playerid) == 30 || GetPlayerWeapon(playerid) == 31 || GetPlayerWeapon(playerid) == 34){
			  if(PlayerInfo[playerid][pExplosiva] > 0){
				   if(armaexplosiva[playerid] == 0){
                        if(NaPorraDoEvento[playerid] == false){
							 if(emduelo[playerid] == 0){
                                  new armatext[20];
		                          if(GetPlayerWeapon(playerid) == 23) { armatext = "Pistola Silenciada"; }
		                          else if(GetPlayerWeapon(playerid) == 24) { armatext = "Desert Eagle"; }
		                          else if(GetPlayerWeapon(playerid) == 25) { armatext = "Shotgun"; }
		                          else if(GetPlayerWeapon(playerid) == 29) { armatext = "MP5"; }
		                          else if(GetPlayerWeapon(playerid) == 30) { armatext = "AK-47"; }
		                          else if(GetPlayerWeapon(playerid) == 31) { armatext = "M4"; }
		                          else if(GetPlayerWeapon(playerid) == 34) { armatext = "Sniper"; }
                      			  armaexplosiva[playerid] = 1;
				                  PlayerInfo[playerid][pExplosiva] -= 1;
				                  GameTextForPlayer(playerid, "~y~Explosivo Ativado", 3500, 1);
				             }
				        }
				   }else if(armaexplosiva[playerid] >= 1){
                        armaexplosiva[playerid] = 0;
                        PlayerInfo[playerid][pExplosiva] += 1;
				        SendClientMessage(playerid, COR_LIGHTBLUE, "Você desativou a  bala explosiva da sua arma e recebeu o explosivo de volta.");
				   }
			  }else{ return SendClientMessage(playerid, COR_GRAD1, "Você não possui um explosivo, para adquirir vá até o menu vip !"); }
		 } else { return SendClientMessage(playerid, COR_GRAD1, "Você só pode ativar bala explosiva nestas armas: Pistola Silenciada, Desert Eagle, Shotgun, MP5, AK-47, M4 e Sniper !"); }
	}
	CMD:veneno(playerid, params[]){
		 if(GetPlayerWeapon(playerid) == 23 || GetPlayerWeapon(playerid) == 24 || GetPlayerWeapon(playerid) == 25 || GetPlayerWeapon(playerid) == 29 || GetPlayerWeapon(playerid) == 30 || GetPlayerWeapon(playerid) == 31 || GetPlayerWeapon(playerid) == 34){
			  if(PlayerInfo[playerid][pVeneno] > 0){
				   if(armaenvenenada[playerid] == 0){
                        if(NaPorraDoEvento[playerid] == false){
						 	 if(emduelo[playerid] == 0){
                                  new armatext[20];
		                          if(GetPlayerWeapon(playerid) == 23) { armatext = "Pistola Silenciada"; }
		                          else if(GetPlayerWeapon(playerid) == 24) { armatext = "Desert Eagle"; }
		                          else if(GetPlayerWeapon(playerid) == 25) { armatext = "Shotgun"; }
		                          else if(GetPlayerWeapon(playerid) == 29) { armatext = "MP5"; }
		                          else if(GetPlayerWeapon(playerid) == 30) { armatext = "AK-47"; }
		                          else if(GetPlayerWeapon(playerid) == 31) { armatext = "M4"; }
		                          else if(GetPlayerWeapon(playerid) == 34) { armatext = "Sniper"; }
				                  armaenvenenada[playerid] = 1;
				                  PlayerInfo[playerid][pVeneno] -= 1;
				                  format(gstring, sizeof(gstring), "Você ativou veneno na [%s], acerte alguém com está arma e causará veneno até morrer(para guardar o veneno, use: /veneno)!", armatext);
				                  SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
				                  GameTextForPlayer(playerid, "~r~Veneno Ativado", 5000, 1);
				             }
				        }
				   } else if(armaenvenenada[playerid] >= 1) {
                        armaenvenenada[playerid] = 0;
                        PlayerInfo[playerid][pVeneno] += 1;
				        SendClientMessage(playerid, COR_LIGHTBLUE, "Você desativou o veneno da sua arma e recebeu o veneno de volta.");
				   }
			  } else { return SendClientMessage(playerid, COR_GRAD1, "Você não possui um veneno, para adquirir vá até o menu vip no banco !"); }
		 } else { return SendClientMessage(playerid, COR_GRAD1, "Você só pode ativar veneno nestas armas: Pistola Silenciada, Desert Eagle, Shotgun, MP5, AK-47 e M4 !"); }
	}
	CMD:antidoto(playerid, params[]){
		 if(PlayerInfo[playerid][pAntidoto] > 0){
			  if(envenenado[playerid] == 1){
                   if(NaPorraDoEvento[playerid] == false){
                        if(emduelo[playerid] == 0){
			                 envenenado[playerid] = 0;
			                 morreuenvenenado[playerid] = 0;
			                 PlayerInfo[playerid][pAntidoto] -= 1;
			                 new Float:health;
                             GetPlayerHealth(playerid, health);
                             SetPlayerHealth(playerid, 100.0);
                             KillTimer(tempoveneno[playerid]);
                             SendClientMessage(playerid, COR_LIGHTBLUE, "Você estava envenenado e usou um antidoto para se curar, e sua vida foi regenerada !");
                        }
                   }
              } else { return SendClientMessage(playerid, COR_GRAD1, "Voce não está envenenado !"); }
		 } else { return SendClientMessage(playerid, COR_GRAD1, "Você não possui um antidoto, para adquirir vá até o menu vip no banco !"); }
    }
    if(strcmp(cmdtext, "/flip(playerid, params[]){
	    if(PlayerInfo[playerid][pAdmin] >= 2){
			if(IsPlayerInAnyVehicle(playerid)){
		    	new currentveh;
			    new Float:angle;
			    currentveh = GetPlayerVehicleID(playerid);
			    GetVehicleZAngle(currentveh, angle);
			    SetVehicleZAngle(currentveh, angle);
			    SendClientMessage(playerid, -1,"Você desvirou seu veículo.");
			    return 1;
	  		} else return SendClientMessage(playerid, -1, "Você não está em um veículo.");
  		}
 	}
	CMD:setarcoins(playerid, params[]) || CMD:darcoins(playerid, params[]){
	    if(PlayerInfo[playerid][pAdmin] > 1341){
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)) { return SendClientMessage(playerid, COR_GRAD2, "USE: /setarcoins [ id ] [ Coins ]"); }
       		new playa;
			new moedas;
			playa = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			moedas = strval(tmpzcmd);
			if (IsPlayerConnected(playerid)){
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341){ return SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)"); }
			    if(IsPlayerConnected(playa)){
			        if(playa != INVALID_PLAYER_ID){
			            PlayerInfo[playa][pReceberCoins] += moedas;
						format(gstring, 256, "O Admin %s lhe deu [%d] Coins, Vá ao menu vip mais próximo para resgata-lás.",PlayerName(playerid), moedas, PlayerName(playa));
						SendClientMessage(playa, COR_LIGHTBLUE, gstring);
						format(gstring, 256, "Você deu [%d] Coins para o jogador [%s].", moedas, PlayerName(playa));
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						format(gstring, 256, "O Admin %s deu [%d] Coins para o jogador [%s].", PlayerName(playerid), moedas, PlayerName(playa));
                        MoedaLog(gstring);
					}
				}
            }
		}
		else { return 1; }
		return 1;
	}
	CMD:missoes(playerid, params[]){
	    if(!PlayerToPoint(2.0,playerid,1332.8074,-1388.8885,13.6181)) return SendClientMessage(playerid, -1, "Você não está no local correto!");
		MEGAString[0] = EOS;
		format(gstring, sizeof(gstring), "{9CEA00}» {FFFFFF}Iniciar Uma Missão\n");
		strcat(MEGAString,gstring);
		format(gstring, sizeof(gstring), "{9CEA00}» {FFFFFF}Concluir Missão\n");
		strcat(MEGAString,gstring);
		format(gstring, sizeof(gstring), "{9CEA00}» {FFFFFF}Informações\n");
		strcat(MEGAString,gstring);
		ShowPlayerDialog(playerid, 594, DIALOG_STYLE_TABLIST, "• Sistema De Missões •", MEGAString, "Selecionar", "Sair");
		return 1;
	}
	CMD:mercadonegro(playerid, params[]){
	    if(!PlayerToPoint(2.0,playerid,1992.4297,1126.0762,1126.3359)) return SendClientMessage(playerid, -1, "Você não está no mercado negro!");
		MEGAString[0] = EOS;
		format(gstring, sizeof(gstring), "{FFFFFF}»{9CEA00} Produto\t{FFFFFF}Preço\n");
		strcat(MEGAString,gstring);
		format(gstring, sizeof(gstring), "{9CEA00}» {FFFFFF}Equipamento para Roubo\t{9CEA00}R${FFFFFF}:3.000\n");
		strcat(MEGAString,gstring);
		format(gstring, sizeof(gstring), "{9CEA00}» {FFFFFF}Bomba(CB)\t{9CEA00}R${FFFFFF}:9.800\n");
		strcat(MEGAString,gstring);
		format(gstring, sizeof(gstring), "{9CEA00}» {FFFFFF}Caixa de Equipamentos\t{9CEA00}R${FFFFFF}:800.00\n");
		strcat(MEGAString,gstring);
		format(gstring, sizeof(gstring), "{9CEA00}» {FFFFFF}Decodificadores\t{9CEA00}R${FFFFFF}:7.800\n");
		strcat(MEGAString,gstring);
		format(gstring, sizeof(gstring), "{9CEA00}» {FFFFFF}Mudinha de Maconha\t{9CEA00}R${FFFFFF}:8.000\n");
		strcat(MEGAString,gstring);
		format(gstring, sizeof(gstring), "{9CEA00}» {FFFFFF}MedKit\t{9CEA00}R${FFFFFF}:12.000\n");
		strcat(MEGAString,gstring);
		format(gstring, sizeof(gstring), "{9CEA00}» {FFFFFF}Lata de Spray\t{9CEA00}R${FFFFFF}:6.000\n");
		strcat(MEGAString,gstring);
		ShowPlayerDialog(playerid, 179, DIALOG_STYLE_TABLIST_HEADERS, "• MERCADO NEGRO •", MEGAString, "Selecionar", "Sair");
		return 1;
	}
	CMD:menuvip(playerid, params[]) || CMD:menucash(playerid, params[]) || CMD:lojavip(playerid, params[]) || CMD:lojafree(playerid, params[]){
		MEGAString[0] = EOS;
		format(gstring, sizeof(gstring), "{9CEA00}Coins - {FFFFFF}Como Adquirir Coins\n");
		strcat(MEGAString,gstring);
		format(gstring, sizeof(gstring), "{9CEA00}Coins - {FFFFFF}Vantagens VIP/Sócio\n");
		strcat(MEGAString,gstring);
		format(gstring, sizeof(gstring), "{9CEA00}Coins - {ffff00}Ativar Coins\n");
		strcat(MEGAString,gstring);
		format(gstring, sizeof(gstring), "{9CEA00}Coins - {f68e00}Comprar Sócio\n");
		strcat(MEGAString,gstring);
		format(gstring, sizeof(gstring), "{9CEA00}Coins - {f68e00}Comprar VIP\n");
		strcat(MEGAString,gstring);
		format(gstring, sizeof(gstring), "{9CEA00}Coins - {f68e00}Listar ORG VIP\n");
		strcat(MEGAString,gstring);
		format(gstring, sizeof(gstring), "{9CEA00}Coins - {f68e00}Listar Família VIP\n");
		strcat(MEGAString,gstring);
		format(gstring, sizeof(gstring), "{9CEA00}Coins - {FFFFFF}Loja VIP\n");
		strcat(MEGAString,gstring);
		format(gstring, sizeof(gstring), "{9CEA00}Coins - {FFFFFF}Loja FREE\n");
		strcat(MEGAString,gstring);
		format(gstring, sizeof(gstring), "{9CEA00}Coins - {FFFFFF}Adquirir Veículo VIP(Grátis)\n");
		strcat(MEGAString,gstring);
		ShowPlayerDialog(playerid, 169, DIALOG_STYLE_LIST, "LOJA Coins - BPL", MEGAString, "Selecionar", "Sair");
		return 1;
	}
    CMD:resetduel(playerid, params[]){
		 if(PlayerInfo[playerid][pAdmin] == 1342){
              DueloAcontecendo = 0;
              SendClientMessage(playerid, COR_GRAD1, "Você resetou a quantidade de duelos acontecendo no servidor");
		 }
	}
	CMD:duelar(playerid, params[]){
	    if(PlayerInfo[playerid][pVIP] >= 1 || PlayerInfo[playerid][pSocio] >= 1){
		    if(!PlayerToPoint(2, playerid,1456.8755,-1623.1859,15.1923)) { return SendClientMessage(playerid, COR_GRAD1, "Você não está no icone de duelo."); }
            format(gstring,sizeof(gstring),"Digite o ID de seu oponente.");
            ShowPlayerDialog(playerid, 174, DIALOG_STYLE_INPUT,"Desafiando 1x1 !", gstring,"Confirmar","Cancelar");
		} else { return SendClientMessage(playerid, COR_GRAD1, "Você não é um sócio."); }
	}
	CMD:deagle(playerid, params[])
	{
	    if(PlayerInfo[playerid][pSocio] >= 1) {
		    new Float:Vida;
            GetPlayerHealth(playerid, Vida);
			if(WantedLevel[playerid] != 0) { return SendClientMessage(playerid, COR_AMARELO, "Você não pode entrar na arena com niveis de procura !"); }
			if(PlayerInfo[playerid][pJailed] != 0) { return SendClientMessage(playerid,COR_AMARELO,"Você não entrar no duelo preso !"); }
    	    if(Vida <= 50){ return SendClientMessage(playerid, COR_AMARELO, "Você deve ter mais da metade da vida para entrar na arena deagle !"); }
    	    if(PlayerInfo[playerid][pGunLic] == 0) { return SendClientMessage(playerid, COR_GRAD1, "Você não possui licenças de armas !");}
		    if(!PlayerToPoint(2, playerid,1502.1488,-1623.5706,15.2923)){ return SendClientMessage(playerid, COR_GRAD1, "Você não está no icone de duelo."); }
            new rand;
			TDM[playerid] = 1;
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 200);
			rand = random(sizeof(SpawnArena12));
			SetPlayerPos(playerid, SpawnArena12[rand][0], SpawnArena12[rand][1], SpawnArena12[rand][2]);
			SetPlayerFacingAngle(playerid, SpawnArena12[rand][3]);
			format(gstring, sizeof(gstring), "(DEAGLE ARENA):{FFFFFF} %s entrou na arena de Desert Eagle.", PlayerName(playerid));
			ProxDetector(100.0, playerid, gstring,COR_LIGHTBLUE,COR_LIGHTBLUE,COR_LIGHTBLUE,COR_LIGHTBLUE,COR_LIGHTBLUE);
			SendClientMessage(playerid, -1, "» Você entrou na arena de Desert Eagle. Para sair, digite /sair.");
            ResetPlayerWeapons(playerid);
			GivePlayerWeapon(playerid, 24, 9999);
			SetPlayerArmour(playerid,100);
			SetPlayerHealth(playerid,100);
		}else{ return SendClientMessage(playerid, COR_GRAD1, "Você não é um sócio."); }
	}
	CMD:farmaciahospitalar(playerid, params[]){
	    if(!PlayerToPoint(2.0,playerid,1165.3390,-1322.9261,-44.2836)) return SendClientMessage(playerid, -1, "Você não está na farmácia hospitalar.");
		ShowPlayerDialog(playerid, 4114, DIALOG_STYLE_TABLIST_HEADERS, "Farmácia Hospitalar",
		"Item\tCusto\tfunção\n\
		Kit Médico\t{01DF01}$3000\t{FF0000}Curar de todas doenças(menos queimadura) e completar saúde\n\
		Contrato Hospitalar\t{00ffff}Desativado\t{FFFFFF}Desativado",
		"Escolher", "Cancelar");
	}
	CMD:stopmp3(playerid, params[]){
		 if(TaEscutando[playerid] == 0) StopAudioStreamForPlayer(playerid);
	}
	CMD:infoconta(playerid, params[]){
	     new arquivo[128];
	     new arquivobanido[128];
	     new stringemp[128];
	     new stringvip[128];
	     new stringcasa[128];
	     new stringbanido[128];
	     if(PlayerInfo[playerid][pAdmin] >= 1338){
              tmpzcmd = strtok(cmdtext, idxzcmd);
              if(!strlen(tmpzcmd)) { return SendClientMessage(playerid, COR_GRAD2, "USE: /infoconta [NOME_JOGADOR]"); }
              format(arquivo, sizeof(arquivo), Pasta_Contas,tmpzcmd);
              if(!DOF2_FileExists(arquivo)) { return SendClientMessage(playerid, COR_GRAD1, "Este jogador não está registrado no servidor."); }
	          if(DOF2_GetInt(arquivo, "Bizz") == 255) { format(stringemp, sizeof(stringemp), "Empresa: {CC0000}Não"); }
	          else { format(stringemp, sizeof(stringemp), "Empresa: {00FF00}Sim"); }
	          if(DOF2_GetInt(arquivo, "House") == 999) { format(stringcasa, sizeof(stringcasa), "Casa: {CC0000}Não"); }
	          else{ format(stringcasa, sizeof(stringcasa), "Casa: {00FF00}Sim"); }
	          if(DOF2_GetInt(arquivo, "ContaVIP") == 0){ format(stringvip, sizeof(stringvip), "VIP Premium: {CC0000}Não");}
	          else { format(stringvip, sizeof(stringvip), "VIP Premium: {00FF00}Sim"); }
	          format(arquivobanido, sizeof(arquivobanido), Pasta_Banidos,tmpzcmd);
	          if(!DOF2_FileExists(arquivobanido)){ format(stringbanido, sizeof(stringbanido), "Banido: {CC0000}Não"); }
	          else { format(stringbanido, sizeof(stringbanido), "Banido: {00FF00}Sim"); }
	          format(gstring, sizeof(gstring), "Último Login do %s: [%02d/%02d/%02d]", tmpzcmd, DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"),DOF2_GetInt(arquivo,"AnoLogin"));
	          format(stringemp, sizeof(stringemp),  "%s ID:[%d]", stringemp, DOF2_GetInt(arquivo, "Bizz"));
	          format(stringcasa, sizeof(stringcasa),  "%s ID:[%d]", stringcasa, DOF2_GetInt(arquivo, "Casa"));
	          format(stringvip, sizeof(stringvip),  "%d {FFFFFF}- Tempo VIP/SÓCIO: %d.", stringvip, DOF2_GetInt(arquivo, "SocioLevel"),DOF2_GetInt(arquivo, "DiaVIP"));
	          SendClientMessage(playerid, COR_BRANCO, gstring);
	          SendClientMessage(playerid, COR_BRANCO, stringemp);
	          SendClientMessage(playerid, COR_BRANCO, stringcasa);
	          SendClientMessage(playerid, COR_BRANCO, stringvip);
	          SendClientMessage(playerid, COR_BRANCO, stringbanido);
	          return true;
	     } else { return SendClientMessage(playerid, COR_GREY, "Você não esta autorizado para usar este comando!");}
    }
	CMD:orelhas(playerid, params[]){
	     if(IsPlayerConnected(playerid)){
              if(PlayerInfo[playerid][pAdmin] >= 1341){
                   if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341) { return SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)"); }
			       if (!BigEar[playerid]){
				        BigEar[playerid] = 1;
				        SendClientMessage(playerid, COR_GRAD2, "Suas orelhas cresceram");
			       }else if (BigEar[playerid]){
				        BigEar[playerid] = 0;
				        SendClientMessage(playerid, COR_GRAD2, "Suas orelhas encolheram");
			       }
			  } else { return SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar este comando !"); }
		 }
		 return 1;
	}
	CMD:novatos(playerid, params[]){
	     if(IsPlayerConnected(playerid)){
              if(PlayerInfo[playerid][pAdmin] >= 1){
                   if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341) { return SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)"); }
				   SendClientMessage(playerid, COR_VERDE, "Novatos Online(Level 2):" );
	               for(new i = 0; i < MAX_PLAYERS; ++i ){
						if(PlayerInfo[i][pLevel] == 2){
         					new local[MAX_ZONE_NAME];
              				GetPlayer2DZone(giveplayeridzcmd, local, MAX_ZONE_NAME);
							if(IsPlayerInSF(i)){
								GetPlayerName(i, sendername, sizeof(sendername));
								format(gstring, 256, "%s: ID[%d] - Horas Jogadas[%d] - Cidade[SF] - Bairro[%s]", sendername,i,PlayerInfo[i][pConnectTime],local);
								SendClientMessage(playerid, COR_BRANCO, gstring);
								return 1;
							}else if(IsPlayerInLS(i)){
								GetPlayerName(i, sendername, sizeof(sendername));
								format(gstring, 256, "%s: ID[%d] - Horas Jogadas[%d] - Cidade[LS] - Bairro[%s]", sendername,i,PlayerInfo[i][pConnectTime],local);
								SendClientMessage(playerid, COR_BRANCO, gstring);
								return 1;
							}else if(IsPlayerInLV(i)){
								GetPlayerName(i, sendername, sizeof(sendername));
								format(gstring, 256, "%s: ID[%d] - Horas Jogadas[%d] - Cidade[LV] - Bairro[%s]", sendername,i,PlayerInfo[i][pConnectTime],local);
								SendClientMessage(playerid, COR_BRANCO, gstring);
								return 1;
							}else if(IsPlayerInLSSF(i)){
								GetPlayerName(i, sendername, sizeof(sendername));
								format(gstring, 256, "%s: ID[%d] - Horas Jogadas[%d] - Cidade[LS/SF] - Bairro[%s]", sendername,i,PlayerInfo[i][pConnectTime],local);
								SendClientMessage(playerid, COR_BRANCO, gstring);
								return 1;
							}else if(IsPlayerInLSLV(i)){
								GetPlayerName(i, sendername, sizeof(sendername));
								format(gstring, 256, "%s: ID[%d] - Horas Jogadas[%d] - Cidade[LS/LV] - Bairro[%s]", sendername,i,PlayerInfo[i][pConnectTime],local);
								SendClientMessage(playerid, COR_BRANCO, gstring);
								return 1;
							}else if(IsPlayerInSFLV(i)){
								GetPlayerName(i, sendername, sizeof(sendername));
								format(gstring, 256, "%s: ID[%d] - Horas Jogadas[%d] - Cidade[SF/LV] - Bairro[%s]", sendername,i,PlayerInfo[i][pConnectTime],local);
								SendClientMessage(playerid, COR_BRANCO, gstring);
								return 1;
							}
							return 1;
						}

				   }
              }else{ return SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar este comando !"); }
		 }
		 return 1;
	}
	CMD:tunning(playerid, params[]){
         if(IsPlayerConnected(playerid)){
              if(PlayerInfo[playerid][pAdmin] < 1339) { return SendClientMessage(playerid, COR_GRAD1, "   Voce não esta autorizado a usar este comando!"); }
              if(IsPlayerInAnyVehicle(playerid)){
                   new var5 = 0;
                   var5 = GetPlayerVehicleID(playerid);
                   if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562){
                        AddVehicleComponent(var5, 1046);
                        AddVehicleComponent(var5, 1171);
                        AddVehicleComponent(var5, 1149);
                        AddVehicleComponent(var5, 1035);
                        AddVehicleComponent(var5, 1147);
                        AddVehicleComponent(var5, 1036);
                        AddVehicleComponent(var5, 1040);
                        ChangeVehiclePaintjob(var5, 4);
                        ChangeVehicleColor(var5, 6, 6);
                        AddVehicleComponent(var5, 1010);
                        AddVehicleComponent(var5, 1079);
                        AddVehicleComponent(var5, 1087);
                   }
                   if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560){
                        AddVehicleComponent(var5, 1028);
                        AddVehicleComponent(var5, 1169);
                        AddVehicleComponent(var5, 1141);
                        AddVehicleComponent(var5, 1032);
                        AddVehicleComponent(var5, 1138);
                        AddVehicleComponent(var5, 1026);
                        AddVehicleComponent(var5, 1027);
                        ChangeVehiclePaintjob(var5, 0);
                        AddVehicleComponent(var5, 1010);
                        AddVehicleComponent(var5, 1079);
                        AddVehicleComponent(var5, 1087);
                   }
                   if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565){
                        AddVehicleComponent(var5, 1046);
                        AddVehicleComponent(var5, 1153);
                        AddVehicleComponent(var5, 1150);
                        AddVehicleComponent(var5, 1054);
                        AddVehicleComponent(var5, 1049);
                        AddVehicleComponent(var5, 1047);
                        AddVehicleComponent(var5, 1051);
                        AddVehicleComponent(var5, 1010);
                        AddVehicleComponent(var5, 1079);
                        AddVehicleComponent(var5, 1087);
                        ChangeVehiclePaintjob(var5, 4);
                   }
                   if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559){
                        AddVehicleComponent(var5, 1065);
                        AddVehicleComponent(var5, 1160);
                        AddVehicleComponent(var5, 1159);
                        AddVehicleComponent(var5, 1067);
                        AddVehicleComponent(var5, 1162);
                        AddVehicleComponent(var5, 1069);
                        AddVehicleComponent(var5, 1071);
                        AddVehicleComponent(var5, 1010);
                        AddVehicleComponent(var5, 1079);
                        AddVehicleComponent(var5, 1087);
                        ChangeVehiclePaintjob(var5, 4);
                   }
                   if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561){
                        AddVehicleComponent(var5, 1064);
                        AddVehicleComponent(var5, 1155);
                        AddVehicleComponent(var5, 1154);
                        AddVehicleComponent(var5, 1055);
                        AddVehicleComponent(var5, 1158);
                        AddVehicleComponent(var5, 1056);
                        AddVehicleComponent(var5, 1062);
                        AddVehicleComponent(var5, 1010);
                        AddVehicleComponent(var5, 1079);
                        AddVehicleComponent(var5, 1087);
                        ChangeVehiclePaintjob(var5, 4);
                   }
                   if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558){
                        AddVehicleComponent(var5, 1089);
                        AddVehicleComponent(var5, 1166);
                        AddVehicleComponent(var5, 1168);
                        AddVehicleComponent(var5, 1088);
                        AddVehicleComponent(var5, 1164);
                        AddVehicleComponent(var5, 1090);
                        AddVehicleComponent(var5, 1094);
                        AddVehicleComponent(var5, 1010);
                        AddVehicleComponent(var5, 1079);
                        AddVehicleComponent(var5, 1087);
                        ChangeVehiclePaintjob(var5, 4);
                   }
                   if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575){
                        AddVehicleComponent(var5, 1044);
                        AddVehicleComponent(var5, 1174);
                        AddVehicleComponent(var5, 1176);
                        AddVehicleComponent(var5, 1042);
                        AddVehicleComponent(var5, 1099);
                        AddVehicleComponent(var5, 1010);
                        AddVehicleComponent(var5, 1079);
                        AddVehicleComponent(var5, 1087);
                        ChangeVehiclePaintjob(var5, 4);
                   }
                   if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534){
                        AddVehicleComponent(var5, 1126);
                        AddVehicleComponent(var5, 1179);
                        AddVehicleComponent(var5, 1180);
                        AddVehicleComponent(var5, 1122);
                        AddVehicleComponent(var5, 1101);
                        AddVehicleComponent(var5, 1125);
                        AddVehicleComponent(var5, 1123);
                        AddVehicleComponent(var5, 1100);
                        AddVehicleComponent(var5, 1010);
                        AddVehicleComponent(var5, 1079);
                        AddVehicleComponent(var5, 1087);
                        ChangeVehiclePaintjob(var5, 4);
                   }
                   if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536){
                        AddVehicleComponent(var5, 1104);
                        AddVehicleComponent(var5, 1182);
                        AddVehicleComponent(var5, 1184);
                        AddVehicleComponent(var5, 1108);
                        AddVehicleComponent(var5, 1107);
                        AddVehicleComponent(var5, 1010);
                        AddVehicleComponent(var5, 1079);
                        AddVehicleComponent(var5, 1087);
                        ChangeVehiclePaintjob(var5, 4);
                   }
                   if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567){
                        AddVehicleComponent(var5, 1129);
                        AddVehicleComponent(var5, 1189);
                        AddVehicleComponent(var5, 1187);
                        AddVehicleComponent(var5, 1102);
                        AddVehicleComponent(var5, 1133);
                        AddVehicleComponent(var5, 1010);
                        AddVehicleComponent(var5, 1079);
                        AddVehicleComponent(var5, 1087);
                        ChangeVehiclePaintjob(var5, 4);
                   }
                   if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 420){
                        AddVehicleComponent(var5, 1010);
                        AddVehicleComponent(var5, 1087);
                        AddVehicleComponent(var5, 1079);
                        AddVehicleComponent(var5, 1139);
                        AddVehicleComponent(var5, 1147);
                   }
                   if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 400){
                        AddVehicleComponent(var5, 1010);
                        AddVehicleComponent(var5, 1087);
                        AddVehicleComponent(var5, 1018);
                        AddVehicleComponent(var5, 1013);
                        AddVehicleComponent(var5, 1079);
                        AddVehicleComponent(var5, 1086);
                   }
                   if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 444){
                        AddVehicleComponent(var5, 1010);
                        AddVehicleComponent(var5, 1079);
                   }
                   if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 556){
                        AddVehicleComponent(var5, 1010);
                        AddVehicleComponent(var5, 1079);
                   }
                   if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 557){
                        AddVehicleComponent(var5, 1010);
                        AddVehicleComponent(var5, 1079);
                   }
                   if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 401){
                        AddVehicleComponent(var5, 1086);
                        AddVehicleComponent(var5, 1139);
                        AddVehicleComponent(var5, 1079);
                        AddVehicleComponent(var5, 1010);
                        AddVehicleComponent(var5, 1087);
                        AddVehicleComponent(var5, 1012);
                        AddVehicleComponent(var5, 1013);
                        AddVehicleComponent(var5, 1042);
                        AddVehicleComponent(var5, 1043);
                        AddVehicleComponent(var5, 1018);
                        AddVehicleComponent(var5, 1006);
                        AddVehicleComponent(var5, 1007);
                        AddVehicleComponent(var5, 1017);
                   }
                   if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576){
                        ChangeVehiclePaintjob(var5, 0);
                        AddVehicleComponent(var5, 1191);
                        AddVehicleComponent(var5, 1193);
                        AddVehicleComponent(var5, 1010);
                        AddVehicleComponent(var5, 1018);
                        AddVehicleComponent(var5, 1079);
                        AddVehicleComponent(var5, 1087);
                        AddVehicleComponent(var5, 1134);
                        AddVehicleComponent(var5, 1137);
                   }else{
                        AddVehicleComponent(var5, 1010);
                        AddVehicleComponent(var5, 1079);
                        AddVehicleComponent(var5, 1087);
                   }
                   return 1;
              }
         }
         return 1;

	}
	CMD:rtunning(playerid, params[]){
         if(PlayerInfo[playerid][pVIP] >= 1){
              new newcar = GetPlayerVehicleID(playerid);
              new comp;
			  if(!IsPlayerInVehicle(playerid, newcar)) { return SendClientMessage(playerid, COR_GRAD1, "Você só precisa estar em seu carro vip !");}
              for(new i; i != MAX_VEHICLES; ++i){
			      new arquivo[64];
			      format(arquivo, sizeof(arquivo), Pasta_CarrosVIP, i);
			      if(DOF2_FileExists(arquivo)){
			          if(!strcmp(DOF2_GetString(arquivo, "Dono"), PlayerName(playerid))){
                          RemoveVehicleComponent(newcar, comp);
                          SendClientMessage(playerid, COR_GRAD1,"Tuning removido com sucesso !");
                      }
                  }
              }
         }
         return 1;
    }
	CMD:spysms(playerid, params[]){
		 if(PlayerInfo[playerid][pAdmin] >= 2){
              if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341) { return SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)"); }
			  tmpzcmd = strtok(cmdtext, idxzcmd);
			  if(!strlen(tmpzcmd)){
			       SmsOffer[playerid] = 999;
			       SendClientMessage(playerid, COR_GRAD5, "USE: /spysms [id], você desativou seu /spysms.");
				   return 1;
			  }
			  new player1;
			  player1 = strval(tmpzcmd);
			  if(IsPlayerConnected(player1)){
				   SmsOffer[playerid] = player1;
				   format(gstring, sizeof(gstring), "Agora você está espionando os sms do jogador: %s[%d]!", PlayerName(player1), player1);
				   SendClientMessage(playerid, COR_GRAD1, gstring);
			  }
		 }else{ return SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar este comando !"); }
		 return 1;
    }
    CMD:spypar(playerid, params[]){
		 if(PlayerInfo[playerid][pAdmin] >= 1340){
			  tmpzcmd = strtok(cmdtext, idxzcmd);
			  if(!strlen(tmpzcmd)){
			       ParOffer[playerid] = 999;
			       SendClientMessage(playerid, COR_GRAD5, "USE: /spypar [id], você desativou seu /spypar.");
				   return 1;
			  }
			  new player1;
			  player1 = strval(tmpzcmd);
			  if(IsPlayerConnected(player1)){
			       if(PlayerInfo[player1][pAdmin] == 1342 && PlayerInfo[playerid][pAdmin] != 1342) { return SendClientMessage(playerid, COR_GRAD1, "Você não pode espiar o particular do dono/scripter!"); }
				   ParOffer[playerid] = player1;
				   format(gstring, sizeof(gstring), "Agora você está espionando os particulares do admin: %s[%d]!", PlayerName(player1), player1);
				   SendClientMessage(playerid, COR_GRAD1, gstring);
			  }
		 }else{ return SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar este comando !");}
		 return 1;
    }
    CMD:spyparall(playerid, params[]){
		 if(PlayerInfo[playerid][pAdmin] >= 1340){
			  if(IsPlayerConnected(playerid)){
				   if(verpar[playerid] == 0){
				   		verpar[playerid] = 1;
				   		SendClientMessage(playerid, COR_GREY, "Apartir de agora, você verá todos os particulares enviados !");
				   }else{
				    	verpar[playerid] = 0;
				    	SendClientMessage(playerid, COR_GREY, "Apartir de agora, você não verá os particulares enviados !");
				   }
			  }
		 }else { return 1; }
		 return 1;
    }
    CMD:spysmsall(playerid, params[]){
		 if(PlayerInfo[playerid][pAdmin] >= 1340){
			  if(IsPlayerConnected(playerid)){
				   if(versms[playerid] == 0){
				   		versms[playerid] = 1;
				   		SendClientMessage(playerid, COR_GREY, "Apartir de agora, você verá todos os sms's enviados !");
				   }else{
				    	versms[playerid] = 0;
				    	SendClientMessage(playerid, COR_GREY, "Apartir de agora, você não verá os sms's enviados !");
				   }
			  }
		 }else { return 1; }
		 return 1;
    }
    CMD:rsom(playerid, params[]){
        if(TaEscutando[playerid] == 0) StopAudioStreamForPlayer(playerid);
        EscutandoSom[playerid] = 0;
        SomID[playerid] = 999;
        SendClientMessage(playerid, COR_AMARELO, "[AVISO]: Você reconectou o som!");
        return 1;
    }
    CMD:festas(playerid, params[]){
		 if(PlayerInfo[playerid][pVIP] > 0){
              SendClientMessage(playerid, COR_VERDE, "Festas Ocorrendo:");
              for(new i = 0; i <= MAX_PLAYERS; i++){
				   if(DonoFesta[i] == 1){
                        new location[MAX_ZONE_NAME];
		                GetPlayer2DZone(i, location, MAX_ZONE_NAME);
                        GetPlayerName(i, sendername, sizeof(sendername));
                        if(IsPlayerInLS(i)){
		     				format(gstring, sizeof(gstring), "Deejay: %s: ID[%d] - Cidade:[LS] - Bairro:[%s]", sendername, i, location);
       						SendClientMessage(playerid, COR_GRAD1, gstring);
						}else if(IsPlayerInSF(i)){
						     format(gstring, sizeof(gstring), "Deejay: %s: ID[%d] - Cidade:[SF] - Bairro:[%s]", sendername, i, location);
						     SendClientMessage(playerid, COR_GRAD1, gstring);
						}else if(IsPlayerInLV(i)){
						     format(gstring, sizeof(gstring), "Deejay: %s: ID[%d] - Cidade:[LV] - Bairro:[%s]", sendername, i, location);
						     SendClientMessage(playerid, COR_GRAD1, gstring);
						}
						return 1;
				   }
			  }
		 }else { return SendClientMessage(playerid, COR_GREEN, "Você precisa ser jogador VIP para visualizar as festas que estão ocorrendo !"); }
		 return 1;
    }
	CMD:ligarsom(playerid, params[]){
         if(PlayerInfo[playerid][pSocio] == 3){
              new vid = GetPlayerVehicleID(playerid);
			  if(!IsPlayerInAnyVehicle(playerid) || GetVehicleModel(vid) != 535 && GetVehicleModel(vid) != 556 && GetVehicleModel(vid) != 557 && GetVehicleModel(vid) != 560 && GetVehicleModel(vid) != 561 && GetVehicleModel(vid) != 579) { return SendClientMessage(playerid, COR_GRAD1, "Você só pode ligar o som nos veículos id: 535,556,557,560,561 ou 579."); }
              if(IsPlayerInVehicle(playerid, PlayerInfo[playerid][pCarKey])){
                   if(DonoFesta[playerid] == 0){
				       new arquivo[64];
					   format(arquivo, sizeof(arquivo), Pasta_CarrosVIP, PlayerInfo[playerid][pCarKey]);
					   if(DOF2_FileExists(arquivo)){
					       if(!strcmp(DOF2_GetString(arquivo, "Dono"), PlayerName(playerid))){
				               SendClientMessage(playerid, COR_LIGHTBLUE, "Você está ligando o som, só continue se estiver em um local RPG, se estiver no meio da rua será devidamente punido.");
						       ShowPlayerDialog(playerid, 163, DIALOG_STYLE_INPUT, "BPL MP3 Players", "Determine a distância do som(10 a 70 metros).", "Iniciar", "Cancelar");
						   } else { return SendClientMessage(playerid, COR_GRAD1, "Você não é o dono deste veículo vip !"); }
				       }
				   } else if(DonoFesta[playerid] == 1) {
				        new files[MAX_PLAYER_NAME];
			 	        format(files, sizeof files, "DJ/%s.ini", PlayerName(playerid));
                        for(new x = 0; x < MAX_PLAYERS; x++) {
                            if(IsPlayerInRangeOfPoint(x, DOF2_GetFloat(files, "DistanciaSom"), DOF2_GetFloat(files, "SomX"), DOF2_GetFloat(files, "SomY"), DOF2_GetFloat(files, "SomZ"))){
								if(DonoFesta[x] == 1 && EscutandoSom[playerid] == 0){
			  						EscutandoSom[x] = 0;
			    					StopAudioStreamForPlayer(x);
			    					SomID[x] = 999;
			  					}
							}
                        }
                        if(TaEscutando[playerid] == 0) StopAudioStreamForPlayer(playerid);
                        somligado[vid] = 0;
                        TemSomLigado--;
                        if(TemSomLigado < 0) { TemSomLigado = 0; }
                        DestroyObject(som1[vid]);
                        DestroyObject(som2[vid]);
                        DestroyObject(som3[vid]);
                        DestroyObject(som4[vid]);
                        DestroyObject(som5[vid]);
                        DestroyObject(som6[vid]);
                        DestroyObject(som7[vid]);
                        DestroyObject(som8[vid]);
                        SendClientMessage(playerid, COR_GRAD6, "Som Desligado !");
                        DonoFesta[playerid] = 0;
                        SomID[playerid] = 999;
 						if(DOF2_FileExists(files)){ DOF2_RemoveFile(files); }
                        return 1;
				   }
			  }
	     }
	     return 1;
	}
	CMD:mala(playerid, params[])
	{
         new mot, lu, alar, por, cap, porma, ob;
         new carro = GetPlayerVehicleID(playerid);
         if(carro != INVALID_VEHICLE_ID){
              if(portamalas[playerid] == 0){
                  GetVehicleParamsEx(carro, mot, lu, alar, por, cap, porma, ob);
                  SetVehicleParamsEx(carro, mot, lu, alar, por, cap, VEHICLE_PARAMS_ON, ob);
                  portamalas[playerid] = 1;
                  SendClientMessage(playerid, COR_BRANCO, "Porta Malas: {228B22}Aberto!");
              }else if(portamalas[playerid] == 1){
                   GetVehicleParamsEx(carro, mot, lu, alar, por, cap, porma, ob);
                   SetVehicleParamsEx(carro, mot, lu, alar, por, cap, VEHICLE_PARAMS_OFF, ob);
                   portamalas[playerid] = 0;
                   SendClientMessage(playerid, COR_BRANCO, "Porta Malas: {FF0000}Fechado!");
              }
         }
	}
	CMD:doar(playerid, params[]){
         tmpzcmd = strtok(cmdtext, idxzcmd);
         if(!strlen(tmpzcmd)){
              SendClientMessage(playerid, COR_LIGHTBLUE, "USE: /doar [id] [tipo] [quantidade]");
		      SendClientMessage(playerid, COR_GRAD6, "Tipos: 1(maconha) 2(cocaina) 3(crack) 4(lsd) 5(material) 6(dinamite)");
		      SendClientMessage(playerid, COR_GRAD6, "Tipos: 7(credito cel) 8(bala venenosa) 9(antidoto) 10(bala explosiva)");
		      SendClientMessage(playerid, COR_GRAD6, "Tipos: 11(decodificador)");
              return 1;
         }
         new para1;
         new tipo;
         para1 = ReturnUser(tmpzcmd);
         tmpzcmd = strtok(cmdtext, idxzcmd);
         if(!strlen(tmpzcmd)){
              SendClientMessage(playerid, COR_LIGHTBLUE, "USE: /doar [id] [tipo] [quantidade]");
		      SendClientMessage(playerid, COR_GRAD6, "Tipos: 1(maconha) 2(cocaina) 3(crack) 4(lsd) 5(material) 6(dinamite)");
		      SendClientMessage(playerid, COR_GRAD6, "Tipos: 7(credito cel) 8(bala venenosa) 9(antidoto) 10(bala explosiva)");
		      SendClientMessage(playerid, COR_GRAD6, "Tipos: 11(decodificador)");
              return 1;
         }
         tipo = strval(tmpzcmd);
         if(tipo < 1 || tipo > 11) { return 1; }
         if(IsPlayerConnected(para1)){
              if(para1 != INVALID_PLAYER_ID){
                   new length = strlen(cmdtext);
				   while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' ')){
				        idxzcmd++;
				   }
				   new offset = idxzcmd;
				   new result[64];
				   while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1))){
				        result[idxzcmd - offset] = cmdtext[idxzcmd];
				        idxzcmd++;
				   }
				   result[idxzcmd - offset] = EOS;
				   if(!strlen(result)){
              			SendClientMessage(playerid, COR_LIGHTBLUE, "USE: /doar [id] [tipo] [quantidade]");
		      			SendClientMessage(playerid, COR_GRAD6, "Tipos: 1(maconha) 2(cocaina) 3(crack) 4(lsd) 5(material) 6(dinamite)");
		      			SendClientMessage(playerid, COR_GRAD6, "Tipos: 7(credito cel) 8(bala venenosa) 9(antidoto) 10(bala explosiva)");
                        SendClientMessage(playerid, COR_GRAD6, "Tipos: 11(decodificador)");
					  	return 1;
				   }
				   if(!IsNumero(result)){
              			SendClientMessage(playerid, COR_LIGHTBLUE, "USE: /doar [id] [tipo] [quantidade]");
   			 			SendClientMessage(playerid, COR_GRAD6, "Tipos: 1(maconha) 2(cocaina) 3(crack) 4(lsd) 5(material) 6(dinamite)");
		      			SendClientMessage(playerid, COR_GRAD6, "Tipos: 7(credito cel) 8(bala venenosa) 9(antidoto) 10(bala explosiva)");
                        SendClientMessage(playerid, COR_GRAD6, "Tipos: 11(decodificador)");
						return 1;
				   }
				   if(PlayerInfo[para1][pLevel] <= 2) { return SendClientMessage(playerid, COR_GRAD1, "Você não pode doar nada para jogadores level 2 !");}
				   if(AdminTrabalhando[para1] > 0) { return SendClientMessage(playerid, COR_GRAD1, "Você não pode doar nada para um admin em modo trabalho !"); }
				   if(tipo == 1){
						if(strval(result) > PlayerInfo[playerid][pMaconha]){ return SendClientMessage(playerid, COR_GRAD1, "Você não tem maconha suficiente para poder doar !");}
						PlayerInfo[playerid][pMaconha] -= strval(result);
						PlayerInfo[para1][pMaconha] += strval(result);
						format(gstring, sizeof(gstring), "Jogador: %s doou [%d] pedras de maconha de suas drogas para %s.", PlayerName(playerid), strval(result), PlayerName(para1));
						ProxDetector(30.0, playerid, gstring, COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE);
				   }
				   if(tipo == 2){
      					if(strval(result) > PlayerInfo[playerid][pCocaina]) { return SendClientMessage(playerid, COR_GRAD1, "Você não tem cocaina suficiente para poder doar !"); }
						PlayerInfo[playerid][pCocaina] -= strval(result);
						PlayerInfo[para1][pCocaina] += strval(result);
						format(gstring, sizeof(gstring), "Jogador: %s doou [%d] pedras de cocaina de suas drogas para %s.", PlayerName(playerid), strval(result), PlayerName(para1));
						ProxDetector(30.0, playerid, gstring, COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE);
				   }
				   if(tipo == 3){
                        if(strval(result) > PlayerInfo[playerid][pCrack]){ return SendClientMessage(playerid, COR_GRAD1, "Você não tem crack suficiente para poder doar !"); }
						PlayerInfo[playerid][pCrack] -= strval(result);
						PlayerInfo[para1][pCrack] += strval(result);
						format(gstring, sizeof(gstring), "Jogador: %s doou [%d] pedras de crack de suas drogas para %s.", PlayerName(playerid), strval(result), PlayerName(para1));
						ProxDetector(30.0, playerid, gstring, COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE);
				   }
				   if(tipo == 4){
                        if(strval(result) > PlayerInfo[playerid][pLsd]) { return SendClientMessage(playerid, COR_GRAD1, "Você não tem lsd suficiente para poder doar !");}
						PlayerInfo[playerid][pLsd] -= strval(result);
						PlayerInfo[para1][pLsd] += strval(result);
						format(gstring, sizeof(gstring), "Jogador: %s doou [%d] pedras de Lsd de suas drogas para %s.", PlayerName(playerid), strval(result), PlayerName(para1));
						ProxDetector(30.0, playerid, gstring, COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE);
				   }
				   if(tipo == 5){
                        if(strval(result) > PlayerInfo[playerid][pMats]) { return SendClientMessage(playerid, COR_GRAD1, "Você não tem materiais suficiente para poder doar !"); }
						PlayerInfo[playerid][pMats] -= strval(result);
						PlayerInfo[para1][pMats] += strval(result);
						format(gstring, sizeof(gstring), "Jogador: %s doou [%d] materiais de seus materiais para %s.", PlayerName(playerid), strval(result), PlayerName(para1));
						ProxDetector(30.0, playerid, gstring, COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE);
				   }
				   if(tipo == 6) {
                        if(strval(result) > PlayerInfo[playerid][pDina]) { return SendClientMessage(playerid, COR_GRAD1, "Você não tem dinamite suficiente para poder doar !");}
						PlayerInfo[playerid][pDina] -= strval(result);
						PlayerInfo[para1][pDina] += strval(result);
						format(gstring, sizeof(gstring), "Jogador: %s doou [%d] dinamites de suas dinamites para %s.", PlayerName(playerid), strval(result), PlayerName(para1));
						ProxDetector(30.0, playerid, gstring, COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE);
				   }
				   if(tipo == 7) {
                        if(strval(result) > PlayerInfo[playerid][pCreditos]){ return SendClientMessage(playerid, COR_GRAD1, "Você não tem créditos suficiente para poder doar !"); }
						PlayerInfo[playerid][pCreditos] -= strval(result);
						PlayerInfo[para1][pCreditos] += strval(result);
						format(gstring, sizeof(gstring), "Jogador: %s doou [%d] créditos de seu celular para %s.", PlayerName(playerid), strval(result), PlayerName(para1));
						ProxDetector(30.0, playerid, gstring, COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE);
				   }
				   if(tipo == 8){
                        if(strval(result) > PlayerInfo[playerid][pVeneno]){ return SendClientMessage(playerid, COR_GRAD1, "Você não tem balas venenosas suficiente para poder doar !");}
						PlayerInfo[playerid][pVeneno] -= strval(result);
						PlayerInfo[para1][pVeneno] += strval(result);
						format(gstring, sizeof(gstring), "Jogador: %s doou [%d] balas venenosas para %s.", PlayerName(playerid), strval(result), PlayerName(para1));
						ProxDetector(30.0, playerid, gstring, COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE);
				   }
				   if(tipo == 9){
                        if(strval(result) > PlayerInfo[playerid][pAntidoto]){ return SendClientMessage(playerid, COR_GRAD1, "Você não tem antidotos suficiente para poder doar !"); }
						PlayerInfo[playerid][pAntidoto] -= strval(result);
						PlayerInfo[para1][pAntidoto] += strval(result);
						format(gstring, sizeof(gstring), "Jogador: %s doou [%d] antidotos para %s.", PlayerName(playerid), strval(result), PlayerName(para1));
						ProxDetector(30.0, playerid, gstring, COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE);
				   }
				   if(tipo == 10){
                        if(strval(result) > PlayerInfo[playerid][pExplosiva]){ return SendClientMessage(playerid, COR_GRAD1, "Você não tem explosiva suficiente para poder doar !"); }
						PlayerInfo[playerid][pExplosiva] -= strval(result);
						PlayerInfo[para1][pExplosiva] += strval(result);
						format(gstring, sizeof(gstring), "Jogador: %s doou [%d] balas explosivas para %s(use: /explosiva).", PlayerName(playerid), strval(result), PlayerName(para1));
						ProxDetector(30.0, playerid, gstring, COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE);
				   }
				   if(tipo == 11) {
                        if(strval(result) > PlayerInfo[playerid][pDecod]) { return SendClientMessage(playerid, COR_GRAD1, "Você não possui essa quantidade de decodificadores !"); }
						if(PlayerInfo[para1][pDecod] > 0) { return SendClientMessage(playerid, COR_GRAD1, "Este jogador já possui 1 decodificador que é o máximo !"); }
						PlayerInfo[playerid][pDecod] -= strval(result);
						PlayerInfo[para1][pDecod] += strval(result);
						format(gstring, sizeof(gstring), "Jogador: %s doou [%d] decodificador para %s.", PlayerName(playerid), strval(result), PlayerName(para1));
						ProxDetector(30.0, playerid, gstring, COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE);
				   }
			  }
		 }
		 return 1;
	}
	CMD:voar(playerid, params[]){
         if(PlayerInfo[playerid][pAdmin] < 1) { return SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar este comando !"); }
		 if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341) { return SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)"); }
		 if(flying[playerid] == false){
		      flying[playerid] = true;
              StartFly(playerid);
			  format(gstring, sizeof(gstring), "ADMCMD: %s ativou o modo voar.", PlayerName(playerid));
		      ABroadCast(COR_AMARELO,gstring,1);
	     }else{
              flying[playerid] = false;
              StopFly(playerid);
              format(gstring, sizeof(gstring), "ADMCMD: %s desativou o modo voar.", PlayerName(playerid));
		      ABroadCast(COR_AMARELO,gstring,1);
		 }
	     return 1;
    }
	CMD:laseron(playerid, params[]){
		 if(PlayerInfo[playerid][pSocio] == 0){ return SendClientMessage(playerid, COR_GRAD1, "Você não é um jogador Sócio !"); }
		 if(GetPlayerWeapon(playerid) == 0) { return SendClientMessage(playerid, COR_GRAD1, "Você não está utilizando uma arma para colocar o laser !"); }
         SetPVarInt(playerid, "laser", 1);
         SetPVarInt(playerid, "color", GetPVarInt(playerid, "color"));
         SendClientMessage(playerid, COR_GRAD1, "Você ativou o laser na arma, digite /lasercor [cor] para mudar a cor ou /laseroff para retirar !");
         return 1;
	}
    CMD:laseroff(playerid, params[]){
          if(PlayerInfo[playerid][pSocio] == 0){ return SendClientMessage(playerid, COR_GRAD1, "Você não é um jogador Sócio !");}
          SetPVarInt(playerid, "laser", 0);
          RemovePlayerAttachedObject(playerid, 0);
          SendClientMessage(playerid, COR_GRAD1, "Você retirou o laser na arma !");
          return 1;
    }
    CMD:lasercor(playerid, params[]){
          if(PlayerInfo[playerid][pSocio] == 0){ return SendClientMessage(playerid, COR_GRAD1, "Você não é um jogador Sócio !"); }
          tmpzcmd = strtok(cmdtext, idxzcmd);
          if (!strlen(tmpzcmd)) { return SendClientMessage(playerid, COR_VERDE, "Usage: /lasercor [cor] (vermelho,azul,rosa,laranja,verde e amarelo)"); }
          if (!strcmp(tmpzcmd, "Vermelho(playerid, params[]) { SetPVarInt(playerid, "color", 18643); }
          else if(!strcmp(tmpzcmd, "Azul(playerid, params[]){ SetPVarInt(playerid, "color", 19080); }
          else if (!strcmp(tmpzcmd, "Rosa(playerid, params[]) { SetPVarInt(playerid, "color", 19081); }
          else if (!strcmp(tmpzcmd, "Laranja(playerid, params[]) { SetPVarInt(playerid, "color", 19082); }
		  else if (!strcmp(tmpzcmd, "Verde(playerid, params[]){ SetPVarInt(playerid, "color", 19083); }
          else if (!strcmp(tmpzcmd, "Amarelo(playerid, params[]) { SetPVarInt(playerid, "color", 19084); }
          else { return SendClientMessage(playerid, 0x00E800FF, "[ERRO] - Não Tem Essa Cor No Banco de Dados Do BPL !");}
    }
	CMD:irobjeto(playerid, params[]) return Dudu:iro(playerid);
	CMD:iro(playerid, params[])  && PlayerInfo[playerid][pAdmin] == 1342){
	    tmpzcmd = strtok(cmdtext, idxzcmd);
		if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /irobjeto [ id ]");
		}
		new obid;
		obid = strval(tmpzcmd);
		new Float:oX, Float:oY, Float:oZ;
		GetObjectPos(obid, oX, oY, oZ);
		SetPlayerPos(playerid, oX, oY, oZ+3);
		SendClientMessage(playerid, COR_GRAD2, "Você foi até o objeto");
		return 1;
	}
	CMD:creditos(playerid, params[]) return Dudu:equipe(playerid);
	CMD:equipe(playerid, params[]){
        if(IsPlayerConnected(playerid)){
			new Frase[500];
			strcat(Frase, "{0099ff}» Créditos pelo servidor\n");
			strcat(Frase, gstring);
			strcat(Frase, "               {FFFFFF}Dudu_Insane(Desenvolvimento da versão atual)\n\n");
			strcat(Frase, gstring);
			strcat(Frase, "{0099ff}» Agradecimentos\n");
			strcat(Frase, gstring);
			strcat(Frase, "               {FFFFFF}Leo_Insane(Responsável pelo desenvolvimento do servidor)\n");
			strcat(Frase, gstring);
			ShowPlayerDialog(playerid, 5946, DIALOG_STYLE_MSGBOX, "Créditos do servidor", Frase, "Fechar", "");
        }
        return 1;
	}
	CMD:protecao(playerid, params[]){
    	if(PlayerInfo[playerid][pSocio] > 0){
			 if(GetPlayerInterior(playerid) == 0 && !IsPlayerInAnyVehicle(playerid)) { return SendClientMessage(playerid, COR_GRAD1, "Você precisa estar dentro de algum interior ou veiculo para usar este comando."); }
             if(tempoprotecao[playerid] == 0){
                  protecao[playerid] = 5;
                  tempoprotecao[playerid] = 1;
                  SetTimerEx("ProtecaoSocio", 300000, 0, "i", playerid);
                  //SetPlayerAttachedObject(playerid,1,19142,1,0.1,0.05,0.0,0.0,0.0,0.0);
                 // SetPlayerAttachedObject(playerid,2,19141,2,0.11,0.0,0.0,0.0,0.0,0.0);
                  SendClientMessage(playerid,COR_VERMELHO,"Você ativou a sua proteção !");
 		          format(gstring, sizeof(gstring), "Sócio: %s Ativou a proteção contra sniper/bazuca.", PlayerName(playerid));
			      ProxDetector(30.0, playerid, gstring, COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE);
             } else { return SendClientMessage(playerid, COR_GRAD1, "Você só pode usar este comando a cada 5 minutos, usou a pouco tempo ou entrou agora no serivodr!"); }
		}
		return 1;
	}
	CMD:menucop(playerid, params[]){
		if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_GREY,"Você não pode usar este comando preso !"); }
    	if (IsACop(playerid)){
	    	if(PlayerToPoint(2, playerid,252.5212,69.6307,1003.6406) || PlayerToPoint(2,playerid,255.0129,76.0857,1003.6406) || PlayerToPoint(2,playerid,240.6702,112.7933,1003.2188) || PlayerToPoint(2, playerid,302.6840,-1529.6685,24.9219) || PlayerToPoint(2, playerid,2688.4722,-2443.8438,13.4729) || PlayerToPoint(2, playerid,326.4964,306.9705,999.1484) || PlayerToPoint(1, playerid,914.5157,-1235.1240,17.2109)
			|| PlayerToPoint(2, playerid,229.7716,165.0986,1003.0234) || PlayerToPoint(2, playerid,1709.7360,-1642.6481,20.2188) || PlayerToPoint(2, playerid,2497.8533,2389.3938,4.2109) || PlayerToPoint(2, playerid,2080.9387,-1376.1432,300.5588) || PlayerToPoint(2,playerid,2251.4067,2490.9138,10.9908)){
	             ShowPlayerDialog(playerid, 13, DIALOG_STYLE_LIST, "Computador Cop´s", "\nPegar Equipamentos\nBater o Cartão\nModo ROCAM PM\nArma de Shock\nEscudo de Batalha\nVer Procurados\nVer Presos\nVer Ficha de Alguém", "Ok", "Cancelar");
                 TogglePlayerControllable(playerid, 0);
			     return 1;
			}
		}
	}
	CMD:disfarce(playerid, params[]){
        if(PlayerToPoint(3.0,playerid,348.0799,301.7542,999.1484) || PlayerToPoint(3.0,playerid,2329.7007,-1068.5325,1049.0234)){
		    if (PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8 || PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26){
		         TogglePlayerControllable(playerid, 0);
		         if(GetPlayerOrg(playerid) == 8){ ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST,"Disfarces Hitmans", "Organizações\nEmpregos\nCivil Homem(R$50,00)\nCivil Mulher(R$50,00)\nFrango(R$50,00)\nPuta(R$50,00)", "Confirmar", "Cancelar"); }
				 else if(GetPlayerOrg(playerid) == 26){ ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST,"Disfarces Assassins", "Organizações\nEmpregos\nCivil Homem(R$50,00)\nCivil Mulher(R$50,00)\nFrango(R$50,00)\nPuta(R$50,00)", "Confirmar", "Cancelar");}
                 return 1;
		    }
		}
	}
	CMD:a3d(playerid, params[]) return Dudu:atualizar3dtext(playerid);
	CMD:atualizar3dtext(playerid, params[]) && PlayerInfo[playerid][pAdmin] == 1342){
		Atualizar3Dtexts();
		SendClientMessage(playerid, COR_LIGHTRED, "Você atualizou todos os 3Dtexts do Servidor !");
		return 1;
	}
	CMD:deletarconta(playerid, params[]){
	    new file[64];
	    tmpzcmd = strtok(cmdtext, idxzcmd);
     	if(!strlen(tmpzcmd))  return SendClientMessage(playerid, COR_GRAD2, "USE: /deletarconta [Nick]");
     	if (PlayerInfo[playerid][pAdmin] < 1341){
     		SendClientMessage(playerid, COR_GREY,"Você não tem permissão para usar esse comando!");
     		return 1;
		}
		getdate(v[0], v[1], v[2]);
		gettime(v[3], v[4], v[5]);
		format(gstring, 128, "[%d/%d/%d] [%d:%d:%d] %s Apagou a conta: %s", v[2], v[1], v[0], v[3], v[4], v[5] , PlayerName(playerid), tmpzcmd);
		SendClientMessage(playerid, COR_AMARELO, gstring);
     	format(file,sizeof(file),Pasta_Contas,tmpzcmd);
		format(gstring, 128, "%s.bak", file);
        DOF2_CopyFile(file, gstring);
		DOF2_RemoveFile(file);
     	return 1;
	}
	CMD:mudarsperm(playerid, params[]){
		if(IsPlayerConnected(playerid)){
	        if(TemSkinPermanente[playerid] == 1){
	            ShowModelSelectionMenu(playerid, ComprarSkinList, "Selecione a Skin");
	        }
	        else
	        {
	            SendClientMessage(playerid, COR_AMARELO, "[BPL SERVER]:{FFFFFF} Você não possui skins permanete!");
	        }
	    }
	    return 1;
	}
	CMD:mudarnick(playerid, params[]){
		if(IsPlayerConnected(playerid)){
			if(PodeMudarNick[playerid] == 0 && MudarNick[playerid] == 0)
				return SendClientMessage(playerid, COR_GRAD1, "Você não tem troca de nick disponível, adquina no /menuvip.");
  			new x_Nick[128];
	     	x_Nick = strtok(cmdtext, idxzcmd);
	     	if(!strlen(x_Nick))
				return SendClientMessage(playerid, COR_BRANCO, "USE: /mudarnick [nome]");
			format(gstring, sizeof(gstring), Pasta_Contas, x_Nick);
			if(fexist(gstring))
                return SendClientMessage(playerid, COR_GREY,"Este nick ja está sendo usado!");
			if(mudandonick[playerid] == 1)
				return SendClientMessage(playerid, COR_GREY,"Espere terminar de mudar seu nick!");
			mudandonick[playerid] = 1;
			GetPlayerName(playerid,PlayerName,sizeof(PlayerName));
			format(gstring, sizeof(gstring), Pasta_Contas, PlayerName);
 			if(fexist(gstring))	fremove(gstring);
            for(new i = 0; i < sizeof(BizzInfo); ++i){
	        	if(strcmp(PlayerName,BizzInfo[i][bOwner],true)==0){
              		new emp[255];
              		format(emp, sizeof(emp), Pasta_Empresas, i);
              		if(DOF2_FileExists(emp)){
              		    DOF2_SetString(emp, "Dono", x_Nick);
              		    DOF2_SaveFile();
              		    strmid(BizzInfo[i][bOwner],DOF2_GetString(emp, "Dono"),0, strlen(DOF2_GetString(emp, "Dono")), 255);
              		    Delete3DTextLabel(BizzLabel[i]);
              		    format(gstring, sizeof(gstring), TextEmpresa,BizzInfo[i][bMessage],x_Nick,BizzInfo[i][bExtortion],BizzInfo[i][bEntranceCost]);
	        			BizzLabel[i] = Create3DTextLabel(gstring,0x00FF00FF,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]+0.5,20.0, 0);
              		}
	        	}
			}
			for(new i = 0; i < sizeof(SBizzInfo); ++i){
          		if(strcmp(PlayerName,SBizzInfo[i][sbOwner],true)==0){
	        	    new semp[255];
              		format(semp, sizeof(semp), Pasta_SEmpresas, i);
              		if(DOF2_FileExists(semp)){
              		    DOF2_SetString(semp, "Dono", x_Nick);
              		    DOF2_SaveFile();
              		    strmid(SBizzInfo[i][sbOwner],DOF2_GetString(semp, "Dono"),0, strlen(DOF2_GetString(semp, "Dono")), 255);
              		    Delete3DTextLabel(SBizzLabel[i]);
              		    format(gstring, sizeof(gstring), TextMEmpresa,SBizzInfo[i][sbMessage],x_Nick,SBizzInfo[i][sbExtortion],SBizzInfo[i][sbEntranceCost]);
	        			SBizzLabel[i] = Create3DTextLabel(gstring,0x00FF00FF,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]+0.5,20.0, 0);
              		}
	        	}
			}
			for(new h = 0; h < sizeof(HouseInfo); h++){
	        	if(strcmp(PlayerName,HouseInfo[h][hOwner],true)==0){
	        	    new house[255];
              		format(house, sizeof(house), Pasta_Casas, h);
              		if(DOF2_FileExists(house)){
              		    DOF2_SetString(house, "Dono", x_Nick);
              		    DOF2_SaveFile();
              		    strmid(HouseInfo[h][hOwner],DOF2_GetString(house, "Dono"),0, strlen(DOF2_GetString(house, "Dono")), 255);
              		    Delete3DTextLabel(HouseLabel[h]);
              		    format(gstring, sizeof(gstring), TextCasa,x_Nick,HouseInfo[h][hRentabil],HouseInfo[h][hDiscription]);
	            		HouseLabel[h] = Create3DTextLabel(gstring,0x00FF00FF,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,13.0, 0);
              		}
	        	}
			}
			for(new i = 0; i < sizeof(AdmInfo); ++i){
	        	if(strcmp(PlayerName,AdmInfo[i][AdminNick],true)==0){
	        	    strmid(AdmInfo[i][AdminNick], x_Nick, 0, strlen(x_Nick), 999);
		        }
 			}
	        if(GetPlayerOrg(playerid) != 0){
                 RemoveGangue(playerid);
                 RemoveBloqueio(playerid);
                 RemoveBarreira(playerid);
                 RemoveParedao(playerid);
                 RemoveBarraca(playerid);
		         ResetPlayerWeaponsEx(playerid);
		         SetPlayerArmour(playerid, 0);
                 DemitirInfoOrg(PlayerName(playerid));
		         gTeam[playerid] = 3;
		         DeslogandoSocio[playerid] = 0;
		         PlayerInfo[playerid][pTeam] = 3;
	             PlayerInfo[playerid][pMembro] = 0;
		         PlayerInfo[playerid][pLider] = 0;
		         PlayerInfo[playerid][pCargo] = 0;
		         PlayerInfo[playerid][pEmprego] = 0;
		         PlayerInfo[playerid][pSpawn] = 0;
                 SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
		         MedicBill[playerid] = 0;
		         MedicBill[playerid] = 0;
		         SetPlayerToTeamColor(playerid);
		         if(PlayerInfo[playerid][pSex] == 1){
				      SetPlayerSkin(playerid, 119);
					  PlayerInfo[playerid][pSkin] = 119;
				 }else{
				      SetPlayerSkin(playerid, 41);
					  PlayerInfo[playerid][pSkin] = 41;
				 }
	        }
	        if(PlayerInfo[playerid][pCarKey] > 0){
 			    new arquivo[64];
 			    format(arquivo, sizeof(arquivo), Pasta_CarrosVIP, PlayerInfo[playerid][pOldCarKey]);
	            if(DOF2_FileExists(arquivo)){
	            	DOF2_SetString(arquivo, "Dono", x_Nick);
	            	DOF2_SaveFile();
	            }
 			}
    		if(PlayerInfo[playerid][pCarFixo] > 0){
 			    new arquivo[64];
 			    format(arquivo, sizeof(arquivo), Pasta_CarrosFixo, PlayerInfo[playerid][pOldCarFixo]);
	            if(DOF2_FileExists(arquivo)){
	            	DOF2_SetString(arquivo, "Dono", x_Nick);
	            	DOF2_SaveFile();
	            }
 			}
			getdate(year, month, day);
			gettime(hour,minute);
   			format(gstring, sizeof(gstring), "[Mudar Nick] %s mudou o nick para %s (%d/%d/%d - %d:%d)",PlayerName,x_Nick, day, month, year,hour, minute);
   			SendClientMessageToAll(COR_LIGHTRED,gstring);
   			NickLog(gstring);
   			SetPlayerName(playerid,x_Nick);
   			SendClientMessage(playerid, COR_LIGHTBLUE, "Você pediu contas, agora você é um Civil novamente!");
   			format(gstring, sizeof(gstring), "Você mudou seu nick para %s",x_Nick );
   			SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
   			SendClientMessage(playerid, COR_AMARELO,"Tire uma SS(Aperte F8) para não esquecer o novo nick!");
   			mudandonick[playerid] = 0;
		    SalvarAdmins();
		    OnPlayerSave(playerid);
		    if(PodeMudarNick[playerid] == 1) return PodeMudarNick[playerid] = 0;
		    if(MudarNick[playerid] > 0) MudarNick[playerid] -= 1;
		    else MudarNick[playerid] = 0;
   			return 1;
        }
		return 1;
	}
    CMD:onmudarn",true)==0){
	    if(IsPlayerConnected(playerid)){
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /onmudarn [ id ]"); }
            new playa;
			playa = ReturnUser(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 1337) {
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341) { return SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)"); }
			    if(IsPlayerConnected(playa)){
			        if(playa != INVALID_PLAYER_ID){
						PodeMudarNick[playa] = 1;
                        GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
		         		format(gstring, sizeof(gstring), "Admin %s: Liberou você a mudar o nick,digite /mudarnick.", sendername);
		        		SendClientMessage(playa, COR_LIGHTBLUE, gstring);
		        		format(gstring, sizeof(gstring), "ADMIN CMD: %s Liberou %s a mudar o nick !",sendername,giveplayerzcm);
						ABroadCast(COR_LIGHTRED,gstring,1);
					}
				}
			} else { return SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!"); }
		}
		return 1;
	}
	CMD:offmudarn(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
	        if(PlayerInfo[playerid][pAdmin] >= 4){
	            tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /offmudarn [ id ]"); }
				giveplayeridzcmd = ReturnUser(tmpzcmd);
				if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341) { return SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)"); }
				if(IsPlayerConnected(giveplayeridzcmd)){
				    if(giveplayeridzcmd != INVALID_PLAYER_ID){
						PodeMudarNick[giveplayeridzcmd] = 0;
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
                        format(gstring, sizeof(gstring), "Admin %s : Tirou sua permissão para mudar de nick.", sendername);
		        		SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
				        format(gstring, sizeof(gstring), "ADMIN CMD: %s tirou a permissão de %s para mudar o nick !",sendername,giveplayerzcm);
						ABroadCast(COR_LIGHTRED,gstring,1);
				        return 1;
					}
				}else{ return SendClientMessage(playerid, COR_GREY, "O Jogador Está Offline !");}
	        }else{ return SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar este comando !");}
	    }
	    return 1;
	}
	CMD:votacao", true, 8)){
		if(PlayerInfo[playerid][pAdmin] >= 1337){
		    if(!votacao[iniciada]){
				if(!cmdtext[9]){ return SendClientMessage(playerid, COR_GRAD2, "USE: /votacao [pergunta]");}
				SendClientMessageToAll(0xFFF000AA, "> Se você concorda clique: sim");
				SendClientMessageToAll(0xFFF000AA, "> Se você discorda clique: nao");
				votacao[iniciada] = true;
				votacao[sim] = 0;
				votacao[nao] = 0;
				for(new i; i < MAX_PLAYERS; ++i){
                     format(gstring,sizeof(gstring),"Votação: %s ?", cmdtext[9]);
       	  	         ShowPlayerDialog(i,12,DIALOG_STYLE_MSGBOX,"BPL - Votação",gstring,"Sim","Não");
			         votou[i] = false;
			    }
            }else{ SendClientMessage(playerid, COR_GREY,"Já existe uma votação em andamento!"); }
		} else { SendClientMessage(playerid, COR_GREY,"Você não tem permissão para usar este comando!"); }
		return 1;
	}
	CMD:sairevento(playerid, params[]){
		new vid = GetPlayerVehicleID(playerid);
        if(NaPorraDoEvento[playerid] == true){
            Trazervs[playerid] = 0;
            VoltasEvento[playerid] = 0;
            TimeCOPS[playerid] = 0;
            TimeZumbis[playerid] = 0;
            PrimeiroChuck[playerid] = 0;
            CorridaGanha[playerid] = 0;
            PlayerInfo[playerid][pTrazerChuck] = 0;
            PlayerInfo[playerid][pTiroteio] = 0;
            SetPlayerVirtualWorld(playerid, 0);
            EventoGalpao[playerid] = 0;
            EventoHotel[playerid] = 0;
            EventoAviao[playerid] = 0;
            iniciarrally[playerid] = 0;
            iniciarcross[playerid] = 0;
            iniciartrilha[playerid] = 0;
            TanoEventoJogosVorazes[playerid] = 0;
            CPEvento1[playerid] = 0;
            CPEvento2[playerid] = 0;
            CPEvento3[playerid] = 0;
            CPEvento4[playerid] = 0;
            CPEvento5[playerid] = 0;
			KillEvento[playerid] = 0;
			DeatEvento[playerid] = 0;
			pClassiQuarentena[playerid] = 0;
			NaPorraDoEvento[playerid] = false;
			TaNoQuarentena[playerid] = 0 ;
			TextDrawHideForPlayer(playerid, TextDrawCQ);
			EquipeWarZone[playerid] = 0;
   			TanoWarZone[playerid] = 0;
			TextDrawHideForPlayer(playerid, TextDrawGREEN);
			TextDrawHideForPlayer(playerid, TextDrawRED);
			TextDrawHideForPlayer(playerid, TextDrawBLUE);
			LimiteRed--;
			LimiteBlue--;
			LimiteGreen--;
			TextDrawHideForPlayer(playerid, TextDrawCT);
			TextDrawHideForPlayer(playerid, TextdrawTR);
            KillEvento[playerid] = 0;
            MorteEvento[playerid] = 0;
			DeatEvento[playerid] = 0;
			eventofloresta[playerid] = 0;
			eventoarena[playerid] = 0;
			eventomansao[playerid] = 0;
			eventocarandiru[playerid] = 0;
            eventoconst[playerid] = 0;
            eventodp[playerid] = 0;
            NaPorraDoEvento[playerid] = false;
            ResetPlayerWeaponsEx(playerid);
	        SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
	        SetPlayerToTeamColor(playerid);
	        DisablePlayerRaceCheckpoint(playerid);
	        SetVehicleToRespawn(vid);
	        if(TaEscutando[playerid] == 0) StopAudioStreamForPlayer(playerid);
	        SetHora();
	        if(TanoEventoJogosVorazes[playerid] == 1){
	            QuantidadeEvento --;
	            TanoEventoJogosVorazes[playerid] = 0;
        		format(gstring, sizeof(gstring), "[Jogos Vorazes] %s Saiu do evento, restam [%d] sobreviventes.",PlayerName(playerid),QuantidadeEvento);
   				SendClientMessageToAll(COR_VERDE,gstring);
	            SendClientMessage(playerid, COR_AMARELO, "Você saiu do evento !");
	            SetPlayerWorldBounds(playerid,20000.0000,-20000.0000,20000.0000,-20000.0000);
	            TanoEventoJogosVorazes[playerid] = 0;
	            NaPorraDoEvento[playerid] = false;
	            VerificarGanhador(playerid);
	            SetPlayerSpawn(playerid);
	            return 1;
	        }
	        for(new i = 0; i < MAX_PLAYERS; ++i){
				 if(PlayerInfo[i][pTiroteio] > 0){
	                  SetPlayerWeather(i, 42);
	             }
			}
			if(MaletaAnexada[playerid] == 1){
	        	GetPlayerPos(playerid,maletax,maletay,maletaz);
	        	maletaid = CreateDynamicObject(1210,maletax,maletay,maletaz-0.8,0,0,0.0);
	        	MaletaAnexada[playerid] = 0;
				StopPlayerHoldingObject(playerid);
	    	}
	    	KillTimer(TempoVida[playerid]);
	        SendClientMessage(playerid, COR_AMARELO,"Você saiu do evento !");
	        SetPlayerWorldBounds(playerid,20000.0000,-20000.0000,20000.0000,-20000.0000);
	        SetPlayerSpawn(playerid);
		}else{ return SendClientMessage(playerid, COR_GREEN, "Você não está participando de nenhum evento !"); }
		return 1;
	}
	CMD:encerrar(playerid, params[]){
		if(PlayerInfo[playerid][pAdmin] >= 1337){
			if(votacao[iniciada]){
				SendClientMessageToAll(0xFFFFFFAA, "==> Votação encerrada!");
				format(gstring, sizeof gstring, "> %d pessoas responderam sim;", votacao[sim]);
				SendClientMessageToAll(0xFFF000AA,gstring);
				format(gstring, sizeof gstring, "> %d pessoas responderam não;", votacao[nao]);
				SendClientMessageToAll(0xFFF000AA, gstring);
				if(votacao[sim] == votacao[nao]){ SendClientMessageToAll(0xFF0000AA, "==> Houve um empate!"); }
				else if(votacao[sim] > votacao[nao]) { SendClientMessageToAll(0xFF0000AA, "==> A maioria CONCORDA com a pergunta."); }
				else if(votacao[sim] < votacao[nao]){ SendClientMessageToAll(0xFF0000AA, "==> A maioria DISCORDA da pergunta.");}
				votacao[iniciada] = false;
				votacao[sim] = 0;
				votacao[nao] = 0;
				for(new i; i < MAX_PLAYERS; ++i){
					votou[i] = false;
				}
	        } else { SendClientMessage(playerid, 0xFFFFFFAA, "Nenhuma votação criada!"); }
        } else { SendClientMessage(playerid, 0xFFFFFFAA, "Você não tem permissão para usar este comando!"); }
        return 1;
	}
	CMD:online(playerid, params[]){
	    if(PlayerInfo[playerid][pAdmin] < 1337){ return SendClientMessage(playerid, COR_GRAD1, "Você não tem permissão para usar esse comando.");}
	    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341){ return SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)"); }
		format(gstring, sizeof(gstring), "Server: %d Players Online.", ContarJogadores());
		SendClientMessageToAll(COR_LIGHTBLUE, gstring);
		return 1;
 	}
	CMD:limparvaga(playerid, params[]) return Dudu:limparvaga(playerid);
 	CMD:limparvaga(playerid, params[]){
		if(PlayerInfo[playerid][pLider] < 1) { return SendClientMessage(playerid, COR_GRAD2, "Somente líderes podem usar este comando!"); }
	    tmpzcmd = strtok(cmdtext, idxzcmd);
		if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /limparvaga [Vaga]"); }
		new Vaga2 = strval(tmpzcmd);
		new org = GetPlayerOrg(playerid);
		new arquivo[128], id;
		format(arquivo, sizeof(arquivo), "ORG Arquivos/Org%d.cfg",org);
        if(strcmp(tmpzcmd,"sub",true)==0){
   			if(IsPlayerOnline(InfoOrg[org][SubLider])){
  			    id=GetPlayerID(InfoOrg[org][SubLider]);
		  		Demitir(playerid, id);
 			}
		    strmid(InfoOrg[org][SubLider], "Ninguem", 0, strlen("Ninguem"), 255);
		    DOF2_SetString(arquivo,"SubLider","Ninguem");
		    SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga do Sub Líder");
		    return 1;
		}
		if(Vaga2 == 1){
		    id=GetPlayerID(InfoOrg[org][Membro1]);
		    if(IsPlayerOnline(InfoOrg[org][Membro1])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro1], "Ninguem", 0, strlen("Ninguem"), 255);
		   	DOF2_SetString(arquivo,"Membro1","Ninguem");
		   	SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 1");
		   	return 1;
		}
		if(Vaga2 == 2){
		    id=GetPlayerID(InfoOrg[org][Membro2]);
		    if(IsPlayerOnline(InfoOrg[org][Membro2])) Demitir(playerid, id);
  			strmid(InfoOrg[org][Membro2], "Ninguem", 0, strlen("Ninguem"), 255);
 			DOF2_SetString(arquivo,"Membro2","Ninguem");
 			SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 2");
		}
		if(Vaga2 == 3){
		    id=GetPlayerID(InfoOrg[org][Membro3]);
		    if(IsPlayerOnline(InfoOrg[org][Membro3])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro3], "Ninguem", 0, strlen("Ninguem"), 255);
		   	DOF2_SetString(arquivo,"Membro3","Ninguem");
		   	SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 3");
		}
		if(Vaga2 == 4){
		    id=GetPlayerID(InfoOrg[org][Membro4]);
		    if(IsPlayerOnline(InfoOrg[org][Membro4])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro4], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro4","Ninguem");
        	SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 4");
		}
		if(Vaga2 == 5){
		    id=GetPlayerID(InfoOrg[org][Membro5]);
		    if(IsPlayerOnline(InfoOrg[org][Membro5])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro5], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro5","Ninguem");
        	SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 5");
		}
		if(Vaga2 == 6){
		    id=GetPlayerID(InfoOrg[org][Membro6]);
		    if(IsPlayerOnline(InfoOrg[org][Membro6])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro6], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro6","Ninguem");
        	SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 6");
		}
		if(Vaga2 == 7){
		    id=GetPlayerID(InfoOrg[org][Membro7]);
		    if(IsPlayerOnline(InfoOrg[org][Membro7])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro7], "Ninguem", 0, strlen("Ninguem"), 255);
		   	DOF2_SetString(arquivo,"Membro7","Ninguem");
		   	SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 7");
		}
		if(Vaga2 == 8){
		    id=GetPlayerID(InfoOrg[org][Membro8]);
		    if(IsPlayerOnline(InfoOrg[org][Membro8])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro8], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro8","Ninguem");
        	SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 8");
		}
		if(Vaga2 == 9){
		    id=GetPlayerID(InfoOrg[org][Membro9]);
		    if(IsPlayerOnline(InfoOrg[org][Membro9])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro9], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro9","Ninguem");
        	SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 9");
		}
		if(Vaga2 == 10){
		    id=GetPlayerID(InfoOrg[org][Membro10]);
		    if(IsPlayerOnline(InfoOrg[org][Membro10])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro10], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro10","Ninguem");
        	SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 10");
		}
		if(Vaga2 == 11){
		    id=GetPlayerID(InfoOrg[org][Membro11]);
		    if(IsPlayerOnline(InfoOrg[org][Membro11])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro11], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro11","Ninguem");
        	SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 11");
		}
		if(Vaga2 == 12){
		    id=GetPlayerID(InfoOrg[org][Membro12]);
		    if(IsPlayerOnline(InfoOrg[org][Membro12])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro12], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro12","Ninguem");
        	SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 12");
		}
		if(Vaga2 == 13){
		    id=GetPlayerID(InfoOrg[org][Membro13]);
		    if(IsPlayerOnline(InfoOrg[org][Membro13])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro13], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro13","Ninguem");
        	SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 13");
		}
		if(Vaga2 == 14){
		    id=GetPlayerID(InfoOrg[org][Membro14]);
		    if(IsPlayerOnline(InfoOrg[org][Membro14])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro14], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro14","Ninguem");
        	SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 14");
		}
		if(Vaga2 == 15){
		     id=GetPlayerID(InfoOrg[org][Membro15]);
		     if(IsPlayerOnline(InfoOrg[org][Membro15])) Demitir(playerid, id);
		     strmid(InfoOrg[org][Membro15], "Ninguem", 0, strlen("Ninguem"), 255);
        	 DOF2_SetString(arquivo,"Membro15","Ninguem");
        	 SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 15");
        }
        if(Vaga2 == 16){
	          id=GetPlayerID(InfoOrg[org][Membro16]);
	          if(IsPlayerOnline(InfoOrg[org][Membro16])) Demitir(playerid, id);
	          strmid(InfoOrg[org][Membro16], "Ninguem", 0, strlen("Ninguem"), 255);
	   	      DOF2_SetString(arquivo,"Membro16","Ninguem");
	   	      SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 16");
	    }
	    if(Vaga2 == 17){
	          id=GetPlayerID(InfoOrg[org][Membro17]);
	          if(IsPlayerOnline(InfoOrg[org][Membro17])) Demitir(playerid, id);
	          strmid(InfoOrg[org][Membro17], "Ninguem", 0, strlen("Ninguem"), 255);
	  	      DOF2_SetString(arquivo,"Membro17","Ninguem");
	   	      SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 17");
	    }
	    if(Vaga2 == 18){
	          id=GetPlayerID(InfoOrg[org][Membro18]);
	          if(IsPlayerOnline(InfoOrg[org][Membro18])) Demitir(playerid, id);
	          strmid(InfoOrg[org][Membro18], "Ninguem", 0, strlen("Ninguem"), 255);
	   	      DOF2_SetString(arquivo,"Membro18","Ninguem");
	   	      SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 18");
	    }
	    if(Vaga2 == 19){
	         id=GetPlayerID(InfoOrg[org][Membro19]);
	         if(IsPlayerOnline(InfoOrg[org][Membro19])) Demitir(playerid, id);
	         strmid(InfoOrg[org][Membro19], "Ninguem", 0, strlen("Ninguem"), 255);
	   	     DOF2_SetString(arquivo,"Membro19","Ninguem");
	   	     SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 19");
	    }
	    if(Vaga2 == 20){
	          id=GetPlayerID(InfoOrg[org][Membro20]);
	          if(IsPlayerOnline(InfoOrg[org][Membro20])) Demitir(playerid, id);
	          strmid(InfoOrg[org][Membro20], "Ninguem", 0, strlen("Ninguem"), 255);
	   	      DOF2_SetString(arquivo,"Membro20","Ninguem");
	   	      SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 20");
	    }
		format(arquivo, sizeof(arquivo), Pasta_ORGVIP, org);
		if(DOF2_FileExists(arquivo)){
	  	     if(DOF2_GetInt(arquivo, "Tipo") == 1){
	  	         if(Vaga2 == 21){
			          id=GetPlayerID(InfoOrg[org][Membro21]);
			          if(IsPlayerOnline(InfoOrg[org][Membro21])) Demitir(playerid, id);
			          strmid(InfoOrg[org][Membro21], "Ninguem", 0, strlen("Ninguem"), 255);
	        	      DOF2_SetString(arquivo,"Membro21","Ninguem");
	        	      SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 21");
	             }
			     if(Vaga2 == 22){
			          id=GetPlayerID(InfoOrg[org][Membro22]);
			          if(IsPlayerOnline(InfoOrg[org][Membro22])) Demitir(playerid, id);
			          strmid(InfoOrg[org][Membro22], "Ninguem", 0, strlen("Ninguem"), 255);
	        	      DOF2_SetString(arquivo,"Membro22","Ninguem");
	        	      SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 22");
	             }
			     if(Vaga2 == 23){
			          id=GetPlayerID(InfoOrg[org][Membro23]);
			          if(IsPlayerOnline(InfoOrg[org][Membro23])) Demitir(playerid, id);
			          strmid(InfoOrg[org][Membro23], "Ninguem", 0, strlen("Ninguem"), 255);
	        	      DOF2_SetString(arquivo,"Membro23","Ninguem");
	        	      SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 23");
	             }
			     if(Vaga2 == 24){
			         id=GetPlayerID(InfoOrg[org][Membro24]);
			         if(IsPlayerOnline(InfoOrg[org][Membro24])) Demitir(playerid, id);
			         strmid(InfoOrg[org][Membro24], "Ninguem", 0, strlen("Ninguem"), 255);
	        	     DOF2_SetString(arquivo,"Membro24","Ninguem");
	        	     SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 24");
	             }
			     if(Vaga2 == 25){
			          id=GetPlayerID(InfoOrg[org][Membro25]);
			          if(IsPlayerOnline(InfoOrg[org][Membro25])) Demitir(playerid, id);
			          strmid(InfoOrg[org][Membro25], "Ninguem", 0, strlen("Ninguem"), 255);
	        	      DOF2_SetString(arquivo,"Membro25","Ninguem");
	        	      SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 25");
			     }
			     if(Vaga2 == 26){
			          id=GetPlayerID(InfoOrg[org][Membro26]);
			          if(IsPlayerOnline(InfoOrg[org][Membro26])) Demitir(playerid, id);
			          strmid(InfoOrg[org][Membro26], "Ninguem", 0, strlen("Ninguem"), 255);
	        	      DOF2_SetString(arquivo,"Membro26","Ninguem");
	        	      SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 26");
		  	     }
		  	     if(Vaga2 == 27){
			          id=GetPlayerID(InfoOrg[org][Membro27]);
			          if(IsPlayerOnline(InfoOrg[org][Membro27])) Demitir(playerid, id);
			          strmid(InfoOrg[org][Membro27], "Ninguem", 0, strlen("Ninguem"), 255);
	        	      DOF2_SetString(arquivo,"Membro27","Ninguem");
	        	      SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 27");
		  	     }
		  	     if(Vaga2 == 28){
			          id=GetPlayerID(InfoOrg[org][Membro28]);
			          if(IsPlayerOnline(InfoOrg[org][Membro28])) Demitir(playerid, id);
			          strmid(InfoOrg[org][Membro28], "Ninguem", 0, strlen("Ninguem"), 255);
	        	      DOF2_SetString(arquivo,"Membro28","Ninguem");
	        	      SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 28");
		  	     }
     			 if(Vaga2 == 29){
			          id=GetPlayerID(InfoOrg[org][Membro29]);
			          if(IsPlayerOnline(InfoOrg[org][Membro29])) Demitir(playerid, id);
			          strmid(InfoOrg[org][Membro29], "Ninguem", 0, strlen("Ninguem"), 255);
	        	      DOF2_SetString(arquivo,"Membro29","Ninguem");
	        	      SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 29");
		  	     }
		  	     if(Vaga2 == 30){
			          id=GetPlayerID(InfoOrg[org][Membro30]);
			          if(IsPlayerOnline(InfoOrg[org][Membro30])) Demitir(playerid, id);
			          strmid(InfoOrg[org][Membro30], "Ninguem", 0, strlen("Ninguem"), 255);
	        	      DOF2_SetString(arquivo,"Membro30","Ninguem");
	        	      SendClientMessage(playerid, COR_LIGHTBLUE,"Você Limpou a Vaga 30");
		  	     }
	  	     }
		}
		DOF2_SaveFile();
	    return 1;
	}
	CMD:infoorg(playerid, params[]){
		if(IsPlayerConnected(playerid)){
			if(PlayerInfo[playerid][pMembro] > 0 || PlayerInfo[playerid][pLider] > 0){
				new org = GetPlayerOrg(playerid);
				new arquivo[128];
				new InfoMembros[4000];
				InfoMembros[0] = EOS;
				format(gstring,sizeof(gstring),"{FFFFFF}Líder: %s - Cargo: 6, Login [%02d/%02d]\n",InfoOrg[org][Lider], DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
				strcat(InfoMembros,gstring);
				format(gstring,sizeof(gstring),"Sub-Líder: %s - Cargo: 5,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][SubLider], DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
				strcat(InfoMembros,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro1]);
				format(gstring,sizeof(gstring),"Vaga 1: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro1],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
				strcat(InfoMembros,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro1]);
				format(gstring,sizeof(gstring),"Vaga 2: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro2],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
				strcat(InfoMembros,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro3]);
				format(gstring,sizeof(gstring),"Vaga 3: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro3],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
				strcat(InfoMembros,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro4]);
				format(gstring,sizeof(gstring),"Vaga 4: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro4],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
				strcat(InfoMembros,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro5]);
				format(gstring,sizeof(gstring),"Vaga 5: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro5],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
				strcat(InfoMembros,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro6]);
				format(gstring,sizeof(gstring),"Vaga 6: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro6],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
				strcat(InfoMembros,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro7]);
				format(gstring,sizeof(gstring),"Vaga 7: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro7],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
				strcat(InfoMembros,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro8]);
				format(gstring,sizeof(gstring),"Vaga 8: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro8],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
				strcat(InfoMembros,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro9]);
				format(gstring,sizeof(gstring),"Vaga 9: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro9],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
				strcat(InfoMembros,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro10]);
				format(gstring,sizeof(gstring),"Vaga 10: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro10],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
				strcat(InfoMembros,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro11]);
				format(gstring,sizeof(gstring),"Vaga 11: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro11],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
				strcat(InfoMembros,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro12]);
				format(gstring,sizeof(gstring),"Vaga 12: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro12],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
				strcat(InfoMembros,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro13]);
				format(gstring,sizeof(gstring),"Vaga 13: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro13],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
				strcat(InfoMembros,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro14]);
				format(gstring,sizeof(gstring),"Vaga 14: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro14],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
				strcat(InfoMembros,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro15]);
				format(gstring,sizeof(gstring),"Vaga 15: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro15],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
				strcat(InfoMembros,gstring);
				format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro16]);
				format(arquivo, sizeof(arquivo), Pasta_ORGVIP, org);
				if(DOF2_FileExists(arquivo)){
					if(DOF2_GetInt(arquivo, "Tipo") == 1){
						format(gstring,sizeof(gstring),"Vaga 16: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro16],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro17]);
						format(gstring,sizeof(gstring),"Vaga 17: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro17],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro18]);
						format(gstring,sizeof(gstring),"Vaga 18: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro18],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro19]);
						format(gstring,sizeof(gstring),"Vaga 19: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro19],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro20]);
						format(gstring,sizeof(gstring),"Vaga 20: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro20],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
					}
					if(DOF2_GetInt(arquivo, "Tipo") == 2){
						format(gstring,sizeof(gstring),"Vaga 16: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro16],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro17]);
						format(gstring,sizeof(gstring),"Vaga 17: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro17],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro18]);
						format(gstring,sizeof(gstring),"Vaga 18: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro18],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro19]);
						format(gstring,sizeof(gstring),"Vaga 19: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro19],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro20]);
						format(gstring,sizeof(gstring),"Vaga 20: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro20],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro21]);
						format(gstring,sizeof(gstring),"Vaga 21: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro21],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro22]);
						format(gstring,sizeof(gstring),"Vaga 22: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro22],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro23]);
						format(gstring,sizeof(gstring),"Vaga 23: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro23],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro24]);
						format(gstring,sizeof(gstring),"Vaga 24: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro24],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro25]);
						format(gstring,sizeof(gstring),"Vaga 25: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro25],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro26]);
						format(gstring,sizeof(gstring),"Vaga 26: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro26],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro27]);
						format(gstring,sizeof(gstring),"Vaga 27: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro27],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro28]);
						format(gstring,sizeof(gstring),"Vaga 28: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro28],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro29]);
						format(gstring,sizeof(gstring),"Vaga 29: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro29],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro30]);
						format(gstring,sizeof(gstring),"Vaga 30: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro30],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
					}
					if(DOF2_GetInt(arquivo, "Tipo") == 3){
						format(gstring,sizeof(gstring),"Vaga 16: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro16],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro17]);
						format(gstring,sizeof(gstring),"Vaga 17: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro17],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro18]);
						format(gstring,sizeof(gstring),"Vaga 18: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro18],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro19]);
						format(gstring,sizeof(gstring),"Vaga 19: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro19],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro20]);
						format(gstring,sizeof(gstring),"Vaga 20: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro20],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro21]);
						format(gstring,sizeof(gstring),"Vaga 21: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro21],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro22]);
						format(gstring,sizeof(gstring),"Vaga 22: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro22],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro23]);
						format(gstring,sizeof(gstring),"Vaga 23: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro23],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro24]);
						format(gstring,sizeof(gstring),"Vaga 24: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro24],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro25]);
						format(gstring,sizeof(gstring),"Vaga 25: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro25],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro26]);
						format(gstring,sizeof(gstring),"Vaga 26: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro26],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro27]);
						format(gstring,sizeof(gstring),"Vaga 27: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro27],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro28]);
						format(gstring,sizeof(gstring),"Vaga 28: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro28],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro29]);
						format(gstring,sizeof(gstring),"Vaga 29: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro29],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro30]);
						format(gstring,sizeof(gstring),"Vaga 30: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro30],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro31]);
						format(gstring,sizeof(gstring),"Vaga 31: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro31],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro32]);
						format(gstring,sizeof(gstring),"Vaga 32: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro32],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro33]);
						format(gstring,sizeof(gstring),"Vaga 33: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro33],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro34]);
						format(gstring,sizeof(gstring),"Vaga 34: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro34],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro35]);
						format(gstring,sizeof(gstring),"Vaga 35: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro35],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro36]);
						format(gstring,sizeof(gstring),"Vaga 36: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro36],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro37]);
						format(gstring,sizeof(gstring),"Vaga 37: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro37],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro38]);
						format(gstring,sizeof(gstring),"Vaga 38: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro38],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro39]);
						format(gstring,sizeof(gstring),"Vaga 39: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro39],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
						format(arquivo, sizeof(arquivo), Pasta_Contas,InfoOrg[org][Membro40]);
						format(gstring,sizeof(gstring),"Vaga 40: %s - Cargo: %d,{FFFFFF} Login [%02d/%02d]\n",InfoOrg[org][Membro40],DOF2_GetInt(arquivo, "Cargo"), DOF2_GetInt(arquivo,"DiaLogin"),DOF2_GetInt(arquivo,"MesLogin"));
						strcat(InfoMembros,gstring);
					}
				}
				ShowPlayerDialog(playerid, 8799, DIALOG_STYLE_MSGBOX, "{8B8B83}Membros da Organização:", InfoMembros, "Fechar", "");
			}
			else { return SendClientMessage(playerid, COR_GREY," Você não faz parte de uma organização!"); }
		}
		return 1;
	}
	CMD:coordenadas(playerid, params[])){
		if(PlayerInfo[playerid][pAdmin] < 1339) { return 1; }
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X, Y, Z);
		format(gstring,sizeof(gstring),"Coordenadas, X:%f Y:%f Z:%f",X,Y,Z);
		SendClientMessage(playerid,0xFFFFFFAA,gstring);
		return 1;
	}
	CMD:teles(playerid, params[]) return Dudu:teleportes(playerid);
	CMD:teleportes(playerid, params[]){
		if(PlayerInfo[playerid][pAdmin] > 0){ ShowPlayerDialog(playerid,178,DIALOG_STYLE_LIST,"BPL - Teleportes","Geral(Los Santos)\nEmpresas Com Interior\nEmpresas Sem Interior\nHQ Organizações(Los Santos)\nHQ Empregos\nTunnings\nTerritorios\nCativeiros\nLocais Pessoais\nLocais De Roubo\nMuros para Pichar","Aceitar","Cancelar"); }
		return 1;
	}
	CMD:locationmuro(playerid, params[]){
	    if(!gPlayerLogged[playerid])return 1;
		MEGAString[0] = EOS;
		new Float:x, Float:y, Float:z;
        strcat(MEGAString, "{FFFF00}Muro mais próximo\n");
		for(new i; i < MAX_MUROS; i++){
		    GetMuro(playerid,i);
            x = MuroPos[playerid][0];
            y = MuroPos[playerid][1];
            z = MuroPos[playerid][2];
		    format(gstring, sizeof gstring, "Muro de %s\n", GetPoint2DZone(x, y, z));
		    strcat(MEGAString, gstring);
		}
		ShowPlayerDialog(playerid, 4903, DIALOG_STYLE_LIST, "Muros para Pichar", MEGAString, #Localizar, #Voltar);
		return true;
	}
	CMD:locationmuroir(playerid, params[]){
	    if(!gPlayerLogged[playerid])return 1;
		MEGAString[0] = EOS;
		new Float:x, Float:y, Float:z;
        strcat(MEGAString, "{FFFF00}Muro mais próximo\n");
		for(new i; i < MAX_MUROS; i++){
		    GetMuro(playerid,i);
            x = MuroPos[playerid][0];
            y = MuroPos[playerid][1];
            z = MuroPos[playerid][2];
		    format(gstring, sizeof gstring, "Muro de %s\n", GetPoint2DZone(x, y, z));
		    strcat(MEGAString, gstring);
		}
		ShowPlayerDialog(playerid, 4904, DIALOG_STYLE_LIST, "Muros para Pichar", MEGAString, #Localizar, #Voltar);
		return true;
	}
	CMD:criamaleta(playerid, params[]){
		if(PlayerInfo[playerid][pAdmin] < 1339){return 1;}
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X, Y, Z);
		airdrop = CreateDynamicObject(18849, X, Y, Z,   0.00000, 0.00000, 0.00000);
		format(gstring,sizeof(gstring),"Coordenadas, X:%f Y:%f Z:%f",X,Y,Z);
		SendClientMessage(playerid,0xFFFFFFAA,gstring);
		return 1;
	}
	CMD:np(playerid, params[]) return Dudu:numeroprofs(playerid);
	CMD:numeroprofs(playerid, params[]){
		if(IsPlayerConnected(playerid)){
             SendClientMessage(playerid, COR_DBLUE, "Brasil Perfect Life");
			 SendClientMessage(playerid, COR_PM, "*** Polícia Militar - 1");
			 SendClientMessage(playerid, COR_BOPE, "*** BOPE - 2");
			 SendClientMessage(playerid, COR_EXE, "*** Exército - 3");
			 SendClientMessage(playerid, COR_BRANCO, "*** SA:MU - 4");
			 SendClientMessage(playerid, COR_AZTECAS, "*** Los Aztecas - 5");
			 SendClientMessage(playerid, COR_TAL, "*** Taliban - 6");
			 SendClientMessage(playerid, COR_GOV, "*** Governo - 7");
			 SendClientMessage(playerid, COR_HITMAN, "*** Hitmans - 8");
			 SendClientMessage(playerid, COR_REP, "*** Reporteres - 9");
			 SendClientMessage(playerid, COR_TAXI, "*** Taxistas - 10");
			 SendClientMessage(playerid, COR_PCC, "*** Primeiro Comando da Capital - 11");
			 SendClientMessage(playerid, COR_ROTA, "*** Rota - 12");
			 SendClientMessage(playerid, COR_GATE, "*** GATE - 13");
			 SendClientMessage(playerid, COR_MECANICO, "*** Mecanicos - 14");
			 SendClientMessage(playerid, COR_GRO, "*** Groove Street - 15");
			 SendClientMessage(playerid, COR_AL, "*** Al'Qaeda - 16");
			 SendClientMessage(playerid, COR_PC, "*** Policia Civil - 17");
			 SendClientMessage(playerid, COR_BALLAS, "*** Ballas - 18");
			 SendClientMessage(playerid, COR_VAGOS, "*** Los Vagos - 19");
			 SendClientMessage(playerid, COR_YAK, "*** Máfia Yakuza - 20");
			 SendClientMessage(playerid, COR_SONS, "*** Sons - 21");
			 SendClientMessage(playerid, COR_COSA, "*** Máfia CN - 22");
			 SendClientMessage(playerid, COR_CV, "*** Comando Vermelho - 23");
			 SendClientMessage(playerid, COR_MAYANS, "*** Mayans - 24");
			 SendClientMessage(playerid, COR_PF, "*** Policia Federal - 25");
			 SendClientMessage(playerid, COR_ASSASSINS, "*** Assassins - 26");
			 SendClientMessage(playerid, COR_DBLUE,"_______________________________________");
		}
		return 1;
	}
	//----------------------------------{Numero Profissoes}-----------------------------------------------
	CMD:orgs(playerid, params[]) return Dudu:infolideres(playerid);
	CMD:infolideres(playerid, params[])// || CMD:orgs(playerid, params[]){
		if (IsPlayerConnected(playerid)){
			new Celulas[140], str[4000];
			for(new x = 1; x < MAX_ORGS; x++){
				if(strcmp(InfoOrg[x][Lider], "Ninguem(playerid, params[])
				format(Celulas, 140, "{D96A0E}[ %i ]: {12558C}%s {FFFFFF} - Líder: {71A1C8}%s \n", x, getOrgName(x), InfoOrg[x][Lider]);
				else
				format(Celulas, 140, "{D96A0E}[ %i ]: {12558C}%s {FFFFFF} - Líder: {71A1C8}%s {FFFFFF}(%s{FFFFFF}) \n", x, getOrgName(x), InfoOrg[x][Lider], getOnline(InfoOrg[x][Lider]));
				strcat(str, Celulas);
				//SendClientMessage(playerid, -1, Celulas);
				ShowPlayerDialog(playerid, 10303, DIALOG_STYLE_MSGBOX, "Organizações", str, "Fechar", "");
			}
		}
		return true;
	}
	CMD:lideresinfo(playerid, params[]){
		if (IsPlayerConnected(playerid)){
			new Celulas[140], str[4000];
			for(new x = 1; x < MAX_ORGS; x++){
				if(strcmp(InfoOrg[x][Lider], "Ninguem(playerid, params[])
				format(Celulas, 140, "{D96A0E}[ %i ]: {12558C}%s {FFFFFF} - Líder: {71A1C8}%s \n", x, getOrgName(x), InfoOrg[x][Lider]);
				else
				format(Celulas, 140, "{D96A0E}[ %i ]: {12558C}%s {FFFFFF} - Líder: {71A1C8}%s {FFFFFF}Último Login:(%s{FFFFFF}) \n", x, getOrgName(x), InfoOrg[x][Lider], getUltimoLogin(InfoOrg[x][Lider]));
				strcat(str, Celulas);
				//SendClientMessage(playerid, -1, Celulas);
				ShowPlayerDialog(playerid, 10303, DIALOG_STYLE_MSGBOX, "Organizações", str, "Fechar", "");
			}
		}
		return true;
	}
   	CMD:limparlider(playerid, params[]){
		if(PlayerInfo[playerid][pAdmin] < 1339){ return SendClientMessage(playerid, COR_GRAD2, "Somente admins master ou dono podem usar este comando!");}
	    tmpzcmd = strtok(cmdtext, idxzcmd);
		if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /limparlider [organização]");}
		new Vaga2 = strval(tmpzcmd);
		if(Vaga2 < 1 || Vaga2 > 30) { SendClientMessage(playerid, COR_GREY, "Vaga mínima 1 máximo 30!"); return 1; }
		new id=GetPlayerID(InfoOrg[Vaga2][Lider]);
		format(gstring, sizeof(gstring), "ADMIN: %s limpou a vaga %d do líder %s",PlayerName(playerid), Vaga2, InfoOrg[Vaga2][Lider]);
		LideresLog(gstring);
		if(IsPlayerOnline(InfoOrg[Vaga2][Lider])){
             ResetPlayerWeaponsEx(id);
		     SetPlayerArmour(id, 0);
			 DemitirLider(id);
	    }
		strmid(InfoOrg[Vaga2][Lider], "Ninguem", 0, strlen("Ninguem"), 255);
		format(gstring, 128, "ORG Arquivos/Org%d.cfg", Vaga2);
        DOF2_SetString(gstring,"Lider","Ninguem");
        DOF2_SaveFile();
        new jtext[50];
        if(Vaga2 == 1) { jtext = "Polícia Militar"; }
        else if(Vaga2 == 2) { jtext = "BOPE"; }
        else if(Vaga2 == 3) { jtext = "Exército"; }
        else if(Vaga2 == 4) { jtext = "Médicos"; }
        else if(Vaga2 == 5) { jtext = "Los Aztecas"; }
        else if(Vaga2 == 6) { jtext = "Taliban"; }
        else if(Vaga2 == 7) { jtext = "Governo"; }
        else if(Vaga2 == 8) { jtext = "Hitmans"; }
        else if(Vaga2 == 9) { jtext = "Reportéres"; }
        else if(Vaga2 == 10) { jtext = "Taxistas"; }
        else if(Vaga2 == 11) { jtext = "PCC"; }
        else if(Vaga2 == 12) { jtext = "Rota"; }
        else if(Vaga2 == 13) { jtext = "GATE"; }
        else if(Vaga2 == 14) { jtext = "Mecânicos"; }
        else if(Vaga2 == 15) { jtext = "Groove Street"; }
        else if(Vaga2 == 16) { jtext = "Al'qaeda"; }
        else if(Vaga2 == 17) { jtext = "Polícia Civil"; }
        else if(Vaga2 == 18) { jtext = "Ballas"; }
        else if(Vaga2 == 19) { jtext = "Los Vagos"; }
        else if(Vaga2 == 20) { jtext = "Máfia Yakuza"; }
        else if(Vaga2 == 21) { jtext = "Sons Of Anarchy"; }
        else if(Vaga2 == 22) { jtext = "Máfia CN"; }
        else if(Vaga2 == 23) { jtext = "Comando Vermelho"; }
        else if(Vaga2 == 24) { jtext = "Mayans"; }
        else if(Vaga2 == 25) { jtext = "Polícia Federal"; }
        else if(Vaga2 == 26) { jtext = "Assassins"; }
		format(gstring, sizeof(gstring), "Você limpou o líder da organização Nº [%d].",Vaga2);
		SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
		format(gstring, 256, "AdmCmd: %s limpou o lider da organização: %s.", PlayerName(playerid), jtext);
		ABroadCast(COR_LIGHTRED, gstring, 1);
	    return 1;
	}
	CMD:ne(playerid, params[]){
		if(IsPlayerConnected(playerid)){
             SendClientMessage(playerid, COR_DBLUE, "Brasil Perfect Life");
             SendClientMessage(playerid, COR_LIGHTBLUE, "*** Detetive - 1");
             SendClientMessage(playerid, 0xff6347FF, "*** Advogado - 2");
             SendClientMessage(playerid, COR_LIGHTBLUE, "*** Ladrão de Carros - 3");
			 SendClientMessage(playerid, 0xff6347FF, "*** Carteiro - 4");
			 SendClientMessage(playerid, 0xff6347FF, "*** Segurança - 8");
			 SendClientMessage(playerid, COR_LIGHTBLUE, "*** Motorista de Ônibus - 14");
			 SendClientMessage(playerid, 0xff6347FF, "*** Covero - 15");
			 SendClientMessage(playerid, COR_LIGHTBLUE, "*** Caminhoneiro - 16");
			 SendClientMessage(playerid, 0xff6347FF, "*** Fazendeiro - 17");
			 SendClientMessage(playerid, COR_LIGHTBLUE, "*** Mendigo - 18");
			 SendClientMessage(playerid, 0xff6347FF, "*** Lixeiro - 19");
			 SendClientMessage(playerid, COR_LIGHTBLUE, "*** Agente Penitenciário - 20");

			 SendClientMessage(playerid, COR_DBLUE,"_______________________________________");
		}
		return 1;
	}
	CMD:carid(playerid, params[]){
		if(PlayerInfo[playerid][pAdmin] < 1339){return 1;}
		if(IsPlayerInAnyVehicle(playerid)){
		     new vehicle;
		     vehicle = GetPlayerVehicleID(playerid);
		     format(gstring,sizeof(gstring), "Carro ID: %d", vehicle);
		     SendClientMessage(playerid, COR_GREY, gstring);
		}
		return 1;
	}
	CMD:setpos(playerid, params[]){
		new plid,Float:setpos[3];
		tmpzcmd = strtok(cmdtext,idxzcmd);
		if(!strlen(tmpzcmd)) return SendClientMessage(playerid, COR_PM, "USE: /setpos [id] [X] [Y] [Z]");
		plid = strval(tmpzcmd);
		for(new x=0;x<3;x++){
			tmpzcmd = strtok(cmdtext,idxzcmd);
			if(!strlen(tmpzcmd)) return SendClientMessage(playerid, COR_PM, "USE: /setpos [id] [X] [Y] [Z]");
			setpos[x] = floatstr(tmpzcmd);
		}
		SetPlayerPos(plid,setpos[0],setpos[1],setpos[2]);
		SendClientMessage(playerid, COR_PM, "Posição setada!");
		return 1;
	}
	CMD:newgay(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
	        if(PlayerInfo[playerid][pAdmin] < 1339){return 1;}
	        GaysVaga();
	    	if(VagasGays == 0){ return SendClientMessage(playerid, COR_GRAD1, "Não há mais vagas na lista use /cleargay primeiro.");}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)) { return SendClientMessage(playerid, COR_GRAD2, "USE: /newgay [id] [vaga]");}
			new para1;
			new vaga;
			para1 = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /newgay [id] [vaga]");}
			vaga = strval(tmpzcmd);
			if(vaga < 0 || vaga > 20) { SendClientMessage(playerid, COR_GREY, "Vaga mínima 1 máximo 20 !"); return 1; }
			GetPlayerName(para1, giveplayerzcm, sizeof(giveplayerzcm));
			GetPlayerName(playerid, sendername, sizeof(sendername));
		    if(IsPlayerConnected(para1)){
		        if(para1 != INVALID_PLAYER_ID){
					format(gstring, sizeof(gstring), "* Administrador: %s, Tornou você o novo gay do servidor !", PlayerName(playerid));
		     	    SendClientMessage(para1, COR_LIGHTBLUE, gstring);
					format(gstring, sizeof(gstring), "Você tornou %s o novo gay do servidor.", giveplayerzcm);
					SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					for(new i = 0; i < sizeof(GaysInfo); ++i){
                         if(GaysInfo[vaga][GayVaga] == 0){
					          GaysInfo[vaga][gNick] = giveplayerzcm;
					          GaysInfo[vaga][GayVaga] = vaga;
						      SaveGays();
						      break;
						 }
					}
				}
			}
		}
		return 1;
	}
	CMD:cleargay(playerid, params[]){
		if(PlayerInfo[playerid][pAdmin] < 1339) { return 1; }
	    tmpzcmd = strtok(cmdtext, idxzcmd);
		if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /cleargay [vaga]"); }
        new Vagao = strval(tmpzcmd);
        if(Vagao < 1 || Vagao > 17) { SendClientMessage(playerid, COR_GREY, "Vaga mínima 1 máximo 17 !"); return 1; }
        strmid(GaysInfo[Vagao][gNick], "Vazio", 0, strlen("Vazio"), 255);
		GaysInfo[Vagao][GayVaga] = 0;
	    format(gstring, sizeof(gstring), "Você limpou a vaga dos gays Nº [%d]",Vagao);
		SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
		SaveGays();
	    return 1;
	}
	CMD:gays(playerid, params[]){
         if(mudandodp[playerid] == 1){ return SendClientMessage(playerid, COR_GRAD1, "Você está mudando de departamento, não pode utilizar este comando!");}
         MEGAString[0] = EOS;
         format(gstring, sizeof(gstring), "Gayzao = %s\n", GaysInfo[0][gNick]);
         strcat(MEGAString,gstring);
         format(gstring, sizeof(gstring), "Gayzinho = %s\n", GaysInfo[1][gNick]);
         strcat(MEGAString,gstring);
         format(gstring, sizeof(gstring), "Biba = %s\n", GaysInfo[2][gNick]);
         strcat(MEGAString,gstring);
         format(gstring, sizeof(gstring), "Lider = %s\n", GaysInfo[3][gNick]);
         strcat(MEGAString,gstring);
         format(gstring, sizeof(gstring), "Vaga 1 = %s\n", GaysInfo[4][gNick]);
         strcat(MEGAString,gstring);
         format(gstring, sizeof(gstring), "Vaga 2 = %s\n", GaysInfo[5][gNick]);
         strcat(MEGAString,gstring);
         format(gstring, sizeof(gstring), "Vaga 3 = %s\n", GaysInfo[6][gNick]);
         strcat(MEGAString,gstring);
         format(gstring, sizeof(gstring), "Vaga 4 = %s\n", GaysInfo[7][gNick]);
         strcat(MEGAString,gstring);
         format(gstring, sizeof(gstring), "Vaga 5 = %s\n", GaysInfo[8][gNick]);
         strcat(MEGAString,gstring);
         format(gstring, sizeof(gstring), "Vaga 6 = %s\n", GaysInfo[9][gNick]);
         strcat(MEGAString,gstring);
         format(gstring, sizeof(gstring), "Vaga 7 = %s\n", GaysInfo[10][gNick]);
         strcat(MEGAString,gstring);
         format(gstring, sizeof(gstring), "Vaga 8 = %s\n", GaysInfo[11][gNick]);
         strcat(MEGAString,gstring);
         format(gstring, sizeof(gstring), "Vaga 9 = %s\n", GaysInfo[12][gNick]);
         strcat(MEGAString,gstring);
         format(gstring, sizeof(gstring), "Vaga 10 = %s\n", GaysInfo[13][gNick]);
         strcat(MEGAString,gstring);
         format(gstring, sizeof(gstring), "Vaga 11 = %s\n", GaysInfo[14][gNick]);
         strcat(MEGAString,gstring);
         format(gstring, sizeof(gstring), "Vaga 12 = %s\n", GaysInfo[15][gNick]);
         strcat(MEGAString,gstring);
         format(gstring, sizeof(gstring), "Vaga 13 = %s\n", GaysInfo[16][gNick]);
         strcat(MEGAString,gstring);
         format(gstring, sizeof(gstring), "Vaga 14 = %s\n", GaysInfo[17][gNick]);
         strcat(MEGAString,gstring);
         format(gstring, sizeof(gstring), "Vaga 15 = %s\n", GaysInfo[18][gNick]);
         strcat(MEGAString,gstring);
         format(gstring, sizeof(gstring), "Vaga 16 = %s\n", GaysInfo[19][gNick]);
         strcat(MEGAString,gstring);
         ShowPlayerDialog(playerid, DSFUNCAO, DIALOG_STYLE_MSGBOX, "Gays do Servidor", MEGAString, "Ok", "Cancelar");
	}
	CMD:relato(playerid, params[]) return Dudu:relatorio(playerid);
	CMD:relatorio(playerid, params[]){
	    if(IsPlayerConnected(playerid)){ ShowPlayerDialog(playerid, 4547, DIALOG_STYLE_TABLIST_HEADERS, "Solicitar Atendimento", "Prioridade\tDescrição\nPrioridade {FFFF00}BAIXA{FFFFFF}\tAssunto de pouca importância\nPrioridade {FF0000}ALTA{FFFFFF}\tAssunto de MUITA importância\n{FFFF00}Relatório{FFFFFF}\tEnviar um relatório para os admins", "Solicitar", "Fechar"); }
		return 1;
	}
	CMD:daradmin(playerid, params[]){
		if (gPlayerLogged[playerid] == 0) { return SendClientMessage(playerid, COR_GREY, "Você não está logado!"); }
		if (PlayerInfo[playerid][pAdmin] < 1) { return SendClientMessage(playerid, COR_GRAD1, "Você não tem autorização para usar esse comando."); }
		else {
			if (PlayerInfo[playerid][pAdmin] >= 1342){
				tmpzcmd = strtok(cmdtext, idxzcmd);
				if (!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /daradmin [ id ] [Level 0 á 1342]"); }
				VagaAdmins();
	    		if(VagasLivresAdm == 0) { return SendClientMessage(playerid, COR_GRAD1, "Não há mais vagas na lista use /limparadmin primeiro."); }
				new para1;
				new level;
				para1 = ReturnUser(tmpzcmd);
				tmpzcmd = strtok(cmdtext, idxzcmd);
				if (!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /daradmin [id] [Nivel]"); }
				level = strval(tmpzcmd);
				if (level == 0){ return SendClientMessage(playerid, COR_GRAD2, "USE: /limparadmin para limpar uma vaga"); }
				GetPlayerName(para1, giveplayerzcm, sizeof(giveplayerzcm));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if (IsPlayerConnected(para1)){
					if (para1 != INVALID_PLAYER_ID){
						if (PlayerInfo[para1][pAdmin] >= 1342){
							SendClientMessage(playerid, COR_GRAD1, "Você não pode promover um admin Dono/Scripter!");
							format(gstring, sizeof(gstring), "O admin %s tentou te promover a nivel %d", sendername, level);
							SendClientMessage(para1, COR_SONS, gstring);
							return 1;
						}
						if (PlayerInfo[playerid][pAdmin] == 1341){
							if (level < 0 || level > 1339){
								SendClientMessage(playerid, COR_GRAD1, "Você só pode promover até cargo 4 por enquanto");
								return 1;
							}
						}
						format(gstring, sizeof(gstring), " Você foi promovido para level %d de Admin - pelo dono %s.", level, sendername);
						SendClientMessage(para1, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "   Você promoveu o(a) %s para o level %d de Admin.", giveplayerzcm, level);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						getdate(year, month, day);
						gettime(hour, minute, second);
						format(gstring, sizeof(gstring), "%s deu admin nivel %d para %s [%d/%d/%d] ás [%d:%d:%d].", sendername, level, giveplayerzcm, day, month, year, hour, minute, second);
						PAdminsLog(gstring);
						PlayerInfo[para1][pAvaliacoes] += 1;
						PlayerInfo[para1][pAFinal] += 1;
						for (new i = 0; i < sizeof(AdmInfo); i++){
							if (PlayerInfo[para1][pAdmin] > 0){
								PlayerInfo[para1][pAdmin] = level;
								break;
							}else if (AdmInfo[i][AdminVaga] == 0){
								PlayerInfo[para1][pAdmin] = level;
								AdmInfo[i][AdminNick] = giveplayerzcm;
								AdmInfo[i][AdminVaga] = 1;
								SalvarAdmins();
								break;
							}
						}
					}
				}
			}
		}
		return 1;
	}
	CMD:atendimento(playerid, params[]) return Dudu:fila(playerid);
	CMD:fila(playerid, params[]){
		if (PlayerInfo[playerid][pAdmin] < 1){ return SendClientMessage(playerid, COR_GRAD1, "Você não tem autorização para usar esse comando."); }
		new lol = 0;
		MEGAString[0]=EOS;
		new prioridade[20];
		format(gstring, sizeof(gstring), "Jogador\tAssunto\tPrioridade\n");
		strcat(MEGAString, gstring);
		while (lol < MAX_PLAYERS){
            new arquivo[64];
			format(arquivo, sizeof(arquivo), Pasta_Relatorios,lol);
			if(DOF2_FileExists(arquivo)){
			    new NomeFila[MAX_PLAYER_NAME];
			    new AssuntoFila[64];
		        strmid(NomeFila, DOF2_GetString(arquivo,"Jogador"), 0, strlen(DOF2_GetString(arquivo,"Jogador")), 255);
		        strmid(AssuntoFila, DOF2_GetString(arquivo,"Assunto"), 0, strlen(DOF2_GetString(arquivo,"Assunto")), 255);
				DOF2_CreateFile(arquivo);
				DOF2_GetString(arquivo, "Jogador");
				DOF2_GetString(arquivo, "Assunto");
				if(DOF2_GetInt(arquivo, "Prioridade") == 2){
					prioridade = "{FF0000}ALTA";
				}else if(DOF2_GetInt(arquivo, "Prioridade") == 1){
				    prioridade = "{FFFF00}BAIXA";
				}
				format(gstring, sizeof(gstring), "%s[%d]\t%s\t%s\n", NomeFila,lol, AssuntoFila, prioridade);
				strcat(MEGAString, gstring);
			}
			lol++;
		}
		return ShowPlayerDialog(playerid, 5409, DIALOG_STYLE_TABLIST_HEADERS, "{FFFF00}Clique 2x para atender", MEGAString, "Atender","Cancelar");
	}
	CMD:limparadmin(playerid, params[]) return Dudu:limparadm(playerid);
	CMD:limparadm(playerid, params[]){
		if (PlayerInfo[playerid][pAdmin] < 1342){ return SendClientMessage(playerid, COR_GRAD1, "Você não tem autorização para usar esse comando."); }
		new arquivo[128];
		MEGAString[0]=EOS;
		new lol = 1;
		while (lol < sizeof(AdmInfo)){
			if (PlayerInfo[playerid][pAdmin] >= 1342){
				format(arquivo, sizeof(arquivo), Pasta_Contas, AdmInfo[lol][AdminNick]);
				format(gstring, sizeof(gstring), "Vaga %d: %s, Cargo: %d\n", lol, AdmInfo[lol][AdminNick], DOF2_GetInt(arquivo, "AdminLevel"));
				strcat(MEGAString, gstring);
			}else{
				format(arquivo, sizeof(arquivo), Pasta_Contas, AdmInfo[lol][AdminNick]);
				format(gstring, sizeof(gstring), "Vaga %d: %s\n", lol, AdmInfo[lol][AdminNick]);
				strcat(MEGAString, gstring);
			}
			lol++;
		}
		return ShowPlayerDialog(playerid, 5407, DIALOG_STYLE_LIST, "{FFFF00}Clique 2x para Limpar", MEGAString, "Limpar","Sair");
	}
	CMD:infoadmin(playerid, params[]) return Dudu:infoadm(playerid);
	CMD:infoadmins(playerid, params[]) return Dudu:infoadm(playerid);
	CMD:infoadm(playerid, params[]){
		if (PlayerInfo[playerid][pAdmin] < 1340) { return SendClientMessage(playerid, COR_GRAD1, "Você não tem autorização para usar esse comando."); }
		new lol = 0;
		new arquivo[128];
		MEGAString[0]=EOS;
		strcat(MEGAString, "{FFFF00}__[Lista de Admins do Servidor]__\n\n");
		while (lol < sizeof(AdmInfo)){
			if (lol == 0){
				format(gstring, sizeof(gstring), "Scripter : %s\n", AdmInfo[0][AdminNick]);
				strcat(MEGAString, gstring);
			}else{
				if (strcmp(AdmInfo[lol][AdminNick], "Vazio", true) != 0){
					if (PlayerInfo[playerid][pAdmin] >= 1342){
						format(arquivo, sizeof(arquivo), Pasta_Contas, AdmInfo[lol][AdminNick]);
						format(gstring, sizeof(gstring), "Vaga %d: %s, Cargo: %d\n", lol, AdmInfo[lol][AdminNick], DOF2_GetInt(arquivo, "AdminLevel"));
						strcat(MEGAString, gstring);
					}else{
						format(arquivo, sizeof(arquivo), Pasta_Contas, AdmInfo[lol][AdminNick]);
						format(gstring, sizeof(gstring), "Vaga %d: %s, Cargo: %d\n", lol, AdmInfo[lol][AdminNick], DOF2_GetInt(arquivo, "AdminLevel"));
						strcat(MEGAString, gstring);
					}
				}
			}
			lol++;
		}
		return ShowPlayerDialog(playerid, 8724, DIALOG_STYLE_MSGBOX, "{FFFF00}Lista de Administradores", MEGAString, "Informado","");
	}
    CMD:retirarvip(playerid, params[]){
	      if(IsPlayerConnected(playerid)){
		       tmpzcmd = strtok(cmdtext, idxzcmd);
		       if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /retirarvip [id]");}
			   new para1;
			   para1 = ReturnUser(tmpzcmd);
			   tmpzcmd = strtok(cmdtext, idxzcmd);
			   if(PlayerInfo[playerid][pAdmin] >= 1338){
			        if(IsPlayerConnected(para1)){
			             if(para1 != INVALID_PLAYER_ID){
						      GetPlayerName(para1, giveplayerzcm, sizeof(giveplayerzcm));
						      GetPlayerName(playerid, sendername, sizeof(sendername));
						      if(PlayerInfo[playerid][pSocio] == 1){
						           format(gstring, sizeof(gstring), "Você retirou o status de Sócio [Comum] de %s.", giveplayerzcm);
						           SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						           format(gstring, sizeof(gstring), "Seu Status de Sócio [Comum] foi retirado pelo Administrador: %s.", sendername);
						           SendClientMessage(para1, COR_LIGHTBLUE, gstring);
						      }else if(PlayerInfo[playerid][pSocio] == 2){
						           format(gstring, sizeof(gstring), "Você retirou o status de Sócio [Premium] de %s.", giveplayerzcm);
						           SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						           format(gstring, sizeof(gstring), "Seu Status de Sócio [Premium] foi retirado pelo Administrador: %s.", sendername);
						           SendClientMessage(para1, COR_LIGHTBLUE, gstring);
						      }else if(PlayerInfo[playerid][pSocio] == 3){
						           format(gstring, sizeof(gstring), "Você retirou o status de Sócio [Diamante] de %s.", giveplayerzcm);
						           SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						           format(gstring, sizeof(gstring), "Seu Status de Sócio [Diamante] foi retirado pelo Administrador: %s.", sendername);
						           SendClientMessage(para1, COR_LIGHTBLUE, gstring);
						      }else if(PlayerInfo[para1][pVIP] == 1 && PlayerInfo[playerid][pSocio] == 0){
                                   format(gstring, sizeof(gstring), "Você retirou o status de Vip [Comum] de %s.", giveplayerzcm);
						           SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						           format(gstring, sizeof(gstring), "Seu Status de Vip [Comum] foi retirado pelo Administrador: %s.", sendername);
						           SendClientMessage(para1, COR_LIGHTBLUE, gstring);
						      }else if(PlayerInfo[para1][pVIP] == 2 && PlayerInfo[playerid][pSocio] == 0){
                                   format(gstring, sizeof(gstring), "Você retirou o status de Vip [Premium] de %s.", giveplayerzcm);
						           SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						           format(gstring, sizeof(gstring), "Seu Status de Vip [Premium] foi retirado pelo Administrador: %s.", sendername);
						           SendClientMessage(para1, COR_LIGHTBLUE, gstring);
						      }
						 }
						 if(PlayerInfo[para1][pVIP] > 0 && PlayerInfo[playerid][pSocio] == 0){ format(gstring, sizeof(gstring), "* Você retirou o vip level %d de %s (%d/%d/%d - %d:%d)",PlayerInfo[para1][pVIP],giveplayerzcm,day, month, year,hour, minute); }
						 else if(PlayerInfo[para1][pVIP] > 0 && PlayerInfo[playerid][pSocio] > 0) { format(gstring, sizeof(gstring), "* Você retirou o sócio level %d de %s (%d/%d/%d - %d:%d)",PlayerInfo[para1][pVIP],giveplayerzcm,day, month, year,hour, minute); }
                         SendClientMessage(playerid, COR_AMARELO, gstring);
				         PlayerInfo[para1][pVIP] = 0;
				         PlayerInfo[para1][pSocio] = 0;
				         PlayerInfo[para1][pDiaVIP] = 0;
				         VipRetirado(gstring);
					}
			   }
		  }else{ return SendClientMessage(playerid, COR_GRAD1, "   Você não esta autorizado a usar este comando!"); }
		  return 1;
	}
	CMD:mudarluta){
	      if(IsPlayerInRangeOfPoint(playerid, 2.0, 768.0477,-3.8720,1000.7199) || IsPlayerInRangeOfPoint(playerid, 2.0, 775.9683,-58.2766,1000.7184)){
		       TogglePlayerControllable(playerid, 0);
			   ShowPlayerDialog(playerid, 74, DIALOG_STYLE_LIST, "BPL Estilos De Luta", "Cotoveladas\nBoxe\nRua\nKickBoxing\nKarate\nNormal","Confirmar", "Cancelar");
		  }else{ SendClientMessage(playerid, COR_GREY, " Voce não está no ginásio de luta de LS."); }
		  return 1;
	}
	CMD:assaltar){
		if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_AMARELO," Você não pode assaltar agora!");}
	    if(PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] <= 1339){ return SendClientMessage(playerid, COR_GRAD1, "Você é um admin, não pode assaltar !"); }
		if(IsACop(playerid)) { return SendClientMessage(playerid, COR_GREY, "Você não pode usar esse comando!" );}
		if(IsPlayerConnected(playerid)){
 			if(UsouComando[playerid] == 1){ return SendClientMessage(playerid, COR_VERMELHO, "Você já usou esse comando uma vez, espere mais 5 minutos!");}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)) { SendClientMessage(playerid, COR_GRAD2, "USE: /assaltar [id]");}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			if (IsPlayerConnected(giveplayeridzcmd)){
				if(giveplayeridzcmd != INVALID_PLAYER_ID){
					if(PlayerInfo[giveplayeridzcmd][pLevel] == 2){ return SendClientMessage(playerid, COR_GRAD1, "Você não pode assaltar novatos!");}
					if(GetPlayerOrg(giveplayeridzcmd) == GetPlayerOrg(playerid)){ return SendClientMessage(playerid, COR_GRAD1, "Você não pode usar este comando na sua própria org!");}
					if (ProxDetectorS(5.0, playerid, giveplayeridzcmd)){
                        new dinheiro;
			            dinheiro = GetPlayerMoneyEx(giveplayeridzcmd);
				   		GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(gstring, sizeof(gstring), "* Você está assaltando R$[%d] de %s.", dinheiro, giveplayerzcm);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "* %s: Isso é um assalto, Use /aceitar assalto. Não seja ant-rpg.", sendername, dinheiro);
						SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
						SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, "/aceitar assalto para aceitar");
	                    format(gstring, sizeof(gstring), "*%s está assaltando %s!", sendername,giveplayerzcm);
				        ProxDetector(20.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				        OfAssalto[giveplayeridzcmd] = playerid;
						precoassalto[giveplayeridzcmd] = dinheiro;
						SetPlayerCriminal(playerid,255, "Tentativa de Assalto");
				        UsouComando[playerid] = 1;
				        PlayerInfo[playerid][pAssaltante] ++;
						SetTimerEx("UsarNovamente",300000,0,"d",playerid);
					} else { SendClientMessage(playerid, COR_GREY, "Esse jogador não está perto de você!"); }
	    		} else { return SendClientMessage(playerid, COR_GREY, "ID/Nome Invalido !"); }
			}
	    }
		return 1;
	}
	CMD:localizar(playerid, params[]){
		tmpzcmd = strtok(cmdtext, idxzcmd);
		if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_BRANCO, "USE: /localizar [id]");}
		giveplayeridzcmd = ReturnUser(tmpzcmd);
		if(IsPlayerConnected(giveplayeridzcmd)){
			if(giveplayeridzcmd != INVALID_PLAYER_ID){
				new Nome[MAX_PLAYER_NAME];
				giveplayeridzcmd = ReturnUser(tmpzcmd);
				GetPlayerName(giveplayeridzcmd, Nome, sizeof(Nome));
				new location[MAX_ZONE_NAME];
				GetPlayer2DZone(giveplayeridzcmd, location, MAX_ZONE_NAME);
				format(gstring, sizeof(gstring), "%s foi visto pela ultima vez aos arredores de %s", Nome,location);
				SendClientMessage(playerid, COR_AMARELO, gstring);
				return 1;
			}
		}
	}
	CMD:dinamitar(playerid, params[]){
		 if(PlayerInfo[playerid][pDina] > 0){
			  if(!IsACop(playerid)){
                   for(new i = 0; i < MAX_HOUSES; ++i){
                        if(PlayerToPoint(4.0,playerid, 2943.4651,-1782.8444,1178.5303)){
							 if(dinamitoubanco[i] == 1){ return SendClientMessage(playerid, COR_GRAD1, "* Alguém já está dinamitando a porta do banco!");}
                             dinamitoubanco[playerid] = 1;
                             PlayerInfo[playerid][pDina] -= 1;
                             dinamitebanco1 = CreateDynamicObject(1654,2942.8999000,-1782.4000000,1179.5000000,0.0000000,0.0000000,0.0000000); //object(dynamite) (1)
                             dinamitebanco2 = CreateDynamicObject(1654,2944.0000000,-1782.4000000,1179.5000000,0.0000000,0.0000000,0.0000000); //object(dynamite) (2)
                             format(gstring, sizeof(gstring), "[%s] %s[%d] dinamitou a porta e está tentando invadir cofre do banco!",NomeORG(playerid), PlayerName(playerid), playerid);
			                 SendClientMessageToAll(GetPlayerColor(playerid), gstring);
			                 format(gstring, sizeof(gstring), "[%s] colocou dinamites na porta, irá explodir em 10 segundos, afaste-se um pouco.", PlayerName(playerid));
			                 ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
			                 format(gstring, sizeof(gstring), "[ALERTA COPS] %s[%d] DINAMITOU A PORTA E ESTÁ TENTANDO INVADIR O COFRE DO BANCO !", PlayerName, playerid);
		 	                 SendFamilyMessage(1,COR_LIGHTRED,gstring);
			                 SendFamilyMessage(2,COR_LIGHTRED,gstring);
			                 SendFamilyMessage(3,COR_LIGHTRED,gstring);
			                 SendFamilyMessage(11,COR_LIGHTRED,gstring);
			                 SendFamilyMessage(13,COR_LIGHTRED,gstring);
			                 SendFamilyMessage(17,COR_LIGHTRED,gstring);
			                 SendFamilyMessage(25,COR_LIGHTRED,gstring);
			                 SetPlayerCriminal(playerid,255, "Dinamitando Banco");
			                 tempoexplodir[playerid] = SetTimerEx("TempoExplodir", 10000, 0, "i", playerid);
			                 return 1;
			            }
			            if(PlayerToPoint(4.0,playerid, 956.4066,-50.7145,1001.1172)){
							 if(dinamitoumotel[i] == 1){ return SendClientMessage(playerid, COR_GRAD1, "* Alguém já está dinamitando a porta do motel!"); }
                             dinamitoumotel[playerid] = 1;
                             PlayerInfo[playerid][pDina] -= 1;
                             dinamitemotel = CreateDynamicObject(1654, 956, -50.9, 1002.2, 0, 0, 90);
                             format(gstring, sizeof(gstring), "[%s] %s[%d] dinamitou a porta e está tentando invadir cofre do motel!",NomeORG(playerid), PlayerName(playerid), playerid);
			                 SendClientMessageToAll(GetPlayerColor(playerid), gstring);
			                 format(gstring, sizeof(gstring), "[%s] colocou dinamites na porta, irá explodir em 10 segundos, afaste-se um pouco.", PlayerName(playerid));
			                 ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
			                 format(gstring, sizeof(gstring), "[ALERTA COPS] %s[%d] DINAMITOU A PORTA E ESTÁ TENTANDO INVADIR O COFRE DO MOTEL !", PlayerName, playerid);
		 	                 SendFamilyMessage(1,COR_LIGHTRED,gstring);
			                 SendFamilyMessage(2,COR_LIGHTRED,gstring);
			                 SendFamilyMessage(3,COR_LIGHTRED,gstring);
			                 SendFamilyMessage(11,COR_LIGHTRED,gstring);
			                 SendFamilyMessage(13,COR_LIGHTRED,gstring);
			                 SendFamilyMessage(17,COR_LIGHTRED,gstring);
			                 SendFamilyMessage(25,COR_LIGHTRED,gstring);
			                 SetPlayerCriminal(playerid,255, "Dinamitando Motel");
			                 tempoexplodir[playerid] = SetTimerEx("TempoExplodir", 10000, 0, "i", playerid);
			                 return 1;
			            }
			            if(PlayerToPoint(4.0,playerid, -1383, 1494.1, 2)){
							 if(dinamitounavio[i] == 1) { return SendClientMessage(playerid, COR_GRAD1, "* Alguém já está dinamitando o navio!");}
                             dinamitounavio[playerid] = 1;
                             PlayerInfo[playerid][pDina] -= 1;
                             dinamitenavio = CreateDynamicObject(1654, -1382.8, 1494.1, 2.4, 0, 0, 100);
                             format(gstring, sizeof(gstring), "[%s] %s[%d] dinamitou a porta e está tentando invadir cofre do navio!",NomeORG(playerid), PlayerName(playerid), playerid);
			                 SendClientMessageToAll(GetPlayerColor(playerid), gstring);
			                 format(gstring, sizeof(gstring), "[%s] colocou dinamite no navio, irá explodir em 15 segundos. afaste-se bem.", PlayerName(playerid));
			                 ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
			                 format(gstring, sizeof(gstring), "[ALERTA COPS] %s[%d] DINAMITOU A PORTA E ESTÁ TENTANDO INVADIR O COFRE DO NAVIO!", PlayerName, playerid);
		 	                 SendFamilyMessage(1,COR_LIGHTRED,gstring);
			                 SendFamilyMessage(2,COR_LIGHTRED,gstring);
			                 SendFamilyMessage(3,COR_LIGHTRED,gstring);
			                 SendFamilyMessage(11,COR_LIGHTRED,gstring);
			                 SendFamilyMessage(13,COR_LIGHTRED,gstring);
			                 SendFamilyMessage(17,COR_LIGHTRED,gstring);
			                 SendFamilyMessage(25,COR_LIGHTRED,gstring);
			                 SetPlayerCriminal(playerid,255, "Dinamitando A Porta do Navio");
			                 tempoexplodir[playerid] = SetTimerEx("TempoExplodir", 10000, 0, "i", playerid);
			                 return 1;
			            }
        				if(PlayerToPoint(4.0,playerid, 366.7346,188.7061,1008.3828)){
							 if(dinamitoupref[i] == 1){ return SendClientMessage(playerid, COR_GRAD1, "* Alguém já está dinamitando a porta da sala de controle!"); }
                             dinamitoupref[playerid] = 1;
                             PlayerInfo[playerid][pDina] -= 1;
                             dinamitepref1 = CreateDynamicObject(1654,366.60718, 189.41397, 1008.90039,0.0000000,0.0000000,0.0000000); //object(dynamite) (1)
                             format(gstring, sizeof(gstring), "[%s] %s[%d] dinamitou a porta e está tentando invadir a sala de controle da prefeitura!",NomeORG(playerid), PlayerName(playerid), playerid);
			                 SendClientMessageToAll(GetPlayerColor(playerid), gstring);
			                 format(gstring, sizeof(gstring), "[%s] colocou dinamites na porta, irá explodir em 10 segundos, afaste-se um pouco.", PlayerName(playerid));
			                 ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
			                 format(gstring, sizeof(gstring), "[ALERTA COPS] %s[%d] DINAMITOU A PORTA E ESTÁ TENTANDO INVADIR A SALA DE CONTROLE DA PREFEITURA !", PlayerName, playerid);
		 	                 SendFamilyMessage(1,COR_LIGHTRED,gstring);
			                 SendFamilyMessage(2,COR_LIGHTRED,gstring);
			                 SendFamilyMessage(3,COR_LIGHTRED,gstring);
			                 SendFamilyMessage(11,COR_LIGHTRED,gstring);
			                 SendFamilyMessage(13,COR_LIGHTRED,gstring);
			                 SendFamilyMessage(17,COR_LIGHTRED,gstring);
			                 SendFamilyMessage(25,COR_LIGHTRED,gstring);
			                 SetPlayerCriminal(playerid,255, "Dinamitando Sala de Controle");
			                 tempoexplodir[playerid] = SetTimerEx("TempoExplodir", 10000, 0, "i", playerid);
			                 return 1;
			            }
		           }
			  }
		 } else { return SendClientMessage(playerid, COR_GRAD5, "Você não tem uma dinamite, compre uma com um mafioso !"); }
		 return 1;
	}
	CMD:roubar(playerid, params[]){
        new Float:life;
        new Float:colete;
		GetPlayerHealth(playerid,life);
		if(life < 100) return SendClientMessage(playerid,COR_GRAD5,"Você só roubar com a vida cheia!");
		if(IsACop(playerid)) { return SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar este comando !"); }
		if(GetPlayerOrg(playerid) == 7) { return 1; }
		if(GetPlayerOrg(playerid) == 4){ return 1; }
		if(GetTickCount() - TempoRoubar[playerid] < 4000){ return SendClientMessage(playerid, COR_GREY, "Você só pode usar este comando a cada 4 segundos !"); }
		if(roubando[playerid] == 1){ return SendClientMessage(playerid, COR_GRAD5, "Você ja está roubando algum lugar.");}
        if(PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] <= 1339){ return SendClientMessage(playerid, COR_GRAD1, "Você é um admin, não pode roubar !");}
		if(PlayerInfo[playerid][pDina] == 0){ return SendClientMessage(playerid, COR_AMARELO, "Você não possui dinamites,compre com um mafioso !");}
    	TempoRoubar[playerid] = GetTickCount();
		if(PlayerToPoint(1.0,playerid, 2944.0552,-1767.1727,1178.4183)){
	    	if(roubobanco == 1){ return SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma tentativa de roubo nesse cofre.");}
	    	if(temporoubobanco == 1) { return SendClientMessage(playerid,COR_GREY,"Já roubaram o cofre do banco espere 5 minutos para roubar de novo !");}
			GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
			for(new i = 0;  i < MAX_PLAYERS; ++i){
		         if(PlayerInfo[i][pChatRoubo] == 0){
                      format(gstring, sizeof(gstring), "[Roubo %s] {FFFFFF}%s[%d]: Detonou o cofre e está tentando roubar o Banco LS!",NomeORG(playerid), PlayerName, playerid);
                      SendClientMessage(i, GetPlayerColor(playerid), gstring);
			     }
		    }
			SendClientMessage(playerid, COR_GRAD5, "Espere 90 segundos para terminar de roubar o Banco LS.");
			SendClientMessage(playerid, COR_GRAD5, "Para cancelar o roubo digite: /pararroubo.");
			format(gstring, sizeof(gstring), "[ALERTA COPS] %s[%d] DETOUNOU O COFRE E ESTÁ TENTANDO ROUBAR O BANCO(LS) !", PlayerName, playerid);
			SendFamilyMessage(1, COR_DBLUE, gstring);
            SendFamilyMessage(2, COR_DBLUE, gstring);
            SendFamilyMessage(3, COR_DBLUE, gstring);
            SendFamilyMessage(12, COR_DBLUE, gstring);
            SendFamilyMessage(13, COR_DBLUE, gstring);
            SendFamilyMessage(17, COR_DBLUE, gstring);
            SendFamilyMessage(25, COR_DBLUE, gstring);
			SetPlayerCriminal(playerid,255, "Tentativa de roubo ao Banco LS");
			WantedLevel[playerid] += 1;
            roubando[playerid] = 1;
            ProvocoBanco[playerid] = 1;
            roubobanco = 1;
            temporoubobanco = 1;
            SetTimer("Aroubo", 300000, 0);
        	tempobanco = SetTimerEx("RouboBanco", 92000, 0, "i", playerid);
            GetPlayerHealth(playerid,life);
            GetPlayerArmour(playerid,colete);
            new Float:x,Float:y,Float:z;
	    	GetPlayerPos(playerid,x,y,z);
    		PlayerPlaySound(playerid, 1159, x, y, z);
    		CreateExplosion(x,y,z, 12, 10.0);
    		SetPlayerHealth(playerid,life);
            SetPlayerArmour(playerid,colete);
    		PlayerInfo[playerid][pDina] -= 1;
    		TempoContagem[playerid] = SetTimerEx("ContagemRoubo", 1000, 1, "i", playerid);
            Contagem[playerid] = 90;
        	return 1;
  	    }else if(PlayerToPoint(1.0,playerid,-2165.6741,646.4597,1052.3750)){
	    	if(roubolotlv == 1){ return SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma tentativa de roubo nesse cofre.");}
	    	if(temporoubolotlv == 1){ return SendClientMessage(playerid,COR_GREY,"Já roubaram o cofre da Lotérica do Cartório espere 5 minutos para roubar de novo !");}
			GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
			for(new i = 0;  i < MAX_PLAYERS; ++i){
		         if(PlayerInfo[i][pChatRoubo] == 0){
                      format(gstring, sizeof(gstring), "[Roubo %s] {FFFFFF}%s[%d]: Detonou o cofre e está tentando roubar o Cartório!",NomeORG(playerid), PlayerName, playerid);
                      SendClientMessage(i, GetPlayerColor(playerid), gstring);
			     }
		    }
			SendClientMessage(playerid, COR_GRAD5, "Espere 90 segundos para terminar de roubar o Cartório.");
            SendClientMessage(playerid, COR_GRAD5, "Para cancelar o roubo digite: /pararroubo.");
            format(gstring, sizeof(gstring), "[ALERTA COPS] %s[%d] DETOUNOU O COFRE E ESTÁ TENTANDO ROUBAR A CARTÓRIO!", PlayerName, playerid);
			SendFamilyMessage(1, COR_DBLUE, gstring);
            SendFamilyMessage(2, COR_DBLUE, gstring);
            SendFamilyMessage(3, COR_DBLUE, gstring);
            SendFamilyMessage(12, COR_DBLUE, gstring);
            SendFamilyMessage(13, COR_DBLUE, gstring);
            SendFamilyMessage(17, COR_DBLUE, gstring);
            SendFamilyMessage(25, COR_DBLUE, gstring);
			SetPlayerCriminal(playerid,255, "Tentativa de roubo o Cartório");
			WantedLevel[playerid] += 1;
            roubando[playerid] = 1;
            Provocolotlv[playerid] = 1;
            roubolotlv = 1;
            temporoubolotlv = 1;
            SetTimer("Aroubo2", 300000, 0);
        	tempolot = SetTimerEx("Roubolotlv", 92000, 0, "i", playerid);
            GetPlayerHealth(playerid,life);
            GetPlayerArmour(playerid,colete);
            new Float:x,Float:y,Float:z;
	    	GetPlayerPos(playerid,x,y,z);
    		PlayerPlaySound(playerid, 1159, x, y, z);
    		CreateExplosion(x,y,z, 12, 10.0);
    		SetPlayerHealth(playerid,life);
            SetPlayerArmour(playerid,colete);
    		PlayerInfo[playerid][pDina] -= 1;
    		TempoContagem[playerid] = SetTimerEx("ContagemRoubo", 1000, 1, "i", playerid);
            Contagem[playerid] = 90;
        	return 1;
		}else if(PlayerToPoint(1.0,playerid,820.6042,8.3990,1004.1962)){
	    	if(roubolot == 1){ return SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma tentativa de roubo nesse cofre.");}
	    	if(temporoubolot == 1){ return SendClientMessage(playerid,COR_GREY,"Já roubaram o cofre da Lotérica espere 5 minutos para roubar de novo !");}
			GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
			for(new i = 0;  i < MAX_PLAYERS; ++i){
		         if(PlayerInfo[i][pChatRoubo] == 0){
                      format(gstring, sizeof(gstring), "[Roubo %s] {FFFFFF}%s[%d]: Detonou o cofre e está tentando roubar à Lotérica LS!",NomeORG(playerid), PlayerName, playerid);
                      SendClientMessage(i, GetPlayerColor(playerid), gstring);
			     }
		    }
			SendClientMessage(playerid, COR_GRAD5, "Espere 80 segundos para terminar de roubar à Lotérica LS.");
            SendClientMessage(playerid, COR_GRAD5, "Para cancelar o roubo digite: /pararroubo.");
            format(gstring, sizeof(gstring), "[ALERTA COPS] %s[%d] DETOUNOU O COFRE E ESTÁ TENTANDO ROUBAR A LOTERICA(LS) !", PlayerName, playerid);
			SendFamilyMessage(1, COR_DBLUE, gstring);
            SendFamilyMessage(2, COR_DBLUE, gstring);
            SendFamilyMessage(3, COR_DBLUE, gstring);
            SendFamilyMessage(12, COR_DBLUE, gstring);
            SendFamilyMessage(13, COR_DBLUE, gstring);
            SendFamilyMessage(17, COR_DBLUE, gstring);
            SendFamilyMessage(25, COR_DBLUE, gstring);
			SetPlayerCriminal(playerid,255, "Tentativa de roubo a Lotérica LS");
			WantedLevel[playerid] += 1;
            roubando[playerid] = 1;
            ProvocoLot[playerid] = 1;
            roubolot = 1;
            temporoubolot = 1;
            SetTimer("Aroubo3", 300000, 0);
        	tempolot = SetTimerEx("RouboLot", 82000, 0, "i", playerid);
            GetPlayerHealth(playerid,life);
            GetPlayerArmour(playerid,colete);
            new Float:x,Float:y,Float:z;
	    	GetPlayerPos(playerid,x,y,z);
    		PlayerPlaySound(playerid, 1159, x, y, z);
    		CreateExplosion(x,y,z, 12, 10.0);
    		SetPlayerHealth(playerid,life);
            SetPlayerArmour(playerid,colete);
    		PlayerInfo[playerid][pDina] -= 1;
    		TempoContagem[playerid] = SetTimerEx("ContagemRoubo", 1000, 1, "i", playerid);
            Contagem[playerid] = 80;
        	return 1;
		}else if(PlayerToPoint(1.0,playerid,299.8710,-167.5562,999.5938)){
	    	if(rouboloja1 == 1){ return SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma tentativa de roubo nessa loja.");}
	    	if(temporouboloja1 == 1){ return SendClientMessage(playerid,COR_GREY,"Já roubaram a Loja de Armas 1 espere 5 minutos para roubar de novo !");}
			GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
			for(new i = 0;  i < MAX_PLAYERS; ++i){
		         if(PlayerInfo[i][pChatRoubo] == 0){
                      format(gstring, sizeof(gstring), "[Roubo %s] {FFFFFF}%s[%d]: Detonou o cofre e está tentando roubar à Loja de Armas 1!",NomeORG(playerid), PlayerName, playerid);
                      SendClientMessage(i, GetPlayerColor(playerid), gstring);
			     }
		    }
			SendClientMessage(playerid, COR_GRAD5, "Espere 80 segundos para terminar de roubar à Loja de Armas 1.");
            SendClientMessage(playerid, COR_GRAD5, "Para cancelar o roubo digite: /pararroubo.");
            format(gstring, sizeof(gstring), "[ALERTA COPS] %s[%d] DETOUNOU O COFRE E ESTÁ TENTANDO ROUBAR A LOJA DE ARMAS 1 !", PlayerName, playerid);
			SendFamilyMessage(1, COR_DBLUE, gstring);
            SendFamilyMessage(2, COR_DBLUE, gstring);
            SendFamilyMessage(3, COR_DBLUE, gstring);
            SendFamilyMessage(12, COR_DBLUE, gstring);
            SendFamilyMessage(13, COR_DBLUE, gstring);
            SendFamilyMessage(17, COR_DBLUE, gstring);
            SendFamilyMessage(25, COR_DBLUE, gstring);
			SetPlayerCriminal(playerid,255, "Tentativa de roubo à Loja de Armas 1");
			WantedLevel[playerid] += 1;
            roubando[playerid] = 1;
            ProvocoLoja1[playerid] = 1;
            rouboloja1 = 1;
            temporouboloja1 = 1;
            SetTimer("Aroubo4", 300000, 0);
        	tempoloja1 = SetTimerEx("RouboLoja1", 82000, 0, "i", playerid);
            GetPlayerHealth(playerid,life);
            GetPlayerArmour(playerid,colete);
            new Float:x,Float:y,Float:z;
	    	GetPlayerPos(playerid,x,y,z);
    		PlayerPlaySound(playerid, 1159, x, y, z);
    		CreateExplosion(x,y,z, 12, 10.0);
    		SetPlayerHealth(playerid,life);
            SetPlayerArmour(playerid,colete);
    		PlayerInfo[playerid][pDina] -= 1;
    		TempoContagem[playerid] = SetTimerEx("ContagemRoubo", 1000, 1, "i", playerid);
            Contagem[playerid] = 80;
        	return 1;
		}else if(PlayerToPoint(1.0,playerid,302.3287,-56.7235,1001.5156)){
	    	if(rouboloja2 == 1){ return SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma tentativa de roubo nessa loja.");}
	    	if(temporouboloja2 == 1){ return SendClientMessage(playerid,COR_GREY,"Já roubaram a Loja de Armas 2 espere 5 minutos para roubar de novo !");}
			GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
			for(new i = 0;  i < MAX_PLAYERS; ++i){
		         if(PlayerInfo[i][pChatRoubo] == 0){
                      format(gstring, sizeof(gstring), "[Roubo %s] {FFFFFF}%s[%d]: Detonou o cofre e está tentando roubar à Loja de Armas 2!",NomeORG(playerid), PlayerName, playerid);
                      SendClientMessage(i, GetPlayerColor(playerid), gstring);
			     }
		    }
			SendClientMessage(playerid, COR_GRAD5, "Espere 80 segundos para terminar de roubar à Loja de Armas 2.");
			SendClientMessage(playerid, COR_GRAD5, "Para cancelar o roubo digite: /pararroubo.");
			format(gstring, sizeof(gstring), "[ALERTA COPS] %s[%d] DETOUNOU O COFRE E ESTÁ TENTANDO ROUBAR A LOJA DE ARMAS 2 !", PlayerName, playerid);
			SendFamilyMessage(1, COR_DBLUE, gstring);
            SendFamilyMessage(2, COR_DBLUE, gstring);
            SendFamilyMessage(3, COR_DBLUE, gstring);
            SendFamilyMessage(12, COR_DBLUE, gstring);
            SendFamilyMessage(13, COR_DBLUE, gstring);
            SendFamilyMessage(17, COR_DBLUE, gstring);
            SendFamilyMessage(25, COR_DBLUE, gstring);
			SetPlayerCriminal(playerid,255, "Tentativa de roubo a Loja de Armas 2");
			WantedLevel[playerid] += 1;
            roubando[playerid] = 1;
            ProvocoLoja2[playerid] = 1;
            rouboloja2 = 1;
            temporouboloja2 = 1;
            SetTimer("Aroubo5", 300000, 0);
        	tempoloja2 = SetTimerEx("RouboLoja2", 82000, 0, "i", playerid);
            GetPlayerHealth(playerid,life);
            GetPlayerArmour(playerid,colete);
            new Float:x,Float:y,Float:z;
	    	GetPlayerPos(playerid,x,y,z);
    		PlayerPlaySound(playerid, 1159, x, y, z);
    		CreateExplosion(x,y,z, 12, 10.0);
    		SetPlayerHealth(playerid,life);
            SetPlayerArmour(playerid,colete);
    		PlayerInfo[playerid][pDina] -= 1;
    		TempoContagem[playerid] = SetTimerEx("ContagemRoubo", 1000, 1, "i", playerid);
            Contagem[playerid] = 80;
        	return 1;
        }else if(PlayerToPoint(1.0,playerid,315.2403,-142.8706,1004.0625)){
	    	if(rouboloja3 == 1){ return SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma tentativa de roubo nessa loja.");}
	    	if(temporouboloja3 == 1){ return SendClientMessage(playerid,COR_GREY,"Já roubaram a Loja de Armas 3 espere 5 minutos para roubar de novo !");}
			GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
			for(new i = 0;  i < MAX_PLAYERS; ++i){
		         if(PlayerInfo[i][pChatRoubo] == 0){
                      format(gstring, sizeof(gstring), "[Roubo %s] {FFFFFF}%s[%d]: Está tentando roubar o cofre da Loja de Armas 3!",NomeORG(playerid), PlayerName, playerid);
                      SendClientMessage(i, GetPlayerColor(playerid), gstring);
			     }
		    }
			SendClientMessage(playerid, COR_GRAD5, "Espere 90 segundos para terminar de roubar à Loja de Armas 3.");
			SendClientMessage(playerid, COR_GRAD5, "Para cancelar o roubo digite: /pararroubo.");
			format(gstring, sizeof(gstring), "[ALERTA COPS] %s[%d] DETOUNOU O COFRE E ESTÁ TENTANDO ROUBAR A LOJA DE ARMAS 3 !", PlayerName, playerid);
			SendFamilyMessage(1, COR_DBLUE, gstring);
            SendFamilyMessage(2, COR_DBLUE, gstring);
            SendFamilyMessage(3, COR_DBLUE, gstring);
            SendFamilyMessage(12, COR_DBLUE, gstring);
            SendFamilyMessage(13, COR_DBLUE, gstring);
            SendFamilyMessage(17, COR_DBLUE, gstring);
            SendFamilyMessage(25, COR_DBLUE, gstring);
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo a Loja de Armas 3");
			WantedLevel[playerid] += 1;
            roubando[playerid] = 1;
            ProvocoLoja3[playerid] = 1;
            rouboloja3 = 1;
            temporouboloja3 = 1;
            SetTimer("Aroubo6", 300000, 0);
        	tempoloja3 = SetTimerEx("RouboLoja3", 92000, 0, "i", playerid);
            GetPlayerHealth(playerid,life);
            GetPlayerArmour(playerid,colete);
            new Float:x,Float:y,Float:z;
	    	GetPlayerPos(playerid,x,y,z);
    		PlayerPlaySound(playerid, 1159, x, y, z);
    		CreateExplosion(x,y,z, 12, 10.0);
    		SetPlayerHealth(playerid,life);
            SetPlayerArmour(playerid,colete);
    		PlayerInfo[playerid][pDina] -= 1;
    		TempoContagem[playerid] = SetTimerEx("ContagemRoubo", 1000, 1, "i", playerid);
            Contagem[playerid] = 90;
        	return 1;
		}else if(PlayerToPoint(1.0,playerid,1221.8284,4.9689,1000.9219)){
			if(rouboput == 1){ return SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma tentativa de roubo no Puteiro.");}
	    	if(temporouboput == 1){ return SendClientMessage(playerid,COR_GREY,"Já roubaram o Puteiro espere 5 minutos para roubar de novo !");}
			GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
			for(new i = 0;  i < MAX_PLAYERS; ++i){
		         if(PlayerInfo[i][pChatRoubo] == 0){
                      format(gstring, sizeof(gstring), "[Roubo %s] {FFFFFF}%s[%d]: Detonou o cofre e está tentando roubar o Puteiro!",NomeORG(playerid), PlayerName, playerid);
                      SendClientMessage(i, GetPlayerColor(playerid), gstring);
			     }
		    }
			SendClientMessage(playerid, COR_GRAD5, "Espere 80 segundos para terminar de roubar o Puteiro.");
			SendClientMessage(playerid, COR_GRAD5, "Para cancelar o roubo digite: /pararroubo.");
			format(gstring, sizeof(gstring), "[ALERTA COPS] %s[%d] DETOUNOU O COFRE E ESTÁ TENTANDO ROUBAR O PUTEIRO !", PlayerName, playerid);
			SendFamilyMessage(1, COR_DBLUE, gstring);
            SendFamilyMessage(2, COR_DBLUE, gstring);
            SendFamilyMessage(3, COR_DBLUE, gstring);
            SendFamilyMessage(12, COR_DBLUE, gstring);
            SendFamilyMessage(13, COR_DBLUE, gstring);
            SendFamilyMessage(17, COR_DBLUE, gstring);
            SendFamilyMessage(25, COR_DBLUE, gstring);
			SetPlayerCriminal(playerid,255, "Tentativa de roubo ao Puteiro");
			WantedLevel[playerid] += 1;
			roubando[playerid] = 1;
            ProvocoPut[playerid] = 1;
            rouboput = 1;
            temporouboput = 1;
            SetTimer("Aroubo7", 300000, 0);
        	tempoput = SetTimerEx("RouboPut", 82000, 0, "i", playerid);
            GetPlayerHealth(playerid,life);
            GetPlayerArmour(playerid,colete);
            new Float:x,Float:y,Float:z;
	    	GetPlayerPos(playerid,x,y,z);
    		PlayerPlaySound(playerid, 1159, x, y, z);
    		CreateExplosion(x,y,z, 12, 10.0);
    		SetPlayerHealth(playerid,life);
            SetPlayerArmour(playerid,colete);
    		PlayerInfo[playerid][pDina] -= 1;
    		TempoContagem[playerid] = SetTimerEx("ContagemRoubo", 1000, 1, "i", playerid);
            Contagem[playerid] = 80;
        	return 1;
        }else if(PlayerToPoint(1.0,playerid,947.7288,-41.0354,1001.1166)){
	    	if(roubomotel == 1){ return SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma tentativa de roubo no Motel."); }
	    	if(temporoubomotel == 1) { return SendClientMessage(playerid,COR_GREY,"Já roubaram o Motel espere 5 minutos para roubar de novo !");}
			GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
			for(new i = 0;  i < MAX_PLAYERS; ++i){
		         if(PlayerInfo[i][pChatRoubo] == 0){
                      format(gstring, sizeof(gstring), "[Roubo %s] {FFFFFF}%s[%d]: Detonou o cofre e está tentando roubar o Motel!",NomeORG(playerid), PlayerName, playerid);
                      SendClientMessage(i, GetPlayerColor(playerid), gstring);
			     }
		    }
			SendClientMessage(playerid, COR_GRAD5, "Espere 80 segundos para terminar de roubar o Motel.");
			SendClientMessage(playerid, COR_GRAD5, "Para cancelar o roubo digite: /pararroubo.");
			format(gstring, sizeof(gstring), "[ALERTA COPS] %s[%d] DETOUNOU O COFRE E ESTÁ TENTANDO ROUBAR O MOTEL !", PlayerName, playerid);
			SendFamilyMessage(1, COR_DBLUE, gstring);
            SendFamilyMessage(2, COR_DBLUE, gstring);
            SendFamilyMessage(3, COR_DBLUE, gstring);
            SendFamilyMessage(12, COR_DBLUE, gstring);
            SendFamilyMessage(13, COR_DBLUE, gstring);
            SendFamilyMessage(17, COR_DBLUE, gstring);
            SendFamilyMessage(25, COR_DBLUE, gstring);
			SetPlayerCriminal(playerid,255, "Tentativa de roubo ao Motel");
			WantedLevel[playerid] += 1;
			roubando[playerid] = 1;
            ProvocoMotel[playerid] = 1;
            temporoubomotel = 1;
            SetTimer("Aroubo9", 300000, 0);
        	tempoput = SetTimerEx("RouboMotel", 82000, 0, "i", playerid);
            GetPlayerHealth(playerid,life);
            GetPlayerArmour(playerid,colete);
            new Float:x,Float:y,Float:z;
	    	GetPlayerPos(playerid,x,y,z);
    		PlayerPlaySound(playerid, 1159, x, y, z);
    		CreateExplosion(x,y,z, 12, 10.0);
    		SetPlayerHealth(playerid,life);
            SetPlayerArmour(playerid,colete);
    		PlayerInfo[playerid][pDina] -= 1;
    		TempoContagem[playerid] = SetTimerEx("ContagemRoubo", 1000, 1, "i", playerid);
            Contagem[playerid] = 80;
        	return 1;
        }else if(PlayerToPoint(1.0,playerid, -2170.5261,-7721.6426,54.0646)){
	    	if(rouboilha == 1){return SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma tentativa de roubo nesse cofre.");}
	    	if(temporouboilha == 1){ return SendClientMessage(playerid,COR_GREY,"Já roubaram o cofre da Ilha Pirata espere 5 minutos para roubar de novo !");}
			GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
			for(new i = 0;  i < MAX_PLAYERS; ++i){
		         if(PlayerInfo[i][pChatRoubo] == 0){
                      format(gstring, sizeof(gstring), "[Roubo %s] {FFFFFF}%s[%d]: Detonou o cofre e está tentando roubar a Ilha Pirata!",NomeORG(playerid), PlayerName, playerid);
                      SendClientMessage(i, GetPlayerColor(playerid), gstring);
			     }
		    }
			SendClientMessage(playerid, COR_GRAD5, "Espere 150 segundos para terminar de roubar a Ilha Pirata.");
			SendClientMessage(playerid, COR_GRAD5, "Para cancelar o roubo digite: /pararroubo.");
			format(gstring, sizeof(gstring), "[ALERTA COPS] %s[%d] DETOUNOU O COFRE E ESTÁ TENTANDO ROUBAR A ILHA PIRATA !", PlayerName, playerid);
			SendFamilyMessage(1, COR_DBLUE, gstring);
            SendFamilyMessage(2, COR_DBLUE, gstring);
            SendFamilyMessage(3, COR_DBLUE, gstring);
            SendFamilyMessage(12, COR_DBLUE, gstring);
            SendFamilyMessage(13, COR_DBLUE, gstring);
            SendFamilyMessage(17, COR_DBLUE, gstring);
            SendFamilyMessage(25, COR_DBLUE, gstring);
			SetPlayerCriminal(playerid,255, "Tentativa de roubo a Ilha Pirata");
			WantedLevel[playerid] += 1;
            roubando[playerid] = 1;
            Provocoilha[playerid] = 1;
            rouboilha = 1;
            temporouboilha = 1;
            SetTimer("Aroubo13", 300000, 0);
        	tempobanco = SetTimerEx("RouboIlhaPirata", 152000, 0, "i", playerid);
            GetPlayerHealth(playerid,life);
            GetPlayerArmour(playerid,colete);
            new Float:x,Float:y,Float:z;
	    	GetPlayerPos(playerid,x,y,z);
    		PlayerPlaySound(playerid, 1159, x, y, z);
    		CreateExplosion(x,y,z, 12, 10.0);
    		SetPlayerHealth(playerid,life);
            SetPlayerArmour(playerid,colete);
    		PlayerInfo[playerid][pDina] -= 1;
    		TempoContagem[playerid] = SetTimerEx("ContagemRoubo", 1000, 1, "i", playerid);
            Contagem[playerid] = 250;
        	return 1;
  	    }else if(PlayerToPoint(1.0,playerid, -1434.8153,1479.9121,1.8672)){
	    	if(roubonavio == 1){ return SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma tentativa de roubo nesse cofre.");}
	    	if(temporoubonavio == 1){ return SendClientMessage(playerid,COR_GREY,"Já roubaram o cofre do navio espere 5 minutos para roubar de novo !");}
			GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
			for(new i = 0;  i < MAX_PLAYERS; ++i){
		         if(PlayerInfo[i][pChatRoubo] == 0){
                      format(gstring, sizeof(gstring), "[Roubo %s] {FFFFFF}%s[%d]: Detonou o cofre e está tentando roubar o navio!",NomeORG(playerid), PlayerName, playerid);
                      SendClientMessage(i, GetPlayerColor(playerid), gstring);
			     }
		    }
			SendClientMessage(playerid, COR_GRAD5, "Espere 150 segundos para terminar de roubar o navio.");
			SendClientMessage(playerid, COR_GRAD5, "Para cancelar o roubo digite: /pararroubo.");
			format(gstring, sizeof(gstring), "[ALERTA COPS] %s[%d] DETOUNOU O COFRE E ESTÁ TENTANDO ROUBAR O NAVIO !", PlayerName, playerid);
			SendFamilyMessage(1, COR_DBLUE, gstring);
            SendFamilyMessage(2, COR_DBLUE, gstring);
            SendFamilyMessage(3, COR_DBLUE, gstring);
            SendFamilyMessage(12, COR_DBLUE, gstring);
            SendFamilyMessage(13, COR_DBLUE, gstring);
            SendFamilyMessage(17, COR_DBLUE, gstring);
            SendFamilyMessage(25, COR_DBLUE, gstring);
			SetPlayerCriminal(playerid,255, "Tentativa de roubo o navio");
			WantedLevel[playerid] += 1;
            roubando[playerid] = 1;
            Provoconavio[playerid] = 1;
            roubonavio = 1;
            temporoubonavio = 1;
            SetTimer("Aroubo14", 300000, 0);
        	tempobanco = SetTimerEx("RouboNavio", 152000, 0, "i", playerid);
            GetPlayerHealth(playerid,life);
            GetPlayerArmour(playerid,colete);
            new Float:x,Float:y,Float:z;
	    	GetPlayerPos(playerid,x,y,z);
    		PlayerPlaySound(playerid, 1159, x, y, z);
    		CreateExplosion(x,y,z, 12, 10.0);
    		SetPlayerHealth(playerid,life);
            SetPlayerArmour(playerid,colete);
    		PlayerInfo[playerid][pDina] -= 1;
    		TempoContagem[playerid] = SetTimerEx("ContagemRoubo", 1000, 1, "i", playerid);
            Contagem[playerid] = 150;
        	return 1;
  	    }else if(PlayerToPoint(1.0,playerid, 1097.4486,-1829.7538,16.5938) || PlayerToPoint(1.0,playerid, 1765.9156,-1178.8853,23.8320) || PlayerToPoint(1.0,playerid, 998.5599,-910.8926,42.3281)){
			if(roubocaixa == 1){ return SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma tentativa de roubo a caixa eletrônico."); }
			if(temporoubocaixa == 1) { return SendClientMessage(playerid,COR_GREY,"Roubaram um caixa eletrônico agora, espere 10 minutos para roubar novamente !"); }
			GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
			for(new i = 0;  i < MAX_PLAYERS; ++i){
				 if(PlayerInfo[i][pChatRoubo] == 0){
					format(gstring, sizeof(gstring), "[Roubo Caixa Eletrônico]%s[%d]: Está tentando roubar um caixa eletrônico!!", PlayerName, playerid);
					SendClientMessage(i, GetPlayerColor(playerid), gstring);
				 }
			}
			SendClientMessage(playerid, COR_GRAD5, "Espere 50 segundos para terminar de roubar o caixa eletrônico, para cancelar o roubo, digite: /pararroubo.");
			format(gstring, sizeof(gstring), "[ALERTA COPS] %s[%d] ESTÁ TENTANDO ROUBAR UM CAIXA ELETRÔNICO !", PlayerName, playerid);
			SendFamilyMessage(1, COR_DBLUE, gstring);
			SendFamilyMessage(2, COR_DBLUE, gstring);
			SendFamilyMessage(3, COR_DBLUE, gstring);
			SendFamilyMessage(12, COR_DBLUE, gstring);
			SendFamilyMessage(13, COR_DBLUE, gstring);
			SendFamilyMessage(17, COR_DBLUE, gstring);
			SendFamilyMessage(25, COR_DBLUE, gstring);
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo Caixa Eletrônico");
			WantedLevel[playerid] += 1;
			roubando[playerid] = 1;
			Provococaixa[playerid] = 1;
			roubocaixa = 1;
			temporoubocaixa = 1;
			SetTimer("Aroubo15",600000, 0);
			tempobanco = SetTimerEx("RouboCaixa", 62000, 0, "i", playerid);
			PlayerInfo[playerid][pDina] -= 1;
			TempoContagem[playerid] = SetTimerEx("ContagemRoubo", 1000, 1, "i", playerid);
			Contagem[playerid] = 60;
			return 1;
		}else{ return SendClientMessage(playerid, COR_GREY, "Você não está em um local de roubo !");}
	}
 	CMD:invadir(playerid, params[]){
		if(IsACop(playerid)){ return SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar este comando !"); }
		if(GetPlayerOrg(playerid) == 7){ return 1;}
		if(GetPlayerOrg(playerid) == 4){return 1;}
    	if(tempoinvasaosistema == 1){ return SendClientMessage(playerid,COR_GREY,"Espere 5 minutos para invadir o sistema !");}
    	if(invasaopenitenciaria == 1){ return SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma tentativa de invasão a penitenciária!"); }
		if(PlayerInfo[playerid][pDecod] == 0) { return SendClientMessage(playerid, COR_AMARELO, "Você precisa possuir 1 decodificador, compre com um mercenário !"); }
  		new Horas;
        gettime(Horas);
		if(Horas == 1 || Hora == 2 || Hora == 3 || Hora == 4 || Hora == 5
	 	|| Hora == 6 || Hora == 7 || Hora == 8 || Hora == 9 || Hora == 10){return SendClientMessage(playerid,-1,"O sistema da penitenciária não pode ser invadido entre 1 e 10 horas da manhã.");}
		if(PlayerToPoint(1.0,playerid, 355.5270,212.1389,1008.3828)){
			GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
			for(new i = 0;  i < MAX_PLAYERS; ++i){
		         if(PlayerInfo[i][pChatRoubo] == 0){
                      format(gstring, sizeof(gstring), "[Invasão Sistemas] %s %s[%d]: Está tentando invadir o sistema da penitenciária, dentro da prefeitura!",NomeORG(playerid), PlayerName, playerid);
                      SendClientMessage(i, GetPlayerColor(playerid), gstring);
			     }
		    }
			SendClientMessage(playerid, -1, "Espere 160 segundos para terminar de invadir o sistema da penitenciária, para cancelar a invasão, digite: /pararinvasao.");
			format(gstring, sizeof(gstring), "[ALERTA COPS] %s[%d] Está tentando invadir o sistema da penitenciária na prefeitura ls !", PlayerName, playerid);
			SendFamilyMessage(1, COR_DBLUE, gstring);
            SendFamilyMessage(2, COR_DBLUE, gstring);
            SendFamilyMessage(3, COR_DBLUE, gstring);
            SendFamilyMessage(12, COR_DBLUE, gstring);
            SendFamilyMessage(13, COR_DBLUE, gstring);
            SendFamilyMessage(17, COR_DBLUE, gstring);
            SendFamilyMessage(25, COR_DBLUE, gstring);
			SetPlayerCriminal(playerid,255, "Invasão Sistema Penitenciária");
			SetPlayerAttachedObject(playerid,4,3026,1,-0.1,-0.0,0.0,0.0,0.0,0.0);
			WantedLevel[playerid] += 2;
			PlayerInfo[playerid][pDecod] -= 1;
            ProvocoInvasao[playerid] = 1;
			invasaopenitenciaria = 1;
            tempoinvasaosistema = 1;
            SetTimer("Ainvasao", 2000, 0);
        	tempoinvasao = SetTimerEx("InvasaoPenitenciaria", 160000, 0, "i", playerid); //160000
    		TempoContagem[playerid] = SetTimerEx("ContagemInvasaoo", 1000, 1, "i", playerid);
            Contagem[playerid] = 160;
        	return 1;
  	    }
  	    return 1;
	}
	//----------------------------------Animes------------------------//
	CMD:animlist(playerid, params[]){
		 SendClientMessage(playerid, COR_AMARELO, "Animações BPL");
		 SendClientMessage(playerid, COR_AL, "/handsup /drunk /bomb /getarrested /animcopa /animdance /animcolt");
		 SendClientMessage(playerid, COR_AL, "/crossarms /deitar /hide /vomitar /comer /wave /animcrack /robman /dormir");
		 SendClientMessage(playerid, COR_AL, "/deal /crack /sentar /fumar /mijar /chat /dance /punheta /animfood /creu");
		 SendClientMessage(playerid, COR_AL, "/relaxar /strip /gang /angry");
		 SendClientMessage(playerid,COR_AMARELO,"|__________________________________________________________|");
		 return 1;
	}
	CMD:animcopa(playerid, params[]) {
		tmpzcmd = strtok(cmdtext, idxzcmd);
		if(!strlen(tmpzcmd)) {
			SendClientMessage(playerid,0xFF0000FF,">Digite /animcopa [1-12]");
			return 1;
		}
		animationplayed = strval(tmpzcmd);
		if(animationplayed < 1 || animationplayed > 12) {
			SendClientMessage(playerid,0xFF0000FF,">Digite /animcopa[1-12]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_in",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_loop",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_nod",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_out",4.1,0,1,1,1,1);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_shake",4.1,0,1,1,1,1);
		} else if(animationplayed == 6) {
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_in",4.1,0,1,1,1,1);
		} else if(animationplayed == 7) {
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_loop",4.1,0,1,1,1,1);
		} else if(animationplayed == 8) {
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_nod",4.1,0,1,1,1,1);
		} else if(animationplayed == 9) {
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_out",4.1,0,1,1,1,1);
		} else if(animationplayed == 10) {
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_shake",4.1,0,1,1,1,1);
		} else if(animationplayed == 11) {
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_think",4.1,0,1,1,1,1);
		} else if(animationplayed == 12) {
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,1,1,1,1);
		}
		ComAnim[playerid] = true;
		return 1;
	}
	CMD:strip(playerid, params[]) {
		tmpzcmd = strtok(cmdtext, idxzcmd);
		if(!strlen(tmpzcmd)) {
			SendClientMessage(playerid,0xFF0000FF,"USAGE: /strip [estilos 1-7]");
			return 1;
		}
		animationplayed = strval(tmpzcmd);
		if(animationplayed < 1 || animationplayed > 7) {
			SendClientMessage(playerid,0xFF0000FF,"USAGE: /strip [estilos 1-7]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"STRIP","strip_A",4.0,1,1,1,1,0);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"STRIP","strip_B",4.0,1,1,1,1,0);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"STRIP","strip_C",4.0,1,1,1,1,0);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"STRIP","strip_D",4.0,1,1,1,1,0);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"STRIP","strip_E",4.0,1,1,1,1,0);
		} else if(animationplayed == 6) {
			ApplyAnimation(playerid,"STRIP","strip_F",4.0,1,1,1,1,0);
		} else if(animationplayed == 7) {
			ApplyAnimation(playerid,"STRIP","strip_G",4.0,1,1,1,1,0);
		}
		ComAnim[playerid] = true;
		return 1;
	}
	CMD:gang(playerid, params[]) {
		tmpzcmd = strtok(cmdtext, idxzcmd);
		if(!strlen(tmpzcmd)) {
			SendClientMessage(playerid,0xFF0000FF,"USAGE: /gang [estilos 1-7]");
			return 1;
		}
		animationplayed = strval(tmpzcmd);
		if(animationplayed < 1 || animationplayed > 7) {
			SendClientMessage(playerid,0xFF0000FF,"USAGE: /gang [estilos 1-7]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"GANGS","hndshkaa",4.0,0,0,0,0,0);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"GANGS","hndshkba",4.0,0,0,0,0,0);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"GANGS","hndshkca",4.0,0,0,0,0,0);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"GANGS","hndshkcb",4.0,0,0,0,0,0);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"GANGS","hndshkda",4.0,0,0,0,0,0);
		} else if(animationplayed == 6) {
			ApplyAnimation(playerid,"GANGS","hndshkea",4.0,0,0,0,0,0);
		} else if(animationplayed == 7) {
			ApplyAnimation(playerid,"GANGS","hndshkfa",4.0,0,0,0,0,0);
		}
		ComAnim[playerid] = true;
		return 1;
	}
	CMD:animdance(playerid, params[]) {
		tmpzcmd = strtok(cmdtext, idxzcmd);
		if(!strlen(tmpzcmd)) {
			SendClientMessage(playerid,0xFF0000FF,">Digite /animdance [1-13]");
			return 1;
		}
		animationplayed = strval(tmpzcmd);
		if(animationplayed < 1 || animationplayed > 13) {
			SendClientMessage(playerid,0xFF0000FF,">Digite /animdance [1-13]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"DANCING","bd_clap",4.1,0,1,1,1,1);
		} else if(animationplayed == 2) {
			ApplyAnimation(playerid,"DANCING","bd_clap1",4.1,0,1,1,1,1);
		} else if(animationplayed == 3) {
			ApplyAnimation(playerid,"DANCING","dance_loop",4.1,0,1,1,1,1);
		} else if(animationplayed == 4) {
			ApplyAnimation(playerid,"DANCING","DAN_Down_A",4.1,0,1,1,1,1);
		} else if(animationplayed == 5) {
			ApplyAnimation(playerid,"DANCING","DAN_Left_A",4.1,0,1,1,1,1);
		} else if(animationplayed == 6) {
			ApplyAnimation(playerid,"DANCING","DAN_Loop_A",4.1,0,1,1,1,1);
		} else if(animationplayed == 7) {
			ApplyAnimation(playerid,"DANCING","DAN_Right_A",4.1,0,1,1,1,1);
		} else if(animationplayed == 8) {
			ApplyAnimation(playerid,"DANCING","DAN_Up_A",4.1,0,1,1,1,1);
		} else if(animationplayed == 9) {
			ApplyAnimation(playerid,"DANCING","dnce_M_a",4.1,0,1,1,1,1);
		} else if(animationplayed == 10) {
			ApplyAnimation(playerid,"DANCING","dnce_M_b",4.1,0,1,1,1,1);
		} else if(animationplayed == 11) {
			ApplyAnimation(playerid,"DANCING","dnce_M_c",4.1,0,1,1,1,1);
		} else if(animationplayed == 12) {
			ApplyAnimation(playerid,"DANCING","dnce_M_d",4.1,0,1,1,1,1);
		} else if(animationplayed == 13) {
			ApplyAnimation(playerid,"DANCING","dnce_M_e",4.1,0,1,1,1,1);
		}
		ComAnim[playerid] = true;
		return 1;
	}
	CMD:animcrack(playerid, params[]) {
		tmpzcmd = strtok(cmdtext, idxzcmd);
		if(!strlen(tmpzcmd)) {
			SendClientMessage(playerid,0xFF0000FF,">Digite /animcrack[1-9]");
			return 1;
		}
		animationplayed = strval(tmpzcmd);
		if(animationplayed < 1 || animationplayed > 9) {
			SendClientMessage(playerid,0xFF0000FF,">Digite /animcrack [1-9]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"CRACK","Bbalbat_Idle_01",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"CRACK","Bbalbat_Idle_02",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"CRACK","crckdeth1",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"CRACK","crckdeth2",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"CRACK","crckdeth3",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"CRACK","crckdeth4",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"CRACK","crckidle1",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"CRACK","crckidle2",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"CRACK","crckidle3",4.1,0,1,1,1,1);
		}
		ComAnim[playerid] = true;
		return 1;
	}
	CMD:animfood(playerid, params[]) {
		tmpzcmd = strtok(cmdtext, idxzcmd);
		if(!strlen(tmpzcmd)) {
			SendClientMessage(playerid,0xFF0000FF,">Digite /animfood [1-33]");
			return 1;
		}
		animationplayed = strval(tmpzcmd);
		if(animationplayed < 1 || animationplayed > 33) {
			SendClientMessage(playerid,0xFF0000FF,">Digite /animfood [1-33]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"FOOD","EAT_Chicken",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"FOOD","EAT_Pizza",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"FOOD","EAT_Vomit_P",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"FOOD","EAT_Vomit_SK",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"FOOD","FF_Dam_Bkw",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"FOOD","FF_Dam_Fwd",4.1,0,1,1,1,1);
		}else if(animationplayed == 8) {
			ApplyAnimation(playerid,"FOOD","FF_Dam_Left",4.1,0,1,1,1,1);
		}else if(animationplayed == 9) {
			ApplyAnimation(playerid,"FOOD","FF_Dam_Right",4.1,0,1,1,1,1);
		}else if(animationplayed == 10) {
			ApplyAnimation(playerid,"FOOD","FF_Die_Bkw",4.1,0,1,1,1,1);
		}else if(animationplayed == 11) {
			ApplyAnimation(playerid,"FOOD","FF_Die_Fwd",4.1,0,1,1,1,1);
		}else if(animationplayed == 12) {
			ApplyAnimation(playerid,"FOOD","FF_Die_Left",4.1,0,1,1,1,1);
		}else if(animationplayed == 13) {
			ApplyAnimation(playerid,"FOOD","FF_Die_Right",4.1,0,1,1,1,1);
		}else if(animationplayed == 14) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_Eat1",4.1,0,1,1,1,1);
		}else if(animationplayed == 15) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_Eat2",4.1,0,1,1,1,1);
		}else if(animationplayed == 16) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_Eat3",4.1,0,1,1,1,1);
		}else if(animationplayed == 17) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_In",4.1,0,1,1,1,1);
		}else if(animationplayed == 18) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_In_L",4.1,0,1,1,1,1);
		}else if(animationplayed == 19) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_In_R",4.1,0,1,1,1,1);
		}else if(animationplayed == 20) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_Look",4.1,0,1,1,1,1);
		}else if(animationplayed == 21) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_Loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 22) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_Out_180",4.1,0,1,1,1,1);
		}else if(animationplayed == 23) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_Out_L_180",4.1,0,1,1,1,1);
		}else if(animationplayed == 24) {
			ApplyAnimation(playerid,"FOOD","FF_Sit_Out_R_180",4.1,0,1,1,1,1);
		}else if(animationplayed == 25) {
			ApplyAnimation(playerid,"FOOD","SHP_Thank",4.1,0,1,1,1,1);
		}else if(animationplayed == 26) {
			ApplyAnimation(playerid,"FOOD","SHP_Tray_In",4.1,0,1,1,1,1);
		}else if(animationplayed == 27) {
			ApplyAnimation(playerid,"FOOD","SHP_Tray_Lift",4.1,0,1,1,1,1);
		}else if(animationplayed == 28) {
			ApplyAnimation(playerid,"FOOD","SHP_Tray_Lift_In",4.1,0,1,1,1,1);
		}else if(animationplayed == 29) {
			ApplyAnimation(playerid,"FOOD","SHP_Tray_Lift_Loop",4.1,0,1,1,1,1);
		}else if(animationplayed == 30) {
			ApplyAnimation(playerid,"FOOD","SHP_Tray_Lift_Out",4.1,0,1,1,1,1);
		}else if(animationplayed == 31) {
			ApplyAnimation(playerid,"FOOD","SHP_Tray_Out",4.1,0,1,1,1,1);
		}else if(animationplayed == 32) {
			ApplyAnimation(playerid,"FOOD","SHP_Tray_Pose",4.1,0,1,1,1,1);
		}else if(animationplayed == 33) {
			ApplyAnimation(playerid,"FOOD","SHP_Tray_Return",4.1,0,1,1,1,1);
		}
		ComAnim[playerid] = true;
		return 1;
	}
	CMD:animcolt(playerid, params[]) {
		tmpzcmd = strtok(cmdtext, idxzcmd);
		if(!strlen(tmpzcmd)) {
			SendClientMessage(playerid,0xFF0000FF,">Digite /animcolt [1-7]");
			return 1;
		}
		animationplayed = strval(tmpzcmd);
		if(animationplayed < 1 || animationplayed > 7) {
			SendClientMessage(playerid,0xFF0000FF,">Digite /animcolt [1-7]");
			return 1;
		}
		if(animationplayed == 1) {
			ApplyAnimation(playerid,"COLT45","2guns_crouchfire",4.1,0,1,1,1,1);
		}else if(animationplayed == 2) {
			ApplyAnimation(playerid,"COLT45","colt45_crouchfire",4.1,0,1,1,1,1);
		}else if(animationplayed == 3) {
			ApplyAnimation(playerid,"COLT45","colt45_crouchreload",4.1,0,1,1,1,1);
		}else if(animationplayed == 4) {
			ApplyAnimation(playerid,"COLT45","colt45_fire",4.1,0,1,1,1,1);
		}else if(animationplayed == 5) {
			ApplyAnimation(playerid,"COLT45","colt45_fire_2hands",4.1,0,1,1,1,1);
		}else if(animationplayed == 6) {
			ApplyAnimation(playerid,"COLT45","colt45_reload",4.1,0,1,1,1,1);
		}else if(animationplayed == 7) {
			ApplyAnimation(playerid,"COLT45","sawnoff_reload",4.1,0,1,1,1,1);
		}
		ComAnim[playerid] = true;
		return 1;
	}
	CMD:pararanim(playerid, params[]) return Dudu:stop(playerid);
	CMD:stop(playerid, params[]){
		if(IsPlayerConnected(playerid)){
		    if(SetarHospital[playerid] == 1){return 1;}
			ComAnim[playerid] = false;
			ClearAnimations(playerid);
		}
		return 1;
	}
	// Rob Threat
	CMD:robman(playerid, params[]) {
		ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0); // Rob
		ComAnim[playerid] = true;
		return 1;
	}
	CMD:creu(playerid, params[]){
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(gstring, sizeof(gstring), "* %s está dançando o Créu BPL OWNED ^^!.", sendername);
		ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
		ApplyAnimation(playerid,"CHOPPA","CHOPPA_back",4.1,1,1,1,1,1);
		SendClientMessage(playerid, COR_DBLUE, "ÉÉÉÉ Crééééééu BPL OWNED ^^!");
		ComAnim[playerid] = true;
		return 1;
	}
	CMD:handsup(playerid, params[]) return Dudu:hd(playerid);
	CMD:hd(playerid, params[]){
		if(GetTickCount() - Tempohandsup[playerid] < 7000){ return SendClientMessage(playerid, COR_GRAD1, "Você só pode usar este comando a cada 7 segundos.");}
		if(IsPlayerInFavela(playerid) || IsPlayerInSkate(playerid) || IsPlayerInPark(playerid) || IsPlayerInCasarao(playerid) || IsPlayerInMotel(playerid) || IsPlayerInMata(playerid) || IsPlayerInEstacao(playerid) || IsPlayerInChuck(playerid)){ return SendClientMessage(playerid, COR_GRAD1, "Você não pode usar este comando agora !"); }
		if(IsPlayerInAnyVehicle(playerid)){ return SendClientMessage(playerid, COR_GRAD1, "Você não pode usar este comando dentro de um veículo !");}
		if(roubando[playerid] == 1){ return SendClientMessage(playerid, -1, "Você nao pode usar esté comando estando roubando!"); }
		if(WantedLevel[playerid] == 0) { return SendClientMessage(playerid, COR_GRAD1, "Você só pode usar este comando procurado, use /hide em outras situações!");}
		new Float:Vida;
		new Float:Colete;
		GetPlayerArmour(playerid, Colete);
		GetPlayerHealth(playerid, Vida);
		format(gstring, sizeof(gstring), "* Suspeito %s digitou: /handsup com: Vida[%.0f] Colete[%.0f].", PlayerName(playerid), Vida, Colete);
		ProxDetector(30.0, playerid, gstring, COR_LIGHTBLUE,COR_LIGHTBLUE,COR_LIGHTBLUE,COR_LIGHTBLUE,COR_LIGHTBLUE);
		SetPlayerSpecialAction(playerid, 10);
		ComAnim[playerid] = true;
		SeRendeu[playerid] = 1;
		return 1;
	}
	CMD:angry(playerid, params[]){
		 ApplyAnimation(playerid,"RIOT","RIOT_ANGRY",4.0,0,0,0,0,0);
		 ComAnim[playerid] = true;
		 return 1;
	}
	CMD:deitar(playerid, params[]){
		 ApplyAnimation(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
		 ComAnim[playerid] = true;
		 return 1;
	}
	CMD:fumarbaseado(playerid, params[]){
		 ApplyAnimation(playerid, "SMOKING", "F_smklean_loop", 4.0, 1, 0, 0, 0, 0);
		 ComAnim[playerid] = true;
		 return 1;
	}
	CMD:fumar2(playerid, params[]){
		 ApplyAnimation(playerid, "SMOKING", "F_smklean_loop", 4.0, 1, 0, 0, 0, 0);
		 ComAnim[playerid] = true;
		 return 1;
 	}
	CMD:comer(playerid, params[]){
		 ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		 ComAnim[playerid] = true;
		 return 1;
	}
	CMD:hi(playerid, params[]) return Dudu:hide(playerid);
	CMD:hide(playerid, params[]){
		 new vid = GetPlayerVehicleID(playerid);
		 if(IsPlayerInVehicle(playerid, vid))
		 {
			SendClientMessage(playerid, COR_GRAD1, "Você não pode usar este comando dentro de um veículo!");
			return 1;
		 }
		 ApplyAnimation(playerid, "ped", "cower", 3.0, 1, 0, 0, 0, 0);
		 ComAnim[playerid] = true;
		 SeRendeu[playerid] = 1;
		 return 1;
	}
	CMD:vomitar(playerid, params[]){
		 ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
		 ComAnim[playerid] = true;
		 return 1;
	}
	CMD:wave(playerid, params[]){
		 ApplyAnimation(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0);
		 ComAnim[playerid] = true;
		 return 1;
	}
	CMD:taichi(playerid, params[]){
		ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop", 4.0, 1, 0, 0, 0, 0);
		ComAnim[playerid] = true;
		return 1;
	}
	CMD:getarrested(playerid, params[]){
 		 if(IsPlayerInVehicle(playerid, GetPlayerVehicleID(playerid))) { return SendClientMessage(playerid, COR_GRAD1, "Você não pode usar este comando dentro de um veículo!");}
		 ApplyAnimation(playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1, -1);
		 ComAnim[playerid] = true;
		 return 1;
	}
	CMD:punheta(playerid, params[]){
		 if(IsPlayerInVehicle(playerid, GetPlayerVehicleID(playerid))){ return SendClientMessage(playerid, COR_GRAD1, "Você não pode usar este comando dentro de um veículo!"); }
		 ApplyAnimation(playerid,"PAULNMAC", "wank_loop", 1.800001, 1, 0, 0, 1, 600);
		 ComAnim[playerid] = true;
		 return 1;
	}
	CMD:mijar(playerid, params[]){
 		 if(IsPlayerInVehicle(playerid, GetPlayerVehicleID(playerid))) { return SendClientMessage(playerid, COR_GRAD1, "Você não pode usar este comando dentro de um veículo!"); }
		 SetPlayerSpecialAction(playerid,68);
		 ComAnim[playerid] = true;
		 return 1;
	}
	CMD:fumar(playerid, params[]){
 		if(IsPlayerInVehicle(playerid, GetPlayerVehicleID(playerid))){ return SendClientMessage(playerid, COR_GRAD1, "Você não pode usar este comando dentro de um veículo!");}
		ApplyAnimation(playerid, "SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0);
		ComAnim[playerid] = true;
		return 1;
	}
	CMD:chat(playerid, params[]){
 		if(IsPlayerInVehicle(playerid, GetPlayerVehicleID(playerid))){ return SendClientMessage(playerid, COR_GRAD1, "Você não pode usar este comando dentro de um veículo!");}
		ApplyAnimation(playerid, "PED", "IDLE_CHAT", 4.0, 1, 0, 0, 0, 0);
		ComAnim[playerid] = true;
		return 1;
	}
	CMD:gro(playerid, params[]){
	    if(IsPlayerInVehicle(playerid, GetPlayerVehicleID(playerid))){ return SendClientMessage(playerid, COR_GRAD1, "Você não pode usar este comando dentro de um veículo!");}
		ApplyAnimation(playerid, "BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0);
		ComAnim[playerid] = true;
		return 1;
	}
	CMD:dance(playerid, params[]){
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT){
			 tmpzcmd = strtok(cmdtext, idxzcmd);
			 if(!strlen(tmpzcmd)) { SendClientMessage(playerid,0xFF0000FF,">USE /dance [1-4]"); }
			 animationplayed = strval(tmpzcmd);
			 if(animationplayed < 1 || animationplayed > 4){ return SendClientMessage(playerid,0xFF0000FF,">USE /dance [1-4]");}
			 if(animationplayed == 1){
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
				ComAnim[playerid] = true;
			 }else if(animationplayed == 2){
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
				ComAnim[playerid] = true;
			 }else if(animationplayed == 3){
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
				ComAnim[playerid] = true;
			 }else if(animationplayed == 4){
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
				ComAnim[playerid] = true;
			 }
		}
		return 1;
	}

	CMD:descricao(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(PlayerInfo[playerid][pAdmin] < 1341) return 1;
			if(!strlen(tmpzcmd)){
				SendClientMessage(playerid, COR_BRANCO, "|____________ Editar ____________|");
				SendClientMessage(playerid, COR_BRANCO, "USE: /descricao [nome] (Use para casas e empresas)");
				return 1;
			}
	        for(new i = 0; i < sizeof(HouseInfo); ++i){
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez])){
					format(gstring, sizeof(gstring), "Descrição da Casa: %d mudada para %s", i, tmpzcmd);
					SendClientMessage(playerid, COR_GRAD2, gstring);
					strmid(HouseInfo[i][hDiscription], tmpzcmd, 0, strlen(tmpzcmd), 999);
					SaveCasa(i);
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); ++i){
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ])){
					format(gstring, sizeof(gstring), "Descrição da Empresa(Empresa com interior): %d mudada para %s", i, tmpzcmd);
					SendClientMessage(playerid, COR_GRAD2, gstring);
					strmid(BizzInfo[i][bMessage], tmpzcmd, 0, strlen(tmpzcmd), 255);
					SalvarEmpresa(i);
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); ++i){
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ])){
					format(gstring, sizeof(gstring), "Descrição da SEmpresa(Empresa sem interior): %d mudada para %s", i, tmpzcmd);
					SendClientMessage(playerid, COR_GRAD2, gstring);
					strmid(SBizzInfo[i][sbMessage], tmpzcmd, 0, strlen(tmpzcmd), 255);
					SalvarSEmpresa(i);
				}
			}
			Atualizar3Dtexts();
		}
		return 1;
	}
	CMD:trazercasa(playerid, params[]){
		if(PlayerInfo[playerid][pAdmin] < 1341) return 1;
		tmpzcmd = strtok(cmdtext, idxzcmd);
		if(!strlen(tmpzcmd)) { return SendClientMessage(playerid,COR_GREY,"USE: /trazercasa [ID]"); }
		new idcasa = strval(tmpzcmd);
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		HouseInfo[idcasa][hEntrancex] = x;
		HouseInfo[idcasa][hEntrancey] = y;
		HouseInfo[idcasa][hEntrancez] = z;
		return 1;
	}
	CMD:trazersemp(playerid, params[]) {
		if(PlayerInfo[playerid][pAdmin] < 1341) return 1;
		tmpzcmd = strtok(cmdtext, idxzcmd);
		if(!strlen(tmpzcmd)){ return SendClientMessage(playerid,COR_GREY,"USE: /trazersemp [ID]"); }
		new idsemp = strval(tmpzcmd);
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		SBizzInfo[idsemp][sbEntranceX] = x;
		SBizzInfo[idsemp][sbEntranceY] = y;
		SBizzInfo[idsemp][sbEntranceZ] = z;
		return 1;
	}
	CMD:trazeremp(playerid, params[]){
		if(PlayerInfo[playerid][pAdmin] < 1341) return 1;
		tmpzcmd = strtok(cmdtext, idxzcmd);
		if(!strlen(tmpzcmd)){ return SendClientMessage(playerid,COR_GREY,"USE: /trazeremp [ID]"); }
		new idemp = strval(tmpzcmd);
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		BizzInfo[idemp][bEntranceX] = x;
		BizzInfo[idemp][bEntranceY] = y;
		BizzInfo[idemp][bEntranceZ] = z;
		return 1;
	}
	CMD:mudarcasa(playerid, params[]){
	    new House = PlayerInfo[playerid][pPHousekey];
		GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
		if (House != 999 && strcmp(PlayerName, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0){
		    tmpzcmd = strtok(cmdtext, idxzcmd);
	    	if(HouseEntered[playerid] != 999) { return SendClientMessage(playerid,COR_GREY,"Você não pode usar esse comando dentro de uma casa");}
	    	if(GetPlayerMoneyEx(playerid) < 1000){ return SendClientMessage(playerid, COR_GRAD5, "Você não tem dinheiro suficiente R$1000");}
			if(!strlen(tmpzcmd)){ return SendClientMessage(playerid,COR_GREY,"USE: /mudarcasa [1 a 16]");}
			new idcasa = strval(tmpzcmd);
	    	switch (idcasa){
				case 1:{
					HouseInfo[House][hExitx] = 2467.4951;
					HouseInfo[House][hExity] = -1698.4037;
					HouseInfo[House][hExitz] = 1013.5078;
					HouseInfo[House][hInt] = 2;
					SBizzInfo[14][sbTill] += 100;
				    ExtortionSBiz(14, 100);
					SendClientMessage(playerid, COR_BRANCO, "Interior setado para id 1.");
				}
	    		case 2:{
				    HouseInfo[House][hExitx] = 318.5650;
					HouseInfo[House][hExity] = 1118.2100;
					HouseInfo[House][hExitz] = 1083.8828;
					HouseInfo[House][hInt] = 5;
					SBizzInfo[14][sbTill] += 100;
				    ExtortionSBiz(14, 100);
					SendClientMessage(playerid, COR_BRANCO, "Interior setado para id 2.");
				}
				case 3:{
				    HouseInfo[House][hExitx] = 2324.5313;
					HouseInfo[House][hExity] = -1149.0129;
					HouseInfo[House][hExitz] = 1050.7101;
					HouseInfo[House][hInt] = 12;
					SBizzInfo[14][sbTill] += 100;
				    ExtortionSBiz(14, 100);
					SendClientMessage(playerid, COR_BRANCO, "Interior setado para id 3.");
				}
				case 4:{
				    HouseInfo[House][hExitx] = 235.5090;
					HouseInfo[House][hExity] = 1189.1699;
					HouseInfo[House][hExitz] = 1080.2578;
					HouseInfo[House][hInt] = 3;
					SBizzInfo[14][sbTill] += 100;
				    ExtortionSBiz(14, 100);
					SendClientMessage(playerid, COR_BRANCO, "Interior setado para id 4.");
				}
				case 5:{
				    HouseInfo[House][hExitx] = 226.6976;
					HouseInfo[House][hExity] = 1114.2729;
					HouseInfo[House][hExitz] = 1080.9950;
					HouseInfo[House][hInt] = 5;
					SBizzInfo[14][sbTill] += 100;
				    ExtortionSBiz(14, 100);
					SendClientMessage(playerid, COR_BRANCO, "Interior setado para id 5.");
				}
				case 6:{
				    HouseInfo[House][hExitx] = 24.0638;
					HouseInfo[House][hExity] = 1340.1654;
					HouseInfo[House][hExitz] = 1084.3750;
					HouseInfo[House][hInt] = 10;
					SBizzInfo[14][sbTill] += 100;
				    ExtortionSBiz(14, 100);
					SendClientMessage(playerid, COR_BRANCO, "Interior setado para id 6.");
				}
				case 7:{
				    HouseInfo[House][hExitx] = 225.6310;
					HouseInfo[House][hExity] = 1022.4800;
					HouseInfo[House][hExitz] = 1084.0146;
					HouseInfo[House][hInt] = 7;
					SBizzInfo[14][sbTill] += 100;
				    ExtortionSBiz(14, 100);
					SendClientMessage(playerid, COR_BRANCO, "Interior setado para id 7.");
				}
				case 8:{
				    HouseInfo[House][hExitx] = 328.4940;
					HouseInfo[House][hExity] = 1480.5900;
					HouseInfo[House][hExitz] = 1084.4375;
					HouseInfo[House][hInt] = 15;
					SBizzInfo[14][sbTill] += 100;
				    ExtortionSBiz(14, 100);
					SendClientMessage(playerid, COR_BRANCO, "Interior setado para id 8.");
				}
				case 9:{
				    HouseInfo[House][hExitx] = 234.0843;
					HouseInfo[House][hExity] = 1064.6896;
					HouseInfo[House][hExitz] = 1084.2108;
					HouseInfo[House][hInt] = 6;
					SBizzInfo[14][sbTill] += 100;
				    ExtortionSBiz(14, 100);
					SendClientMessage(playerid, COR_BRANCO, "Interior setado para id 9.");
				}
				case 10:{
				    HouseInfo[House][hExitx] = 260.4075;
					HouseInfo[House][hExity] = 1238.6646;
					HouseInfo[House][hExitz] = 1084.2578;
					HouseInfo[House][hInt] = 9;
					SBizzInfo[14][sbTill] += 100;
				    ExtortionSBiz(14, 100);
					SendClientMessage(playerid, COR_BRANCO, "Interior setado para id 10.");
				}
                case 11:{
				    HouseInfo[House][hExitx] = 140.3384;
					HouseInfo[House][hExity] = 1366.2356;
					HouseInfo[House][hExitz] = 1083.8594;
					HouseInfo[House][hInt] = 5;
					SBizzInfo[14][sbTill] += 100;
				    ExtortionSBiz(14, 100);
					SendClientMessage(playerid, COR_BRANCO, "Interior setado para id 11.");
				}
                case 12:{
                    HouseInfo[House][hExitx] = 83.0626;
					HouseInfo[House][hExity] = 1322.2866;
					HouseInfo[House][hExitz] = 1083.8662;
					HouseInfo[House][hInt] = 9;
					SBizzInfo[14][sbTill] += 100;
				    ExtortionSBiz(14, 100);
					SendClientMessage(playerid, COR_BRANCO, "Interior setado para id 12.");
				}
                case 13:{
				    HouseInfo[House][hExitx] = 221.9294;
					HouseInfo[House][hExity] = 1140.1986;
					HouseInfo[House][hExitz] = 1082.6094;
					HouseInfo[House][hInt] = 4;
					SBizzInfo[14][sbTill] += 100;
				    ExtortionSBiz(14, 100);
					SendClientMessage(playerid, COR_BRANCO, "Interior setado para id 13.");
				}
                case 14:{
				    HouseInfo[House][hExitx] = 744.2530;
					HouseInfo[House][hExity] = 1436.6869;
					HouseInfo[House][hExitz] = 1102.7031;
					HouseInfo[House][hInt] = 6;
					SBizzInfo[14][sbTill] += 100;
				    ExtortionSBiz(14, 100);
					SendClientMessage(playerid, COR_BRANCO, "Interior setado para id 14.");
				}
                case 15:{
				    HouseInfo[House][hExitx] = 446.8131;
					HouseInfo[House][hExity] = 1397.6251;
					HouseInfo[House][hExitz] = 1084.3047;
					HouseInfo[House][hInt] = 2;
					SBizzInfo[14][sbTill] += 100;
				    ExtortionSBiz(14, 100);
					SendClientMessage(playerid, COR_BRANCO, "Interior setado para id 15.");
				}
                case 16:{
				    HouseInfo[House][hExitx] = 446.8131;
					HouseInfo[House][hExity] = 1397.6251;
					HouseInfo[House][hExitz] = 1084.3047;
					HouseInfo[House][hInt] = 2;
					SBizzInfo[14][sbTill] += 100;
				    ExtortionSBiz(14, 100);
					SendClientMessage(playerid, COR_BRANCO, "Interior setado para id 16.");
				}
                case 17:{
                    if(PlayerInfo[playerid][pSocio] < 3){ return SendClientMessage(playerid, COR_VAGOS, "Você não é um Sócio Diamante!");}
                    HouseInfo[House][hExitx] = 1262.0209;
					HouseInfo[House][hExity] = -785.2292;
					HouseInfo[House][hExitz] = 1091.9066;
					HouseInfo[House][hInt] = 5;
					SBizzInfo[14][sbTill] += 100;
				    ExtortionSBiz(14, 100);
					SendClientMessage(playerid, COR_BRANCO, "Interior setado para id 17, Mansão Madd Dogg!");
				}
			}
			GivePlayerMoneyEx(playerid,- 1000);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			SaveCasa(House);
			return 1;
		}else{ return SendClientMessage(playerid, COR_GRAD2, "Você não tem uma casa");}
	}
	CMD:egov(playerid, params[]){
	    if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7){
		    if(PlayerToPoint(2.0, playerid, 366.4967,159.2272,1008.3828) && GetPlayerVirtualWorld(playerid) == 0){
                SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				if(TaEscutando[playerid] == 0) StopAudioStreamForPlayer(playerid);
	    		SetPlayerPos(playerid, 1504.6091,-1825.5234,13.5469);
    		}
		    if(PlayerToPoint(2.0, playerid, 1504.6091,-1825.5234,13.5469)){
                SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 0);
				if(TaEscutando[playerid] == 0) PlayAudioStreamForPlayer(playerid, "http://dl.dropboxusercontent.com/s/9bko6fmclnzwr88/prefeitura.mp3");
		        SetPlayerPos(playerid, 366.4967,159.2272,1008.3828);
		    }
		}
		return 1;
	}
	CMD:epb(playerid, params[]){
		if(IsACop(playerid)){
             new Float:RotX,Float:RotY,Float:RotZ;
             GetObjectRot(elevadorbope, RotX, RotY, RotZ);
			 if(PlayerToPoint(5.0, playerid, 354.6883,-1471.4161,36.2451)){
			      MoveDynamicObject(elevadorbope, 356.57974, -1471.54321, 77.47917,5, 0.00000, 0.00000, 31.68582);
			      PlaySoundForPlayersInRange(1165, 50.0, 354.6883,-1471.4161,36.2451 + 5.0);
			 }
		}
	  	return 1;
	}
	CMD:epb2(playerid, params[]){
		if(IsACop(playerid)){
             new Float:RotX,Float:RotY,Float:RotZ;
             GetObjectRot(elevadorbope, RotX, RotY, RotZ);
			 if(PlayerToPoint(5.0, playerid, 356.4504,-1473.4181,76.6792)){
			      MoveDynamicObject(elevadorbope, 356.67950, -1471.61646, 37.04510,5, 0.00000, 0.00000, 303.55640);
			      PlaySoundForPlayersInRange(1165, 50.0, 354.6883,-1471.4161,36.2451 + 5.0);
			 }
		}
	  	return 1;
	}
	CMD:epb3(playerid, params[]){
		if(IsACop(playerid)){
             new Float:RotX,Float:RotY,Float:RotZ;
             GetObjectRot(elevadorbope, RotX, RotY, RotZ);
			 if(PlayerToPoint(1.0, playerid, 354.7292,-1476.8840,76.5391)){
			      MoveDynamicObject(elevadorbope, 356.57974, -1471.54321, 77.47917,5, 0.00000, 0.00000, 31.68582);
			      PlaySoundForPlayersInRange(1165, 50.0, 354.6883,-1471.4161,36.2451 + 5.0);
			 }
		}
	  	return 1;
	}
	CMD:epb4(playerid, params[]){
		if(IsACop(playerid)){
             new Float:RotX,Float:RotY,Float:RotZ;
             GetObjectRot(elevadorbope, RotX, RotY, RotZ);
			 if(PlayerToPoint(2.0, playerid, 356.9638,-1472.1400,36.0266))
		     {
			      MoveDynamicObject(elevadorbope, 356.67950, -1471.61646, 37.04510,5, 0.00000, 0.00000, 303.55640);
			      PlaySoundForPlayersInRange(1165, 50.0, 354.6883,-1471.4161,36.2451 + 5.0);
			 }
		}
	  	return 1;
	}
	CMD:epm(playerid, params[]){
	    if(IsACop(playerid)){
		    if(PlayerToPoint(2.0, playerid, 246.4367,88.0092,1003.6406)){
				SetPlayerInterior(playerid, 0);
				if(TaEscutando[playerid] == 0) StopAudioStreamForPlayer(playerid);
	    		SetPlayerPos(playerid, 1568.6875,-1689.9713,6.2188);
    		}
		    if(PlayerToPoint(2.0, playerid, 1524.4977,-1677.9469,6.2188)){
                SetPlayerInterior(playerid, 0);
                if(TaEscutando[playerid] == 0) StopAudioStreamForPlayer(playerid);
		        SetPlayerPos(playerid, 1557.4742,-1675.6467,28.3955);
		    }
		    if(PlayerToPoint(2.0, playerid, 1557.4742,-1675.6467,28.3955)){
                SetPlayerInterior(playerid, 0);
                if(TaEscutando[playerid] == 0) StopAudioStreamForPlayer(playerid);
		        SetPlayerPos(playerid, 1524.4977,-1677.9469,6.2188);
		    }
		    if(PlayerToPoint(2.0, playerid, 1568.7185,-1689.9780,6.2188)){
                SetPlayerInterior(playerid, 6);
                if(TaEscutando[playerid] == 0) StopAudioStreamForPlayer(playerid);
		        SetPlayerPos(playerid, 246.4367,88.0092,1003.6406);
		    }
		    if(PlayerToPoint(2.0, playerid, 242.5694,66.3958,1003.6406) && GetPlayerVirtualWorld(playerid) == 0){
                SetPlayerInterior(playerid, 0);
                GameTextForPlayer(playerid, "~w~SALA SECRETA PM", 5000, 1);
		        SetPlayerPos(playerid, 227.7020,1822.6456,7.4141);
		    }
		    if(PlayerToPoint(2.0, playerid, 231.7469,1822.8212,7.4141) && GetPlayerVirtualWorld(playerid) == 0){
                SetPlayerInterior(playerid, 6);
		        SetPlayerPos(playerid, 242.5694,66.3958,1003.6406);
		    }
		}
		return 1;
	}
	CMD:eass(playerid, params[]){
	    if(PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26){
		    if(PlayerToPoint(2.0, playerid, 906.5851,-1452.4518,19.9223)){
	    		SetPlayerPos(playerid, 906.2818,-1452.1281,26.4692);
    		}
		    if(PlayerToPoint(2.0, playerid, 906.2818,-1452.1281,26.4692)){
		        SetPlayerPos(playerid, 906.5851,-1452.4518,19.9223);
		    }
		}
		return 1;
	}
	CMD:epc(playerid, params[]){
	    if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17){
		    if(PlayerToPoint(2.0, playerid, 283.7038,-1608.1931,32.9337)){
	    		SetPlayerPos(playerid, 302.8899,-1623.6802,114.4219);
    		}
		    if(PlayerToPoint(2.0, playerid, 302.8899,-1623.6802,114.4219))
		    {
		        SetPlayerPos(playerid, 283.7038,-1608.1931,32.9337);
		    }
		}
		return 1;
	}
	CMD:epcc(playerid, params[]){
	    if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11){
		    if(PlayerToPoint(2.0, playerid, 1304.6183,-876.6179,39.5781)){
	    		SetPlayerPos(playerid, 1305.7958,-877.9839,45.2266);
    		}
		    if(PlayerToPoint(2.0, playerid, 1305.7958,-877.9839,45.2266))
		    {
		        SetPlayerPos(playerid, 1304.6183,-876.6179,39.5781);
		    }
		}
		return 1;
	}
	CMD:egate(playerid, params[]){
	    if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13){
		    if(PlayerToPoint(2.0, playerid, 611.0468,-583.5045,18.2109)){
	    		SetPlayerPos(playerid, 611.2704,-580.8988,26.1432);
    		}
		    if(PlayerToPoint(2.0, playerid, 611.2704,-580.8988,26.1432))
		    {
		        SetPlayerPos(playerid, 611.0468,-583.5045,18.2109);
		    }
		}
		return 1;
	}
	CMD:egatepc(playerid, params[]){
	    if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13 || PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17){
		    if(PlayerToPoint(2.0, playerid, -2447.0642,530.2720,30.3129)){
	    		SetPlayerPos(playerid, -2447.1113,523.7266,34.1690);
    		}
		    if(PlayerToPoint(2.0, playerid, -2447.1113,523.7266,34.1690))
		    {
		        SetPlayerPos(playerid, -2447.0642,530.2720,30.3129);
		    }
		}
		return 1;
	}
    CMD:ecv(playerid, params[]){
	    if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23){
		    if(PlayerToPoint(2.0, playerid, -2624.4229,1426.7417,7.0938)){
	    		SetPlayerPos(playerid, -2625.3975,1424.3497,23.8984);
    		}
		    if(PlayerToPoint(2.0, playerid, -2625.3975,1424.3497,23.8984))
		    {
		        SetPlayerPos(playerid, -2624.4229,1426.7417,7.0938);
		    }
		}
		return 1;
	}
	CMD:erota(playerid, params[]){
	    if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12){
		    if(PlayerToPoint(1.0, playerid, 1217.9742,-1663.2222,28.6003)){
			    MoveDynamicObject(elevadorrota, 1220.14868, -1662.38611, 29.53140, 5, 0.00000, 0.00000, 0.00000);
	      		PlaySoundForPlayersInRange(1165, 50.0, 1220.14868, -1662.38611, 29.53140 + 5.0);
    		}else if(PlayerToPoint(1.0, playerid, 1219.2054,-1663.9357,28.7314)){
		        MoveDynamicObject(elevadorrota, 1220.14868, -1662.38611, 14.48090,5, 0.00000, 0.00000, 0.00000);
	      		PlaySoundForPlayersInRange(1165, 50.0, 1217.9392,-1662.8118,13.5441 + 5.0);
      		}else if(PlayerToPoint(1.0, playerid, 1218.9629,-1663.9360,13.6809)){
		        MoveDynamicObject(elevadorrota, 1220.14868, -1662.38611, 29.53140,5, 0.00000, 0.00000, 0.00000);
	      		PlaySoundForPlayersInRange(1165, 50.0, 1218.9629,-1663.9360,13.6809 + 5.0);
      		}else if(PlayerToPoint(1.0, playerid, 1217.9392,-1662.8118,13.5441)){
		        MoveDynamicObject(elevadorrota, 1220.14868, -1662.38611, 14.48090,5, 0.00000, 0.00000, 0.00000);
	      		PlaySoundForPlayersInRange(1165, 50.0, 1220.14868, -1662.38611, 14.48090 + 5.0);
      		}
		}
		return 1;
	}
    CMD:grota(playerid, params[]){
	    if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12){
		    if(PlayerToPoint(2.0, playerid, 1700.5283,-1667.7220,20.2188)){
				SetPlayerInterior(playerid, 0);
                InteriorAtual[playerid] = 0;
                SetPlayerVirtualWorld(playerid, 0);
                localizardprota[playerid] = 1;
                if(TaEscutando[playerid] == 0) StopAudioStreamForPlayer(playerid);
	    		SetPlayerPos(playerid, 2297.0925,2468.8081,10.8203);
    		}
			if(PlayerToPoint(2.0, playerid, 2297.0925,2468.8081,10.8203)){
                SetPlayerInterior(playerid, 18);
                InteriorAtual[playerid] = 18;
                SetPlayerVirtualWorld(playerid, 0);
                localizardprota[playerid] = 0;
                if(TaEscutando[playerid] == 0) PlayAudioStreamForPlayer(playerid, "http://dl.dropboxusercontent.com/s/miyf6h97u1pcth4/interpol.mp3");
		        SetPlayerPos(playerid, 1700.5283,-1667.7220,20.2188);
		    }
		}
		return 1;
	}
 	CMD:ealuguel(playerid, params[]){
	    if(PlayerToPoint(2.0, playerid, 2139.7847,-1176.8256,23.9922)){
	   		SetPlayerPos(playerid, 2138.6680,-1168.9967,28.1484);
    	}
	    if(PlayerToPoint(2.0, playerid, 2138.6680,-1168.9967,28.1484)){
	        SetPlayerPos(playerid, 2139.7847,-1176.8256,23.9922);
	    }
		return 1;
	}
    CMD:ehitman(playerid, params[]){
	    if(PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8){
		    if(PlayerToPoint(2.0, playerid, 2350.9641,-1215.5675,22.5000)){
	    		SetPlayerPos(playerid, 2343.3428,-1211.4089,36.3300);
    		}
		    if(PlayerToPoint(2.0, playerid, 2343.3428,-1211.4089,36.3300)){
		        SetPlayerPos(playerid, 2350.9641,-1215.5675,22.5000);
		    }
		}
		return 1;
	}
    CMD:etaxi(playerid, params[]){
	    if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10){
		    if(PlayerToPoint(2.0, playerid, 599.3127,-1520.4589,15.0127)){
	    		SetPlayerPos(playerid, 594.8070,-1528.5042,30.8906);
    		}
		    if(PlayerToPoint(2.0, playerid, 594.8070,-1528.5042,30.8906)){
		        SetPlayerPos(playerid, 599.3127,-1520.4589,15.0127);
		    }
		}
		return 1;
	}
    CMD:retiraradmin(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /retiraradmin [id]");}
			new para1;
			para1 = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 1342){
			    if(IsPlayerConnected(para1)){
			        if(para1 != INVALID_PLAYER_ID){
                        if(IsPlayerConnected(playerid)){
						    GetPlayerName(para1, giveplayerzcm, sizeof(giveplayerzcm));
						    GetPlayerName(playerid, sendername, sizeof(sendername));
						    PlayerInfo[para1][pAdmin] = 0;
						    SetPlayerColor(para1, COR_BRANCO);
						    SpawnPlayer(para1);
		                    if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 3; } else { PlayerInfo[playerid][pSkin] = 41; }
                            SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
						    format(gstring, sizeof(gstring), "Seu Admin foi retirado pelo Administrador: %s", sendername);
						    SendClientMessage(para1, COR_AMARELO, gstring);
						    format(gstring, sizeof(gstring), "Você retirou o Admin de %s.", giveplayerzcm);
						    SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
                            strmid(AdmInfo[para1][AdminNick], "Vazio", 0, strlen("Vazio"), 255);
                            AdmInfo[para1][AdminVaga] = 0;
                            SalvarAdmins();
                            OnPlayerSave(para1);
                        }
					}
				}
			}else{ SendClientMessage(playerid, COR_GRAD1, "Você não esta autorizado a usar este comando!"); }
		}
		return 1;
	}
	CMD:monte(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
			if (PlayerInfo[playerid][pAdmin] >= 1){
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341){ return SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");}
				if (GetPlayerState(playerid) == 2){
					new tmpzcmdcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpzcmdcar, -2233.7336,-1736.8186,480.8216); LinkVehicleToInterior(tmpzcmdcar, 0);
				}else{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,-2233.7336,-1736.8186,480.8216);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COR_GRAD1, "Você foi teletransportado pelo Admin!");
			}else{ SendClientMessage(playerid, COR_GRAD1, "Você não esta autorizado a usar este comando!!"); }
		}
		return 1;
	}
	CMD:arenax1(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
			if (PlayerInfo[playerid][pAdmin] >= 1){
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341){
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2){
					new tmpzcmdcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpzcmdcar, -2326.8809,-1636.9822,483.7031); LinkVehicleToInterior(tmpzcmdcar, 0);
				}else{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,-2326.8809,-1636.9822,483.7031);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COR_GRAD1, "Você foi teletransportado pelo Admin!");
			}else{ SendClientMessage(playerid, COR_GRAD1, "Você não esta autorizado a usar este comando!");}
		}
		return 1;
	}
	CMD:vipon(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
	        if(PlayerInfo[playerid][pVIP] >= 1 || PlayerInfo[playerid][pSocio] > 0){
                 if(PlayerInfo[playerid][pChatVipDesativado] == 1){
                      PlayerInfo[playerid][pChatVipDesativado] = 0;
					  SendClientMessage(playerid, COR_GRAD2, "Você ativou o chat vip !");
                 }else{
                      PlayerInfo[playerid][pChatVipDesativado] = 1;
					  SendClientMessage(playerid, COR_GRAD2, "Você desativou o chat vip !");
                 }
	        }else{ return SendClientMessage(playerid, COR_GREY, "Você precisa ser vip para usar este comando!");}
	    }
	    return 1;
	}
	CMD:socioon(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
	        if(PlayerInfo[playerid][pSocio] >= 1){
                 if(PlayerInfo[playerid][pChatSocioDesativado] == 1){
                      PlayerInfo[playerid][pChatSocioDesativado] = 0;
					  SendClientMessage(playerid, COR_GRAD2, "Você ativou o chat sócio!");
                 }else{
                      PlayerInfo[playerid][pChatSocioDesativado] = 1;
					  SendClientMessage(playerid, COR_GRAD2, "Você desativou o chat sócio!");
                 }
	        }else{ return SendClientMessage(playerid, COR_GREY, "Você precisa ser sócio ouro para usar este comando!");}
	    }
	    return 1;
	}
	CMD:v(playerid, params[]){
	    if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pVIP] >= 1){
	         if(PlayerInfo[playerid][pChatVipDesativado] == 0){
			      GetPlayerName(playerid, sendername, sizeof(sendername));
			      new length = strlen(cmdtext);
			      while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' ')){
				       idxzcmd++;
			      }
			      new offset = idxzcmd;
			      new result[250];
			      while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1))){
				       result[idxzcmd - offset] = cmdtext[idxzcmd];
				       idxzcmd++;
			      }
			      result[idxzcmd - offset] = EOS;
			      if(!strlen(result)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /v [Chat Vip]");}
			      if(GetTickCount() - TempoChatVip[playerid] < 3000 && PlayerInfo[playerid][pAdmin] == 0){ return SendClientMessage(playerid,COR_GRAD1,"Você só pode escrever uma mensagem a cada 3 segundos.");}
				  if(PlayerMutado[playerid] == 1){ return SendClientMessage(playerid, TEAM_CYAN_COR, "Você nao poder falar, Você foi calado");}
                  if(TentouDivulgar(result)){
  				       GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
  				       format(gstring, 128, "AdmAviso: [%d]%s tentou divulgar: %s.",playerid,PlayerName,result);
				       ABroadCast(COR_AMARELO,gstring,1);
				       DivulgouLog(gstring);
        	 	       return 1;
		 	      }
			      if(Palavrao(result)){
                       GivePlayerMoneyEx(playerid, -500);
                       SendClientMessage(playerid, COR_LIGHTRED, "É PROIBIDO XINGAR NO CHAT VIP,VOCÊ PERDEU 500 REAIS !");
                       return 1;
    	          }
			      if (PlayerInfo[playerid][pVIP] >= 1){
				       format(gstring, sizeof(gstring), "** VIP %s: %s", sendername, result);
				       SendVIPMessage(COR_VIP, gstring);
				       for(new i = 0; i < MAX_PLAYERS; ++i){
							if(IsPlayerConnected(i)){
							    if(PlayerInfo[i][pVIP] == 0 && PlayerInfo[playerid][pSocio] == 0){
					    			SendClientMessage(i, COR_VIP,gstring);
								}
							}
					   }
				       ChatVipLog(gstring);
				       TempoChatVip[playerid] = GetTickCount();
			      }
			 }else{ SendClientMessage(playerid, COR_GREY, "O Chat Vip está desativado !");}
		}
		return 1;
	}
	CMD:socio(playerid, params[]) return Dudu:so(playerid);
	CMD:so(playerid, params[]){
		if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pSocio] >= 1){
             if(PlayerInfo[playerid][pChatSocioDesativado] == 0){
			      GetPlayerName(playerid, sendername, sizeof(sendername));
			      new length = strlen(cmdtext);
			      while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' ')){
				       idxzcmd++;
			      }
			      new offset = idxzcmd;
			      new result[250];
			      while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1))){
				       result[idxzcmd - offset] = cmdtext[idxzcmd];
				       idxzcmd++;
			      }
			      result[idxzcmd - offset] = EOS;
			      if(!strlen(result)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /so [Chat Socio]");}
			      if(GetTickCount() - TempoChatSocio[playerid] < 3000 && PlayerInfo[playerid][pAdmin] == 0) { return SendClientMessage(playerid,COR_GRAD1,"Você só pode escrever uma mensagem a cada 3 segundos.");}
				  if(PlayerMutado[playerid] == 1){ return SendClientMessage(playerid, TEAM_CYAN_COR, "Você nao poder falar, Você foi calado");}
                  if(TentouDivulgar(result)){
  				       GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
  				       format(gstring, 128, "AdmAviso: [%d]%s tentou divulgar: %s.",playerid,PlayerName,result);
				       ABroadCast(COR_AMARELO,gstring,1);
				       DivulgouLog(gstring);
        	 	       return 1;
		 	      }
			      if(Palavrao(result)){
                       GivePlayerMoneyEx(playerid, -500);
                       SendClientMessage(playerid, COR_LIGHTRED, "É PROIBIDO CHINGAR NO CHAT SÓCIO,VOCÊ PERDEU 500 REAIS !");
                       return 1;
    	          }
			      if (PlayerInfo[playerid][pSocio] >= 1){
				       format(gstring, sizeof(gstring), "*Sócio %s: %s", sendername, result);
				       SendSocioMessage(0xba55d3FF, gstring);
				       for(new i = 0; i < MAX_PLAYERS; ++i){
							if(IsPlayerConnected(i)){
							    if(PlayerInfo[i][pVIP] == 0 && PlayerInfo[playerid][pSocio] == 0){
					    			SendClientMessage(i, 0xba55d3FF,gstring);
								}
							}
					   }
				       ChatSocioLog(gstring);
				       TempoChatSocio[playerid] = GetTickCount();
			      }
			 } else { return SendClientMessage(playerid, COR_GREY, "O Chat Sócio está desativado !"); }
		}
		return 1;
	}
	CMD:pagar(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD1, "USE: /pagar [id] [quantidade]");}
	        giveplayeridzcmd = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD1, "USE: /pagar [id] [quantidade]");}
			if(AdminTrabalhando[giveplayeridzcmd] != 0 && PlayerInfo[giveplayeridzcmd][pAdmin] >= 1){return SendClientMessage(playerid, COR_GREY, "Você não pode pagar para admins em trabalho!");}
			moneyszcmd = strval(tmpzcmd);
			if(moneyszcmd > 50000 && PlayerInfo[playerid][pVIP] == 0){ return SendClientMessage(playerid, COR_GRAD1, "Você precisa ser vip para pagar mais de 50000(digite:/vip)");}
			if(moneyszcmd < 1 || moneyszcmd > 100000) { return SendClientMessage(playerid, COR_GRAD1, "Mínimo R$1 - Máximo R$100000.");}
			if (IsPlayerConnected(giveplayeridzcmd)){
			    if(giveplayeridzcmd != INVALID_PLAYER_ID){
			        if(LocalAtual[giveplayeridzcmd] == 106){ return SendClientMessage(playerid, COR_GRAD1, "Você não pode usar este comando neste local !");}
					if (ProxDetectorS(5.0, playerid, giveplayeridzcmd)){
						GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						playerdinheirozcmd = GetPlayerMoneyEx(playerid);
						if (playerdinheirozcmd >= moneyszcmd){
						    ConsumingMoney[giveplayeridzcmd] = 1;
							GivePlayerMoneyEx(playerid, (0 - moneyszcmd));
							GivePlayerMoneyEx(giveplayeridzcmd, moneyszcmd);
							format(gstring, sizeof(gstring), "Você pagou %s(Para: %d), R$%d.", giveplayerzcm,giveplayeridzcmd, moneyszcmd);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							SendClientMessage(playerid, COR_GRAD1, gstring);
							format(gstring, sizeof(gstring), "Você recebeu R$%d de %s(ID: %d).", moneyszcmd, sendername, playerid);
							SendClientMessage(giveplayeridzcmd, COR_GRAD1, gstring);
							PlayerPlaySound(giveplayeridzcmd, 1052, 0.0, 0.0, 0.0);
							format(gstring, sizeof(gstring), "* %s deu alguma grana para %s.", sendername ,giveplayerzcm);
							ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
							GranaLog(gstring);
						}else{ SendClientMessage(playerid, COR_GRAD1, "Você não está com essa grana no bolso."); }
					} else { SendClientMessage(playerid, COR_GRAD1, "O jogador está longe."); }
				}//invalid id
			}else{
				format(gstring, sizeof(gstring), "%d não é um jogador ativo.", giveplayeridzcmd);
				SendClientMessage(playerid, COR_GRAD1, gstring);
			}
		}
		return 1;
	}
	CMD:caridade(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD1, "USE: /caridade [quantidade]");}
			if(LocalAtual[playerid] == 106) { return SendClientMessage(playerid, COR_GRAD1, "Você não pode usar este comando neste local"); }
			moneyszcmd = strval(tmpzcmd);
			if(moneyszcmd < 1) {return SendClientMessage(playerid, COR_GRAD1, "Mínimo R$ 1");}
			if(GetPlayerMoneyEx(playerid) < moneyszcmd) { return SendClientMessage(playerid, COR_GRAD1, "Você não está com essa grana no bolso.");}
			GivePlayerMoneyEx(playerid, -moneyszcmd);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(gstring, sizeof(gstring), "%s obrigado pela sua doação de R$[%d].",sendername, moneyszcmd);
			Tax += moneyszcmd;
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, COR_GRAD1, gstring);
		}
		return 1;
	}
	CMD:rg(playerid, params[]){
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] != 0){
				ShowStats(playerid,playerid);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(gstring, sizeof(gstring), "* %s Abre a carteira e confere sua Identidade(RG).", sendername);
				ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
			}else{ SendClientMessage(playerid, COR_GRAD1, "Você não esta logado !"); }
		}
		return 1;
	}
 	CMD:empregos(playerid, params[]){
    	if(PlayerInfo[playerid][pEmprego] != 0){ return SendClientMessage(playerid,COR_AMARELO," Você já tem um emprego,digite /sairdoemprego !");}
    	if(WantedLevel[playerid] != 0) { return SendClientMessage(playerid, COR_AMARELO, "Você não pode trocar de emprego estando procurado pela polícia !");}
		if (PlayerToPoint(2.0, playerid, 361.8300,173.5202,1008.3828)){
			TogglePlayerControllable(playerid, 0);
    		ShowPlayerDialog(playerid,103,DIALOG_STYLE_LIST,"BPL - Empregos","Fazendeiro\nCarteiro\nCaminhoneiro\nLixeiro\nCoveiro\nMendigo\nMotorista de Ônibus\nDetetive\nAdvogado\nAgente Penitenciário\nLadrão de Carros\nSegurança","Aceitar","Cancelar");
			EmDialog[playerid] = 1;
		}
		return 1;
	}
	CMD:licencas(playerid, params[]){
	    if(WantedLevel[playerid] > 0){ return SendClientMessage(playerid, COR_AMARELO, "Você está procurado pela polícia, não pode iniciar testes de licença !"); }
		if (PlayerToPoint(1, playerid, 1489.9749,1307.1294,1093.2891) || PlayerToPoint(1, playerid, -2033.7506,-116.0411,1035.1719)){
			if(PlayerInfo[playerid][pMultado] > 0){
			    format(gstring, sizeof(gstring), "Você só pode tirar licencas depois a %d Paydays", PlayerInfo[playerid][pMultado]);
                SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
                return 1
            }
    		TogglePlayerControllable(playerid, 0);
    		ShowPlayerDialog(playerid,105,DIALOG_STYLE_LIST,"BPL - Licenças","Iniciar Teste de Direção(Carro) - R$ 5.000\nIniciar Teste de Direção(Moto) - R$ 5.000\nIniciar Teste de Direção(Aéreo) - R$ 8.000\nIniciar Teste de Direção(Barco) - R$ 4.000\nIniciar Teste de Direção(Caminhão/Ônibus) - R$ 4.000\nComprar Licença de Armas - R$ 50.000","Confirmar","Cancelar");
    	}
		return 1;
	}
	CMD:helichao(playerid, params[]){
		 if(IsACop(playerid) || GetPlayerOrg(playerid) == 4){
			  if(PlayerInfo[playerid][pCargo] >= 4){
                   new vid = GetPlayerVehicleID(playerid);
				   if(GetVehicleModel(vid) == 497 || GetVehicleModel(vid) == 487){
						if(HeliOn[vid] == 0){
                             HeliOn[vid] = 1;
                             SetPVarInt(playerid, "Status", 1);
                             SetPVarInt(playerid, "helichao", CreateDynamicObject(2957,0,0,0,0,0,0));
                             AttachDynamicObjectToVehicle(GetPVarInt(playerid, "helichao"), vid, -0.044999, 0.464999, -1.154999, 89.864952, -0.000000, 0.000000);
                             SendClientMessage(playerid, COR_BRANCO, "Chão Instalado !");
                        }else if(HeliOn[GetPlayerVehicleID(playerid)] == 1){
                             HeliOn[vid] = 0;
                             DestroyDynamicObject(GetPVarInt(playerid, "helichao"));
			                 DeletePVar(playerid, "helichao");
	                         SendClientMessage(playerid, COR_BRANCO, "Chão Removido !");
                        }
                   }
			  }else{ return SendClientMessage(playerid, COR_BRANCO, "Este comando só é permitido apartir do cargo 4 !");}
		 }
		 return 1;
	}
	CMD:neon(playerid, params[]){
        new tmpzcmdcar = GetPlayerVehicleID(playerid);
        if(PlayerInfo[playerid][pPHousekey] == 999){ return SendClientMessage(playerid, COR_GRAD1, "Você não tem uma casa!");}
		if(!GetPlayerVehicleID(PlayerInfo[playerid][pPHousekey])){return 1;}
	    if(IsAMoto(tmpzcmdcar)){ return SendClientMessage(playerid, COR_GRAD5, "Você não pode usar neon em motos.");}
    	TogglePlayerControllable(playerid, 0);
    	ShowPlayerDialog(playerid,106,DIALOG_STYLE_LIST,"Escolha a Cor do Neon","Azul\nVermelho\nVerde\nBranco\nRosa\nAmarelo\nRemover Tudo","Colocar","Cancelar");
		return 1;
	}
	CMD:stitulos(playerid, params[]){
	    format(gstring, sizeof(gstring), "Serial Killer [%d/500] | Sequestrador Profissa[%d/60] | Degolador[%d/250] | Ladrão Profissa[%d/60]", PlayerInfo[playerid][pKills], PlayerInfo[playerid][pSequestros], PlayerInfo[playerid][pDegolador] , PlayerInfo[playerid][pLadrao]);
        SendClientMessage(playerid, COR_GRAD1, gstring);
        format(gstring, sizeof(gstring), "Dominador Profissa[%d/500] | Traficante[%d/500] | Carcereiro Mestre[%d/150] | Caçador de Recompensas[%d/200]", PlayerInfo[playerid][pDominador], PlayerInfo[playerid][pTraficante], PlayerInfo[playerid][pCarcereiro], PlayerInfo[playerid][pCacador]);
        SendClientMessage(playerid, COR_GRAD1, gstring);
		format(gstring, sizeof(gstring), "Noob [%d/200] | Guarda de Transito[%d/150] | Protetor de Cofres[%d/150] | Detetive Profissional[%d/500]", PlayerInfo[playerid][pDeaths], PlayerInfo[playerid][pMultas] , PlayerInfo[playerid][pRoubosEvitados], PlayerInfo[playerid][pDetSkill]);
        SendClientMessage(playerid, COR_GRAD1, gstring);
        format(gstring, sizeof(gstring), "Maconheiro [%d/500] | Cheirador[%d/500] | Cracudo[%d/500] | Atirador de Elite[%d/200] | Presidiário[%d/100]", PlayerInfo[playerid][pMaconheiro], PlayerInfo[playerid][pCheirador], PlayerInfo[playerid][pCracudo], PlayerInfo[playerid][pAtiradorElite], PlayerInfo[playerid][pPreso]);
        SendClientMessage(playerid, COR_GRAD1, gstring);
	    format(gstring, sizeof(gstring), "Bazucador[%d/250] | Matador Secundário[%d/500] | Incendiário[%d/100] | Winner[%d/100] | Bombeiro Profissa[%d/100]", PlayerInfo[playerid][pBazucador], PlayerInfo[playerid][pMatador], PlayerInfo[playerid][pIncendio], PlayerInfo[playerid][pWinner], PlayerInfo[playerid][pApagado]);
        SendClientMessage(playerid, COR_GRAD1, gstring);
        format(gstring, sizeof(gstring), "Alcoolatra[%d/500] | Deejay[%d/30] | Criminoso[%d/250] | Psicopata[%d/500]", PlayerInfo[playerid][pAlcolatra], PlayerInfo[playerid][pDeejay], PlayerInfo[playerid][pCrimes], PlayerInfo[playerid][pPsicopata]);
        SendClientMessage(playerid, COR_GRAD1, gstring);
        return 1;
	}
	CMD:gps(playerid, params[]){
	    if(NaPorraDoEvento[playerid] == true){ return SendClientMessage(playerid,COR_GRAD1,"Você nao pode usar este Comando, durante um evento !");}
	    if(mudandodp[playerid] == 1){ return SendClientMessage(playerid, COR_GRAD1, "Você está mudando de departamento, não pode utilizar este comando!");}
    	ShowPlayerDialog(playerid,78,DIALOG_STYLE_LIST,"Menu GPS","Geral(Los Santos)\nEmpresas Com Interior\nEmpresas Sem Interior\nHQ Organizações(Los Santos)\nHQ Empregos\nTunnings\nTerritorios\nCativeiros\nLocais Pessoais\nLocais De Roubo\nMuros para Pichar","Aceitar","Cancelar");
    	EmDialog[playerid] = 1;
		return 1;
	}
	CMD:spawn(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
			if (PlayerInfo[playerid][pAdmin] >= 1)
			     ShowPlayerDialog(playerid,13589,DIALOG_STYLE_LIST,"Escolher Spawn Civil","\nSpawn LS\nFazenda","Confirmar","Cancelar");
			else
			    SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar o comando!");
		}
		return 1;
	}
    CMD:mudarcela(playerid, params[]){
        if(IsPlayerConnected(playerid)){
			if(PlayerInfo[playerid][pEmprego] != 7 && !IsACop(playerid)){ return SendClientMessage(playerid, COR_GREY, "Você não é um Oficial / Agente Penitenciário  !");}
        	tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_BRANCO, "USE: /mudarcela [id]");}
			if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_AMARELO," Você não pode usar este comando agora !");}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			if(IsPlayerConnected(giveplayeridzcmd)){
				if(giveplayeridzcmd != INVALID_PLAYER_ID){
			    	if (ProxDetectorS(8.0, playerid, giveplayeridzcmd)){
				    	if(giveplayeridzcmd == playerid) { SendClientMessage(playerid, COR_GREY, "Você não pode se mudar de cela!"); return 1; }
				    	GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(gstring, sizeof(gstring), "* Você trocou %s de cela.", giveplayerzcm);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "Você foi trocado de cela por %s. ", sendername);
					    SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
						new rand;
                        rand = random(sizeof(PenitenciariaSpawn));
                        LoadObjects(playerid);
                        SetPlayerPos(giveplayeridzcmd, PenitenciariaSpawn[rand][0], PenitenciariaSpawn[rand][1], PenitenciariaSpawn[rand][2]);
						format(gstring, sizeof(gstring), "* %s trocou %s para outra cela.", sendername ,giveplayerzcm);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
					}else{ return SendClientMessage(playerid, COR_GREY, "O Jogador está longe de Você !");}
				}
			}else{ return SendClientMessage(playerid, COR_GREY, "O Jogador Está Offline !");}
		}
    	return 1;
    }
    CMD:menuf(playerid, params[]){
           if(PlayerInfo[playerid][pEmprego] != 10){ return true;}
   	       if(PlayerToPoint(2.0, playerid, -111.4495,-10.7101,3.1094) || PlayerToPoint(2.0, playerid, -144.4186,-48.7081,3.1172)){ShowPlayerDialog(playerid, 102, DIALOG_STYLE_LIST, "Menu Fazendeiro", "Pegar Sementes\nEntregar Colheita\nIniciar Pesquisa\nAjuda Emprego", "Confirmar", "Cancelar");}
           return 1;
    }
    CMD:cvips(playerid, params[]){
        if(PlayerInfo[playerid][pAdmin] >= 1){
	        SendClientMessage(playerid, COR_VERDE, "Carros Vips Online:");
            for(new i; i != MAX_VEHICLES; ++i){
			    new arquivo[64];
			    format(arquivo, sizeof(arquivo), Pasta_CarrosVIP, i);
				if(DOF2_FileExists(arquivo)){
				    if(IsPlayerOnline(DOF2_GetString(arquivo, "Dono"))){
				        new iddono = GetPlayerID(DOF2_GetString(arquivo, "Dono"));
						format(gstring, sizeof(gstring), "Carro[%d] - %s[%d]", i, DOF2_GetString(arquivo, "Dono"), iddono);
						SendClientMessage(playerid, 0xc4c4c4ff, gstring);
					}
				}
			}
		}
		return 1;
	}
    CMD:casaslivres(playerid, params[]){
        if(IsPlayerConnected(playerid)){
	        new random2 = random(sizeof(Cores));
			for(new h = 0; h < sizeof(HouseInfo); h++){
				if(HouseInfo[h][hOwned] == 0){
					format(gstring, sizeof(gstring), "Casa Livre, ID:[%d], Tipo:[%s], Level Necessário:[%d], Valor:[%d]", h,HouseInfo[h][hDiscription],HouseInfo[h][hLevel],HouseInfo[h][hValue]);
					SendClientMessage(playerid, Cores[random2], gstring);
				}
			}
		}
		return 1;
	}
	CMD:casalivreprox(playerid, params[]){
		new h = PegarCasaProximo(playerid);
		new Float:x, Float:y, Float:z;
    	x = HouseInfo[h][hEntrancex];
		y = HouseInfo[h][hEntrancey];
		z = HouseInfo[h][hEntrancez];
		SetPlayerCheckpoint(playerid, x, y, z, 5.0);
		format(gstring, sizeof gstring, "[GPS]: Foi marcado no mapa a casa a venda mais próxima de você (%s)", GetPoint2DZone(x, y, z));
		SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
  		return 1;
	}
	CMD:casalivreproxfree(playerid, params[]){
		new h = PegarCasaProximoFree(playerid);
		new Float:x, Float:y, Float:z;
    	x = HouseInfo[h][hEntrancex];
		y = HouseInfo[h][hEntrancey];
		z = HouseInfo[h][hEntrancez];
		SetPlayerCheckpoint(playerid, x, y, z, 5.0);
		format(gstring, sizeof gstring, "[GPS]: Foi marcado no mapa a casa Free(grátis) a venda mais próxima de você (%s)", GetPoint2DZone(x, y, z));
		SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
  		return 1;
	}
	CMD:Coins(playerid, params[]){
	    if(PlayerInfo[playerid][pAdmin] < 1340) return true;
		SendClientMessage(playerid, COR_VERDE, "Jogadores com Coins:");
		for(new i = 0;  i < MAX_PLAYERS; ++i){
		    if(IsPlayerConnected(playerid)){
				if(PlayerInfo[i][pCoins] > 0 && PlayerInfo[i][pAdmin] == 0){
					format(gstring, sizeof(gstring), "%s[%d] - Coins[%d]", PlayerName(i), i, PlayerInfo[i][pCoins]);
					SendClientMessage(playerid, 0xc4c4c4ff, gstring);
				}
				if(PlayerInfo[i][pReceberCoins] > 0 && PlayerInfo[i][pAdmin] == 0){
				    format(gstring, sizeof(gstring), "%s[%d] - Coins A Receber[%d]", PlayerName(i), i, PlayerInfo[i][pCoins]);
					SendClientMessage(playerid, COR_AMARELO, gstring);
				}
			}
		}
		return 1;
	}
	CMD:empresaslivres(playerid, params[]){
        if(IsPlayerConnected(playerid)){
	        new random2 = random(sizeof(Cores));
			for(new b = 0; b < sizeof(BizzInfo); ++b){
				if(BizzInfo[b][bOwned] == 0){
					format(gstring, sizeof(gstring), "Empresas Livres, ID:[%d], Level Necessário:[%d], Valor:[%d]", b,BizzInfo[b][bLevelNeeded],BizzInfo[b][bBuyPrice]);
					SendClientMessage(playerid, Cores[random2], gstring);
				}
			}
		}
		return 1;
	}
	CMD:cartorio(playerid, params[]){
		if(PlayerToPoint(2.0, playerid,-2161.0269,640.3730,1052.3817) || PlayerToPoint(2.0, playerid,833.5924,3.1445,1004.1797) || PlayerToPoint(2.0, playerid,830.5486,-0.2788,1004.179)){
		   TogglePlayerControllable(playerid, 0);
 	       ShowPlayerDialog(playerid,77,DIALOG_STYLE_LIST,"Cartório BPL","Bilhete da Loteria - R$1.000\nSeparação do Casamento - R$500\nPedir as Contas\nSair do Emprego\nTrocar de Cidade","Confirmar","Cancelar");
  		   EmDialog[playerid] = 1;
        }else{ return SendClientMessage(playerid, COR_GRAD1, "Você não está na lotérica !");}
		return 1;
    }
	CMD:notebook(playerid, params[]){
	   new borse = PlayerInfo[playerid][pPHousekey];
	   if(PlayerInfo[playerid][pNotebook] == 0){ return SendClientMessage(playerid, COR_LIGHTBLUE, "Voce não possui um notebook, compre um numa 24/7 !");}
	   if (!PlayerToPoint(100, playerid,HouseInfo[borse][hExitx],HouseInfo[borse][hExity],HouseInfo[borse][hExitz])){ return SendClientMessage(playerid, COR_LIGHTBLUE, "Você não está em sua casa !");}
       ShowPlayerDialog(playerid,76,DIALOG_STYLE_LIST,"Note Book","Saldo Bancário\nPegar Equipamentos\nKit VIPS","Confirmar","Voltar");
	   EmDialog[playerid] = 1;
	}
	CMD:cofre(playerid, params[]){
        new borse = PlayerInfo[playerid][pPHousekey];
	    if (!PlayerToPoint(100, playerid,HouseInfo[borse][hExitx],HouseInfo[borse][hExity],HouseInfo[borse][hExitz])){ return SendClientMessage(playerid, COR_LIGHTRED, "Você não está em sua casa !");}
		if(PlayerInfo[playerid][pPHousekey] == 999){ return SendClientMessage(playerid, COR_GRAD1, "Você não tem uma casa !");}
        ShowPlayerDialog(playerid,70,DIALOG_STYLE_LIST,"BPL - Cofre Casa","Depositar\nRetirar\nVer Saldo","Ok","Cancelar");
		EmDialog[playerid] = 1;
	}
	CMD:cofregov(playerid, params[]){
        if(PlayerToPoint(2.0, playerid, 354.9211,174.8901,1025.7964)){
		     if(GetPlayerOrg(playerid) != 7){ return SendClientMessage(playerid, COR_BRANCO, "Você não está autorizado a usar este comando.");}
		     if(PlayerInfo[playerid][pCargo] < 5){ return SendClientMessage(playerid, COR_BRANCO, "Você não está autorizado a usar este comando.");}
		     TogglePlayerControllable(playerid, 0);
             ShowPlayerDialog(playerid,72,DIALOG_STYLE_LIST,"BPL - Cofre Governo","Depositar\nRetirar\nVer Saldo","Ok","Cancelar");
		     EmDialog[playerid] = 1;
		}else{ return SendClientMessage(playerid, COR_LIGHTRED, "Você não está no cofre do governo !");}
		return 1;
	}
	CMD:cofresamu(playerid, params[]){
        if(PlayerToPoint(2.0, playerid, 1165.6309,-1327.9736,-44.2763)){
		     if(GetPlayerOrg(playerid) != 4){ return SendClientMessage(playerid, COR_BRANCO, "Você não está autorizado a usar este comando.");}
		     if(PlayerInfo[playerid][pCargo] < 5){ return SendClientMessage(playerid, COR_BRANCO, "Você não está autorizado a usar este comando.");}
		     TogglePlayerControllable(playerid, 0);
             ShowPlayerDialog(playerid,721,DIALOG_STYLE_LIST,"BPL - Cofre SA-MU","Depositar\nRetirar\nVer Saldo","Ok","Cancelar");
		     EmDialog[playerid] = 1;
		}else{ return SendClientMessage(playerid, COR_LIGHTRED, "Você não está no cofre do samu !");}
		return 1;
	}
	CMD:cofremec(playerid, params[]){
        if(PlayerToPoint(2.0, playerid, 613.5833,3.7343,1000.9219)){
		     if(GetPlayerOrg(playerid) != 14){ return SendClientMessage(playerid, COR_BRANCO, "Você não está autorizado a usar este comando.");}
		     TogglePlayerControllable(playerid, 0);
             ShowPlayerDialog(playerid,194,DIALOG_STYLE_LIST,"BPL - Cofre Mecânicos","Depositar\nRetirar\nVer Saldo","Ok","Cancelar");
		     EmDialog[playerid] = 1;
		}else{ return SendClientMessage(playerid, COR_LIGHTRED, "Você não está no cofre dos mecânicos !"); }
		return 1;
	}
 	CMD:teleportar(playerid, params[]){
 		if(IsPlayerConnected(playerid)){
			if (gPlayerLogged[playerid] == 0){ return SendClientMessage(playerid, COR_GRAD1, "Você precisa logar para usar este comando, use /logar [senha]!");}
	        if(PlayerInfo[playerid][pAdmin] >= 1339){
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342){ return SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");}
		        new bns[255];
		        bns=strtok(cmdtext,idxzcmd);
		       	if(!strlen(bns)){ return SendClientMessage(playerid, COR_GREY, "/teleportar [de 1 a 134]");}
		        if(strcmp(bns,"1(playerid, params[]) { SetPlayerPos(playerid,-25.884499,-185.868988,1003.549988); SetPlayerInterior(playerid,17); return 1; }
		        if(strcmp(bns,"2(playerid, params[]) { SetPlayerPos(playerid,6.091180,-29.271898,1003.549988); SetPlayerInterior(playerid,10); return 1; }
		        if(strcmp(bns,"3(playerid, params[]) { SetPlayerPos(playerid,-30.946699,-89.609596,1003.549988); SetPlayerInterior(playerid,18); return 1; }
		        if(strcmp(bns,"4(playerid, params[]) { SetPlayerPos(playerid,-25.132599,-139.066986,1003.549988); SetPlayerInterior(playerid,16); return 1; }
		        if(strcmp(bns,"5(playerid, params[]) { SetPlayerPos(playerid,-27.312300,-29.277599,1003.549988); SetPlayerInterior(playerid,4); return 1; }
		        if(strcmp(bns,"6(playerid, params[]) { SetPlayerPos(playerid,-26.691599,-55.714897,1003.549988); SetPlayerInterior(playerid,6); return 1; }
		        if(strcmp(bns,"7(playerid, params[]) { SetPlayerPos(playerid,-1827.147338,7.207418,1061.143554); SetPlayerInterior(playerid,14); return 1; }
		        if(strcmp(bns,"8(playerid, params[]) { SetPlayerPos(playerid,2.384830,33.103397,1199.849976); SetPlayerInterior(playerid,1); return 1; }
		        if(strcmp(bns,"9(playerid, params[]) { SetPlayerPos(playerid,315.856170,1024.496459,1949.797363); SetPlayerInterior(playerid,9); return 1; }
		        if(strcmp(bns,"10(playerid, params[]) { SetPlayerPos(playerid,286.148987,-40.644398,1001.569946); SetPlayerInterior(playerid,1); return 1; }
		        if(strcmp(bns,"11(playerid, params[]) { SetPlayerPos(playerid,286.800995,-82.547600,1001.539978); SetPlayerInterior(playerid,4); return 1; }
		        if(strcmp(bns,"12(playerid, params[]) { SetPlayerPos(playerid,296.919983,-108.071999,1001.569946); SetPlayerInterior(playerid,6); return 1; }
		        if(strcmp(bns,"13(playerid, params[]) { SetPlayerPos(playerid,314.820984,-141.431992,999.661987); SetPlayerInterior(playerid,7); return 1; }
		        if(strcmp(bns,"14(playerid, params[]) { SetPlayerPos(playerid,316.524994,-167.706985,999.661987); SetPlayerInterior(playerid,6); return 1; }
		        if(strcmp(bns,"15(playerid, params[]) { SetPlayerPos(playerid,302.292877,-143.139099,1004.062500); SetPlayerInterior(playerid,7); return 1; }
		        if(strcmp(bns,"16(playerid, params[]) { SetPlayerPos(playerid,235.508994,1189.169897,1080.339966); SetPlayerInterior(playerid,3); return 1; }
		        if(strcmp(bns,"17(playerid, params[]) { SetPlayerPos(playerid,225.756989,1240.000000,1082.149902); SetPlayerInterior(playerid,2); return 1; }
		        if(strcmp(bns,"18(playerid, params[]) { SetPlayerPos(playerid,223.043991,1289.259888,1082.199951); SetPlayerInterior(playerid,1); return 1; }
		        if(strcmp(bns,"19(playerid, params[]) { SetPlayerPos(playerid,225.630997,1022.479980,1084.069946); SetPlayerInterior(playerid,7); return 1; }
		        if(strcmp(bns,"20(playerid, params[]) { SetPlayerPos(playerid,295.138977,1474.469971,1080.519897); SetPlayerInterior(playerid,15); return 1; }
		        if(strcmp(bns,"21(playerid, params[]) { SetPlayerPos(playerid,328.493988,1480.589966,1084.449951); SetPlayerInterior(playerid,15); return 1; }
		        if(strcmp(bns,"22(playerid, params[]) { SetPlayerPos(playerid,385.803986,1471.769897,1080.209961); SetPlayerInterior(playerid,15); return 1; }
		        if(strcmp(bns,"23(playerid, params[]) { SetPlayerPos(playerid,375.971985,1417.269897,1081.409912); SetPlayerInterior(playerid,15); return 1; }
		        if(strcmp(bns,"24(playerid, params[]) { SetPlayerPos(playerid,490.810974,1401.489990,1080.339966); SetPlayerInterior(playerid,2); return 1; }
		        if(strcmp(bns,"25(playerid, params[]) { SetPlayerPos(playerid,447.734985,1400.439941,1084.339966); SetPlayerInterior(playerid,2); return 1; }
		        if(strcmp(bns,"26(playerid, params[]) { SetPlayerPos(playerid,227.722992,1114.389893,1081.189941); SetPlayerInterior(playerid,5); return 1; }
		        if(strcmp(bns,"27(playerid, params[]) { SetPlayerPos(playerid,260.983978,1286.549927,1080.299927); SetPlayerInterior(playerid,4); return 1; }
		        if(strcmp(bns,"28(playerid, params[]) { SetPlayerPos(playerid,221.666992,1143.389893,1082.679932); SetPlayerInterior(playerid,4); return 1; }
		        if(strcmp(bns,"29(playerid, params[]) { SetPlayerPos(playerid,27.132700,1341.149902,1084.449951); SetPlayerInterior(playerid,10); return 1; }
		        if(strcmp(bns,"30(playerid, params[]) { SetPlayerPos(playerid,-262.601990,1456.619995,1084.449951); SetPlayerInterior(playerid,4); return 1; }
		        if(strcmp(bns,"31(playerid, params[]) { SetPlayerPos(playerid,22.778299,1404.959961,1084.449951); SetPlayerInterior(playerid,5); return 1; }
		        if(strcmp(bns,"32(playerid, params[]) { SetPlayerPos(playerid,140.278000,1368.979980,1083.969971); SetPlayerInterior(playerid,5); return 1; }
		        if(strcmp(bns,"33(playerid, params[]) { SetPlayerPos(playerid,234.045990,1064.879883,1084.309937); SetPlayerInterior(playerid,6); return 1; }
		        if(strcmp(bns,"34(playerid, params[]) { SetPlayerPos(playerid,-68.294098,1353.469971,1080.279907); SetPlayerInterior(playerid,6); return 1; }
		        if(strcmp(bns,"35(playerid, params[]) { SetPlayerPos(playerid,-285.548981,1470.979980,1084.449951); SetPlayerInterior(playerid,15); return 1; }
		        if(strcmp(bns,"36(playerid, params[]) { SetPlayerPos(playerid,-42.581997,1408.109985,1084.449951); SetPlayerInterior(playerid,8); return 1; }
		        if(strcmp(bns,"37(playerid, params[]) { SetPlayerPos(playerid,83.345093,1324.439941,1083.889893); SetPlayerInterior(playerid,9); return 1; }
		        if(strcmp(bns,"38(playerid, params[]) { SetPlayerPos(playerid,260.941986,1238.509888,1084.259888); SetPlayerInterior(playerid,9); return 1; }
		        if(strcmp(bns,"39(playerid, params[]) { SetPlayerPos(playerid,1038.509888,-0.663752,1001.089966); SetPlayerInterior(playerid,3); return 1; }
		        if(strcmp(bns,"40(playerid, params[]) { SetPlayerPos(playerid,446.622986,509.318970,1001.419983); SetPlayerInterior(playerid,12); return 1; }
		        if(strcmp(bns,"41(playerid, params[]) { SetPlayerPos(playerid,2216.339844,-1150.509888,1025.799927); SetPlayerInterior(playerid,15); return 1; }
		        if(strcmp(bns,"42(playerid, params[]) { SetPlayerPos(playerid,833.818970,7.418000,1004.179993); SetPlayerInterior(playerid,3); return 1; }
		        if(strcmp(bns,"43(playerid, params[]) { SetPlayerPos(playerid,-100.325996,-22.816500,1000.741943); SetPlayerInterior(playerid,3); return 1; }
		        if(strcmp(bns,"44(playerid, params[]) { SetPlayerPos(playerid,964.376953,2157.329834,1011.019958); SetPlayerInterior(playerid,1); return 1; }
		        if(strcmp(bns,"45(playerid, params[]) { SetPlayerPos(playerid,-2239.569824,130.020996,1035.419922); SetPlayerInterior(playerid,6); return 1; }
		        if(strcmp(bns,"46(playerid, params[]) { SetPlayerPos(playerid,662.641601,-571.398803,16.343263); SetPlayerInterior(playerid,0); return 1; }
		        if(strcmp(bns,"47(playerid, params[]) { SetPlayerPos(playerid,614.581420,-23.066856,1004.781250); SetPlayerInterior(playerid,1); return 1; }
		        if(strcmp(bns,"48(playerid, params[]) { SetPlayerPos(playerid,612.508605,-129.236114,1001.992187); SetPlayerInterior(playerid,3); return 1; }
		        if(strcmp(bns,"49(playerid, params[]) { SetPlayerPos(playerid,-1786.603759,1215.553466,28.531250); SetPlayerInterior(playerid,0); return 1; }
		        if(strcmp(bns,"50(playerid, params[]) { SetPlayerPos(playerid,-2048.605957,162.093444,28.835937); SetPlayerInterior(playerid,1); return 1; }
		        if(strcmp(bns,"51(playerid, params[]) { SetPlayerPos(playerid,2170.284,1618.629,999.9766); SetPlayerInterior(playerid,1); return 1; }
		        if(strcmp(bns,"52(playerid, params[]) { SetPlayerPos(playerid,1889.975,1018.055,31.88281); SetPlayerInterior(playerid,10); return 1; }
		        if(strcmp(bns,"53(playerid, params[]) { SetPlayerPos(playerid,-2158.719971,641.287964,1052.369995); SetPlayerInterior(playerid,1); return 1; }
		        if(strcmp(bns,"54(playerid, params[]) { SetPlayerPos(playerid,1133.069946,-9.573059,1000.750000); SetPlayerInterior(playerid,12); return 1; }
		        if(strcmp(bns,"55(playerid, params[]) { SetPlayerPos(playerid,207.737991,-109.019997,1005.269958); SetPlayerInterior(playerid,15); return 1; }
		        if(strcmp(bns,"56(playerid, params[]) { SetPlayerPos(playerid,204.332993,-166.694992,1000.578979); SetPlayerInterior(playerid,14); return 1; }
		        if(strcmp(bns,"57(playerid, params[]) { SetPlayerPos(playerid,207.054993,-138.804993,1003.519958); SetPlayerInterior(playerid,3); return 1; }
		        if(strcmp(bns,"58(playerid, params[]) { SetPlayerPos(playerid,203.778000,-48.492397,1001.799988); SetPlayerInterior(playerid,1); return 1; }
		        if(strcmp(bns,"59(playerid, params[]) { SetPlayerPos(playerid,226.293991,-7.431530,1002.259949); SetPlayerInterior(playerid,5); return 1; }
		        if(strcmp(bns,"60(playerid, params[]) { SetPlayerPos(playerid,161.391006,-93.159156,1001.804687); SetPlayerInterior(playerid,18); return 1; }
		        if(strcmp(bns,"61(playerid, params[]) { SetPlayerPos(playerid,493.390991,-22.722799,1000.686951); SetPlayerInterior(playerid,17); return 1; }
		        if(strcmp(bns,"62(playerid, params[]) { SetPlayerPos(playerid,501.980988,-69.150200,998.834961); SetPlayerInterior(playerid,11); return 1; }
		        if(strcmp(bns,"63(playerid, params[]) { SetPlayerPos(playerid,-227.028000,1401.229980,27.769798); SetPlayerInterior(playerid,18); return 1; }
		        if(strcmp(bns,"64(playerid, params[]) { SetPlayerPos(playerid,460.099976,-88.428497,999.621948); SetPlayerInterior(playerid,4); return 1; }
		        if(strcmp(bns,"65(playerid, params[]) { SetPlayerPos(playerid,454.973950,-110.104996,999.717957); SetPlayerInterior(playerid,5); return 1; }
		        if(strcmp(bns,"66(playerid, params[]) { SetPlayerPos(playerid,452.489990,-18.179699,1001.179993); SetPlayerInterior(playerid,1); return 1; }
		        if(strcmp(bns,"67(playerid, params[]) { SetPlayerPos(playerid,681.474976,-451.150970,-25.616798); SetPlayerInterior(playerid,1); return 1; }
		        if(strcmp(bns,"68(playerid, params[]) { SetPlayerPos(playerid,366.923980,-72.929359,1001.507812); SetPlayerInterior(playerid,10); return 1; }
		        if(strcmp(bns,"69(playerid, params[]) { SetPlayerPos(playerid,365.672974,-10.713200,1001.869995); SetPlayerInterior(playerid,9); return 1; }
		        if(strcmp(bns,"70(playerid, params[]) { SetPlayerPos(playerid,372.351990,-131.650986,1001.449951); SetPlayerInterior(playerid,5); return 1; }
		        if(strcmp(bns,"71(playerid, params[]) { SetPlayerPos(playerid,377.098999,-192.439987,1000.643982); SetPlayerInterior(playerid,17); return 1; }
		        if(strcmp(bns,"72(playerid, params[]) { SetPlayerPos(playerid,244.411987,305.032990,999.231995); SetPlayerInterior(playerid,1); return 1; }
		        if(strcmp(bns,"73(playerid, params[]) { SetPlayerPos(playerid,271.884979,306.631989,999.325989); SetPlayerInterior(playerid,2); return 1; }
		        if(strcmp(bns,"74(playerid, params[]) { SetPlayerPos(playerid,291.282990,310.031982,999.154968); SetPlayerInterior(playerid,3); return 1; }
		        if(strcmp(bns,"75(playerid, params[]) { SetPlayerPos(playerid,302.181000,300.722992,999.231995); SetPlayerInterior(playerid,4); return 1; }
		        if(strcmp(bns,"76(playerid, params[]) { SetPlayerPos(playerid,322.197998,302.497986,999.231995); SetPlayerInterior(playerid,5); return 1; }
		        if(strcmp(bns,"77(playerid, params[]) { SetPlayerPos(playerid,346.870025,309.259033,999.155700); SetPlayerInterior(playerid,6); return 1; }
		        if(strcmp(bns,"78(playerid, params[]) { SetPlayerPos(playerid,-959.873962,1952.000000,9.044310); SetPlayerInterior(playerid,17); return 1; }
		        if(strcmp(bns,"79(playerid, params[]) { SetPlayerPos(playerid,388.871979,173.804993,1008.389954); SetPlayerInterior(playerid,3); return 1; }
		        if(strcmp(bns,"80(playerid, params[]) { SetPlayerPos(playerid,220.4109,1862.277,13.147); SetPlayerInterior(playerid,0); return 1; }
		        if(strcmp(bns,"81(playerid, params[]) { SetPlayerPos(playerid,772.112000,-3.898650,1000.687988); SetPlayerInterior(playerid,5); return 1; }
		        if(strcmp(bns,"82(playerid, params[]) { SetPlayerPos(playerid,774.213989,-48.924297,1000.687988); SetPlayerInterior(playerid,6); return 1; }
		        if(strcmp(bns,"83(playerid, params[]) { SetPlayerPos(playerid,773.579956,-77.096695,1000.687988); SetPlayerInterior(playerid,7); return 1; }
		        if(strcmp(bns,"84(playerid, params[]) { SetPlayerPos(playerid,1527.229980,-11.574499,1002.269958); SetPlayerInterior(playerid,3); return 1; }
		        if(strcmp(bns,"85(playerid, params[]) { SetPlayerPos(playerid,1523.509888,-47.821198,1002.269958); SetPlayerInterior(playerid,2); return 1; }
		        if(strcmp(bns,"86(playerid, params[]) { SetPlayerPos(playerid,2496.049805,-1693.929932,1014.750000); SetPlayerInterior(playerid,3); return 1; }
		        if(strcmp(bns,"87(playerid, params[]) { SetPlayerPos(playerid,1263.079956,-785.308960,1091.959961); SetPlayerInterior(playerid,5); return 1; }
		        if(strcmp(bns,"88(playerid, params[]) { SetPlayerPos(playerid,1291.725341,-788.319885,96.460937); SetPlayerInterior(playerid,0); return 1; }
		        if(strcmp(bns,"89(playerid, params[]) { SetPlayerPos(playerid,516.650,-18.611898,1001.459961); SetPlayerInterior(playerid,3); return 1; }
		        if(strcmp(bns,"90(playerid, params[]) { SetPlayerPos(playerid,2464.109863,-1698.659912,1013.509949); SetPlayerInterior(playerid,2); return 1; }
		        if(strcmp(bns,"91(playerid, params[]) { SetPlayerPos(playerid,2526.459961,-1679.089966,1015.500000); SetPlayerInterior(playerid,1); return 1; }
		        if(strcmp(bns,"92(playerid, params[]) { SetPlayerPos(playerid,2543.659912,-1303.629883,1025.069946); SetPlayerInterior(playerid,2); return 1; }
		        if(strcmp(bns,"93(playerid, params[]) { SetPlayerPos(playerid,1212.019897,-28.663099,1001.089966); SetPlayerInterior(playerid,3); return 1; }
		        if(strcmp(bns,"94(playerid, params[]) { SetPlayerPos(playerid,744.542969,1437.669922,1102.739990); SetPlayerInterior(playerid,6); return 1; }
		        if(strcmp(bns,"95(playerid, params[]) { SetPlayerPos(playerid,1204.809937,-11.586800,1001.089966); SetPlayerInterior(playerid,2); return 1; }
		        if(strcmp(bns,"96(playerid, params[]) { SetPlayerPos(playerid,1204.809937,13.586800,1001.089966); SetPlayerInterior(playerid,2); return 1; }
		        if(strcmp(bns,"97(playerid, params[]) { SetPlayerPos(playerid,940.921997,-17.007000,1001.179993); SetPlayerInterior(playerid,3); return 1; }
		        if(strcmp(bns,"98(playerid, params[]) { SetPlayerPos(playerid,964.106995,-53.205498,1001.179993); SetPlayerInterior(playerid,3); return 1; }
		        if(strcmp(bns,"99(playerid, params[]) { SetPlayerPos(playerid,-2661.009766,1415.739990,923.305969); SetPlayerInterior(playerid,3); return 1; }
		        if(strcmp(bns,"100(playerid, params[]) { SetPlayerPos(playerid,-2637.449951,1404.629883,906.457947); SetPlayerInterior(playerid,3); return 1; }
		        if(strcmp(bns,"101(playerid, params[]) { SetPlayerPos(playerid,-735.5619504,484.351318,1371.952270); SetPlayerInterior(playerid,1); return 1; }
		        if(strcmp(bns,"102(playerid, params[]) { SetPlayerPos(playerid,-794.8064,491.6866,1376.195); SetPlayerInterior(playerid,1); return 1; }
		        if(strcmp(bns,"103(playerid, params[]) { SetPlayerPos(playerid,-835.2504,500.9161,1358.305); SetPlayerInterior(playerid,1); return 1; }
		        if(strcmp(bns,"104(playerid, params[]) { SetPlayerPos(playerid,-813.431518,533.231079,1390.782958); SetPlayerInterior(playerid,1); return 1; }
		        if(strcmp(bns,"105(playerid, params[]) { SetPlayerPos(playerid,2350.339844,-1181.649902,1028.000000); SetPlayerInterior(playerid,5); return 1; }
		        if(strcmp(bns,"106(playerid, params[]) { SetPlayerPos(playerid,2807.619873,-1171.899902,1025.579956); SetPlayerInterior(playerid,8); return 1; }
		        if(strcmp(bns,"107(playerid, params[]) { SetPlayerPos(playerid,318.564972,1118.209961,1083.979980); SetPlayerInterior(playerid,5); return 1; }
		        if(strcmp(bns,"108(playerid, params[]) { SetPlayerPos(playerid,1412.639893,-1.787510,1000.931946); SetPlayerInterior(playerid,1); return 1; }
		        if(strcmp(bns,"109(playerid, params[]) { SetPlayerPos(playerid,1302.519897,-1.787510,1000.931946); SetPlayerInterior(playerid,18); return 1; }
		        if(strcmp(bns,"110(playerid, params[]) { SetPlayerPos(playerid,2522.0,-1673.383911,14.8); SetPlayerInterior(playerid,0); return 1; }
		        if(strcmp(bns,"111(playerid, params[]) { SetPlayerPos(playerid,-219.322601,1410.444824,27.773437); SetPlayerInterior(playerid,18); return 1; }
		        if(strcmp(bns,"112(playerid, params[]) { SetPlayerPos(playerid,2324.419922,-1147.539917,1050.719971); SetPlayerInterior(playerid,12); return 1; }
		        if(strcmp(bns,"113(playerid, params[]) { SetPlayerPos(playerid,-972.4957,1060.983,1358.914); SetPlayerInterior(playerid,10); return 1; }
		        if(strcmp(bns,"114(playerid, params[]) { SetPlayerPos(playerid,411.625977,-21.433298,1001.799988); SetPlayerInterior(playerid,2); return 1; }
		        if(strcmp(bns,"115(playerid, params[]) { SetPlayerPos(playerid,418.652985,-82.639793,1001.959961); SetPlayerInterior(playerid,3); return 1; }
		        if(strcmp(bns,"116(playerid, params[]) { SetPlayerPos(playerid,412.021973,-52.649899,1001.959961); SetPlayerInterior(playerid,12); return 1; }
		        if(strcmp(bns,"117(playerid, params[]) { SetPlayerPos(playerid,-204.439987,-26.453999,1002.299988); SetPlayerInterior(playerid,16); return 1; }
		        if(strcmp(bns,"118(playerid, params[]) { SetPlayerPos(playerid,-204.439987,-8.469600,1002.299988); SetPlayerInterior(playerid,17); return 1; }
		        if(strcmp(bns,"119(playerid, params[]) { SetPlayerPos(playerid,-204.439987,-43.652496,1002.299988); SetPlayerInterior(playerid,3); return 1; }
		        if(strcmp(bns,"120(playerid, params[]) { SetPlayerPos(playerid,246.783997,63.900200,1003.639954); SetPlayerInterior(playerid,6); return 1; }
		        if(strcmp(bns,"121(playerid, params[]) { SetPlayerPos(playerid,246.375992,109.245995,1003.279968); SetPlayerInterior(playerid,10); return 1; }
		        if(strcmp(bns,"122(playerid, params[]) { SetPlayerPos(playerid,288.745972,169.350998,1007.179993); SetPlayerInterior(playerid,3); return 1; }
		        if(strcmp(bns,"123(playerid, params[]) { SetPlayerPos(playerid,1494.429932,1305.629883,1093.289917); SetPlayerInterior(playerid,3); return 1; }
		        if(strcmp(bns,"124(playerid, params[]) { SetPlayerPos(playerid,-2029.719971,-115.067993,1035.169922); SetPlayerInterior(playerid,3); return 1; }
		        if(strcmp(bns,"125(playerid, params[]) { SetPlayerPos(playerid,420.484985,2535.589844,10.020289); SetPlayerInterior(playerid,10); return 1; }
		        if(strcmp(bns,"126(playerid, params[]) { SetPlayerPos(playerid,-2184.751464,2413.111816,5.156250); SetPlayerInterior(playerid,0); return 1; }
		        if(strcmp(bns,"127(playerid, params[]) { SetPlayerPos(playerid,-1397.782470,-203.723114,1051.346801); SetPlayerInterior(playerid,7); return 1; }
		        if(strcmp(bns,"128(playerid, params[]) { SetPlayerPos(playerid,-1398.103515,933.445434,1041.531250); SetPlayerInterior(playerid,15); return 1; }
		        if(strcmp(bns,"129(playerid, params[]) { SetPlayerPos(playerid,-1428.809448,-663.595886,1060.219848); SetPlayerInterior(playerid,4); return 1; }
		        if(strcmp(bns,"130(playerid, params[]) { SetPlayerPos(playerid,-1486.861816,1642.145996,1060.671875); SetPlayerInterior(playerid,14); return 1; }
		        if(strcmp(bns,"131(playerid, params[]) { SetPlayerPos(playerid,-1401.830000,107.051300,1032.273000); SetPlayerInterior(playerid,1); return 1; }
		        if(strcmp(bns,"132(playerid, params[]) { SetPlayerPos(playerid,1382.615600,2184.345703,11.023437); SetPlayerInterior(playerid,0); return 1; }
		        if(strcmp(bns,"133(playerid, params[]) { SetPlayerPos(playerid,297.9414,-64.3876,1001.5156); SetPlayerInterior(playerid,4); return 1; }
		        if(strcmp(bns,"134(playerid, params[]) { SetPlayerPos(playerid,302.1602,-164.7588,999.6105); SetPlayerInterior(playerid,6); return 1; }
			}else{ return SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar este comando!");}
		}
		return 1;
	}
	CMD:beber(playerid, params[]){
        if(IsAtBar(playerid)){
	       if(PlayerInfo[playerid][pDorgado2] >= 70){
        	   PlayerInfo[playerid][pDoenca] = 4;
        	   PlayerInfo[playerid][pDorgado2] = 0;
        	   SendClientMessage(playerid, COR_GRAD2, "* Você está infectado com cirrose, vá até um hospital se tratar !");
        	   return 1;
           }
           if(PlayerInfo[playerid][pDoenca] == 4){ return SendClientMessage(playerid, COR_GRAD2, "* Você está com cirrose, vá até um hospital se tratar !");}
		   TogglePlayerControllable(playerid, 0);
    	   ShowPlayerDialog(playerid,100,DIALOG_STYLE_LIST,"Bar BPL","Dose de Absolut - R$30\nDose de BlueLabel - R$50\nMojito - R$30\nSexOnTheBeach - R$30\nIce - R$20\nRedBull - R$20\nCoca-Cola - R$10\nAgua - R$10","Confirmar","Cancelar");
		   EmDialog[playerid] = 1;
	     }else{ return SendClientMessage(playerid, -1, "Você não está em um bar !");}
	}
  	CMD:evagos(playerid, params[]){
	    if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19){
		    if(PlayerToPoint(2.0, playerid, 2808.0322,-1176.3846,25.3794)){ SetPlayerPos(playerid, 2807.4321,-1174.6454,32.6688); }
		    if(PlayerToPoint(2.0, playerid, 2807.4321,-1174.6454,32.6688)){ SetPlayerPos(playerid, 2808.0322,-1176.3846,25.3794); }
		}
		return 1;
	}
	CMD:esamu(playerid, params[]){
	    if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4){
		    if(PlayerToPoint(2.0, playerid, 1172.8601,-1361.4534,13.9626)){ SetPlayerPos(playerid, 1161.2567,-1342.7947,26.6184); }
		    if(PlayerToPoint(2.0, playerid, 1161.2567,-1342.7947,26.6184)){ SetPlayerPos(playerid, 1172.8601,-1361.4534,13.9626);}
		}
		return 1;
	}
	CMD:dn(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
			if(PlayerInfo[playerid][pAdmin] > 0){
                if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341){ return SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");}
				if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_AMARELO," Você não pode usar esse comando na cadeia!");}
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz-2);
				return 1;
			}else{ return SendClientMessage(playerid, COR_GRAD1, "Você não tem autorização para usar esse comando.");}
		}
		return 1;
	}
	CMD:up(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
			if(PlayerInfo[playerid][pAdmin] > 0){
                if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341){ return SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");}
				if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_AMARELO," Você não pode usar esse comando na cadeia!");}
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+2);
				return 1;
			}else{ return SendClientMessage(playerid, COR_GRAD1, "Você não tem autorização para usar esse comando.");}
		}
		return 1;
	}
	CMD:lt(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
			if(PlayerInfo[playerid][pAdmin] > 0){
                if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341){ return SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");}
			    if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_AMARELO," Você não pode usar esse comando na cadeia!");}
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly+2, slz);
				return 1;
			}else{ return SendClientMessage(playerid, COR_GRAD1, "Você não tem autorização para usar esse comando.");}
		}
		return 1;
	}
	CMD:rt(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
			if(PlayerInfo[playerid][pAdmin] > 1){
                if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341){ return SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");}
				if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_AMARELO," Você não pode usar esse comando na cadeia!");}
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly-2, slz-2);
				return 1;
			}else{ return SendClientMessage(playerid, COR_GRAD1, "Você não tem autorização para usar esse comando.");}
		}
		return 1;
	}
	CMD:verificar(playerid, params[]) return Dudu:ver(playerid);
	CMD:ver(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
			if (PlayerInfo[playerid][pAdmin] >= 1){
				tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD1, "USE: /ver [id]");}
				if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341){ return SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");}
	            giveplayeridzcmd = ReturnUser(tmpzcmd);
				if(IsPlayerConnected(giveplayeridzcmd)){
				    if(giveplayeridzcmd != INVALID_PLAYER_ID){ShowStats(playerid,giveplayeridzcmd);}
				}else{ SendClientMessage(playerid, COR_GRAD1, "Este Jogador não está ativo!"); }
			}else{ SendClientMessage(playerid, COR_GRAD1, "Você não é Administrador !");}
		}
		return 1;
	}
	CMD:verlicencas(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
				if(PlayerInfo[playerid][pAdmin] == 0){ return SendClientMessage(playerid, COR_BRANCO, "Você deve ser um admin para ver as licenças !");}
				tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD1, "USE: /verlicencas [id]");}
				if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341){ return SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");}
	            giveplayeridzcmd = ReturnUser(tmpzcmd);
				if(IsPlayerConnected(giveplayeridzcmd)){
				    if(giveplayeridzcmd != INVALID_PLAYER_ID){
						GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
	                    format(gstring, sizeof(gstring), "|______ Licencas Do:%s ______|", PlayerName(giveplayeridzcmd));
			            SendClientMessage(playerid, COR_BRANCO, gstring);
	                    if(PlayerInfo[giveplayeridzcmd][pCarLic] == 1){
	                         format(gstring, sizeof(gstring), "** Carro: Positivo.", PlayerInfo[giveplayeridzcmd]);
			                 SendClientMessage(playerid, COR_GREY, gstring);
			            }else{
                             format(gstring, sizeof(gstring), "** Carro: Negativo.", PlayerInfo[giveplayeridzcmd]);
			                 SendClientMessage(playerid, COR_GREY, gstring);
			            }
			            if(PlayerInfo[giveplayeridzcmd][pMotoLic] == 1)
	                    {
	                         format(gstring, sizeof(gstring), "** Moto: Positivo.", PlayerInfo[giveplayeridzcmd]);
			                 SendClientMessage(playerid, COR_GREY, gstring);
			            }else{
                             format(gstring, sizeof(gstring), "** Moto: Negativo.", PlayerInfo[giveplayeridzcmd]);
			                 SendClientMessage(playerid, COR_GREY, gstring);
			            }
			            if(PlayerInfo[giveplayeridzcmd][pCamOniLic] == 1)
	                    {
	                         format(gstring, sizeof(gstring), "** Caminhão/Ônibus: Positivo.", PlayerInfo[giveplayeridzcmd]);
			                 SendClientMessage(playerid, COR_GREY, gstring);
			            }else{
                             format(gstring, sizeof(gstring), "** Caminhão/Ônibus: Negativo.", PlayerInfo[giveplayeridzcmd]);
			                 SendClientMessage(playerid, COR_GREY, gstring);
			            }
			            if(PlayerInfo[giveplayeridzcmd][pFlyLic] == 1)
	                    {
	                         format(gstring, sizeof(gstring), "** Aérea: Positivo.", PlayerInfo[giveplayeridzcmd]);
			                 SendClientMessage(playerid, COR_GREY, gstring);
			            }else{
                             format(gstring, sizeof(gstring), "** Aérea: Negativo.", PlayerInfo[giveplayeridzcmd]);
			                 SendClientMessage(playerid, COR_GREY, gstring);
			            }
			            if(PlayerInfo[giveplayeridzcmd][pBoatLic] == 1)
	                    {
	                         format(gstring, sizeof(gstring), "** Navegação: Positivo.", PlayerInfo[giveplayeridzcmd]);
			                 SendClientMessage(playerid, COR_GREY, gstring);
			            }else{
                             format(gstring, sizeof(gstring), "** Navegação: Negativo.", PlayerInfo[giveplayeridzcmd]);
			                 SendClientMessage(playerid, COR_GREY, gstring);
			            }
			            if(PlayerInfo[giveplayeridzcmd][pGunLic] == 1)
	                    {
	                         format(gstring, sizeof(gstring), "** Armas: Positivo.");
			                 SendClientMessage(playerid, COR_GREY, gstring);
			            }else{
                             format(gstring, sizeof(gstring), "** Armas: Negativo.");
			                 SendClientMessage(playerid, COR_GREY, gstring);
			            }
 		            	format(gstring, sizeof(gstring), "* Você viu as licencas de %s.", giveplayerzcm);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					}
				}else{ SendClientMessage(playerid, COR_GRAD1, "Este Jogador não está ativo!");}
		}
		return 1;
	}
	CMD:telefone(playerid, params[]) return Dudu:agenda(playerid);
	CMD:agenda(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
			if (PlayerInfo[playerid][pAgendaT] == 1){
				tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD1, "USE: /agenda [ id ]");}
				giveplayeridzcmd = ReturnUser(tmpzcmd);
				if(IsPlayerConnected(giveplayeridzcmd)){
				    if(giveplayeridzcmd != INVALID_PLAYER_ID){
						GetPlayerName(giveplayeridzcmd, sendername, sizeof(sendername));
						format(gstring, 128, "Jogador: %s - Celular:[%d]",sendername,PlayerInfo[giveplayeridzcmd][pPnumber]);
						SendClientMessage(playerid, COR_GRAD1, gstring);
					}
				}else{SendClientMessage(playerid, COR_GRAD1, "ID Inválido !");}
			}else{SendClientMessage(playerid, COR_LIGHTBLUE, "Você não tem uma agenda! digite /gps 24-7 !");}
		}
		return 1;
	}
	CMD:comprarnivel(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
			if (gPlayerLogged[playerid] != 0){
				PlayerInfo[playerid][pCash] = GetPlayerMoneyEx(playerid);
				if(PlayerInfo[playerid][pLevel] >= 0){
					new nxtlevel = PlayerInfo[playerid][pLevel]+1;
					new costlevel = nxtlevel*levelcost;//10k for testing purposes
					new expquantidade = nxtlevel*levelexp;
					if(GetPlayerMoneyEx(playerid) < costlevel){
						format(gstring, 128, "Você não tem: (R$[%d]) !",costlevel);
						SendClientMessage(playerid, COR_GRAD1, gstring);
						return 1;
					}else if (PlayerInfo[playerid][pExp] < expquantidade){
						format(gstring, 128, "Você precisa de %d pontos de respeito, Você tem: [%d] !",expquantidade,PlayerInfo[playerid][pExp]);
						SendClientMessage(playerid, COR_GRAD1, gstring);
						return 1;
					}else{
						format(gstring, sizeof(gstring), "~g~Comprou Nivel~n~~w~Agora seu Nivel e %d", nxtlevel);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						PlayerPlayMusic(playerid);
						GivePlayerMoneyEx(playerid, (-costlevel));
						PlayerInfo[playerid][pLevel]++;
						ScoreLevel(playerid);
						if(PlayerInfo[playerid][pVIP] > 0 || PlayerInfo[playerid][pSocio] > 0){PlayerInfo[playerid][pExp] -= expquantidade;}
						else{PlayerInfo[playerid][pExp] = 0;}
						GameTextForPlayer(playerid, gstring, 5000, 1);
						format(gstring, 128, "Você comprou o nivel %d por (R$[%d])", nxtlevel, costlevel);
						SendClientMessage(playerid, COR_GRAD1, gstring);
					}
				}
				return 1;
			}else{ SendClientMessage(playerid, COR_GRAD1, "Você não está logado !");}
		}
		return 1;
	}
	CMD:comprararma(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
	        if(GetPlayerMoneyEx(playerid) < 1){ return SendClientMessage(playerid, COR_GREY, "   Você não tem todo esse dinheiro estrupício!");}
			new gun;
			new gunid[16];
			new gunstring1[256];
			new gunstring2[256];
			new gunstring3[256];
			new infostring[256];
			new guncharge;
			new ammocharge;
			new location = LocalAtual[playerid];
			if(PlayerInfo[playerid][pConnectTime] <  2){ return SendClientMessage(playerid, COR_GREY, "É preciso ter 2+ horas jogadas para poder comprar armas !");}
			if(IsPlayerConnected(playerid)){
				new mod = 100;
				tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd)){
					SendClientMessage(playerid, COR_GREEN,"_______________________________________");
					SendClientMessage(playerid, COR_BRANCO,"*** Armas ***");
					format(gstring, sizeof(gstring), "USE: /comprararma [nomedaarma] [quantidade] - Obs: O preço é por bala de cada arma !");
					SendClientMessage(playerid, COR_GREEN, gstring);
					SendClientMessage(playerid, COR_GRAD2,gstring);
					format(gunstring1, 256, "Armas: parachute (R$[%d]) golfclub (R$[%d]) nightstick (R$[%d]) baseballbat (R$[%d]) shovel (R$[%d]) poolcue (R$[%d])",
					GunPrice[0][0]/100*mod,GunPrice[1][0]/100*mod,GunPrice[2][0]/100*mod,GunPrice[3][0]/100*mod,GunPrice[4][0]/100*mod,GunPrice[5][0]/100*mod,GunPrice[6][0]/100*mod);
					SendClientMessage(playerid, COR_GRAD3, gunstring1);
					format(gunstring2, 256, "Armas: purpledildo (R$[%d]) whitedildo (R$[%d]) longwhitedildo (R$[%d]) whitedildo2 (R$[%d]) flowers (R$[%d]) cane",
					GunPrice[7][0]/100*mod,GunPrice[8][0]/100*mod,GunPrice[9][0]/100*mod,GunPrice[10][0]/100*mod,GunPrice[11][0]/100*mod,GunPrice[12][0]/100*mod);
					SendClientMessage(playerid, COR_GRAD3, gunstring2);
					format(gunstring3, 256, "Armas: eagle (R$[%d]) pistolas (R$[%d]) mp5 (R$[%d]) shotgun (R$[%d]) ak47 (R$[%d]) m4 (R$[%d]) rifle (R$[%d])",
					GunPrice[13][0]/100*mod,GunPrice[14][0]/100*mod,GunPrice[15][0]/100*mod,GunPrice[16][0]/100*mod,GunPrice[17][0]/100*mod,GunPrice[18][0]/100*mod,GunPrice[19][0]/100*mod,GunPrice[20][0]/100*mod,GunPrice[21][0]/100*mod,GunPrice[22][0]/100*mod,GunPrice[23][0]/100*mod,GunPrice[24][0]/100*mod);
					SendClientMessage(playerid, COR_GRAD3, gunstring3);
					SendClientMessage(playerid, COR_GREEN,"_______________________________________");
					return 1;
				}
				strmid(gunid, tmpzcmd, 0, strlen(cmdtext), 255);
				tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd)){ return format(gstring, sizeof(gstring), "USE: /comprararma [nomedaarma] [quantidade]");}
				new ammo = strval(tmpzcmd);
				if(ammo < 1 || ammo > 999) { SendClientMessage(playerid, COR_GREY, "Balas tem que ser entre 1 e 999 !"); return 1; }
				if (strcmp(gunid, "parachute", true, strlen(gunid)) == 0){
					gun = 46;
					guncharge = GunPrice[0][0]/100*mod;
					ammocharge = 0;
				}else if (strcmp(gunid, "golfclub", true, strlen(gunid)) == 0){gun = 2; guncharge = GunPrice[1][0]/100*mod; ammocharge = 0;}
				else if (strcmp(gunid, "nightstick", true, strlen(gunid)) == 0){gun = 3; guncharge = GunPrice[2][0]/100*mod; ammocharge = 0;}
				else if (strcmp(gunid, "baseballbat", true, strlen(gunid)) == 0){ gun = 5; guncharge = GunPrice[4][0]/100*mod; ammocharge = 0;}
				else if (strcmp(gunid, "shovel", true, strlen(gunid)) == 0){gun = 6; guncharge = GunPrice[5][0]/100*mod; ammocharge = 0;}
				else if (strcmp(gunid, "poolcue", true, strlen(gunid)) == 0){gun = 7; guncharge = GunPrice[6][0]/100*mod; ammocharge = 0;}
				else if (strcmp(gunid, "purpledildo", true, strlen(gunid)) == 0){gun = 10; guncharge = GunPrice[7][0]/100*mod; ammocharge = 0;}
				else if (strcmp(gunid, "whitedildo", true, strlen(gunid)) == 0){gun = 11; guncharge = GunPrice[8][0]/100*mod; ammocharge = 0;}
				else if (strcmp(gunid, "longwhitedildo", true, strlen(gunid)) == 0){gun = 12; guncharge = GunPrice[9][0]/100*mod; ammocharge = 0;}
				else if (strcmp(gunid, "whitedildo2", true, strlen(gunid)) == 0){gun = 13; guncharge = GunPrice[10][0]/100*mod; ammocharge = 0;}
				else if (strcmp(gunid, "flowers", true, strlen(gunid)) == 0){gun = 14; guncharge = GunPrice[11][0]/100*mod; ammocharge = 0;}
				else if (strcmp(gunid, "cane", true, strlen(gunid)) == 0){gun = 15; guncharge = GunPrice[12][0]/100*mod; ammocharge = 0;}
				else if (strcmp(gunid, "eagle", true, strlen(gunid)) == 0){gun = 24; guncharge = GunPrice[15][0]/100*mod; ammocharge = GunPrice[25][0]*ammo;}
				else if (strcmp(gunid, "mp5", true, strlen(gunid)) == 0){gun = 29; guncharge = GunPrice[18][0]/100*mod; ammocharge = GunPrice[27][0]*ammo;}
				else if (strcmp(gunid, "shotgun", true, strlen(gunid)) == 0){gun = 25; guncharge = GunPrice[19][0]/100*mod; ammocharge = GunPrice[26][0]*ammo;}
				else if (strcmp(gunid, "ak47", true, strlen(gunid)) == 0){gun = 30; guncharge = GunPrice[22][0]/100*mod; ammocharge = GunPrice[28][0]*ammo;}
				else if (strcmp(gunid, "m4", true, strlen(gunid)) == 0){gun = 31; guncharge = GunPrice[23][0]/100*mod; ammocharge = GunPrice[28][0]*ammo;}
				else if (strcmp(gunid, "rifle", true, strlen(gunid)) == 0){gun = 33; guncharge = GunPrice[24][0]/100*mod; ammocharge = GunPrice[29][0]*ammo;}
				else if (strcmp(gunid, "eagle", true, strlen(gunid)) == 0){gun = 24; guncharge = GunPrice[15][0]/100*mod; ammocharge = 0;}
				else if (strcmp(gunid, "camera", true, strlen(gunid)) == 0){gun = 43; guncharge = GunPrice[11][0]/100*mod; ammocharge = 0;}
				else{ return SendClientMessage(playerid, COR_GRAD6, "Traficante: Nunca ouvi falar dessa arma.");}
				if((guncharge+ammocharge) > GetPlayerMoneyEx(playerid)){
					format(infostring, 256, "   Você não tem R$%d !",guncharge+ammocharge);
					SendClientMessage(playerid, COR_GRAD3, infostring);
					return 1;
				}
				if(GetPlayerMoneyEx(playerid) < (guncharge+ammocharge)){ return SendClientMessage(playerid, COR_GREY, "   Não pode se permitir isso !");}
				new payout = guncharge + ammocharge;
				if(location == 102 && IsACop(playerid)) { }
				else { GivePlayerMoneyEx(playerid, - payout); }
				BizzInfo[6][bTill] += payout;
			    ExtortionBiz(6, payout);
			    BizzInfo[0][bTill] += payout;
			    ExtortionBiz(0, 2000);
			    BizzInfo[1][bTill] += payout;
			    ExtortionBiz(1, payout);
			    new cofregov[64];
			    format(cofregov, sizeof(cofregov), "Configs/CofreGov.cfg");
			    if(DOF2_FileExists(cofregov)){
			        new Conta = DOF2_GetInt(cofregov, "Dinheiro") + payout;
				    DOF2_SetInt(cofregov, "Dinheiro", Conta);
			    }
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				if(formadinheiro[playerid] == 1){
				     GivePlayerWeaponEx(playerid, gun, ammo);
				     format(gstring, 128, "Você comprou um(a) %s com %d bala(s) por R$[%d] com seu dinheiro.",gunid,ammo,payout);
				     SendClientMessage(playerid, COR_GRAD1, gstring);
				}else if(formacartao[playerid] == 1){
					 PlayerInfo[playerid][pConta] -= ammo;
					 PlayerInfo[playerid][pConta] -= gun;
					 format(gstring, 128, "Você comprou um(a) %s com %d bala(s) por R$[%d] com seu cartão de débito.",gunid,ammo,payout);
				     SendClientMessage(playerid, COR_GRAD1, gstring);
				}
				formacartao[playerid] = 0;
				formadinheiro[playerid] = 0;
				GivePlayerWeaponEx(playerid, gun, ammo);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(gstring, sizeof(gstring), "%s comprou armas por R$%d na empresa %d", sendername, payout, location-99);
				printf("%s", gstring);
				GranaLog(gstring);
			}else{ return SendClientMessage(playerid, COR_BRANCO,"Sem Equipamento de Venda.");}
		}
		return 1;
	}
	CMD:logar(playerid, params[]){
	    if(IsPlayerConnected(playerid) && !IsPlayerNPC(playerid)){
	        new tmpzcmdpass[64];
	        new loginstring[255];
			if(gPlayerLogged[playerid] == 1){ return SendClientMessage(playerid, COR_DBLUE, "[BPL]: Você já está logado.");}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)){
				SendClientMessage(playerid, COR_GRAD1, "USE: /logar [Senha]");
				format(loginstring,sizeof(loginstring),"{00F200}Você é Registrado!\n\n{FFFFFF}Olá {07C3F7}%s,\n {FFFFFF}Você já é membro cadastrado do nosso servidor.\n\n{FFFFFF}Digite sua senha correta para logar!\n\nVisite nosso site: {00F200}forum.brasilperfectlife.com", PlayerName(playerid));
				ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD,"Login Necessário",loginstring,"Logar","Esperar");
				return 1;
			}
			if(plogando[playerid] == 3){
				 plogando[playerid] = 0;
				 Kick(playerid);
			}
			plogando[playerid] += 1;
			strmid(tmpzcmdpass, tmpzcmd, 0, strlen(cmdtext), 255);
			Encrypt(tmpzcmdpass);
			OnPlayerLogin(playerid,tmpzcmdpass);
		}
		return 1;
	}
	CMD:registrar(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
	        if(gPlayerLogged[playerid] == 1){ return SendClientMessage(playerid, COR_GREY, " Você já está logado.");}
			new loginstring[255];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(gstring, 64, Pasta_Contas, sendername);
			new File: hFile = fopen(gstring, io_read);
			if (hFile){
				SendClientMessage(playerid, 0xFF0000FF, "[BPL]: Este Nick já existe, use outro por favor.");
				fclose(hFile);
 				format(loginstring,sizeof(loginstring),"{FC0000}Você não é registrado\n\n{FFFFFF}Olá {07C3F7}%s,\n {FFFFFF}Você não está cadastrado em nosso servidor.\n\n{FFFFFF}Cadastre-se agora, e venha se divertir!\n\nVisite nosso site: {00F200}forum.brasilperfectlife.com", PlayerName(playerid));
				ShowPlayerDialog(playerid, 2, DIALOG_STYLE_PASSWORD,"Não Registrado",loginstring,"Registrar","Esperar");
				return 1;
			}
	        new tmpzcmdpass[64];
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)){
				SendClientMessage(playerid, COR_GRAD1, "USE: /registrar [Senha]");
				SendClientMessage(playerid, COR_AMARELO, "-==> Use Nome_Sobrenome ( Ex: DeaN_Josh ) <==-");
 				format(loginstring,sizeof(loginstring),"{FC0000}Você não é registrado\n\n{FFFFFF}Olá {07C3F7}%s,\n {FFFFFF}Você não está cadastrado em nosso servidor.\n\n{FFFFFF}Cadastre-se agora, e venha se divertir!\n\nVisite nosso site: {00F200}forum.brasilperfectlife.com", PlayerName(playerid));
				ShowPlayerDialog(playerid, 2, DIALOG_STYLE_PASSWORD,"Não Registrado",loginstring,"Registrar","Esperar");
				return 1;
			}
			strmid(tmpzcmdpass, tmpzcmd, 0, strlen(cmdtext), 255);
			Encrypt(tmpzcmdpass);
			OnPlayerRegister(playerid,tmpzcmdpass);
		}
		return 1;
	}
	CMD:MudarSenha(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
	        if(gPlayerLogged[playerid] == 0){ return SendClientMessage(playerid,COR_GRAD1,"Você não está logado !");}
	        if(MudarSenhaAceito[playerid] == 0){ return SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado,fale com um admin master!");}
			GetPlayerName(playerid,sendername,sizeof(sendername));
			format(gstring,sizeof(gstring),Pasta_Contas,sendername);
			tmpzcmd = strtok(cmdtext,idxzcmd);
			if(!strlen(tmpzcmd)){
				SendClientMessage(playerid,COR_GRAD1,"Use: /mudarsenha [Nova Senha]");
				SendClientMessage(playerid,COR_GRAD1,"Guarde a senha ou tire SS da tela apertando F8 para não esquecer!");
				return 1;
			}
			if(strlen(tmpzcmd) < 4 || strlen(tmpzcmd) > 16){ return SendClientMessage(playerid, COR_AMARELO, "A sua senha deve ter entre 4 e 16 digitos!"); }
            format(gstring, sizeof(gstring), "A sua nova senha agora é: [%s], cuidado para não perdê-la.", tmpzcmd);
			SendClientMessage(playerid, COR_BRANCO, gstring);
			strmid(PlayerInfo[playerid][pSenha],tmpzcmd,0,strlen(cmdtext),255);
			Encrypt(PlayerInfo[playerid][pSenha]);
		    OnPlayerSave(playerid);
			return 1;
		}
	}
	CMD:anl(playerid, params[]){
			new length = strlen(cmdtext);
			while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' ')){ idxzcmd++; }
			new offset = idxzcmd;
			new result[64];
			while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1))){
				result[idxzcmd - offset] = cmdtext[idxzcmd];
				idxzcmd++;
			}
			result[idxzcmd - offset] = EOS;
			if (!strlen(result)){ return SendClientMessage(playerid, COR_GRAD2, "USE: (/anl) [texto]");}
			if(TentouDivulgar(result)){
     			GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
 				format(gstring, 128, "AdmAviso: [%d]%s tentou divulgar: %s.",playerid,PlayerName,result);
     			ABroadCast(COR_AMARELO,gstring,1);
     			DivulgouLog(gstring);
   	     		return 1;
        	}
			if (panuncio == 1){ return SendClientMessage(playerid, COR_GRAD2, "Espere 30 segundos para poder anunciar novamente!");}
			if (strlen(result) > 50) return SendClientMessage(playerid, 0xFFFFFFAA, "Limite de caracteres atingido [MÁXIMO 50]!");
			GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
			GivePlayerMoney(playerid, -150);
			SBizzInfo[7][sbTill] += 150;
			ExtortionSBiz(7, 150);
			GameTextForPlayer(playerid, "~r~-R$150", 5000, 5);
			format(gstring, sizeof(gstring), "Anuncio: %s, Jogador: %s[%d] - Telefone (%d) - Level [%d]", result, sendername, playerid, PlayerInfo[playerid][pPnumber], PlayerInfo[playerid][pLevel]);
			SendClientMessageToAll(0x00FF00FF, gstring);
			print(gstring);
			panuncio = 1;
			TempoAn = SetTimer("Anuncio", 15000, 0);
			return 1;
	}
 	CMD:anunciop(playerid, params[])// || CMD:anp(playerid, params[]){
 	    if(IsPlayerConnected(playerid)){
             if(mudandodp[playerid] == 1){ return SendClientMessage(playerid, COR_GRAD1, "Você está mudando de departamento, não pode utilizar este comando!");}
		     if(PlayerInfo[playerid][pConnectTime] <  1){ return SendClientMessage(playerid,COR_GREY,"É preciso ter  1+ horas jogada para mandar anuncios !");}
	 	     ShowPlayerDialog(playerid, 119,DIALOG_STYLE_LIST,"Menu De Anúncios","Anunciar Venda de Drogas\nAnunciar Venda de Armas\nAnunciar Serviço Segurança\nAnunciar Serviço Advogado\nProcuro ORG/GANG/MAFIA\nPreciso de Um Táxi/Ônibus\nPreciso de Um Advogado\nPreciso de Um Policial\nPreciso de Um Médico/Médico\nPreciso de Um Mecânico\nPreciso de Um Segurança\nCompro Uma Casa\nVendo uma Casa\nCompro Coins\nVendo Coins\nCompro itens\nVendo Itens","Confirmar", "Cancelar");
	 	}
		return 1;
	}
//================ Dialog Caixas - Comandos auxiliares ====================================
 	CMD:an_2_input(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
			tmpzcmd = strtok(cmdtext,idxzcmd);
			if(gPlayerLogged[playerid] == 0){ return SendClientMessage(playerid, COR_GREY, "Você deve estar logado!");}
			new stat;
			stat = strval(tmpzcmd);
			new cel = PlayerInfo[playerid][pPnumber];
			GetPlayerName(playerid,sendername,sizeof(sendername));
			SemAn[playerid]++;
			if(panuncio == 1){ return SendClientMessage(playerid,COR_GRAD2,"Alguém anunciou agora,espere 15 segundos para anunciar novamente!");}
    		if (PlayerInfo[playerid][pLevel] >= 2){
				switch (stat){
					case 1:{
					    if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_GRAY,"Você está preso,só pode anunciar pedindo um Advogado!");}
                        if(PlayerInfo[playerid][pLider] != 5 && PlayerInfo[playerid][pMembro]!= 5 && PlayerInfo[playerid][pLider]!= 11 && PlayerInfo[playerid][pMembro]!= 11 && PlayerInfo[playerid][pLider]!= 15 && PlayerInfo[playerid][pMembro]!= 15 && PlayerInfo[playerid][pLider]!= 16 && PlayerInfo[playerid][pMembro]!= 16 && PlayerInfo[playerid][pLider]!= 18 && PlayerInfo[playerid][pMembro]!= 18 && PlayerInfo[playerid][pLider]!= 19 && PlayerInfo[playerid][pMembro]!= 19
                        && PlayerInfo[playerid][pLider]!= 20 && PlayerInfo[playerid][pMembro]!= 20 && PlayerInfo[playerid][pLider]!= 21 && PlayerInfo[playerid][pMembro]!= 21 && PlayerInfo[playerid][pLider]!= 22 && PlayerInfo[playerid][pMembro]!= 22 && PlayerInfo[playerid][pLider]!= 23 && PlayerInfo[playerid][pMembro]!= 23 && PlayerInfo[playerid][pLider]!= 24 && PlayerInfo[playerid][pMembro]!= 24 && PlayerInfo[playerid][pLider]!= 26 && PlayerInfo[playerid][pMembro]!= 26
		                && PlayerInfo[playerid][pLider]!= 27 && PlayerInfo[playerid][pMembro]!= 27) { return SendClientMessage(playerid,COR_GRAD2,"Você não é um traficante!");}
	      				GivePlayerMoneyEx(playerid,- 150);
						SBizzInfo[7][sbTill] += 150;
						ExtortionSBiz(7,150);
	       				format(gstring,sizeof(gstring),"Anuncio: Vendo Drogas,interesados me liguem !,Jogador: %s - Telefone(%d) - ID[%d]",sendername,cel,playerid);
						SendClientMessageToAll(0x00FF00FF,gstring);
					}
					case 2:{
					    if(GetPlayerOrg(playerid) != 6 && GetPlayerOrg(playerid) != 16 && GetPlayerOrg(playerid) != 30){ return SendClientMessage(playerid,COR_GRAD2,"Você não é um terrorista!");}
                        if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_AMARELO,"Você não pode usar este comando agora !");}
	      				GivePlayerMoneyEx(playerid,- 150);
						SBizzInfo[7][sbTill] += 150;
						ExtortionSBiz(7,150);
	       				format(gstring,sizeof(gstring),"Anuncio: Vendo Armas,Interesados venham na mata !,Terrorista: %s - Telefone(%d) - ID[%d]",sendername,cel,playerid);
						SendClientMessageToAll(0x00FF00FF,gstring);
					}
					case 3:{
				   	    if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_GRAY,"Você está preso,só pode anunciar pedindo um Advogado!");}
                        if(PlayerInfo[playerid][pEmprego] != 3){ return SendClientMessage(playerid, COR_GREY, "Você não é um Segurança!");}
	       			    GivePlayerMoneyEx(playerid,- 150);
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
	       			    format(gstring,sizeof(gstring),"Anuncio: Precisa de Um Segurança Particular? Ligue-me !,Jogador: %s - Telefone(%d) - ID[%d]",sendername,cel,playerid);
						SendClientMessageToAll(0x00FF00FF,gstring);
					}
                    case 4:{
				   	    if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_GRAY,"Você está preso,só pode anunciar pedindo um Advogado!");}
                        if(PlayerInfo[playerid][pEmprego] != 2){ return SendClientMessage(playerid, COR_GREY, "Você não é um Advogado !");}
	       			    GivePlayerMoneyEx(playerid,- 150);
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
	       			    format(gstring,sizeof(gstring),"Anuncio: Precisa de Um Advogado? Ligue-me !,Jogador: %s - Telefone(%d) - ID[%d]",sendername,cel,playerid);
						SendClientMessageToAll(0x00FF00FF,gstring);
					}
					case 5:{
					    if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_GRAY,"Você está preso,só pode anunciar pedindo um Advogado!");}
					    if(PlayerInfo[playerid][pMembro] != 0 || PlayerInfo[playerid][pLider] != 0){ return SendClientMessage(playerid, COR_GREY, "Você já faz parte de uma organização !");}
						if(PlayerInfo[playerid][pLevel] < 3){ return SendClientMessage(playerid, COR_GREY,"Você ainda é level 2, precisa passar de nível para entrar em alguma organização!");}
	       			    GivePlayerMoneyEx(playerid,- 150);
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
	       			    format(gstring,sizeof(gstring),"Anuncio: Procuro ORG/GANG/MÁFIA,Ligue-me ! Jogador: %s - Telefone (%d) - ID[%d] - Level[%d]",sendername,cel,playerid,PlayerInfo[playerid][pLevel]);
						SendClientMessageToAll(0x00FF00FF,gstring);
					}
					case 6:{
					    if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_GRAY,"Você está preso,só pode anunciar pedindo um Advogado!");}
	       			    GivePlayerMoneyEx(playerid,- 150);
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
	       			    format(gstring,sizeof(gstring),"Anuncio: Preciso de Um Taxi/Onibus,ligue-me porfavor. Jogador: %s - Telefone (%d) - ID[%d] - Level[%d]",sendername,cel,playerid,PlayerInfo[playerid][pLevel]);
						SendClientMessageToAll(0x00FF00FF,gstring);
					}
					case 7:
					{
						if(PlayerInfo[playerid][pJailTime] > 1080){ return SendClientMessage(playerid,COR_GREY,"Você está preso com mais de 20 minutos de cadeia,não pode solicitar advogados !");}
	       			    GivePlayerMoneyEx(playerid,- 150);
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
	       			    format(gstring,sizeof(gstring),"Anuncio: Preciso de Um Advogado Entrem em Contato, Jogador: %s, Telefone (%d) - ID:[%d] Level:[%d]",sendername,cel,playerid,PlayerInfo[playerid][pLevel]);
						SendClientMessageToAll(0x00FF00FF,gstring);
					}
					case 8:{
						if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_GRAY,"Você está preso,só pode anunciar pedindo um Advogado!");}
	       			    GivePlayerMoneyEx(playerid,- 150);
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
	       			    format(gstring,sizeof(gstring),"Anuncio: Preciso de um Policial,ajude-me porfavor. Jogador: %s - Telefone (%d) - ID[%d] - Level[%d]",sendername,cel,playerid,PlayerInfo[playerid][pLevel]);
						SendClientMessageToAll(0x00FF00FF,gstring);
					}
					case 9:{
						if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_GRAY,"Você está preso,só pode anunciar pedindo um Advogado!");}
	       			    GivePlayerMoneyEx(playerid,- 150);
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
	       			    format(gstring,sizeof(gstring),"Anuncio: Preciso de Médico,salve-me porfavor. Jogador: %s, Telefone (%d) - ID[%d] - Level[%d]",sendername,cel,playerid,PlayerInfo[playerid][pLevel]);
						SendClientMessageToAll(0x00FF00FF,gstring);
					}
					case 10:{
						if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_GRAY,"Você está preso,só pode anunciar pedindo um Advogado!");}
	       			    GivePlayerMoneyEx(playerid,- 150);
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
	       			    format(gstring,sizeof(gstring),"Anuncio: Preciso de um Mecânico,venha ate mim porfavor. Jogador: %s - Telefone(%d) - ID[%d] - Level[%d]",sendername,cel,playerid,PlayerInfo[playerid][pLevel]);
						SendClientMessageToAll(0x00FF00FF,gstring);
					}
					case 11:{
						if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_GRAY,"Você está preso,só pode anunciar pedindo um Advogado!");}
	       			    GivePlayerMoneyEx(playerid,- 150);
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
	       			    format(gstring,sizeof(gstring),"Anuncio: Preciso de um Segurança,Ligue-me Porfavor. Jogador: %s - Telefone(%d) - ID[%d] - Level[%d]",sendername,cel,playerid,PlayerInfo[playerid][pLevel]);
						SendClientMessageToAll(0x00FF00FF,gstring);
					}
					case 12:{
					    if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_GRAY,"Você está preso,só pode anunciar pedindo um Advogado!");}
					    if(PlayerInfo[playerid][pPHousekey] != 999)
						{
							SendClientMessage(playerid, COR_GRAD2, "Você já tem uma casa !");
							return 1;
						}
	       			    GivePlayerMoneyEx(playerid,- 150);
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
                        format(gstring,sizeof(gstring),"Anuncio: Procura Uma Casa a Venda! Ligue-me. Jogador: %s - Telefone(%d) - ID[%d] - Level[%d]",sendername,cel,playerid,PlayerInfo[playerid][pLevel]);
						SendClientMessageToAll(0x00FF00FF,gstring);
					}
					case 13:{
					    if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_GRAY,"Você está preso,só pode anunciar pedindo um Advogado!");}
					    if(PlayerInfo[playerid][pPHousekey] == 999){ return SendClientMessage(playerid, COR_GRAD2, "Você não tem uma casa!");}
	       			    GivePlayerMoneyEx(playerid,- 150);
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
                        format(gstring,sizeof(gstring),"Anuncio: Vendo Casa,interessados me liguem !,Jogador: %s - Telefone(%d) - ID[%d] - Level[%d]",sendername,cel,playerid,PlayerInfo[playerid][pLevel]);
						SendClientMessageToAll(0x00FF00FF,gstring);
					}
					case 14:{
					    if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_GRAY,"Você está preso,só pode anunciar pedindo um Advogado!");}
	       			    GivePlayerMoneyEx(playerid,- 150);
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
                        format(gstring,sizeof(gstring),"Anuncio: Compro Coins! Ligue-me. Jogador: %s - Telefone(%d) - ID[%d] - Level[%d]",sendername,cel,playerid, PlayerInfo[playerid][pLevel]);
						SendClientMessageToAll(0x00FF00FF,gstring);
					}
					case 15:{
					    if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_GRAY,"Você está preso,só pode anunciar pedindo um Advogado!");}
					    if(PlayerInfo[playerid][pCoins] == 0) { return SendClientMessage(playerid, COR_GRAD2, "Você não possui Coins !");}
	       			    GivePlayerMoneyEx(playerid,- 150);
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
                        format(gstring,sizeof(gstring),"Anuncio: Vendo Coins,interessados me liguem !,Jogador: %s - Telefone(%d) - ID[%d] - Level[%d]",sendername,cel,playerid, PlayerInfo[playerid][pLevel]);
						SendClientMessageToAll(0x00FF00FF,gstring);
					}
					case 16:{
	    				if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_GRAY,"Você está preso,só pode anunciar pedindo um Advogado!");}
	       			    GivePlayerMoneyEx(playerid,- 150);
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
                        format(gstring,sizeof(gstring),"Anuncio: Compro Itens/Acessório,interessados me liguem !,Jogador: %s - Telefone(%d) - ID[%d] - Level[%d]",sendername,cel,playerid, PlayerInfo[playerid][pLevel]);
						SendClientMessageToAll(0x00FF00FF,gstring);
					}
					case 17:{
	    				if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_GRAY,"Você está preso,só pode anunciar pedindo um Advogado!");}
	       			    GivePlayerMoneyEx(playerid,- 150);
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
                        format(gstring,sizeof(gstring),"Anuncio: Vendo Itens/Acessório,interessados me liguem !,Jogador: %s - Telefone(%d) - ID[%d] - Level[%d]",sendername,cel,playerid, PlayerInfo[playerid][pLevel]);
						SendClientMessageToAll(0x00FF00FF,gstring);
					}
				}
				panuncio = 1;
            	TempoAn = SetTimer("Anuncio", 15000, 0);
			}else{ SendClientMessage(playerid,COR_GREY,"É preciso ter  1+ horas jogada para mandar anuncios !");}
		}
	    return 1;
	}
	CMD:ang(playerid, params[]) return Dudu:anunciogang(playerid);
	CMD:anunciogang(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
            if(GetPlayerOrg(playerid) == 5 || GetPlayerOrg(playerid) == 11 || GetPlayerOrg(playerid) == 15 || GetPlayerOrg(playerid) == 16 || GetPlayerOrg(playerid) == 18 || GetPlayerOrg(playerid) == 19 || GetPlayerOrg(playerid) == 20 || GetPlayerOrg(playerid) == 21 || GetPlayerOrg(playerid) == 22 || GetPlayerOrg(playerid) == 23 || GetPlayerOrg(playerid) == 24 || GetPlayerOrg(playerid) == 26 || GetPlayerOrg(playerid) == 27 || GetPlayerOrg(playerid) == 6
            || GetPlayerOrg(playerid) == 8 || GetPlayerOrg(playerid) == 9 || GetPlayerOrg(playerid) == 10 || GetPlayerOrg(playerid) == 14 || GetPlayerOrg(playerid) == 28 || GetPlayerOrg(playerid) == 29 || GetPlayerOrg(playerid) == 30){
				if(PlayerInfo[playerid][pLevel] < 2){ return SendClientMessage(playerid, COR_GREY, "Você não pode usar este comando, pois você é menor que nivel 7.");}
				if(PlayerInfo[playerid][pCargo] < 4){ return SendClientMessage(playerid, COR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");}
			    if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid, COR_GREY, "Você não pode usar este comando agora!");}
				new length = strlen(cmdtext);
				while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' ')){idxzcmd++;}
				new offset = idxzcmd;
				new result[256];
				while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1))){
					result[idxzcmd - offset] = cmdtext[idxzcmd];
					idxzcmd++;
				}
				result[idxzcmd - offset] = EOS;
				if(!strlen(result)){ return SendClientMessage(playerid, COR_GRAD2, "USE: (/ang) ou (/anunciogang) [texto]");}
                if(TentouDivulgar(result)){
            	     GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
            	     format(gstring, 128, "AdmAviso: [%d]%s tentou divulgar: %s.",playerid,PlayerName,result);
				     ABroadCast(COR_AMARELO,gstring,1);
				     DivulgouLog(gstring);
            	     return 1;
            	}
				if(panunciogang == 1){ return SendClientMessage(playerid,COR_GRAD2,"Anunciaram a pouco tempo.. aguarde e tente em breve.!");}
	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
				format(gstring,sizeof(gstring),"[Anuncio %s]: %s - %s[%d] - Cel:[%d]",NomeORG(playerid),result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
				SendClientMessageToAll(GetPlayerColor(playerid), gstring);
				print(gstring);
				SBizzInfo[7][sbTill] += 30;
		    	ExtortionSBiz(7, 30);
				panunciogang = 1;
				TempoAnGang = SetTimer("AnuncioGang", 30000, 0);
				new cofregov[64];
			    format(cofregov, sizeof(cofregov), "Configs/CofreGov.cfg");
			    if(DOF2_FileExists(cofregov)){
			        new Conta = DOF2_GetInt(cofregov, "Dinheiro") + 15;
				    DOF2_SetInt(cofregov, "Dinheiro", Conta);
			    }
			}
		}
		return 1;
	}
	CMD:gov(playerid, params[]) return Dudu:governo(playerid);
	CMD:governo(playerid, params[]){
    	if(PlayerMutado[playerid] == 1){ return SendClientMessage(playerid, TEAM_CYAN_COR, "Você não pode falar, pois foi calado !");}
	    if(IsPlayerConnected(playerid)){
	        new org = GetPlayerOrg(playerid);
            if(gTeam[playerid] == 2  || IsACop(playerid) || org == 4 || org == 7){
			    if(PlayerInfo[playerid][pLevel] < 2){ return SendClientMessage(playerid, COR_GREY, "Você não pode usar este comando, pois você é menor que nivel 8 !");}
				if(PlayerInfo[playerid][pCargo] < 4){ return SendClientMessage(playerid, COR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");}
				new length = strlen(cmdtext);
				while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' ')){idxzcmd++;}
				new offset = idxzcmd;
				new result[256];
				while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1))){
					result[idxzcmd - offset] = cmdtext[idxzcmd];
					idxzcmd++;
				}
				if(panunciogang == 1){ return SendClientMessage(playerid,COR_GRAD2,"Anunciaram a pouco tempo.. aguarde e tente em breve.!");}
	        	if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid, COR_GREY, "Você não pode anunciar agora!");}
				result[idxzcmd - offset] = EOS;
				if(!strlen(result)){ return SendClientMessage(playerid, COR_GRAD2, "USE: (/gov)erno [texto]");}
                if(TentouDivulgar(result)){
            	   GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
            	   format(gstring, 128, "AdmAviso: [%d]%s tentou divulgar: %s.",playerid,PlayerName,result);
				   ABroadCast(COR_AMARELO,gstring,1);
				   DivulgouLog(gstring);
            	   return 1;
            	}
                GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
                format(gstring, sizeof(gstring), "[Anuncio %s]: %s - %s[%d] - Cel[%d]", NomeORG(playerid), result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
				SendClientMessageToAll(GetPlayerColor(playerid), gstring);
				SBizzInfo[7][sbTill] += 30;
   	            ExtortionSBiz(7, 30);
   	            panunciogang = 1;
                TempoAnGang = SetTimer("AnuncioGang", 30000, 0);
				print(gstring);
				new cofregov[64];
			    format(cofregov, sizeof(cofregov), "Configs/CofreGov.cfg");
			    if(DOF2_FileExists(cofregov)){
			        new Conta = DOF2_GetInt(cofregov, "Dinheiro") + 15;
				    DOF2_SetInt(cofregov, "Dinheiro", Conta);
			    }
			}
		}
		return 1;
	}
	CMD:statuscel(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
	        if(PlayerInfo[playerid][pVIP] > 0 || PlayerInfo[playerid][pSocio] > 0 || PlayerInfo[playerid][pAdmin] > 0){
				if (!PhoneOnline[playerid]){
					PhoneOnline[playerid] = 1;
                    SendClientMessage(playerid, COR_GRAD2, "O Seu Telefone foi Desligado !");
					CellTime[playerid] = 0;
					Mobile[playerid] = 255;
					new pSpecialAction = GetPlayerSpecialAction(playerid);
					if (pSpecialAction == SPECIAL_ACTION_USECELLPHONE){ SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE); }
				}else if (PhoneOnline[playerid]){
					PhoneOnline[playerid] = 0;
					SendClientMessage(playerid, COR_GRAD2, "O Seu Telefone foi Ligado !");
				}
			}
		}
		return 1;
	}
	CMD:eu(playerid, params[]){
    	if(PlayerMutado[playerid] == 1){ return SendClientMessage(playerid, TEAM_CYAN_COR, "Você não pode falar, pois foi calado !");}
		if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid, COR_AMARELO, "Você não pode mandar /eu da cadeia!");}
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0){ return SendClientMessage(playerid, COR_GREY, "Você não está logado !");}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' ')){idxzcmd++;}
			new offset = idxzcmd;
			new result[85];
			while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1))){
				result[idxzcmd - offset] = cmdtext[idxzcmd];
				idxzcmd++;
			}
			result[idxzcmd - offset] = EOS;
			if(!strlen(result)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /eu [action]");}
			if(GetTickCount() - TempoChatEu[playerid] < 3000){ return SendClientMessage(playerid,COR_GRAD1,"Você só pode escrever uma mensagem a cada 3 segundos.");}
            if(TentouDivulgar(result)){
  				 GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
  				 format(gstring, 128, "AdmAviso: [%d]%s tentou divulgar: %s.",playerid,PlayerName,result);
				 ABroadCast(COR_AMARELO,gstring,1);
				 DivulgouLog(gstring);
        	 	 return 1;
		 	}
		 	TempoChatEu[playerid] = GetTickCount();
			format(gstring, sizeof(gstring), "* %s %s", sendername, result);
			ProxDetector(40.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
			printf("%s", gstring);
		}
		return 1;
	}
	CMD:m(playerid, params[]) return Dudu:megafone(playerid);
	CMD:megafone(playerid, params[]){
    	if(PlayerMutado[playerid] == 1){ return SendClientMessage(playerid, TEAM_CYAN_COR, "Você não pode falar, pois foi calado !");}
		if(PlayerInfo[playerid][pJailed] == 2){ return SendClientMessage(playerid, COR_AMARELO, "Você não pode usar megafone agora!");}
	    if(IsPlayerConnected(playerid)){
            if(IsACop(playerid) || GetPlayerOrg(playerid) == 7 || PlayerInfo[playerid][pEmprego] == 7){
			     if(OnDuty[playerid] != 1 && PlayerInfo[playerid][pEmprego] != 7 && GetPlayerOrg(playerid) != 7){ return SendClientMessage(playerid, COR_GREY, "Você não Bateu o cartão!");}
			     GetPlayerName(playerid, sendername, sizeof(sendername));
			     new length = strlen(cmdtext);
			     while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' ')){idxzcmd++;}
			     new offset = idxzcmd;
			     new result[256];
			     while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1))){
				      result[idxzcmd - offset] = cmdtext[idxzcmd];
				      idxzcmd++;
			     }
			     result[idxzcmd - offset] = EOS;
			     if(!strlen(result)){ return SendClientMessage(playerid, COR_GRAD2, "USE: (/m)egafone [megafone chat]");}
			     if(GetTickCount() - TempoChatMegaFone[playerid] < 3000){ return SendClientMessage(playerid,COR_GRAD1,"Você só pode escrever uma mensagem a cada 3 segundos.");}
                 if(TentouDivulgar(result)){
            	  	  GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
            	      format(gstring, 128, "AdmAviso: [%d]%s tentou divulgar: %s.",playerid,PlayerName,result);
				      ABroadCast(COR_AMARELO,gstring,1);
				      DivulgouLog(gstring);
            	      return 1;
				 }
			     if(IsACop(playerid) || PlayerInfo[playerid][pEmprego] == 7 || GetPlayerOrg(playerid) == 7){
				       if(IsACop(playerid)){
					        format(gstring, sizeof(gstring), "[%s]%s: %s",NomeORG(playerid), sendername, result);
					        ProxDetector(60.0, playerid, gstring,COR_AMARELO,COR_AMARELO,COR_AMARELO,COR_AMARELO,COR_AMARELO);
					   }else if(GetPlayerOrg(playerid) == 7){
                            format(gstring, sizeof(gstring), "[Governo]%s: %s", sendername, result);
					        ProxDetector(60.0, playerid, gstring,COR_AMARELO,COR_AMARELO,COR_AMARELO,COR_AMARELO,COR_AMARELO);
			           }else if(PlayerInfo[playerid][pEmprego] == 7){
				            format(gstring, sizeof(gstring), "[Agente Penitenciário]%s: %s", sendername, result);
				            ProxDetector(60.0, playerid, gstring,COR_AMARELO,COR_AMARELO,COR_AMARELO,COR_AMARELO,COR_AMARELO);
				       }
				       TempoChatMegaFone[playerid] = GetTickCount();
				       printf("%s", gstring);
			     }else{ return SendClientMessage(playerid, COR_GRAD2, "Você não faz parte de nenhuma equipe !");}
	  	     }else{ return SendClientMessage(playerid, COR_GREY, "Você não é um Oficial !");}
	 	}
        return 1;
	}
	CMD:r(playerid, params[]) return Dudu:radio(playerid);
    CMD:radio(playerid, params[]){
		if(PlayerMutado[playerid] == 1){ return SendClientMessage(playerid, TEAM_CYAN_COR, "Você não pode falar, pois foi calado.");}
        if(PlayerInfo[playerid][pJailed] == 2){ return SendClientMessage(playerid, TEAM_CYAN_COR, "Você não pode usar este comando agora!");}
	    if(IsPlayerConnected(playerid)){
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' ')){ idxzcmd++; }
			new offset = idxzcmd;
			new result[80];
			while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1))){
				result[idxzcmd - offset] = cmdtext[idxzcmd];
				idxzcmd++;
			}
			result[idxzcmd - offset] = EOS;
			if(!strlen(result)){ return SendClientMessage(playerid, COR_RAD, "USE: (/r)adio [radio chat]");}
			if(GetTickCount() - TempoChatCop[playerid] < 3000){ return SendClientMessage(playerid,COR_GRAD1,"Você só pode escrever uma mensagem a cada 3 segundos.");}
            if(TentouDivulgar(result)){
            	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
            	format(gstring, 128, "AdmAviso: [%d]%s tentou divulgar: %s.",playerid,PlayerName,result);
				ABroadCast(COR_AMARELO,gstring,1);
				DivulgouLog(gstring);
            	return 1;
            }
			if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1){
				if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Comandante %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Capitão %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Tenente %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Sargento %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Cabo %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Cadete %s: %s **", sendername, result); }
				else { format(gstring, sizeof(gstring), "** Guarda %s: %s. **", sendername, result);}
				TempoChatCop[playerid] = GetTickCount();
				SendFamilyMessage(1,COR_RAD,gstring);
				printf("%s", gstring);
				format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/r).", PlayerName(playerid));
	            ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				return 1;
			}else if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7){
				if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Governador %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Acessor de Camara %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Acessor %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Vereador %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Segurança %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Motorista %s: %s **", sendername, result); }
				else{ format(gstring, sizeof(gstring), "** Motorista %s: %s. **", sendername, result);}
				TempoChatCop[playerid] = GetTickCount();
				SendFamilyMessage(7,COR_RAD,gstring);
				printf("%s", gstring);
				format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/r).", PlayerName(playerid));
	            ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				return 1;
			}else if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2){
			    if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Comandante %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Tenente Coronel %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Major %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Cabo %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Soldado %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Novato %s: %s **", sendername, result); }
				else{ format(gstring, sizeof(gstring), "** Recruta %s: %s. **", sendername, result);}
				TempoChatCop[playerid] = GetTickCount();
				SendFamilyMessage(2,COR_RAD,gstring);
				printf("%s", gstring);
				format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/r).", PlayerName(playerid));
	            ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				return 1;
			}else if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3){
			    if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** General %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Tenente Coronel %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Major %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Capitão %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Sargento %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Soldado %s: %s **", sendername, result); }
				else{ format(gstring, sizeof(gstring), "** Soldado %s: %s. **", sendername, result);}
				TempoChatCop[playerid] = GetTickCount();
				SendFamilyMessage(3,COR_RAD,gstring);
				printf("%s", gstring);
				format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/r).", PlayerName(playerid));
	            ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				return 1;
			}else if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4){
			    if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Diretor Hospitalar %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Bombeiro Chefe %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Bombeiro %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Médico %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Enfermeiro %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Auxiliar de Enfermeiro %s: %s **", sendername, result); }
				else{ format(gstring, sizeof(gstring), "** Auxiliar de Enfermeiro %s: %s. **", sendername, result);}
				TempoChatCop[playerid] = GetTickCount();
				SendFamilyMessage(4,COR_RAD,gstring);
				printf("%s", gstring);
				format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/r).", PlayerName(playerid));
	            ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				return 1;
			}else if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12){
			    if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** General %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Tenente Coronel %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Major %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Capitão %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Sargento %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Soldado %s: %s **", sendername, result); }
				else { format(gstring, sizeof(gstring), "** Soldado %s: %s. **", sendername, result);}
                TempoChatCop[playerid] = GetTickCount();
				SendFamilyMessage(12,COR_RAD,gstring);
				printf("%s", gstring);
				format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/r).", PlayerName(playerid));
	            ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				return 1;
			}else if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13){
			    if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** General %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Tenente Coronel %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Major %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Capitão %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Sargento %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Soldado %s: %s **", sendername, result); }
				else{ format(gstring, sizeof(gstring), "** Soldado %s: %s. **", sendername, result);}
				TempoChatCop[playerid] = GetTickCount();
				SendFamilyMessage(13,COR_RAD,gstring);
				printf("%s", gstring);
				format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/r).", PlayerName(playerid));
	            ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				return 1;
			}else if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17){
				if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Líder %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Perito Criminal %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Atirador de Elite %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Agente Do G.E.R %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Agente Do G.O.E %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Novato %s: %s **", sendername, result); }
				else{ format(gstring, sizeof(gstring), "** Agente %s: %s. **", sendername, result);}
				TempoChatCop[playerid] = GetTickCount();
				SendFamilyMessage(17,COR_RAD,gstring);
				printf("%s", gstring);
				format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/r).", PlayerName(playerid));
	            ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				return 1;
			}else if(PlayerInfo[playerid][pMembro]== 25 || PlayerInfo[playerid][pLider]== 25){
				if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Delegado %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Sub-Líder %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Capitão %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Atirador %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Espião %s: %s **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Agente %s: %s **", sendername, result); }
				else{ format(gstring, sizeof(gstring), "** Agente %s: %s. **", sendername, result);}
				TempoChatCop[playerid] = GetTickCount();
				SendFamilyMessage(25,COR_RAD,gstring);
				printf("%s", gstring);
				format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/r).", PlayerName(playerid));
	            ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				return 1;
			}else{ return SendClientMessage(playerid, COR_GRAD2, "Você não é de nenhuma equipe !");}
		}
		return 1;
    }
    CMD:cg(playerid, params[]){
        if(TendoGuerra == 0){ return SendClientMessage(playerid, COR_GRAD1, "Não está ocorrendo uma guerra.");}
		if(PlayerMutado[playerid] == 1){ return SendClientMessage(playerid, TEAM_CYAN_COR, "Você não pode falar, pois foi calado.");}
        if(PlayerInfo[playerid][pJailed] == 2){ return SendClientMessage(playerid, TEAM_CYAN_COR, "Você não pode usar este comando agora!");}
	    if(IsPlayerConnected(playerid)){
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' ')){ idxzcmd++; }
			new offset = idxzcmd;
			new result[80];
			while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1))){
				result[idxzcmd - offset] = cmdtext[idxzcmd];
				idxzcmd++;
			}
			result[idxzcmd - offset] = EOS;
			if(!strlen(result)){ return SendClientMessage(playerid, COR_RAD, "USE: /cg [texto]");}
			if(GetTickCount() - TempoChatCop[playerid] < 3000){ return SendClientMessage(playerid,COR_GRAD1,"Você só pode escrever uma mensagem a cada 3 segundos."); }
            if(TentouDivulgar(result)){
            	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
            	format(gstring, 128, "AdmAviso: [%d]%s tentou divulgar: %s.",playerid,PlayerName,result);
				ABroadCast(COR_AMARELO,gstring,1);
				DivulgouLog(gstring);
            	return 1;
            }
			if(GetPlayerOrg(playerid) == 3 || GetPlayerOrg(playerid) == 6 || GetPlayerOrg(playerid) == 16){
			    printf("%s", gstring);
				format(gstring, sizeof(gstring), "%s[Chat Guerra %s] %s: %s **",GetCorORG(GetPlayerOrg(playerid)), NomeORG(playerid), PlayerName(playerid), result);
				SendFamilyMessage(GetPlayerOrg(playerid),-1,gstring);
				TempoChatCop[playerid] = GetTickCount();
			} else { return SendClientMessage(playerid, COR_GRAD2, "Você não é de nenhuma equipe !");}
		}
		return 1;
    }
    CMD:batercartao(playerid, params[]){
        if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_AMARELO," Você não pode batercartao na cadeia!");}
        if(IsPlayerConnected(playerid)){
            GetPlayerName(playerid, sendername, sizeof(sendername));
            if(IsACop(playerid)){
                if(PlayerToPoint(2, playerid,252.5212,69.6307,1003.6406) || PlayerToPoint(2,playerid,255.0129,76.0857,1003.6406) || PlayerToPoint(2,playerid,240.6702,112.7933,1003.2188) || PlayerToPoint(2, playerid,302.6840,-1529.6685,24.9219) || PlayerToPoint(2, playerid,2688.4722,-2443.8438,13.4729) || PlayerToPoint(2, playerid,326.4964,306.9705,999.1484) || PlayerToPoint(1, playerid,914.5157,-1235.1240,17.2109)
			    || PlayerToPoint(2, playerid,229.7716,165.0986,1003.0234) || PlayerToPoint(2, playerid,1709.7360,-1642.6481,20.2188) || PlayerToPoint(2, playerid,2497.8533,2389.3938,4.2109) || PlayerToPoint(2, playerid,2080.9387,-1376.1432,300.5588) || PlayerToPoint(2, playerid,2251.4067,2490.9138,10.9908)){
                    if(OnDuty[playerid]==0){
                        SetPlayerArmour(playerid, 100);
                        SetPlayerHealth(playerid, 100);
                        OnDuty[playerid] = 1;
                        EmpregoDuty[playerid] = 2;
                        Copsronda += 1;
                        if (PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1){
			                  if(PlayerInfo[playerid][pCargo] == 1) { SetPlayerSkin(playerid, 281); PlayerInfo[playerid][pSkin] = 281; }
			                  if(PlayerInfo[playerid][pCargo] == 2) { SetPlayerSkin(playerid, 281); PlayerInfo[playerid][pSkin] = 281; }
			                  if(PlayerInfo[playerid][pCargo] == 3) { SetPlayerSkin(playerid, 280); PlayerInfo[playerid][pSkin] = 280; }
			                  if(PlayerInfo[playerid][pCargo] == 4) { SetPlayerSkin(playerid, 267); PlayerInfo[playerid][pSkin] = 267; }
			                  if(PlayerInfo[playerid][pCargo] == 5) { SetPlayerSkin(playerid, 266); PlayerInfo[playerid][pSkin] = 266; }
			                  if(PlayerInfo[playerid][pCargo] == 6) { SetPlayerSkin(playerid, 265); PlayerInfo[playerid][pSkin] = 265; }
			                  if(PlayerInfo[playerid][pSex] == 2) { SetPlayerSkin(playerid, 195); PlayerInfo[playerid][pSkin] = 195; }
                              SetPlayerColor(playerid,COR_PM);
                        }
                        if (PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2){
                            if(PlayerInfo[playerid][pCargo] == 1) { SetPlayerSkin(playerid, 285); PlayerInfo[playerid][pSkin] = 285; }
                            if(PlayerInfo[playerid][pCargo] == 2) { SetPlayerSkin(playerid, 285); PlayerInfo[playerid][pSkin] = 285; }
                            if(PlayerInfo[playerid][pCargo] == 3) { SetPlayerSkin(playerid, 285); PlayerInfo[playerid][pSkin] = 285; }
                            if(PlayerInfo[playerid][pCargo] == 4) { SetPlayerSkin(playerid, 285); PlayerInfo[playerid][pSkin] = 285; }
                            if(PlayerInfo[playerid][pCargo] == 5) { SetPlayerSkin(playerid, 285); PlayerInfo[playerid][pSkin] = 285; }
                            if(PlayerInfo[playerid][pCargo] == 6) { SetPlayerSkin(playerid, 171); PlayerInfo[playerid][pSkin] = 171; }
                            if(PlayerInfo[playerid][pSex] == 2) { SetPlayerSkin(playerid, 298); PlayerInfo[playerid][pSkin] = 298; }
                            SetPlayerColor(playerid,COR_BOPE);
                        }
                        if (PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3){
                            if(PlayerInfo[playerid][pCargo] == 1) { SetPlayerSkin(playerid, 287); PlayerInfo[playerid][pSkin] = 287; }
                            if(PlayerInfo[playerid][pCargo] == 2) { SetPlayerSkin(playerid, 287); PlayerInfo[playerid][pSkin] = 287; }
                            if(PlayerInfo[playerid][pCargo] == 3) { SetPlayerSkin(playerid, 287); PlayerInfo[playerid][pSkin] = 287; }
                            if(PlayerInfo[playerid][pCargo] == 4) { SetPlayerSkin(playerid, 287); PlayerInfo[playerid][pSkin] = 287; }
                            if(PlayerInfo[playerid][pCargo] == 5) { SetPlayerSkin(playerid, 287); PlayerInfo[playerid][pSkin] = 287; }
                            if(PlayerInfo[playerid][pCargo] == 6) { SetPlayerSkin(playerid, 73); PlayerInfo[playerid][pSkin] = 73; }
                            if(PlayerInfo[playerid][pSex] == 2) { SetPlayerSkin(playerid, 191); PlayerInfo[playerid][pSkin] = 191; }
                            SetPlayerColor(playerid,COR_EXE);
                        }
                        if (PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12){
                            if(PlayerInfo[playerid][pCargo] == 1) { SetPlayerSkin(playerid, 284); PlayerInfo[playerid][pSkin] = 284; }
                            if(PlayerInfo[playerid][pCargo] == 2) { SetPlayerSkin(playerid, 284); PlayerInfo[playerid][pSkin] = 284; }
                            if(PlayerInfo[playerid][pCargo] == 3) { SetPlayerSkin(playerid, 282); PlayerInfo[playerid][pSkin] = 282; }
                            if(PlayerInfo[playerid][pCargo] == 4) { SetPlayerSkin(playerid, 284); PlayerInfo[playerid][pSkin] = 284; }
                            if(PlayerInfo[playerid][pCargo] == 5) { SetPlayerSkin(playerid, 284); PlayerInfo[playerid][pSkin] = 284; }
                            if(PlayerInfo[playerid][pCargo] == 6) { SetPlayerSkin(playerid, 166); PlayerInfo[playerid][pSkin] = 166; }
                            if(PlayerInfo[playerid][pSex] == 2) { SetPlayerSkin(playerid, 141); PlayerInfo[playerid][pSkin] = 141; }
                            SetPlayerColor(playerid,COR_ROTA);
                        }
                        if (PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13){
                            if(PlayerInfo[playerid][pCargo] == 1) { SetPlayerSkin(playerid, 285); PlayerInfo[playerid][pSkin] = 285; }
                            if(PlayerInfo[playerid][pCargo] == 2) { SetPlayerSkin(playerid, 285); PlayerInfo[playerid][pSkin] = 285; }
                            if(PlayerInfo[playerid][pCargo] == 3) { SetPlayerSkin(playerid, 285); PlayerInfo[playerid][pSkin] = 285; }
                            if(PlayerInfo[playerid][pCargo] == 4) { SetPlayerSkin(playerid, 285); PlayerInfo[playerid][pSkin] = 285; }
                            if(PlayerInfo[playerid][pCargo] == 5) { SetPlayerSkin(playerid, 285); PlayerInfo[playerid][pSkin] = 285; }
                            if(PlayerInfo[playerid][pCargo] == 6) { SetPlayerSkin(playerid, 57); PlayerInfo[playerid][pSkin] = 57; }
                            if(PlayerInfo[playerid][pSex] == 2) { SetPlayerSkin(playerid, 298); PlayerInfo[playerid][pSkin] = 298; }
                            SetPlayerColor(playerid,COR_GATE);
                        }
                        if (PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17){
                            if(PlayerInfo[playerid][pCargo] == 1) { SetPlayerSkin(playerid, 59); PlayerInfo[playerid][pSkin] = 59; }
                            if(PlayerInfo[playerid][pCargo] == 2) { SetPlayerSkin(playerid, 59); PlayerInfo[playerid][pSkin] = 59; }
                            if(PlayerInfo[playerid][pCargo] == 3) { SetPlayerSkin(playerid, 124); PlayerInfo[playerid][pSkin] = 124; }
                            if(PlayerInfo[playerid][pCargo] == 4) { SetPlayerSkin(playerid, 299); PlayerInfo[playerid][pSkin] = 299; }
                            if(PlayerInfo[playerid][pCargo] == 5) { SetPlayerSkin(playerid, 240); PlayerInfo[playerid][pSkin] = 240; }
                            if(PlayerInfo[playerid][pCargo] == 6) { SetPlayerSkin(playerid, 186); PlayerInfo[playerid][pSkin] = 186; }
                            if(PlayerInfo[playerid][pSex] == 2) { SetPlayerSkin(playerid, 141); PlayerInfo[playerid][pSkin] = 141; }
                            SetPlayerColor(playerid,COR_PC);
                        }
                        if (PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25){
                            if(PlayerInfo[playerid][pCargo] == 1) { SetPlayerSkin(playerid, 185); PlayerInfo[playerid][pSkin] = 185; }
                            if(PlayerInfo[playerid][pCargo] == 2) { SetPlayerSkin(playerid, 185); PlayerInfo[playerid][pSkin] = 185; }
                            if(PlayerInfo[playerid][pCargo] == 3) { SetPlayerSkin(playerid, 286); PlayerInfo[playerid][pSkin] = 286; }
                            if(PlayerInfo[playerid][pCargo] == 4) { SetPlayerSkin(playerid, 286); PlayerInfo[playerid][pSkin] = 286; }
                            if(PlayerInfo[playerid][pCargo] == 5) { SetPlayerSkin(playerid, 295); PlayerInfo[playerid][pSkin] = 295; }
                            if(PlayerInfo[playerid][pCargo] == 6) { SetPlayerSkin(playerid, 295); PlayerInfo[playerid][pSkin] = 295; }
                            if(PlayerInfo[playerid][pSex] == 2) { SetPlayerSkin(playerid, 224); PlayerInfo[playerid][pSkin] = 224; }
                            SetPlayerColor(playerid,COR_PF);
                        }
                        SendClientMessage(playerid, COR_LIGHTRED, "Você colocou a sua farda.");
                    }else{
                        OnDuty[playerid] = 0;
                        EmpregoDuty[playerid] = 0;
                        Copsronda -= 1;
                        SetPlayerSkin(playerid, skincop[playerid]);
                        PlayerInfo[playerid][pSkin] = skincop[playerid];
                        SetPlayerColor(playerid,COR_BRANCO);
                        if(PlayerInfo[playerid][pSex] ==1){ GetPlayerSkin(playerid); }
                        if(PlayerInfo[playerid][pSex] == 2){ GetPlayerSkin(playerid); }
                        SendClientMessage(playerid, COR_LIGHTRED, "Você retirou a sua farda.");
                    }
                }else{ return SendClientMessage(playerid, COR_GRAD2, "Você não está em um vestiário !"); }
            }
            else if(PlayerInfo[playerid][pMembro] == 4||PlayerInfo[playerid][pLider] == 4){
                if(EmpregoDuty[playerid] == 1){
                    SendClientMessage(playerid, COR_LIGHTBLUE, "* Agora Você Está De Folga, e não receberá chamados!");
                    EmpregoDuty[playerid] = 0;
                    Medics -= 1;
                }else{
                    EmpregoDuty[playerid] = 1;
                    SendClientMessage(playerid, COR_LIGHTBLUE, "* Agora você está de plantão com o seu trabalho e irá receber chamadas de pessoas que precisem.");
                    format(gstring, sizeof(gstring), "[Médico Disponível] {FFFFFF}%s está em serviço, /servico medico.", sendername, TransportValue[playerid]);
                    SendClientMessageToAll(COR_SAMU,gstring);
                    Medics += 1;
                }
            }else if(PlayerInfo[playerid][pMembro] == 14||PlayerInfo[playerid][pLider] == 14){
                if(EmpregoDuty[playerid] == 1)
                {
                    SendClientMessage(playerid, COR_LIGHTBLUE, "* Agora Você Está De Folga, e não receberá chamados!");
                    EmpregoDuty[playerid] = 0;
                    Mechanics -= 1;
                }else{
                    EmpregoDuty[playerid] = 1;
                    SendClientMessage(playerid, COR_LIGHTBLUE, "* Agora você está de plantão com o seu trabalho e irá receber chamadas de pessoas que precisem.");
                    format(gstring, sizeof(gstring), "[Mecânico Disponível] {FFFFFF}%s está em serviço, /servico mecanico.", sendername, TransportValue[playerid]);
                    SendClientMessageToAll(COR_MECANICO,gstring);
                    Mechanics += 1;
                }
            }
        }
        return 1;
    }
	CMD:kitadm(playerid, params[]){
		if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_AMARELO,"Você não pode usar seu kit agora!"); }
	    if(NaPorraDoEvento[playerid] == true){ return SendClientMessage(playerid, COR_GRAD1, "Você não pode usar seu kit durante um evento!"); }
        if(PlayerInfo[playerid][pGunLic] == 0){ return SendClientMessage(playerid, COR_GRAD1, "Você não possui licencas de armas por isso nao pode ir equipar !"); }
		if (PlayerInfo[playerid][pAdmin] >= 1){
			if(AdminTrabalhando[playerid] < 0){ return SendClientMessage(playerid, COR_GRAD1, "Você não está em modo jogo! (/trabalhar)"); }
			SendClientMessage(playerid,COR_GREEN,"Você pegou o seu KitAdmin!");
			format(gstring, sizeof(gstring), "Admin: %s Pegou Seu KitAdmin.", PlayerName(playerid));
			ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
			ResetPlayerWeaponsEx(playerid);
			GivePlayerWeaponEx(playerid, 43, 999);
			GivePlayerWeaponEx(playerid, 17, 49);
			GivePlayerWeaponEx(playerid, 36, 5);
			GivePlayerWeaponEx(playerid, 34, 10);
			GivePlayerWeaponEx(playerid, 31, 999);
			GivePlayerWeaponEx(playerid, 29, 999);
			GivePlayerWeaponEx(playerid, 25, 999);
			GivePlayerWeaponEx(playerid, 24, 299);
			SetPlayerArmour(playerid, 130);
			SetPlayerHealth(playerid, 100);
		}
		return 1;
	}
	CMD:kitadmdono(playerid, params[]){
		if (PlayerInfo[playerid][pAdmin] >= 1340){
		    if(PlayerInfo[playerid][pGunLic] == 0){ return SendClientMessage(playerid, COR_GRAD1, "Você não possui licencas de armas por isso nao pode ir equipar !"); }
		    SendClientMessage(playerid,COR_GREEN,"Você pegou o seu kit adm dono ^^ !");
		    ResetPlayerWeaponsEx(playerid);
			GivePlayerWeaponEx(playerid, 46, 1);
			GivePlayerWeaponEx(playerid, 24, 9999999999);
			GivePlayerWeaponEx(playerid, 35, 9999999999);
			GivePlayerWeaponEx(playerid, 31, 9999999999);
			GivePlayerWeaponEx(playerid, 29, 9999999999);
			GivePlayerWeaponEx(playerid, 25, 9999999999);
			GivePlayerWeaponEx(playerid, 4, 1);
			GivePlayerWeaponEx(playerid, 34, 9999999999);
			GivePlayerWeaponEx(playerid, 43, 9999999999);
			GivePlayerWeaponEx(playerid, 16, 9999999999);
			GivePlayerWeaponEx(playerid, 38, 9999999999);
			SetPlayerArmour(playerid, 130);
			SetPlayerHealth(playerid, 100);
		}
		return 1;
	}
	CMD:esconder(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
	        new item[150];
	        new quantia;
			item = strtok(cmdtext, idxzcmd);
			if(!strlen(item)){
				SendClientMessage(playerid, COR_BRANCO, "|__________________ Esconder __________________|");
				SendClientMessage(playerid, COR_BRANCO, "USE: /esconder [Nome]");
				SendClientMessage(playerid, COR_GREY, "Nomes: Maconha, Cocaina, Crack, Lsd, Materiais");
				SendClientMessage(playerid, COR_GREEN, "|____________________________________________|");
				return 1;
			}
			if(strcmp(item,"maconha(playerid, params[]){
			    tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /esconder maconha [quantidade]"); }
				quantia = strval(tmpzcmd);
                if(PlayerToPoint(2.0, playerid, 2151.7317,-1014.5330,62.7614) || PlayerToPoint(2.0, playerid, 1916.9713,-1415.4165,13.8283) || PlayerToPoint(2.0, playerid, 1971.4496,-1198.3518,20.5492)){
			        if(quantia < 1 || quantia > 1000){ return SendClientMessage(playerid, COR_GRAD2, "não pode esconder menos de 1 e nem mais de 1000"); }
			        if(PlayerInfo[playerid][pMaconha] >= quantia){
						PlayerInfo[playerid][pMaconha] = PlayerInfo[playerid][pMaconha]-quantia;
						PlayerInfo[playerid][pSafeDrogas] = PlayerInfo[playerid][pSafeDrogas]+quantia;
						format(gstring, sizeof(gstring), "* Você escondeu %d gramas!",quantia);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						return 1;
					}else{ return SendClientMessage(playerid, COR_GREY, "Você não tem tudo isso!"); }
         		} else { return SendClientMessage(playerid, COR_GREY, "Você não está em um território de drogas! /gps");}
			}
			if(strcmp(item,"crack(playerid, params[]){
			    tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /esconder crack [quantidade]");}
				quantia = strval(tmpzcmd);
                if(PlayerToPoint(2.0, playerid, 2151.7317,-1014.5330,62.7614) || PlayerToPoint(2.0, playerid, 1916.9713,-1415.4165,13.8283) || PlayerToPoint(2.0, playerid, 1971.4496,-1198.3518,20.5492)){
                    if(quantia < 1 || quantia > 1000){ return SendClientMessage(playerid, COR_GRAD2, "não pode esconder menos de 1 e nem mais de 1000"); }
			        if(PlayerInfo[playerid][pCrack] >= quantia){
						PlayerInfo[playerid][pCrack] = PlayerInfo[playerid][pCrack]-quantia;
						PlayerInfo[playerid][pSafeDrogas3] = PlayerInfo[playerid][pSafeDrogas3]+quantia;
						format(gstring, sizeof(gstring), "* Você escondeu %d gramas!",quantia);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						return 1;
					}else{ return SendClientMessage(playerid, COR_GREY, "Você não tem tudo isso!"); }
         		}else{ return SendClientMessage(playerid, COR_GREY, "Você não está em um território de drogas! /gps");}
			}
			if(strcmp(item,"cocaina(playerid, params[]){
			    tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /esconder cocaina [quantidade]");}
				quantia = strval(tmpzcmd);
                if(PlayerToPoint(2.0, playerid, 2151.7317,-1014.5330,62.7614) || PlayerToPoint(2.0, playerid, 1916.9713,-1415.4165,13.8283) || PlayerToPoint(2.0, playerid, 1971.4496,-1198.3518,20.5492)){
				    if(quantia < 1 || quantia > 1000){ return SendClientMessage(playerid, COR_GRAD2, "não pode esconder menos de 1 e nem mais de 1000");}
			        if(PlayerInfo[playerid][pCocaina] >= quantia){
						PlayerInfo[playerid][pCocaina] = PlayerInfo[playerid][pCocaina]-quantia;
						PlayerInfo[playerid][pSafeDrogas2] = PlayerInfo[playerid][pSafeDrogas2]+quantia;
						format(gstring, sizeof(gstring), "* Você escondeu %d gramas!",quantia);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						return 1;
					}else{ return SendClientMessage(playerid, COR_GREY, "Você não tem tudo isso!"); }
         		}else{ return SendClientMessage(playerid, COR_GREY, "Você não está em um território de drogas! /gps");}
			}
			if(strcmp(item,"lsd(playerid, params[]){
			    tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /esconder lsd [quantidade]"); }
				quantia = strval(tmpzcmd);
                if(PlayerToPoint(2.0, playerid, 2151.7317,-1014.5330,62.7614) || PlayerToPoint(2.0, playerid, 1916.9713,-1415.4165,13.8283) || PlayerToPoint(2.0, playerid, 1971.4496,-1198.3518,20.5492)){
                    if(quantia < 1 || quantia > 1000){ return SendClientMessage(playerid, COR_GRAD2, "não pode esconder menos de 1 e nem mais de 1000");}
			        if(PlayerInfo[playerid][pLsd] >= quantia)
					{
						PlayerInfo[playerid][pLsd] = PlayerInfo[playerid][pLsd]-quantia;
						PlayerInfo[playerid][pSafeDrogas4] = PlayerInfo[playerid][pSafeDrogas4]+quantia;
						format(gstring, sizeof(gstring), "* Você escondeu %d gramas!",quantia);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						return 1;
					}else{ return SendClientMessage(playerid, COR_GREY, "Você não tem tudo isso!");}
         		}else{ return SendClientMessage(playerid, COR_GREY, "Você não está em um território de drogas! /gps");}
			}
			if(strcmp(item,"materiais(playerid, params[]){
			    tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /esconder materiais [quantidade]");}
				quantia = strval(tmpzcmd);
                if(PlayerToPoint(2.0, playerid, 1173.2739,-2037.0060,69.1413) || PlayerToPoint(2.0, playerid, 1757.1095,-1943.4386,13.5703) || PlayerToPoint(2.0, playerid, -718.2471,-1938.9644,8.3187) || PlayerToPoint(5.0, playerid, -13.5814, -2502.1829, 36.6555)){
			        if(quantia < 1 || quantia > 10000){ return SendClientMessage(playerid, COR_GRAD2, "não pode pegar menos de 1 e nem mais de 10000");}
					if(PlayerInfo[playerid][pMats] >= quantia){
						PlayerInfo[playerid][pMats] = PlayerInfo[playerid][pMats]-quantia;
						PlayerInfo[playerid][psMats] = PlayerInfo[playerid][psMats]+quantia;
						format(gstring, sizeof(gstring), "* Você escondeu %d materiais!",quantia);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						return 1;
					}else{ return SendClientMessage(playerid, COR_GREY, "Você não tem tudo isso !");}
         		}else{ return SendClientMessage(playerid, COR_GREY, "Você não está na caixa de materiais !");}
			}
		}
	}
	CMD:pegar(playerid, params[]){
	    if(IsPlayerConnected(playerid)){
	        new item[150];
	        new quantia;
	        new price, tel;
			new level = PlayerInfo[playerid][pDrogasSkill];
			item = strtok(cmdtext, idxzcmd);
			if(!strlen(item)){
				SendClientMessage(playerid, COR_BRANCO, "|____________________ Pegar ___________________|");
				SendClientMessage(playerid, COR_BRANCO, "USE: /Pegar [Nome]");
				SendClientMessage(playerid, COR_GREY, "Nomes: Maconha, Crack, Cocaina, Lsd");
				SendClientMessage(playerid, COR_GREY, "Nomes do Esconderijo: SMaconha, SCrack, SCocaina, SLsd, SMateriais");
				SendClientMessage(playerid, COR_GREEN, "|____________________________________________|");
				return 1;
			}
			if(strcmp(item,"maconha(playerid, params[]){
			    tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /pegar maconha [quantidade]");}
				quantia = strval(tmpzcmd);
                if(PlayerToPoint(2.0, playerid, 2151.7317,-1014.5330,62.7614) || PlayerToPoint(2.0, playerid, 1916.9713,-1415.4165,13.8283) || PlayerToPoint(2.0, playerid, 1971.4496,-1198.3518,20.5492)){
         		    if(IsAGangster(playerid)){
				        if(level >= 0 && level <= 50)
						{ tel = 10; if(quantia < 1 || quantia > 100) { SendClientMessage(playerid, COR_GREY, "Você não pode ir abaixo de 1 ou superior 100 graças ao lvl de sua Habilidade!"); return 1; } }
						else if(level >= 51 && level <= 100)
						{ tel = 10; if(quantia < 1 || quantia > 120) { SendClientMessage(playerid, COR_GREY, "Você não pode ir abaixo de 1 ou superior 120 graças ao lvl de sua Habilidade!"); return 1; } }
						else if(level >= 101 && level <= 200)
						{ tel = 10; if(quantia < 1 || quantia > 130) { SendClientMessage(playerid, COR_GREY, "Você não pode ir abaixo de 1 ou superior 130 graças ao lvl de sua Habilidade!"); return 1; } }
						else if(level >= 201 && level <= 400)
						{ tel = 10; if(quantia < 1 || quantia > 140) { SendClientMessage(playerid, COR_GREY, "Você não pode ir abaixo de 1 ou superior 140 graças ao lvl de sua Habilidade!"); return 1; } }
						else if(level >= 401)
						{ tel = 10; if(quantia < 1 || quantia > 150) { SendClientMessage(playerid, COR_GREY, "Você não pode ir abaixo de 1 ou superior 150 graças ao lvl de sua Habilidade!"); return 1; } }
						if(PlayerInfo[playerid][pMaconha] > 0){
							format(gstring, sizeof(gstring), "Você ainda tem %d gramas de maconha, Venda tudo primeiro !", PlayerInfo[playerid][pMaconha]);
							SendClientMessage(playerid, COR_GREY, gstring);
						    return 1;
						}
						price = quantia * tel;
						if(GetPlayerMoneyEx(playerid) > quantia){
							format(gstring, sizeof(gstring), "* Você comprou %d gramas por $%d.", quantia, price);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							GivePlayerMoneyEx(playerid, -price);
							SBizzInfo[12][sbTill] += price;
						    ExtortionSBiz(12, price);
							PlayerInfo[playerid][pMaconha] = quantia+PlayerInfo[playerid][pMaconha];
							return 1;
						}else{ return SendClientMessage(playerid, COR_GREY, "Você não tem dinheiro para isso !");}
         		    }else{ return SendClientMessage(playerid, COR_GREY, "Você não é um Gangster!");}
         		}else{ return SendClientMessage(playerid, COR_GREY, "Você não está em um território de drogas! /gps");}
			}
			if(strcmp(item,"crack(playerid, params[]){
			    tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /pegar crack [quantidade]");}
				quantia = strval(tmpzcmd);
                if(PlayerToPoint(2.0, playerid, 2151.7317,-1014.5330,62.7614) || PlayerToPoint(2.0, playerid, 1916.9713,-1415.4165,13.8283) || PlayerToPoint(2.0, playerid, 1971.4496,-1198.3518,20.5492)){
         		    if(IsAGangster(playerid)){
				        if(level >= 0 && level <= 50)
						{ tel = 10; if(quantia < 1 || quantia > 100) { SendClientMessage(playerid, COR_GREY, "Você não pode ir abaixo de 1 ou superior 100 graças ao lvl de sua Habilidade!"); return 1; } }
						else if(level >= 51 && level <= 100)
						{ tel = 10; if(quantia < 1 || quantia > 120) { SendClientMessage(playerid, COR_GREY, "Você não pode ir abaixo de 1 ou superior 120 graças ao lvl de sua Habilidade!"); return 1; } }
						else if(level >= 101 && level <= 200)
						{ tel = 10; if(quantia < 1 || quantia > 130) { SendClientMessage(playerid, COR_GREY, "Você não pode ir abaixo de 1 ou superior 130 graças ao lvl de sua Habilidade!"); return 1; } }
						else if(level >= 201 && level <= 400)
						{ tel = 10; if(quantia < 1 || quantia > 140) { SendClientMessage(playerid, COR_GREY, "Você não pode ir abaixo de 1 ou superior 140 graças ao lvl de sua Habilidade!"); return 1; } }
						else if(level >= 401)
						{ tel = 10; if(quantia < 1 || quantia > 150) { SendClientMessage(playerid, COR_GREY, "Você não pode ir abaixo de 1 ou superior 150 graças ao lvl de sua Habilidade!"); return 1; } }
						if(PlayerInfo[playerid][pCrack] > 0){
							format(gstring, sizeof(gstring), "Você ainda tem %d gramas de crack, Venda tudo primeiro !", PlayerInfo[playerid][pCrack]);
							SendClientMessage(playerid, COR_GREY, gstring);
						    return 1;
						}
						price = quantia * tel;
						if(GetPlayerMoneyEx(playerid) > quantia){
							format(gstring, sizeof(gstring), "* Você comprou %d gramas por $%d.", quantia, price);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							GivePlayerMoneyEx(playerid, -price);
							SBizzInfo[15][sbTill] += price;
						    ExtortionSBiz(15, price);
							PlayerInfo[playerid][pCrack] = quantia+PlayerInfo[playerid][pCrack];
							return 1;
						}else{ return SendClientMessage(playerid, COR_GREY, "Você não tem dinheiro para isso !");}
         		    }else{ return SendClientMessage(playerid, COR_GREY, "Você não é um Gangster!");}
         		}else{ SendClientMessage(playerid, COR_GREY, "Você não está em um território de drogas! /gps");}
			}
			if(strcmp(item,"cocaina(playerid, params[]){
			    tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /pegar cocaina [quantidade]");}
				quantia = strval(tmpzcmd);
                if(PlayerToPoint(2.0, playerid, 2151.7317,-1014.5330,62.7614) || PlayerToPoint(2.0, playerid, 1916.9713,-1415.4165,13.8283) || PlayerToPoint(2.0, playerid, 1971.4496,-1198.3518,20.5492)){
         		    if(IsAGangster(playerid)){
         		        if(level >= 0 && level <= 50)
						{ tel = 10; if(quantia < 1 || quantia > 100) { SendClientMessage(playerid, COR_GREY, "Você não pode ir abaixo de 1 ou superior 100 graças ao lvl de sua Habilidade!"); return 1; } }
						else if(level >= 51 && level <= 100)
						{ tel = 10; if(quantia < 1 || quantia > 120) { SendClientMessage(playerid, COR_GREY, "Você não pode ir abaixo de 1 ou superior 120 graças ao lvl de sua Habilidade!"); return 1; } }
						else if(level >= 101 && level <= 200)
						{ tel = 10; if(quantia < 1 || quantia > 130) { SendClientMessage(playerid, COR_GREY, "Você não pode ir abaixo de 1 ou superior 130 graças ao lvl de sua Habilidade!"); return 1; } }
						else if(level >= 201 && level <= 400)
						{ tel = 10; if(quantia < 1 || quantia > 140) { SendClientMessage(playerid, COR_GREY, "Você não pode ir abaixo de 1 ou superior 140 graças ao lvl de sua Habilidade!"); return 1; } }
						else if(level >= 401)
						{ tel = 10; if(quantia < 1 || quantia > 150) { SendClientMessage(playerid, COR_GREY, "Você não pode ir abaixo de 1 ou superior 150 graças ao lvl de sua Habilidade!"); return 1; } }
						if(PlayerInfo[playerid][pCocaina] > 0){
							format(gstring, sizeof(gstring), "Você ainda tem %d gramas de cocaina, Venda tudo primeiro !", PlayerInfo[playerid][pCocaina]);
							SendClientMessage(playerid, COR_GREY, gstring);
						    return 1;
						}
						price = quantia * tel;
						if(GetPlayerMoneyEx(playerid) > quantia){
							format(gstring, sizeof(gstring), "* Você comprou %d gramas por $%d.", quantia, price);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							GivePlayerMoneyEx(playerid, -price);
							SBizzInfo[14][sbTill] += price;
						    ExtortionSBiz(14, price);
							PlayerInfo[playerid][pCocaina] = quantia+PlayerInfo[playerid][pCocaina];
							return 1;
						}else{ return SendClientMessage(playerid, COR_GREY, "Você não tem dinheiro para isso !");}
         		    }else{ return SendClientMessage(playerid, COR_GREY, "Você não é um Gangster!"); }
         		}else{ return SendClientMessage(playerid, COR_GREY, "Você não está em um território de drogas! /gps");}
			}
			if(strcmp(item,"lsd(playerid, params[]){
			    tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /pegar lsd [quantidade]");}
				quantia = strval(tmpzcmd);
                if(PlayerToPoint(2.0, playerid, 2151.7317,-1014.5330,62.7614) || PlayerToPoint(2.0, playerid, 1916.9713,-1415.4165,13.8283) || PlayerToPoint(2.0, playerid, 1971.4496,-1198.3518,20.5492)){
         		    if(IsAGangster(playerid)){
                        if(level >= 0 && level <= 50)
						{ tel = 10; if(quantia < 1 || quantia > 100) { SendClientMessage(playerid, COR_GREY, "Você não pode ir abaixo de 1 ou superior 100 graças ao lvl de sua Habilidade!"); return 1; } }
						else if(level >= 51 && level <= 100)
						{ tel = 10; if(quantia < 1 || quantia > 120) { SendClientMessage(playerid, COR_GREY, "Você não pode ir abaixo de 1 ou superior 120 graças ao lvl de sua Habilidade!"); return 1; } }
						else if(level >= 101 && level <= 200)
						{ tel = 10; if(quantia < 1 || quantia > 130) { SendClientMessage(playerid, COR_GREY, "Você não pode ir abaixo de 1 ou superior 130 graças ao lvl de sua Habilidade!"); return 1; } }
						else if(level >= 201 && level <= 400)
						{ tel = 10; if(quantia < 1 || quantia > 140) { SendClientMessage(playerid, COR_GREY, "Você não pode ir abaixo de 1 ou superior 140 graças ao lvl de sua Habilidade!"); return 1; } }
						else if(level >= 401)
						{ tel = 10; if(quantia < 1 || quantia > 150) { SendClientMessage(playerid, COR_GREY, "Você não pode ir abaixo de 1 ou superior 150 graças ao lvl de sua Habilidade!"); return 1; } }
						if(PlayerInfo[playerid][pLsd] > 0)
						{
							format(gstring, sizeof(gstring), "Você ainda tem %d gramas de lsd, Venda tudo primeiro !", PlayerInfo[playerid][pLsd]);
							SendClientMessage(playerid, COR_GREY, gstring);
						    return 1;
						}
						price = quantia * tel;
						if(GetPlayerMoneyEx(playerid) > quantia){
							format(gstring, sizeof(gstring), "* Você comprou %d gramas por $%d.", quantia, price);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							GivePlayerMoneyEx(playerid, -price);
							PlayerInfo[playerid][pLsd] = quantia+PlayerInfo[playerid][pLsd];
							return 1;
						}else{ return SendClientMessage(playerid, COR_GREY, "Você não tem dinheiro para isso !");}
         		    }else{ return SendClientMessage(playerid, COR_GREY, "Você não é um Gangster!");}
         		}else{ return SendClientMessage(playerid, COR_GREY, "Você não está em um território de drogas! /gps");}
			}
			if(strcmp(item,"smaconha(playerid, params[]){
			    tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /pegar smaconha [quantidade]");}
				quantia = strval(tmpzcmd);
                if(PlayerToPoint(2.0, playerid, 2151.7317,-1014.5330,62.7614) || PlayerToPoint(2.0, playerid, 1916.9713,-1415.4165,13.8283) || PlayerToPoint(2.0, playerid, 1971.4496,-1198.3518,20.5492)){
         		    if(IsAGangster(playerid)){
				        if(quantia < 1 || quantia > 10000){ return SendClientMessage(playerid, COR_GRAD2, "não pode pegar menos de 1 e nem mais de 10000");}
						if(PlayerInfo[playerid][pSafeDrogas] >= quantia){
							PlayerInfo[playerid][pMaconha] = PlayerInfo[playerid][pMaconha]+quantia;
							PlayerInfo[playerid][pSafeDrogas] = PlayerInfo[playerid][pSafeDrogas]-quantia;
							format(gstring, sizeof(gstring), "* Você pegou %d gramas de maconha no esconderijo!",quantia);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							return 1;
						}else{ return SendClientMessage(playerid, COR_GRAD2, "Você não tem tudo isso!");}
         		    }else{ return SendClientMessage(playerid, COR_GREY, "Você não é um Gangster!");}
         		}else{ return SendClientMessage(playerid, COR_GREY, "Você não está em um território de drogas! /gps");}
			}
			if(strcmp(item,"scrack(playerid, params[]){
			    tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /pegar scrack [quantidade]");}
				quantia = strval(tmpzcmd);
                if(PlayerToPoint(2.0, playerid, 2151.7317,-1014.5330,62.7614) || PlayerToPoint(2.0, playerid, 1916.9713,-1415.4165,13.8283) || PlayerToPoint(2.0, playerid, 1971.4496,-1198.3518,20.5492)){
         		    if(IsAGangster(playerid)){
                        if(quantia < 1 || quantia > 10000){ return SendClientMessage(playerid, COR_GRAD2, "não pode pegar menos de 1 e nem mais de 10000");}
						if(PlayerInfo[playerid][pSafeDrogas3] >= quantia)
						{
							PlayerInfo[playerid][pMaconha] = PlayerInfo[playerid][pMaconha]+quantia;
							PlayerInfo[playerid][pSafeDrogas3] = PlayerInfo[playerid][pSafeDrogas3]-quantia;
							format(gstring, sizeof(gstring), "* Você pegou %d gramas de crack no esconderijo!",quantia);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							return 1;
						}else{ return SendClientMessage(playerid, COR_GRAD2, "Você não tem tudo isso!");}
         		    }else{ return SendClientMessage(playerid, COR_GREY, "Você não é um Gangster!"); }
         		}else{ return SendClientMessage(playerid, COR_GREY, "Você não está em um território de drogas! /gps");}
			}
			if(strcmp(item,"scocaina(playerid, params[]){
			    tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /pegar scocaina [quantidade]");}
				quantia = strval(tmpzcmd);
                if(PlayerToPoint(2.0, playerid, 2151.7317,-1014.5330,62.7614) || PlayerToPoint(2.0, playerid, 1916.9713,-1415.4165,13.8283) || PlayerToPoint(2.0, playerid, 1971.4496,-1198.3518,20.5492)){
         		    if(IsAGangster(playerid)){
                        if(quantia < 1 || quantia > 10000){ return SendClientMessage(playerid, COR_GRAD2, "não pode pegar menos de 1 e nem mais de 10000");}
						if(PlayerInfo[playerid][pSafeDrogas2] >= quantia)
						{
							PlayerInfo[playerid][pMaconha] = PlayerInfo[playerid][pMaconha]+quantia;
							PlayerInfo[playerid][pSafeDrogas2] = PlayerInfo[playerid][pSafeDrogas2]-quantia;
							format(gstring, sizeof(gstring), "* Você pegou %d gramas de cocaina no esconderijo!",quantia);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							return 1;
						}else{ return SendClientMessage(playerid, COR_GRAD2, "Você não tem tudo isso!");}
         		    }else{ return SendClientMessage(playerid, COR_GREY, "Você não é um Gangster!");}
         		}else{ return SendClientMessage(playerid, COR_GREY, "Você não está em um território de drogas! /gps");}
			}
			if(strcmp(item,"slsd(playerid, params[]){
			    tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /pegar slsd [quantidade]");}
				quantia = strval(tmpzcmd);
                if(PlayerToPoint(2.0, playerid, 2151.7317,-1014.5330,62.7614) || PlayerToPoint(2.0, playerid, 1916.9713,-1415.4165,13.8283) || PlayerToPoint(2.0, playerid, 1971.4496,-1198.3518,20.5492)){
         		    if(IsAGangster(playerid)){
                        if(quantia < 1 || quantia > 10000){ return SendClientMessage(playerid, COR_GRAD2, "não pode pegar menos de 1 e nem mais de 10000");}
						if(PlayerInfo[playerid][pSafeDrogas4] >= quantia){
							PlayerInfo[playerid][pMaconha] = PlayerInfo[playerid][pMaconha]+quantia;
							PlayerInfo[playerid][pSafeDrogas4] = PlayerInfo[playerid][pSafeDrogas4]-quantia;
							format(gstring, sizeof(gstring), "* Você pegou %d gramas de lsd no esconderijo!",quantia);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							return 1;
						}else{ return SendClientMessage(playerid, COR_GRAD2, "Você não tem tudo isso!");}
         		    }
         		    else{ return SendClientMessage(playerid, COR_GREY, "Você não é um Gangster!");}
         		}else{ return SendClientMessage(playerid, COR_GREY, "Você não está em um território de drogas! /gps");}
			}
			if(strcmp(item,"smateriais(playerid, params[]){
			    tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd)){ return SendClientMessage(playerid, COR_GRAD2, "USE: /pegar smateriais [quantidade]");}
				quantia = strval(tmpzcmd);
                if(PlayerToPoint(2.0, playerid, 1173.2739,-2037.0060,69.1413) || PlayerToPoint(2.0, playerid, 1757.1095,-1943.4386,13.5703) || PlayerToPoint(2.0, playerid, -718.2471,-1938.9644,8.3187) || PlayerToPoint(5.0, playerid, -13.5814, -2502.1829, 36.6555)){
			        if(quantia < 1 || quantia > 10000){ return SendClientMessage(playerid, COR_GRAD2, "não pode pegar menos de 1 e nem mais de 10000");}
					if(PlayerInfo[playerid][psMats] >= quantia){
						PlayerInfo[playerid][pMats] = PlayerInfo[playerid][pMats]+quantia;
						PlayerInfo[playerid][psMats] = PlayerInfo[playerid][psMats]-quantia;
						format(gstring, sizeof(gstring), "* Você pegou %d materiais no esconderijo!",quantia);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						return 1;
					}else{ return SendClientMessage(playerid, COR_GREY, "Você não tem tudo isso !");}
         		}else{ return SendClientMessage(playerid, COR_GREY, "Você não está na caixa de materiais !");}
			}
	    }
	}
    CMD:kitvip(playerid, params[]){
	     if(PlayerToPoint(8.0,playerid,312.6666,-165.8033,999.6010) || PlayerToPoint(8.0, playerid,295.9569,-80.4102,1001.5156) || PlayerToPoint(8.0, playerid,308.3599,-141.0120,999.6016)){
       		  if(roubando[playerid] == 1){ return SendClientMessage(playerid, -1, "Você nao pode usar esté comando estando roubando!");}
 			  if(envenenado[playerid] == 1 || explosivo[playerid] == 1){ return SendClientMessage(playerid, COR_GRAD1, "Você não pode usar seu kit estando envenenado ou com queimaduras.");}
			  if(PlayerInfo[playerid][pGunLic] == 0){ return SendClientMessage(playerid, COR_GRAD1, "Você não possui licencas de armas por isso nao pode ir equipar !");}
              GetPlayerName(playerid, sendername, sizeof(sendername));
   			  if(PlayerInfo[playerid][pVIP] > 0){
      		       new x_kitvip[150];
				   x_kitvip = strtok(cmdtext, idxzcmd);
				   if(!strlen(x_kitvip)){
				        SendClientMessage(playerid, COR_BRANCO, "|__________________ KitVIP. __________________|");
					    SendClientMessage(playerid, COR_BRANCO, "|Use: /kitvip [Numero]");
					    SendClientMessage(playerid, COR_GREY, "| 1 - VIP Comum");
					    SendClientMessage(playerid, COR_GREY, "| 2 - VIP Premium");
					    SendClientMessage(playerid, COR_BRANCO, "|____________________________________________|");
					    return 1;
				   }
                   if(strcmp(x_kitvip,"1(playerid, params[]){
						if(PlayerInfo[playerid][pVIP] >= 1){
	                         format(gstring, sizeof(gstring), "* O Vip Comum %s Pegou Seu Kit Comum.", sendername);
	                         ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				             ResetPlayerWeaponsEx(playerid);
			                 GivePlayerWeaponEx(playerid, 46, 1);//paraquedas
			                 GivePlayerWeaponEx(playerid, 18, 2); //Molotov
                             GivePlayerWeaponEx(playerid, 34, 30); //Sniper
                             GivePlayerWeaponEx(playerid, 31, 140);//m-4
  	                         GivePlayerWeaponEx(playerid, 29, 140);//mp5
                             GivePlayerWeaponEx(playerid, 25, 70); //12
                             GivePlayerWeaponEx(playerid, 24, 70); //eagle
                             GivePlayerWeaponEx(playerid, 1, 1); //soqueira
				             SetPlayerArmour(playerid, 100);
				             SetPlayerHealth(playerid, 100);
				             SendClientMessage(playerid,COR_GREEN,"Você pegou o seu Kit Comum!");
				        }
			            return 1;
				   }
                   if(strcmp(x_kitvip,"2(playerid, params[]){
				        if(PlayerInfo[playerid][pVIP] >= 2){
	                         format(gstring, sizeof(gstring), "* O Vip Premium %s Pegou Seu Kit Premium.", sendername);
	                         ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				             ResetPlayerWeaponsEx(playerid);
			                 GivePlayerWeaponEx(playerid, 46, 1);//paraquedas
			                 GivePlayerWeaponEx(playerid, 18, 3); //Molotov
                             GivePlayerWeaponEx(playerid, 34, 40); //Sniper
                             GivePlayerWeaponEx(playerid, 31, 160);//m-4
  	                         GivePlayerWeaponEx(playerid, 29, 160);//mp5
                             GivePlayerWeaponEx(playerid, 25, 80); //12
                             GivePlayerWeaponEx(playerid, 24, 80); //eagle
                             GivePlayerWeaponEx(playerid, 1, 1); //soqueira
				             SetPlayerArmour(playerid, 100);
				             SetPlayerHealth(playerid, 100);
				             SendClientMessage(playerid,COR_GREEN,"Você pegou o seu Kit Premium!");
				        }
				   }
			  }else{ return SendClientMessage(playerid, COR_LIGHTBLUE, "Esse comando so pode ser usado por jogadores Vips");}
		  }else{ return SendClientMessage(playerid, COR_LIGHTRED, "Você não está em uma loja de armas.");}
	}
	CMD:kit(playerid, params[]){
	    if(PlayerInfo[playerid][pSocio] > 0){
   			if(PlayerInfo[playerid][pKitAlternado] == 0){
    			SendClientMessage(playerid, COR_AMARELO, "Você alternou para o kit 2(lança chamas, molotov e ak-47)!");
				PlayerInfo[playerid][pKitAlternado] = 1;
				return 1;
		   	}
		   	if(PlayerInfo[playerid][pKitAlternado] > 0){
		   		SendClientMessage(playerid, COR_AMARELO, "Você alternou para o kit 1(bazuca, granada e m4)!");
		   		PlayerInfo[playerid][pKitAlternado] = 0;
		   		return 1;
		   	}
	    }
		else{ return SendClientMessage(playerid, COR_AMARELO, "Você não é um sócio");}
	}
	CMD:medkit(playerid, params[]){
		new str[128];
		if(MedKitDados[playerid][MedKitPlayer] != true) return SendClientMessage(playerid, -1, "Voce nao tem medkit");
		if(MedKitDados[playerid][MedPlayer] == true) return SendClientMessage(playerid, -1, "Você ja criou um medkit");
		GetPlayerPos(playerid, MedKitDados[playerid][PosPlayerX],MedKitDados[playerid][PosPlayerY], MedKitDados[playerid][PosPlayerZ]);
		MedKitDados[playerid][MedKits] = CreateDynamicPickup(19605,1, MedKitDados[playerid][PosPlayerX], MedKitDados[playerid][PosPlayerY], MedKitDados[playerid][PosPlayerZ]-1.5), MedKitDados[playerid][MedKitObject] = CreateObject(11736, MedKitDados[playerid][PosPlayerX], MedKitDados[playerid][PosPlayerY], MedKitDados[playerid][PosPlayerZ]-1, 0.0, 0.0, 0.0);
		MedKitDados[playerid][VidaMedKit] = 10;
		MedKitDados[playerid][MedKitPlayer] = false;
		format(gstring, sizeof(gstring), "[MedKit]: {FFFFFF}%s {33AA33}Jogou um MedKit no chão!", PlayerName(playerid));
		ProxDetector(30.0, playerid, gstring, COR_GREEN,COR_GREEN,COR_GREEN,COR_GREEN,COR_GREEN);
		format(str,35,"MedKit\n de %s", PlayerName(playerid));
		PlayerPlaySound(playerid, 32000, 0.0, 0.0, 0.0), MedKitDados[playerid][MedPlayer] = true;
		MedKitDados[playerid][LabelMed] = Create3DTextLabel(gstring, 0xEDE6E6AA, MedKitDados[playerid][PosPlayerX],MedKitDados[playerid][PosPlayerY],MedKitDados[playerid][PosPlayerZ], 25.0, 0);
		return 1;
	}
	CMD:destruirmedkit(playerid, params[]){
		if(MedKitDados[playerid][MedPlayer] != true) return SendClientMessage(playerid, -1, "Você não criou um medkit");
		DestruirMedKit(playerid);
		SendClientMessage(playerid, -1, "Medkit destruido");
		return 1;
	}
	CMD:kitsocio(playerid, params[]){
        if(IsPlayerConnected(playerid)){
			   if(PlayerInfo[playerid][pSocio] == 0 && KitSocioPermanente[playerid] == 0){ return SendClientMessage(playerid, COR_AMARELO, "Você não é um sócio!");}
			   if(GetTickCount() - TempoEquiparSocio[playerid] < 4000){ return SendClientMessage(playerid,COR_GRAD1,"você só pode usar este comando a cada 4 segundos.");}
		       if(Algemado[playerid] == 1){ return SendClientMessage(playerid, COR_AMARELO, "Você não pode usar seu kit algemado!");}
		       if(PlayerInfo[playerid][pJailed] != 0){ return SendClientMessage(playerid,COR_AMARELO,"Você não pode usar seu kit neste local!");}
	   		   if(roubando[playerid] == 1){ return SendClientMessage(playerid,COR_GRAD1,"Você não pode utilizar seu kit durante o roubo.");}
			   if(envenenado[playerid] == 1 || explosivo[playerid] == 1){ return SendClientMessage(playerid, COR_GRAD1, "Você não pode usar seu kit estando envenenado ou com queimaduras.");}
		       if(PlayerToPoint(80.0,playerid,-2312.8008,-1642.6188,483.7031) || PlayerToPoint(80.0,playerid,-2339.3459,-1645.2610,483.7031) ||PlayerToPoint(80.0,playerid,-2326.0491,-1579.8934,483.3037)
               || PlayerToPoint(80.0,playerid,-2346.4478,-1582.4911,484.6091) || IsPlayerInChuck(playerid)){ return SendClientMessage(playerid,COR_AMARELO,"Você não pode usar seu kit neste local!");}
		       if(PlayerInfo[playerid][pGunLic] == 0){ return SendClientMessage(playerid, COR_GRAD1, "Você não possui licencas de armas por isso nao pode ir equipar !");}
               if(NaPorraDoEvento[playerid] == true){ return SendClientMessage(playerid, COR_GRAD1, "Você não pode usar seu kit durante um evento!");}
               if(GetPlayerOrg(playerid) == 20)
               {
               		for(new i = 0;  i < MAX_PLAYERS; ++i)
					{
			        	if(GetPlayerOrg(i) == 22 || GetPlayerOrg(i) == 28 || GetPlayerOrg(i) == 29 && GetPlayerOrg(i) != GetPlayerOrg(playerid))
			        	{
				    		if(ProxDetectorS(30.0, playerid, i))
				    		{
				    		    SendClientMessage(playerid, COR_LIGHTRED, "*[Mafiosos] Você não pode usar este comando próximo a uma máfia rival !");
								return 1;
				    		}
				    	}
				    }
               }
               if(GetPlayerOrg(playerid) == 22)
               {
               		for(new i = 0;  i < MAX_PLAYERS; ++i)
					{
			        	if(GetPlayerOrg(i) == 20 || GetPlayerOrg(i) == 28 || GetPlayerOrg(i) == 29 && GetPlayerOrg(i) != GetPlayerOrg(playerid))
			        	{
				    		if(ProxDetectorS(30.0, playerid, i))
				    		{
				    		    SendClientMessage(playerid, COR_LIGHTRED, "*[Mafiosos] Você não pode usar este comando próximo a uma máfia rival !");
								return 1;
				    		}
				    	}
				    }
               }
               if(GetPlayerOrg(playerid) == 28)
               {
               		for(new i = 0;  i < MAX_PLAYERS; ++i)
					{
			        	if(GetPlayerOrg(i) == 20 || GetPlayerOrg(i) == 22 || GetPlayerOrg(i) == 29 && GetPlayerOrg(i) != GetPlayerOrg(playerid))
			        	{
				    		if(ProxDetectorS(30.0, playerid, i))
				    		{
				    		    SendClientMessage(playerid, COR_LIGHTRED, "*[Mafiosos] Você não pode usar este comando próximo a uma máfia rival !");
								return 1;
				    		}
				    	}
				    }
               }
               if(GetPlayerOrg(playerid) == 29)
               {
               		for(new i = 0;  i < MAX_PLAYERS; ++i)
					{
			        	if(GetPlayerOrg(i) == 20 || GetPlayerOrg(i) == 22 || GetPlayerOrg(i) == 28 && GetPlayerOrg(i) != GetPlayerOrg(playerid))
			        	{
				    		if(ProxDetectorS(30.0, playerid, i))
				    		{
				    		    SendClientMessage(playerid, COR_LIGHTRED, "*[Mafiosos] Você não pode usar este comando próximo a uma máfia rival !");
								return 1;
				    		}
				    	}
				    }
               }
               if(IsAGangster(playerid))
               {
               		for(new i = 0;  i < MAX_PLAYERS; ++i)
					{
			        	if(IsAGangster(i) && GetPlayerOrg(i) != GetPlayerOrg(playerid))
			        	{
				    		if(ProxDetectorS(30.0, playerid, i))
				    		{
				    		    SendClientMessage(playerid, COR_LIGHTRED, "*[Gangsters] Você não pode usar este comando próximo a uma gang rival !");
								return 1;
				    		}
				    	}
				    }
               }
               if(GetPlayerOrg(playerid) == 6 )
               {
               		for(new i = 0;  i < MAX_PLAYERS; ++i)
					{
			        	if(GetPlayerOrg(i) == 16 && GetPlayerOrg(i) != GetPlayerOrg(playerid))
			        	{
				    		if(ProxDetectorS(30.0, playerid, i))
				    		{
				    		    SendClientMessage(playerid, COR_LIGHTRED, "*[Terroristas] Você não pode usar este comando próximo a uma org rival !");
								return 1;
				    		}
				    	}
				    }
               }
               if(GetPlayerOrg(playerid) == 16)
               {
               		for(new i = 0;  i < MAX_PLAYERS; ++i)
					{
			        	if(GetPlayerOrg(i) == 6 && GetPlayerOrg(i) != GetPlayerOrg(playerid))
			        	{
				    		if(ProxDetectorS(30.0, playerid, i))
				    		{
				    		    SendClientMessage(playerid, COR_LIGHTRED, "*[Terroristas] Você não pode usar este comando próximo a uma org rival !");
								return 1;
				    		}
				    	}
				    }
               }
               if(GetPlayerOrg(playerid) == 21)
               {
               		for(new i = 0;  i < MAX_PLAYERS; ++i)
					{
			        	if(GetPlayerOrg(i) == 24 && GetPlayerOrg(i) != GetPlayerOrg(playerid))
			        	{
				    		if(ProxDetectorS(30.0, playerid, i))
				    		{
				    		    SendClientMessage(playerid, COR_LIGHTRED, "*[Mercenários] Você não pode usar este comando próximo a uma org rival !");
								return 1;
				    		}
				    	}
				    }
               }
               if(GetPlayerOrg(playerid) == 24)
               {
               		for(new i = 0;  i < MAX_PLAYERS; ++i)
					{
			        	if(GetPlayerOrg(i) == 21 && GetPlayerOrg(i) != GetPlayerOrg(playerid))
			        	{
				    		if(ProxDetectorS(30.0, playerid, i))
				    		{
				    		    SendClientMessage(playerid, COR_LIGHTRED, "*[Mercenários] Você não pode usar este comando próximo a uma org rival !");
								return 1;
				    		}
				    	}
				    }
               }
               if(GetPlayerOrg(playerid) == 8)
               {
               		for(new i = 0;  i < MAX_PLAYERS; ++i)
					{
			        	if(GetPlayerOrg(i) == 26 && GetPlayerOrg(i) != GetPlayerOrg(playerid))
			        	{
				    		if(ProxDetectorS(30.0, playerid, i))
				    		{
				    		    SendClientMessage(playerid, COR_LIGHTRED, "*[Assassinos] Você não pode usar este comando próximo a uma org rival !");
								return 1;
				    		}
				    	}
				    }
               }
               if(GetPlayerOrg(playerid) == 26)
               {
               		for(new i = 0;  i < MAX_PLAYERS; ++i)
					{
			        	if(GetPlayerOrg(i) == 8 && GetPlayerOrg(i) != GetPlayerOrg(playerid))
			        	{
				    		if(ProxDetectorS(30.0, playerid, i))
				    		{
				    		    SendClientMessage(playerid, COR_LIGHTRED, "*[Assassinos] Você não pode usar este comando próximo a uma org rival !");
								return 1;
				    		}
				    	}
				    }
               }
               if(WantedLevel[playerid] != 0)
               {
               		for(new i = 0;  i < MAX_PLAYERS; ++i)
					{
			        	if(IsACop(i) && !IsACop(playerid))
			        	{
				    		if(ProxDetectorS(30.0, playerid, i))
				    		{
				    		    SendClientMessage(playerid, COR_LIGHTRED, "* Você não pode equipar procurado enquanto estiver perto de um cop!");
								return 1;
				    		}
				    	}
				    }
               }
               SendClientMessage(playerid,COR_GREEN,"Você usou o seu kit sócio para alternar o kit, use /kit!");
               SendClientMessage(playerid,COR_LIGHTRED,"Lembre-se,você não pode estar em batalha! ou levará carandiru!");
               if(PlayerInfo[playerid][pSocio] > 0 && PlayerInfo[playerid][pSocio] < 3)
               {
	 		       format(gstring, sizeof(gstring), "Sócio: %s Pegou Seu KitSócio.", PlayerName(playerid));
				   ProxDetector(30.0, playerid, gstring, 0x33aa33ff,0x33aa33ff,0x33aa33ff,0x33aa33ff,0x33aa33ff);
			   }
			   else if(PlayerInfo[playerid][pSocio] == 3)
               {
	 		       format(gstring, sizeof(gstring), "Sócio: %s Pegou Seu KitSócio.", PlayerName(playerid));
				   ProxDetector(30.0, playerid, gstring, 0xffcc00ff,0xffcc00ff,0xffcc00ff,0xffcc00ff,0xffcc00ff);
			   }
			   else if(KitSocioPermanente[playerid] == 1)
               {
	 		       format(gstring, sizeof(gstring), "[Kit-Sócio Permanente]: %s Pegou Seu KitSócio.", PlayerName(playerid));
				   ProxDetector(30.0, playerid, gstring, 0xffcc00ff,0xffcc00ff,0xffcc00ff,0xffcc00ff,0xffcc00ff);
			   }
		       ResetPlayerWeaponsEx(playerid);
		       if(PlayerInfo[playerid][pSocio] == 1)
		       {
		            GivePlayerWeaponEx(playerid, 46, 1);
		            GivePlayerWeaponEx(playerid, 43, 999);
  	                GivePlayerWeaponEx(playerid, 34, 250);
  	                GivePlayerWeaponEx(playerid, 29, 700);
  	                GivePlayerWeaponEx(playerid, 25, 250);
                    GivePlayerWeaponEx(playerid, 24, 250);
  	                GivePlayerWeaponEx(playerid, 4, 1);
  	                GivePlayerWeaponEx(playerid, 1, 1);
  	                if(PlayerInfo[playerid][pKitAlternado] == 0)
  	                {
  	                    GivePlayerWeaponEx(playerid, 31, 700); // m4
  	                    GivePlayerWeaponEx(playerid, 16, 10); //granada
  	                    //GivePlayerWeaponEx(playerid, 35, 4); //bazuka
  					}
  					else if(PlayerInfo[playerid][pKitAlternado] == 1)
  					{
						GivePlayerWeaponEx(playerid, 37,20); //lança chamas
						GivePlayerWeaponEx(playerid, 30,700); // AK-47
						GivePlayerWeaponEx(playerid, 20,5);// Molotov
  					}
			   }
		       else if(PlayerInfo[playerid][pSocio] == 2)
		       {
                    GivePlayerWeaponEx(playerid, 46, 1);
		            GivePlayerWeaponEx(playerid, 43, 999);
  	                GivePlayerWeaponEx(playerid, 34, 300);
  	                GivePlayerWeaponEx(playerid, 29, 800);
  	                GivePlayerWeaponEx(playerid, 25, 400);
                    GivePlayerWeaponEx(playerid, 24, 400);
  	                GivePlayerWeaponEx(playerid, 4, 1);
  	                GivePlayerWeaponEx(playerid, 1, 1);
  	                if(PlayerInfo[playerid][pKitAlternado] == 0)
  	                {
  	                    GivePlayerWeaponEx(playerid, 31, 800); // m4
  	                    GivePlayerWeaponEx(playerid, 16, 10); //granada
  	                    GivePlayerWeaponEx(playerid, 35, 8); //bazuka
  					}
  					else if(PlayerInfo[playerid][pKitAlternado] == 1)
  					{
						GivePlayerWeaponEx(playerid, 37,20); //lança chamas
						GivePlayerWeaponEx(playerid, 30,800); // AK-47
						GivePlayerWeaponEx(playerid, 20,5);// Molotov
  					}
		       }
		       else if(PlayerInfo[playerid][pSocio] == 3)
		       {
                    GivePlayerWeaponEx(playerid, 46, 1);
		            GivePlayerWeaponEx(playerid, 43, 999);
					GivePlayerWeaponEx(playerid, 39, 4);
  	                GivePlayerWeaponEx(playerid, 34, 350);
  	                GivePlayerWeaponEx(playerid, 29, 900);
  	                GivePlayerWeaponEx(playerid, 25, 550);
                    GivePlayerWeaponEx(playerid, 24, 550);
  	                GivePlayerWeaponEx(playerid, 4, 1);
  	                GivePlayerWeaponEx(playerid, 1, 1);
  	                if(PlayerInfo[playerid][pKitAlternado] == 0)
  	                {
  	                    GivePlayerWeaponEx(playerid, 31, 900); // m4
  	                    GivePlayerWeaponEx(playerid, 16, 10); //granada
  	                    GivePlayerWeaponEx(playerid, 35, 15); //bazuka
  					}
  					else if(PlayerInfo[playerid][pKitAlternado] == 1)
  					{
						GivePlayerWeaponEx(playerid, 37,20); //lança chamas
						GivePlayerWeaponEx(playerid, 30,900); // AK-47
						GivePlayerWeaponEx(playerid, 20,5);// Molotov
  					}
		       }
		       else if (KitSocioPermanente[playerid] == 1)
		       {
                    GivePlayerWeaponEx(playerid, 46, 1);
		            GivePlayerWeaponEx(playerid, 43, 999);
  	                GivePlayerWeaponEx(playerid, 34, 300);
  	                GivePlayerWeaponEx(playerid, 29, 800);
  	                GivePlayerWeaponEx(playerid, 25, 400);
                    GivePlayerWeaponEx(playerid, 24, 400);
  	                GivePlayerWeaponEx(playerid, 4, 1);
  	                GivePlayerWeaponEx(playerid, 1, 1);
  	                if(PlayerInfo[playerid][pKitAlternado] == 0)
  	                {
  	                    GivePlayerWeaponEx(playerid, 31, 800); // m4
  	                    GivePlayerWeaponEx(playerid, 16, 10); //granada
  	                    GivePlayerWeaponEx(playerid, 35, 8); //bazuka
  					}
  					else if(PlayerInfo[playerid][pKitAlternado] == 1)
  					{
						GivePlayerWeaponEx(playerid, 37,20); //lança chamas
						GivePlayerWeaponEx(playerid, 30,800); // AK-47
						GivePlayerWeaponEx(playerid, 20,5);// Molotov
  					}
		       }
		       SetPlayerArmour(playerid, 150);
		       SetPlayerHealth(playerid, 100);
		       TempoEquiparSocio[playerid] = GetTickCount();
		       return 1;
		}
	}
	CMD:jetpack(playerid, params[])
    {
        if(IsPlayerConnected(playerid))
        {
	   	    if(GetTickCount() - TempoPegarJetpack[playerid] < 5000)
          		return SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 5 segundos !");

	        if(NaPorraDoEvento[playerid] == true)
	            return SendClientMessage(playerid, COR_GRAD1, "Você não pode pegar durante o evento !");

            if(PlayerInfo[playerid][pJailed] != 0)
	   			return SendClientMessage(playerid,COR_COSA,"Você não pode pegar seu jetpack na cadeia");

	   		if(WantedLevel[playerid] > 0)
				return SendClientMessage(playerid, COR_GRAD1, "Você não pode pegar seu jetpack estando procurado.");

			if(GetPlayerInterior(playerid) > 0)
				return SendClientMessage(playerid, COR_AMARELO, "Você não pode pegar o seu jetpack estando em interior.");

			if(PlayerInfo[playerid][pGunLic] == 0)
   				return SendClientMessage(playerid, COR_GRAD1, "Você não possui licencas de armas por isso nao pode usar jetpack !");

			if(PlayerInfo[playerid][pSocio] >= 1)
            {
                 TempoPegarJetpack[playerid] = GetTickCount();
                 SetPlayerSpecialAction(playerid, 2);
                 GivePlayerWeaponEx(playerid, 22, 2000);
                 GetPlayerName(playerid, sendername, sizeof(sendername));
                 SendClientMessage(playerid,COR_GREEN,"Você pegou o seu Jet Pack!");
                 if(PlayerInfo[playerid][pSocio] < 3)
                 {
                 	format(gstring, sizeof(gstring), "Sócio: %s Pegou Seu Jet Pack.", sendername);
                 	ProxDetector(30.0, playerid, gstring, 0x33aa33ff,0x33aa33ff,0x33aa33ff,0x33aa33ff,0x33aa33ff);
                 }
                 else
                 {
                    format(gstring, sizeof(gstring), "Sócio: %s Pegou Seu Jet Pack.", sendername);
                 	ProxDetector(30.0, playerid, gstring, 0xffcc00ff,0xffcc00ff,0xffcc00ff,0xffcc00ff,0xffcc00ff);
                 }
                 return 1;
            }
            if(JetPackPermanente[playerid] == 1)
            {
            	 TempoPegarJetpack[playerid] = GetTickCount();
                 SetPlayerSpecialAction(playerid, 2);
                 GivePlayerWeaponEx(playerid, 22, 2000);
                 GetPlayerName(playerid, sendername, sizeof(sendername));
                 SendClientMessage(playerid,COR_GREEN,"Você pegou o seu Jet Pack!");
             	 format(gstring, sizeof(gstring), "[JetPack Permanente]: %s Pegou Seu Jet Pack.", sendername);
             	 ProxDetector(30.0, playerid, gstring, 0x33aa33ff,0x33aa33ff,0x33aa33ff,0x33aa33ff,0x33aa33ff);
                 return 1;
            }
            //else return SendClientMessage(playerid, COR_AMARELO, "Você não é um sócio ou não tem jetpack permanente.");
        }
        return 1;
    }
	CMD:mudarsexo(playerid, params[])
	{
	    if(IsPlayerInAnyVehicle(playerid))
	    {
            if(GetPlayerOrg(playerid) != 4)
	        {
		        SendClientMessage(playerid, COR_GREY, "Você não é médico!");
		        return 1;
		    }
		    new vehicleid = GetPlayerVehicleID(playerid);
		    new modeloo = GetVehicleModel(vehicleid);
		    if(modeloo != 416 && modeloo != 407 && modeloo != 468)
            {
               SendClientMessage(playerid,COR_VERMELHO,"* Você não está em uma ambulancia");
               return 1;
            }
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /mudarsexo [id] [preco]");
				return 1;
			}
   			new playa;
			new money;
			playa = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			money = strval(tmpzcmd);
			if(money < 1 || money > 5000) { SendClientMessage(playerid, COR_GREY, "Preco minimo 1, preco maximo 5000!"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, playa) && IsPlayerInAnyVehicle(playa))
					{
					    if(playa == playerid) { SendClientMessage(playerid, COR_GREY, "Voce nao pode mudar seu sexo !"); return 1; }
				    	GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(gstring, sizeof(gstring), "* Você ofereceu ao jogador: %s para mudar o sexo dele por R$[%d].",giveplayerzcm,money);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "* Médico %s ofereceu mudar seu sexo por R$[%d], (Digite /aceitar sexo) para aceitar.",sendername,money);
						SendClientMessage(playa, COR_LIGHTBLUE, gstring);
						SexoOffer[playa] = playerid;
						SexoPrice[playa] = money;
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "Este jogador nao esta perto de Você ou nao esta no carro.");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "* Você não está em uma ambulancia !");
			}
		}
		return 1;
	}
	CMD:curar(playerid, params[])
	{
	    if(IsPlayerInAnyVehicle(playerid))
	    {
            if(GetPlayerOrg(playerid) != 4)
		    {
		        SendClientMessage(playerid, COR_GREY, "Você não é médico!");
		        return 1;
		    }
		    new vehicleid = GetPlayerVehicleID(playerid);
		    new modeloo = GetVehicleModel(vehicleid);
		    if(modeloo != 416 && modeloo != 407 && modeloo != 468)
            {
               SendClientMessage(playerid,COR_VERMELHO,"* Você não está em uma ambulancia");
               return 1;
            }
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /curar [id] [preco]");
				return 1;
			}
            new playa;
			new money;
			playa = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			money = strval(tmpzcmd);
			if(money < 1 || money > 5000) { SendClientMessage(playerid, COR_GREY, "Preco minimo 1, preco maximo 5000!"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, playa) && IsPlayerInAnyVehicle(playa))
					{
					    if(playa == playerid) { SendClientMessage(playerid, COR_GREY, "Voce nao pode se curar !"); return 1; }
				    	GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(gstring, sizeof(gstring), "* Você ofereceu ao jogador: %s uma cura por R$[%d].",giveplayerzcm,money);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "* Médico %s ofereceu curar sua vida e seu colete por R$[%d], (Digite /aceitar cura) para aceitar.",sendername,money);
						SendClientMessage(playa, COR_LIGHTBLUE, gstring);
						CuraOffer[playa] = playerid;
						CuraPrice[playa] = money;
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "Este jogador não esta perto de você ou não está no carro.");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "* Você não está em uma ambulância !");
			}
		}
		return 1;
	}
	CMD:blindar(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(GetPlayerOrg(playerid) != 14)
		    {
		        SendClientMessage(playerid, COR_GREY, "Você não é mecanico!");
		        return 1;
		    }
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /blindar [id] [preco]");
				return 1;
			}
			new Float:vida;
            new playa;
			new money;
			new vehicle = GetPlayerVehicleID(playerid);
			playa = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			money = strval(tmpzcmd);
            GetVehicleHealth(vehicle, vida);
            if(vida < 100.0)
            {
				 SendClientMessage(playerid, COR_GREEN, "Você não pode blindar um veículo quebrado, repare a lataria antes !");
            }
			if(money < 1 || money > 5000) { SendClientMessage(playerid, COR_GREY, "Preco minimo 1, preco maximo 5000!"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
					{
					    if(playa == playerid) { SendClientMessage(playerid, COR_GREY, "Voce nao pode blindar para voce mesmo!"); return 1; }
				    	GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(gstring, sizeof(gstring), "* Você ofereceu ao(a) %s para blindar seu carro por R$[%d].",giveplayerzcm,money);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "* Mecanico %s quer blindar seu carro por R$[%d], (Digite /aceitar blindagem) para aceitar.",sendername,money);
						SendClientMessage(playa, COR_LIGHTBLUE, gstring);
						BlindagemOffer[playa] = playerid;
						BlindagemPrice[playa] = money;
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "Este jogador nao esta perto de Você ou nao esta no carro.");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "O Jogador esta offline.");
			}
		}
		return 1;
    }
    //
   	CMD:tunar(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(GetPlayerOrg(playerid) != 14)
		    {
		        SendClientMessage(playerid, COR_GREY, "Você não é mecanico!");
		        return 1;
		    }
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /tunar [ id ] [preco]");
				return 1;
			}
            new playa;
			new money;
			playa = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			money = strval(tmpzcmd);
			if(money < 1 || money > 5000)
			{
				SendClientMessage(playerid, COR_GREY, "Preco minimo 1, preco maximo 5000!");
				return 1;
			}
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
					{
						/*
					    if(playa == playerid)
						{
							SendClientMessage(playerid, COR_GREY, "Você não pode tunar seu próprio carro !");
							return 1;
						}
						*/
				    	GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(gstring, sizeof(gstring), "* Você ofereceu ao(a) %s para tunar seu carro por R$[%d].",giveplayerzcm,money);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "* Mecanico %s quer colocar nitro em seu carro por R$[%d], (Digite /aceitar nitro) para aceitar.",sendername,money);
						SendClientMessage(playa, COR_LIGHTBLUE, gstring);
						TunarOffer[playa] = playerid;
						TunarPrice[playa] = money;
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "Este jogador nao esta perto de Você ou nao esta no carro.");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "O Jogador esta offline.");
			}
		}
		return 1;
    }
	CMD:ajudaveiculo)
	{
		SendClientMessage(playerid, COR_LIGHTBLUE, "_______________________________~Veiculo~_______________________________");
		SendClientMessage(playerid, COR_GRAD1, "BPL> /motor - Ligar/Desligar o Motor.");
		SendClientMessage(playerid, COR_GRAD1, "BPL> /farol - Ligar/Desligar o Farol.");
		SendClientMessage(playerid, COR_GRAD1, "BPL> /capo  - Abrir/Fechar o Capo.");
		SendClientMessage(playerid, COR_LIGHTBLUE, "_______________________________________________________________________");
		return 1;
    }
    CMD:emboscada(playerid, params[])
	{
		if(PlayerInfo[playerid][pJailed] != 0)
			return SendClientMessage(playerid,COR_GREY,"Você não pode criar emboscada na cadeia!");
			
    	if(PlayerInfo[playerid][pLider] == 0 && PlayerInfo[playerid][pCargo] != 5)
			 return SendClientMessage(playerid, COR_AMARELO, "Você precisa ser lider/sub-lider para criar emboscadas!");
			 
  	    if(TendoEmboscada == 1)
            return SendClientMessage(playerid, COR_GREY, "Já está tendo uma emboscada!");

		new Float:x,Float:y,Float:z;
		if(!IsACop(playerid) || PlayerInfo[playerid][pLider] != 7 || PlayerInfo[playerid][pMembro] != 7
		|| PlayerInfo[playerid][pLider] != 3 || PlayerInfo[playerid][pMembro] != 3
		|| PlayerInfo[playerid][pLider] != 9 || PlayerInfo[playerid][pMembro] != 9
		|| PlayerInfo[playerid][pLider] != 10 || PlayerInfo[playerid][pMembro] != 10)
		{
	        format(gstring, sizeof(gstring), "[EMBOSCADA] %s e os %s iniciaram uma emboscada de 20 minutos!",PlayerName(playerid),NomeORG(playerid));
	        SendClientMessageToAll(COR_LIGHTRED, gstring);
	        if(TaEscutando[playerid] == 0) PlayAudioStreamForPlayer(playerid, "http://brasilplaygames.com.br/musicas/preparar.mp3");
	        SendClientMessage(playerid, COR_BRANCO, "Você iniciou uma emboscada de 20 minutos, cada pessoa que você matar dentro da emboscada, ganhará grana !");
	    	GetPlayerPos(playerid,x,y,z);
            EmboscadaMinX = x-60;
            EmboscadaMinY = y-60;
            EmboscadaMaxX = x+60;
            EmboscadaMaxY = y+60;
	    	GZEmboscada = GangZoneCreate(x-60,y-60,x+60,y+60);
	    	GangZoneShowForAll(GZEmboscada,0xBD4574FF);//0xFA58F4FF);
	    	TendoEmboscada = 1;
	   		TempoEmboscada = SetTimer("Emboscada", 1200000, false);
			return 1;
		}
		return 1;
	}
    CMD:guerra(playerid, params[])
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
			SendClientMessage(playerid,COR_AMARELO,"Você não pode iniciar uma guerra deste local!");
			return 1;
    	}
    	if(PlayerInfo[playerid][pCargo] < 4)
    	{
			 SendClientMessage(playerid, COR_AMARELO, "Você precisa ser cargo 4+ para iniciar guerras!");
			 return 1;
		}
  	    if(TendoGuerra >= 1)
        {
            SendClientMessage(playerid, COR_GRAD1, "Já está acontencendo uma guerra!");
            return 1;
        }
        if(tempoguerra == 1)
		{
			SendClientMessage(playerid,COR_GRAD1,"Teve uma guerra a pouco tempo, só podem ocorrer guerras a cada 3 horas!");
			return 1;
		}
		if(GetPlayerOrg(playerid) == 3 || GetPlayerOrg(playerid) == 6 || GetPlayerOrg(playerid) == 16 || GetPlayerOrg(playerid) == 30)
		{
		    if (PlayerInfo[playerid][pCargo] >= 4)
			{
			     ShowPlayerDialog(playerid, 198, DIALOG_STYLE_LIST, "Guerra Terrorista(Escola o Local):", "Aeroporto Abandonado\nEl Quebrados\nLas Barrancas\nFort Carson", "Iniciar", "Sair");
			}
		}
		return 1;
	}
	CMD:pad(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pTemIPad] == 0)
            {
                return 1;
            }
		    ShowPlayerDialog(playerid, 11124, DIALOG_STYLE_LIST, "Menu do iPad", "Lista de Rádios\nSua Playlist\nInstruções\nDesligar iPad", "Abrir","Fechar");
			return true;
		}
	}
	CMD:gb(playerid, params[])
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pGunBox] == 0)
            {
                return 1;
            }
            if(IsPlayerInAnyVehicle(playerid))
		    {
		        SendClientMessage(playerid, COR_EXE, "Não é possivel colocar caixa de armas dentro de veiculos!.");
		        return 1;
	        }
    	    if(PlayerInfo[playerid][pJailed] != 0)
    		{
	   			SendClientMessage(playerid,COR_EXE," Você não pode usar caixa de armas na cadeia!.");
	   			return 1;
            }
            if(IsPlayerInTerritorio(playerid))
            {
				 SendClientMessage(playerid, COR_GRAD1, "Você não pode plantar bombas em guerra.");
				 return 1;
            }
            if(CaixaPlantada[playerid] == 1)
                return SendClientMessage(playerid, COR_GRAD1, "Você já está usando sua caixa de armas!");
            new File[56], gstring[120];
			format(File, 56, "Caixas/%s.cfg", PlayerName(playerid)); // Cria o "caminho" até o local onde será salvo o Arquivo com a posição do Player
   			GetPlayerPos(playerid,caixax[playerid],caixay[playerid],caixaz[playerid]);
			CaixaInterior[playerid] = GetPlayerInterior(playerid); // Pega o interior do Player, que fica armazenado em pInterior.
			if(!DOF2_FileExists(File)) // Checa se a File existe
			{
			    DOF2_CreateFile(File); // Se não existir, cria
			}
		 	DOF2_SetFloat(File, "PosX", caixax[playerid]); // Escreve dentro do Arquivo: "PosX = pPosX (posição que pegamos antes, lembra ?)
		 	DOF2_SetFloat(File, "PosY", caixay[playerid]); // Escreve dentro do Arquivo: "PosY = pPosY (posição que pegamos antes, lembra ?)
		 	DOF2_SetFloat(File, "PosZ", caixaz[playerid]-2); // Escreve dentro do Arquivo: "PosZ = pPosZ (posição que pegamos antes, lembra ?)
			DOF2_SetInt(File, "Interior", CaixaInterior[playerid]); // Escreve dentro do Arquivo: "Interior = pInterior (interior que pegamos antes, lembra ?)
		 	DOF2_SaveFile(); // Salva o arquivo.
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
			GunBox[playerid] = CreateObject(964,caixax[playerid],caixay[playerid],caixaz[playerid]-1.2,0,0,0.0);
            format(gstring, 120, "{0099ff}»{FFFFFF} Caixa De Armas\n\nDono: {0099ff}%s\n{FFFFFF}Pressione {0099ff}ALT{FFFFFF} para abrir!", PlayerName(playerid));
            TextGunBox[playerid] = CreateDynamic3DTextLabel(gstring,0xFFFFFFFF,caixax[playerid],caixay[playerid],caixaz[playerid],40.0);
			CaixaPlantada[playerid] = 1;
			SendClientMessage(playerid,COR_GREEN,"Caixa de armas no chão! Para usar aperte 'ALT'");
			return 1;
		}
		return 1;
	}
	CMD:cb(playerid, params[])
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pMembro] != 6 && PlayerInfo[playerid][pLider] != 6 && PlayerInfo[playerid][pMembro] != 16 && PlayerInfo[playerid][pLider] != 16 && PlayerInfo[playerid][pMembro] != 30 && PlayerInfo[playerid][pLider] != 30 && PlayerInfo[playerid][pMembro] != 3 && PlayerInfo[playerid][pLider] != 3 || PlayerInfo[playerid][pCB] == 0)
    	    {
	   			SendClientMessage(playerid, COR_EXE, "Você não possui uma CB!.");
	   			return 1;
    	    }
	        if(IsPlayerInAnyVehicle(playerid))
		    {
		        SendClientMessage(playerid, COR_EXE, "Não é possivel plantar bombas dentro de veiculos!.");
		        return 1;
	        }
    	    if(PlayerInfo[playerid][pJailed] != 0)
    		{
	   			SendClientMessage(playerid,COR_EXE," Você não pode usar bombas na cadeia!.");
	   			return 1;
            }
            if(IsPlayerInTerritorio(playerid))
            {
				 SendClientMessage(playerid, COR_GRAD1, "Você não pode plantar bombas em guerra.");
				 return 1;
            }
            if(BombaPlantada[playerid] == 1)
                return SendClientMessage(playerid, COR_GRAD1, "Você já tem uma CB Plantada, exploda ela (/db)!");
                
			if(PlayerInfo[playerid][pCB] > 0)
			{
			    PlayerInfo[playerid][pCB] -= 1;
			}
			GetPlayerPos(playerid,bombax[playerid],bombay[playerid],bombaz[playerid]);
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
			dinid[playerid] = CreateDynamicObject(1252,bombax[playerid],bombay[playerid],bombaz[playerid]-0.8,0,0,0.0);
			BombaPlantada[playerid] = 1;
			SendClientMessage(playerid,COR_GREEN,"Bomba plantada! Para explodir use : /db");
			format(gstring, sizeof(gstring), "%s %s Plantou uma bomba! ID[%d]",NomeORG(playerid), PlayerName(playerid), playerid);
			ABroadCast(COR_AMARELO,gstring,1);
			return 1;
		}
		return 1;
	}
	CMD:db(playerid, params[])
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pMembro] != 6 && PlayerInfo[playerid][pLider] != 6 && PlayerInfo[playerid][pMembro] != 16 && PlayerInfo[playerid][pLider] != 16 && PlayerInfo[playerid][pMembro] != 30 && PlayerInfo[playerid][pLider] != 30 && PlayerInfo[playerid][pMembro] != 3 && PlayerInfo[playerid][pLider] != 3 || PlayerInfo[playerid][pCB] == 0)
    	    {
	   			SendClientMessage(playerid, COR_GRAD1, "Você não possui uma CB!");
	   			return 1;
    	    }
	        if(BombaPlantada[playerid] == 0)
		    {
		        SendClientMessage(playerid, COR_GRAD1, "Você não plantou nenhuma bomba, use /cb para plantar uma.");
		        return 1;
	        }
    	    if(PlayerInfo[playerid][pJailed] != 0)
    		{
	   			SendClientMessage(playerid,COR_GRAD1," Você não pode usar bombas na cadeia!.");
	   			return 1;
            }
            BombaPlantada[playerid] = 0;
            DestroyDynamicObject(dinid[playerid]);
			CreateExplosion(bombax[playerid],bombay[playerid],bombaz[playerid], 6, 50);
			format(gstring, sizeof(gstring), "%s %s explodiu uma bomba! ID[%d]",NomeORG(playerid), PlayerName(playerid), playerid);
			ABroadCast(COR_AMARELO,gstring,1);
			SendClientMessage(playerid,COR_GREEN,"A bomba foi detonada !");
			return 1;
		}
		return 1;
	}
    CMD:mostrarrg(playerid, params[])
	{
	  tmpzcmd = strtok(cmdtext, idxzcmd);
	  if(!strlen(tmpzcmd))
	  {
	    SendClientMessage(playerid, COR_GRAD1, "Uso: /mostrarrg [id]");
	  }
	  new info;
	  info = ReturnUser(tmpzcmd);
	  if (ProxDetectorS(10.0, playerid,info))
	  {
	     ShowStats(info, playerid);
	     GetPlayerName(playerid, sendername, sizeof(sendername));
	     GetPlayerName(info, plnamezcmd, sizeof(plnamezcmd));
	     format(gstring, sizeof(gstring), "* %s mostra seu rg para %s.", sendername, plnamezcmd);
	     ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
	  }
 	  return 1;
	}
	CMD:laptop)
	{
	    if(IsPlayerConnected(playerid))
	 	{
		     if(PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8 || PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)
		     {
                  if(ConnectedToPC[playerid] == 255)
			      {
	                   ConnectedToPC[playerid] = 0;
			           return 1;
			      }
			      SendClientMessage(playerid, COR_LIGHTBLUE, "* Você ligou o seu laptop, e se conectou a sua Agência.");
			      if(GetPlayerOrg(playerid) == 8)
			      {
			           ShowPlayerDialog(playerid,53,DIALOG_STYLE_LIST,"LapTop Hitmans","Ver Contratos\nDar Um Contrato\nFazer Um Pedido\nVer Membros\nVer Meu Contrato\nCancelar Meu Contrato\nDesligar LapTop","Confirmar","Cancelar");
				  }
				  else if(GetPlayerOrg(playerid) == 26)
			      {
			           ShowPlayerDialog(playerid,53,DIALOG_STYLE_LIST,"LapTop Assassins","Ver Contratos\nDar Um Contrato\nFazer Um Pedido\nVer Membros\nVer Meu Contrato\nCancelar Meu Contrato\nDesligar LapTop","Confirmar","Cancelar");
				  }
				  ConnectedToPC[playerid] = 255;
			 }
			 else
			 {
			      SendClientMessage(playerid, COR_GREY, "Você não é um Hitman / Assassin!");
	              return 1;
		     }
	    }
	    return 1;
	}
	CMD:meucontrato(playerid, params[])
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pMembro] != 8 && PlayerInfo[playerid][pLider] != 8 && PlayerInfo[playerid][pMembro] != 26 && PlayerInfo[playerid][pLider] != 26)
    	    {
	   			SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar esse comando!");
	   			return 1;
    	    }
    	    if(GoChase[playerid] == 999)
    		{
	   			SendClientMessage(playerid, COR_GREY, "Você não tem um contrato !");
	   			return 1;
		    }
            new Giver[MAX_PLAYER_NAME];
            GetPlayerName(GoChase[playerid], Giver, sizeof(Giver));
            format(gstring,128,"* O nome do seu contrato é %s - ID[%d].",Giver,GoChase[playerid]);
			SendClientMessage(playerid,COR_LIGHTBLUE,gstring);
			return 1;
		}
		return 1;
	}
	CMD:esc(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if(GetPlayerOrg(playerid) != 8 && GetPlayerOrg(playerid) != 26 && !IsACop(playerid) && PlayerInfo[playerid][pEmprego] != 7 && !IsPlayerInTerritorio(playerid))
			{
			    SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar esse comando!");
			    return 1;
            }
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_VERMELHO, "USE: /esc [id]");
				return 1;
			}
			if(pUsaramCmdEsc == 1)
  			{
   				SendClientMessage(playerid,COR_VERMELHO,"Usaram este comando a pouco tempo, aguarde um pouco.");
     			return 1;
       		}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			if(IsPlayerConnected(giveplayeridzcmd))
			{
			    if(giveplayeridzcmd != INVALID_PLAYER_ID)
			    {
			        if(IsACop(playerid))
			        {
					    if(WantedLevel[giveplayeridzcmd] == 0)
					    {
					        SendClientMessage(playerid, COR_BRANCO, "Este jogador não é está roubando.");
					        return 1;
					    }
					    if(strcmp(PlayerName(giveplayeridzcmd),"Dudu_Insane(playerid, params[])
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não pode usar esse comando no Dudu_Insane, KJKJKJKJKJKJ !");
							return 1;
						}
					    new Float:Posicao[3];
		                GetPlayerPos(giveplayeridzcmd,Posicao[0],Posicao[1],Posicao[2]);
						if (IsPlayerInRangeOfPoint(playerid,8.0,Posicao[0],Posicao[1],Posicao[2]))
		                {
	                            GetPlayerName(playerid,PlayerName,sizeof(PlayerName));
	                            GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
				                format(gstring, sizeof(gstring), "[ANTI-ESC] Você está acusando o jogador %s[%d] por estar de ESC em Contrato.",giveplayerzcm,hitmanid);
				                SendClientMessage(playerid, COR_VERMELHO, gstring);
				                format(gstring, sizeof(gstring), "Oficial %s[%d] está verificando se o procurado: %s[%d] está de ESC.", PlayerName(playerid), playerid, PlayerName(giveplayeridzcmd), giveplayeridzcmd);
								ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				                format(gstring, sizeof(gstring), "[ANTI-ESC] Você está sendo acusado de ESC em Contrato pelo jogador %d[%d]. Mova-se agora ou será kickado",PlayerName(playerid),playerid);
				                SendClientMessage(giveplayeridzcmd, COR_VERMELHO, gstring);
				                SetTimerEx("CheckarPosicao",8000,false,"iifff",playerid,giveplayeridzcmd,Posicao[0],Posicao[1],Posicao[2]);
				                GotHit[giveplayeridzcmd] = 0;
				                pUsaramCmdEsc = 1;
				                TempoCmdEsc = SetTimer("UsaramCmdEsc", 15000, 0);
				                GetChased[giveplayeridzcmd] = 999;
				                GoChase[playerid] = 999;
						}
						else
						{
						    SendClientMessage(playerid, COR_SAMU, "Você deve estar perto do jogador para acusa-lo de ESC.");
						    return 1;
						}
					}
					else if(GetPlayerOrg(playerid) == 8 || GetPlayerOrg(playerid) == 26)
					{
					    if(GoChase[playerid] == 999)
					    {
					        SendClientMessage(playerid, COR_BRANCO, "Este jogador não é o seu contrato.");
					        return 1;
					    }
					    new Float:Posicao[3];
		                GetPlayerPos(giveplayeridzcmd,Posicao[0],Posicao[1],Posicao[2]);
						if (IsPlayerInRangeOfPoint(playerid,8.0,Posicao[0],Posicao[1],Posicao[2]))
		                {
	                            GetPlayerName(playerid,PlayerName,sizeof(PlayerName));
	                            GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
				                format(gstring, sizeof(gstring), "[ANTI-ESC] Você está acusando o jogador %s[%d] por estar de ESC procurado.",giveplayerzcm,hitmanid);
				                SendClientMessage(playerid, COR_VERMELHO, gstring);
				                format(gstring, sizeof(gstring), "[ANTI-ESC] Você está sendo acusado de ESC pelo jogador %d[%d]. Digite algo no chat normal agora ou será kickado.",PlayerName(playerid),playerid);
				                SendClientMessage(giveplayeridzcmd, COR_VERMELHO, gstring);
				                SetTimerEx("CheckarPosicao",8000,false,"iifff",playerid,giveplayeridzcmd,Posicao[0],Posicao[1],Posicao[2]);
				                GotHit[giveplayeridzcmd] = 0;
				                TempoCmdEsc = SetTimer("UsaramCmdEsc", 15000, 0);
				                GetChased[giveplayeridzcmd] = 999;
				                GoChase[playerid] = 999;
						}
						else
						{
						    SendClientMessage(playerid, COR_SAMU, "Você deve estar perto do jogador para acusa-lo de ESC.");
						    return 1;
						}
					}
					else if(PlayerInfo[playerid][pEmprego] == 7)
					{
					    if(PlayerInfo[playerid][pJailed] != 0)
					    {
					        SendClientMessage(playerid, -1, "Você está preso e por isso não pode usar este comando agora.");
					        return 1;
					    }
      					if(PlayerInfo[giveplayeridzcmd][pJailed] == 0)
						{
   							SendClientMessage(playerid,COR_AMARELO,"Este jogador não está preso na penitenciária.");
		        			return 1;
						}
					    new Float:Posicao[3];
		                GetPlayerPos(giveplayeridzcmd,Posicao[0],Posicao[1],Posicao[2]);
						if (IsPlayerInRangeOfPoint(playerid,8.0,Posicao[0],Posicao[1],Posicao[2]))
		                {
	                            GetPlayerName(playerid,PlayerName,sizeof(PlayerName));
	                            GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
				                format(gstring, sizeof(gstring), "[ANTI-ESC] Você está acusando o jogador %s[%d] por estar de ESC procurado.",giveplayerzcm,playerid);
				                SendClientMessage(playerid, COR_VERMELHO, gstring);
				                format(gstring, sizeof(gstring), "Agente Penitenciário: %s[%d] está verificando se o jogador: %s[%d] está de ESC.",PlayerName(playerid), playerid, PlayerName(giveplayeridzcmd), giveplayeridzcmd);
				                SendClientMessageToAll(COR_PURPLE, gstring);
				                format(gstring, sizeof(gstring), "[ANTI-ESC] Você está sendo acusado de ESC pelo jogador %s[%d]. Digite algo no chat normal agora ou será kickado.",PlayerName(playerid),playerid);
				                SendClientMessage(giveplayeridzcmd, COR_VERMELHO, gstring);
				                SetTimerEx("CheckarPosicao",8000,false,"iifff",playerid,giveplayeridzcmd,Posicao[0],Posicao[1],Posicao[2]);
				                GotHit[giveplayeridzcmd] = 0;
				                TempoCmdEsc = SetTimer("UsaramCmdEsc", 15000, 0);
				                GetChased[giveplayeridzcmd] = 999;
				                GoChase[playerid] = 999;
						}
						else
						{
						    SendClientMessage(playerid, COR_SAMU, "Você deve estar perto do jogador para acusa-lo de ESC.");
						    return 1;
						}
					}
					else if(IsPlayerInTerritorio(playerid))
					{
					    new Float:Posicao[3];
		                GetPlayerPos(giveplayeridzcmd,Posicao[0],Posicao[1],Posicao[2]);
						if (IsPlayerInRangeOfPoint(playerid,8.0,Posicao[0],Posicao[1],Posicao[2]))
		                {
	                            GetPlayerName(playerid,PlayerName,sizeof(PlayerName));
	                            GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
				                format(gstring, sizeof(gstring), "[ANTI-ESC] Você está acusando o jogador %s[%d] por estar de ESC território.",giveplayerzcm,hitmanid);
				                SendClientMessage(playerid, COR_VERMELHO, gstring);
				                format(gstring, sizeof(gstring), "[ANTI-ESC] Você está sendo acusado de ESC em território pelo jogador %d[%d]. Mova-se agora ou será kickado.",PlayerName(playerid),playerid);
				                SendClientMessage(giveplayeridzcmd, COR_VERMELHO, gstring);
				                SetTimerEx("CheckarPosicao",8000,false,"iifff",playerid,giveplayeridzcmd,Posicao[0],Posicao[1],Posicao[2]);
				                GotHit[giveplayeridzcmd] = 0;
				                TempoCmdEsc = SetTimer("UsaramCmdEsc", 15000, 0);
				                GetChased[giveplayeridzcmd] = 999;
				                GoChase[playerid] = 999;
						}
						else
						{
						    SendClientMessage(playerid, COR_SAMU, "Você deve estar perto do jogador para acusa-lo de ESC.");
						    return 1;
						}
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "   O Jogador está Offline !");
			    return 1;
			}
		}
		return 1;
    }
    CMD:cordinha(playerid, params[])
    {
        if (PlayerInfo[playerid][pVIP] == 0 && !IsACop(playerid) && GetPlayerOrg(playerid) != 7 && GetPlayerOrg(playerid) != 4)
	    {
	       SendClientMessage(playerid, COR_GREY, "Você não é um VIP /COP /GOV /SAMU !");
	       return 1;
	    }
		new vehicleid = GetPlayerVehicleID(playerid);
        if(IsPlayerInAnyVehicle(playerid) && IsAAviao(vehicleid) && Sliding[playerid] == 0)
        {
            Sliding[playerid] = 1;
            RemovePlayerFromVehicle(playerid);
            TogglePlayerControllable(playerid, 0);
            SetTimerEx("Slide", 100, 0, "i", playerid);
            SetTimerEx("Slidee", 9000, 0, "i", playerid);
            SendClientMessage(playerid, COR_BRANCO, "Você está escorregando na cordinha, quando chegar perto do chão digite novamente /cordinha !");
        }
        else if(Sliding[playerid] == 1)
        {
            Sliding[playerid] = 0;
            DestroyDynamicObject(Corda[playerid]);
            TogglePlayerControllable(playerid, 1);
        }
        return 1;
    }
	CMD:pararroubo)
	{
		if(roubando[playerid] > 0)
	    {
		    if(ProvocoBanco[playerid] == 1)
		    {
	       	    for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
			         if(PlayerInfo[i][pChatRoubo] == 0)
				     {
	                      format(gstring, sizeof(gstring), "%s e os %s cancelaram um roubo ao Banco! ID:[%d]",PlayerName(playerid), NomeORG(playerid) , playerid);
	                      SendClientMessage(i, GetPlayerColor(playerid), gstring);
				     }
			    }
			    TogglePlayerControllable(playerid, 1);
			    ProvocoBanco[playerid] = 0; roubando[playerid] = 0; roubobanco = 0; KillTimer(tempobanco); temporoubobanco = 0;
	            RemovePlayerAttachedObject(playerid,4);
			    ClearAnimations(playerid);
			    KillTimer(TempoContagem[playerid]);
			    SendClientMessage(playerid, COR_LIGHTRED, "Você perdeu -R$5.000 por cancelar este roubo!");
				GivePlayerMoneyEx(playerid, -5000);
			}
	        else if(ProvocoLot[playerid] == 1)
			{
	       	    for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
			         if(PlayerInfo[i][pChatRoubo] == 0)
				     {
	                      format(gstring, sizeof(gstring), "%s e os %s cancelaram um roubo a Lotérica! ID:[%d]",PlayerName(playerid), NomeORG(playerid) , playerid);
	                      SendClientMessage(i, GetPlayerColor(playerid), gstring);
				     }
			    }
			    TogglePlayerControllable(playerid, 1);
			    ProvocoLot[playerid] = 0; roubando[playerid] = 0; roubolot = 0; KillTimer(tempolot); temporoubolot = 0;
	            RemovePlayerAttachedObject(playerid,4);
			    ClearAnimations(playerid);
			    KillTimer(TempoContagem[playerid]);
			    SendClientMessage(playerid, COR_LIGHTRED, "Você perdeu -R$5.000 por cancelar este roubo!");
				GivePlayerMoneyEx(playerid, -5000);
			}
			else if(Provocolotlv[playerid] == 1)
			{
	       	    for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
			         if(PlayerInfo[i][pChatRoubo] == 0)
				     {
	                      format(gstring, sizeof(gstring), "%s e os %s cancelaram um roubo o Cartório! ID:[%d]",PlayerName(playerid), NomeORG(playerid) , playerid);
	                      SendClientMessage(i, GetPlayerColor(playerid), gstring);
				     }
			    }
			    TogglePlayerControllable(playerid, 1);
			    Provocolotlv[playerid] = 0; roubando[playerid] = 0; roubolotlv = 0; KillTimer(tempolotlv); temporoubolotlv = 0;
	            RemovePlayerAttachedObject(playerid,4);
			    ClearAnimations(playerid);
			    KillTimer(TempoContagem[playerid]);
			    SendClientMessage(playerid, COR_LIGHTRED, "Você perdeu -R$5.000 por cancelar este roubo!");
				GivePlayerMoneyEx(playerid, -5000);
			}
			else if(ProvocoLoja1[playerid] == 1)
			{
	       	    for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
			         if(PlayerInfo[i][pChatRoubo] == 0)
				     {
	                      format(gstring, sizeof(gstring), "%s e os %s cancelaram um roubo a Loja de Armas 1! ID:[%d]",PlayerName(playerid), NomeORG(playerid) , playerid);
	                      SendClientMessage(i, GetPlayerColor(playerid), gstring);
				     }
			    }
			    TogglePlayerControllable(playerid, 1);
			    ProvocoLoja1[playerid] = 0; roubando[playerid] = 0; rouboloja1 = 0; KillTimer(tempoloja1); temporouboloja1 = 0;
	            RemovePlayerAttachedObject(playerid,4);
			    ClearAnimations(playerid);
			    KillTimer(TempoContagem[playerid]);
			    SendClientMessage(playerid, COR_LIGHTRED, "Você perdeu -R$5.000 por cancelar este roubo!");
				GivePlayerMoneyEx(playerid, -5000);
			}
			else if(ProvocoLoja2[playerid] == 1)
			{
	       	    for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
			         if(PlayerInfo[i][pChatRoubo] == 0)
				     {
	                      format(gstring, sizeof(gstring), "%s e os %s cancelaram um roubo a Loja de Armas 2! ID:[%d]",PlayerName(playerid), NomeORG(playerid) , playerid);
	                      SendClientMessage(i, GetPlayerColor(playerid), gstring);
				     }
			    }
			    TogglePlayerControllable(playerid, 1);
			    ProvocoLoja2[playerid] = 0; roubando[playerid] = 0; rouboloja2 = 0; KillTimer(tempoloja2); temporouboloja2 = 0;
	            RemovePlayerAttachedObject(playerid,4);
			    ClearAnimations(playerid);
			    KillTimer(TempoContagem[playerid]);
			    SendClientMessage(playerid, COR_LIGHTRED, "Você perdeu -R$5.000 por cancelar este roubo!");
				GivePlayerMoneyEx(playerid, -5000);
			}
			else if(ProvocoLoja3[playerid] == 1)
			{
	       	    for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
			         if(PlayerInfo[i][pChatRoubo] == 0)
				     {
	                      format(gstring, sizeof(gstring), "%s e os %s cancelaram um roubo a Loja de Armas 3! ID:[%d]",PlayerName(playerid), NomeORG(playerid) , playerid);
	                      SendClientMessage(i, GetPlayerColor(playerid), gstring);
				     }
			    }
			    TogglePlayerControllable(playerid, 1);
			    ProvocoLoja3[playerid] = 0; roubando[playerid] = 0; rouboloja3 = 0; KillTimer(tempoloja3); temporouboloja3 = 0;
	            RemovePlayerAttachedObject(playerid,4);
			    ClearAnimations(playerid);
			    KillTimer(TempoContagem[playerid]);
			    SendClientMessage(playerid, COR_LIGHTRED, "Você perdeu -R$5.000 por cancelar este roubo!");
				GivePlayerMoneyEx(playerid, -5000);
			}
			else if(ProvocoPut[playerid] == 1)
			{
	       	    for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
			         if(PlayerInfo[i][pChatRoubo] == 0)
				     {
	                      format(gstring, sizeof(gstring), "%s e os %s cancelaram um roubo ao Puteiro! ID:[%d]",PlayerName(playerid), NomeORG(playerid) , playerid);
	                      SendClientMessage(i, GetPlayerColor(playerid), gstring);
				     }
			    }
			    TogglePlayerControllable(playerid, 1);
			    ProvocoPut[playerid] = 0; roubando[playerid] = 0; rouboput = 0; KillTimer(tempoput); temporouboput = 0;
	            RemovePlayerAttachedObject(playerid,4);
			    ClearAnimations(playerid);
			    KillTimer(TempoContagem[playerid]);
			    SendClientMessage(playerid, COR_LIGHTRED, "Você perdeu -R$5.000 por cancelar este roubo!");
				GivePlayerMoneyEx(playerid, -5000);
			}
			else if(ProvocoMotel[playerid] == 1)
			{
	       	    for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
			         if(PlayerInfo[i][pChatRoubo] == 0)
				     {
	                      format(gstring, sizeof(gstring), "%s e os %s cancelaram um roubo ao Motel! ID:[%d]",PlayerName(playerid), NomeORG(playerid) , playerid);
	                      SendClientMessage(i, GetPlayerColor(playerid), gstring);
				     }
			    }
			    TogglePlayerControllable(playerid, 1);
			    ProvocoMotel[playerid] = 0; roubando[playerid] = 0; roubomotel = 0; KillTimer(tempomotel); temporoubomotel = 0;
	            RemovePlayerAttachedObject(playerid,4);
			    ClearAnimations(playerid);
			    KillTimer(TempoContagem[playerid]);
			    SendClientMessage(playerid, COR_LIGHTRED, "Você perdeu -R$5.000 por cancelar este roubo!");
				GivePlayerMoneyEx(playerid, -5000);
			}
			else if(Provocoilha[playerid] == 1)
		    {
	       	    for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
			         if(PlayerInfo[i][pChatRoubo] == 0)
				     {
	                      format(gstring, sizeof(gstring), "%s e os %s cancelaram um roubo a Ilha Pirata! ID:[%d]",PlayerName(playerid), NomeORG(playerid) , playerid);
	                      SendClientMessage(i, GetPlayerColor(playerid), gstring);
				     }
			    }
			    TogglePlayerControllable(playerid, 1);
			    Provocoilha[playerid] = 0; roubando[playerid] = 0; rouboilha = 0; KillTimer(tempoilha); temporouboilha = 0;
	            RemovePlayerAttachedObject(playerid,4);
			    ClearAnimations(playerid);
			    KillTimer(TempoContagem[playerid]);
			    SendClientMessage(playerid, COR_LIGHTRED, "Você perdeu -R$5.000 por cancelar este roubo!");
				GivePlayerMoneyEx(playerid, -5000);
			}
			else if(Provoconavio[playerid] == 1)
		    {
	       	    for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
			         if(PlayerInfo[i][pChatRoubo] == 0)
				     {
	                      format(gstring, sizeof(gstring), "%s e os %s cancelaram um roubo ao Navio! ID:[%d]",PlayerName(playerid), NomeORG(playerid) , playerid);
	                      SendClientMessage(i, GetPlayerColor(playerid), gstring);
				     }
			    }
			    TogglePlayerControllable(playerid, 1);
			    Provoconavio[playerid] = 0; roubando[playerid] = 0; roubonavio = 0; KillTimer(temponavio); temporoubonavio = 0;
	            RemovePlayerAttachedObject(playerid,4);
			    ClearAnimations(playerid);
			    KillTimer(TempoContagem[playerid]);
			    SendClientMessage(playerid, COR_LIGHTRED, "Você perdeu -R$5.000 por cancelar este roubo!");
				GivePlayerMoneyEx(playerid, -5000);
			}
			else if(Provococaixa[playerid] == 1)
			{
				for(new i = 0;  i < MAX_PLAYERS; ++i)
				{
					 if(PlayerInfo[i][pChatRoubo] == 0)
					 {
						format(gstring, sizeof(gstring), "[Roubo Caixa Eletrônico] %s[%d]: Não conseguiu roubar o caixa eletrônico!", PlayerName(playerid) , playerid);
						SendClientMessage(i, GetPlayerColor(playerid), gstring);
					 }
				}
				TogglePlayerControllable(playerid, 1);
				Provococaixa[playerid] = 0; roubando[playerid] = 0; roubocaixa = 0; KillTimer(tempocaixa); temporoubocaixa = 0;
				RemovePlayerAttachedObject(playerid,4);
				ClearAnimations(playerid);
				KillTimer(tempocaixa);
				KillTimer(TempoContagem[playerid]);
			}
			return 1;
		}
		else
		{
		    SendClientMessage(playerid, COR_BRANCO, "Você não está roubando nenhum lugar.");
	    	return 1;
		}
	}
	CMD:entrarorg(playerid, params[])
	{
	    if (IsPlayerConnected(playerid))
		{
			new Float:Vida;
            GetPlayerHealth(playerid, Vida);
			if(PlayerInfo[playerid][pSocio] < 1)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não é um Sócio !");
				return 1;
			}
			if(pentrarorg[playerid] == 1)
  	        {
 		        SendClientMessage(playerid,COR_GRAD2,"Você só pode usar este comando a cada 5 minutos, usou a pouco tempo!");
 		        return 1;
  	        }
  	        if(PlayerInfo[playerid][pMembro] != 0 || PlayerInfo[playerid][pLider] != 0)
			{
				SendClientMessage(playerid, COR_GRAD2, "Você está em algumar org,use /pedircontas antes !");
				return 1;
			}
			if(WantedLevel[playerid] != 0)
			{
				SendClientMessage(playerid, COR_AMARELO, "Você não pode trocar de org estando procurado pela polícia !");
				return 1;
			}
			if(PlayerInfo[playerid][pEmprego] == 3 || PlayerInfo[playerid][pEmprego] == 4 || PlayerInfo[playerid][pEmprego] == 5 || PlayerInfo[playerid][pEmprego] == 9)
			{
				SendClientMessage(playerid, COR_GRAD2, "Você está em um emprego que não pode ter organização. digite /sairdoemprego !");
				return 1;
			}
			if(PlayerInfo[playerid][pJailed] != 0)
    	    {
	   			SendClientMessage(playerid,COR_AMARELO,"Você não pode trocar de org nesta situação !");
	   			return 1;
    	    }
    	    if(Vida <= 50)
    	    {
				 SendClientMessage(playerid, COR_AMARELO, "Você deve ter mais da metade da vida pra trocar de org !");
				 return 1;
    	    }
    	    new Celulas[140], str[4000];
			for(new x = 1; x < MAX_ORGS; x++)
			{
				format(Celulas, 140, "%s\n", getOrgName(x));
				strcat(str, Celulas);
				ShowPlayerDialog(playerid, 585, DIALOG_STYLE_LIST, "Menu De Orgs Sócio", str, "Confirmar", "Cancelar");
			}
		}
		return true;
	}
	CMD:orgsocio)
	{
	    if(IsPlayerConnected(playerid))
	    {
            new Float:Vida;
            GetPlayerHealth(playerid, Vida);
			if(PlayerInfo[playerid][pSocio] < 1)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não é um Sócio !");
				return 1;
			}
			if(pentrarorg[playerid] == 1)
  	        {
 		        SendClientMessage(playerid,COR_GRAD2,"Você só pode usar este comando a cada 5 minutos, usou a pouco tempo!");
 		        return 1;
  	        }
  	        if(PlayerInfo[playerid][pMembro] != 0 || PlayerInfo[playerid][pLider] != 0)
			{
				SendClientMessage(playerid, COR_GRAD2, "Você está em algumar org,use /pedircontas antes !");
				return 1;
			}
			if(WantedLevel[playerid] != 0)
			{
				SendClientMessage(playerid, COR_AMARELO, "Você não pode trocar de org estando procurado pela polícia !");
				return 1;
			}
			if(PlayerInfo[playerid][pEmprego] == 3 || PlayerInfo[playerid][pEmprego] == 4 || PlayerInfo[playerid][pEmprego] == 5 || PlayerInfo[playerid][pEmprego] == 9)
			{
				SendClientMessage(playerid, COR_GRAD2, "Você está em um emprego que não pode ter organização. digite /sairdoemprego !");
				return 1;
			}
			if(PlayerInfo[playerid][pJailed] != 0)
    	    {
	   			SendClientMessage(playerid,COR_AMARELO,"Você não pode trocar de org nesta situação !");
	   			return 1;
    	    }
    	    if(Vida <= 50)
    	    {
				 SendClientMessage(playerid, COR_AMARELO, "Você deve ter mais da metade da vida pra trocar de org !");
				 return 1;
    	    }
			new level;
			tmpzcmd = strtok(cmdtext, idxzcmd);
			level = strval(tmpzcmd);
			if(level < 1 || level > 26)
			{
				SendClientMessage(playerid, COR_AMARELO, "Use: /entrarorg [ID]!");
				SendClientMessage(playerid, 0x0ffff6FF, "Policia Militar(1) | BOPE(2)| Exército(3) | SA-MU(4) | Los Aztecas(5)");
		   		SendClientMessage(playerid, 0x0ffff6FF, "Taliban(6) | Governo(7) | Hitmans(8) | Repórteres(9) | Taxistas(10)");
                SendClientMessage(playerid, 0x0ffff6FF, "PCC(11) | Rota(12) | GATE(13) | Mecânicos(14) | Groove Street(15)");
                SendClientMessage(playerid, 0x0ffff6FF, "Al'qaeda(16) | Policia Civil(17) | Ballas(18) | Los Vagos(19) | M. Yakuza(20)");
                SendClientMessage(playerid, 0x0ffff6FF, "Sons of Anarchy(21) | Máfia Cosa Nostra(22) | Comando Vermelho(23)");
                SendClientMessage(playerid, 0x0ffff6FF, "Mayans(24) | Policia Federal(25) | Assassins(26)");
				return 1;
			}
    	    skinentrarorg[playerid] = GetPlayerSkin(playerid);
    	    SetTimerEx("EntrarorgTimmer", 300000, 0, "i", playerid);
    	    ResetPlayerWeaponsEx(playerid);
		    if(PlayerInfo[playerid][pSocio] < 2)
			{
				PlayerInfo[playerid][pCargo] = 3;
			}
			else
			{
				PlayerInfo[playerid][pCargo] = 4;
			}
			PlayerInfo[playerid][pMembro] = level;
			pentrarorg[playerid] = 1;
			DeslogandoSocio[playerid] = 1;
			format(gstring, sizeof(gstring), "* Você se tornou membro da organização [%d]", level);
			SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
			format(gstring, sizeof(gstring), "[Entrar ORG]: {FFFFFF}%s entrou para a organização: %s",PlayerName(playerid), NomeORG(playerid));
			SendClientMessageToAll(COR_LIGHTBLUE, gstring);
			SetPlayerSpawn(playerid);
	    }
	    return 1;
	}
	CMD:entrarorgadm(playerid, params[])
	{

		if(IsPlayerConnected(playerid))
		{

			if(PlayerInfo[playerid][pAdmin] < 3)
			{

				SendClientMessage(playerid, COR_GRAD1, "Voce nao tem permissao para usar esse comando!");
				return 1;
			}
			if(PlayerInfo[playerid][pMembro] != 0 || PlayerInfo[playerid][pLider] != 0)
			{

				SendClientMessage(playerid, COR_GRAD2, "Você está em algumar org,use /pedircontas antes !");
				return 1;
			}
			if(PlayerInfo[playerid][pEmprego] > 1)
			{

				SendClientMessage(playerid, COR_LIGHTRED, "Voce possui uma profissao /sairdoemprego.");
				return 1;
			}
			if(PlayerInfo[playerid][pJailed] != 0)
			{

				SendClientMessage(playerid,COR_AMARELO,"Você não pode trocar de org nesta situação !");
				return 1;
			}
			new level;
			tmpzcmd = strtok(cmdtext, idxzcmd);
			level = strval(tmpzcmd);
			if(level < 1 || level > 26)
			{
				SendClientMessage(playerid, COR_AMARELO, "Use: /entrarorgadm [ID]!");
				SendClientMessage(playerid, 0x0ffff6FF, "Policia Militar(1) | BOPE(2)| Exército(3) | SA-MU(4) | Los Aztecas(5)");
		   		SendClientMessage(playerid, 0x0ffff6FF, "Taliban(6) | Governo(7) | Hitmans(8) | Repórteres(9) | Taxistas(10)");
                SendClientMessage(playerid, 0x0ffff6FF, "PCC(11) | Rota(12) | GATE(13) | Mecânicos(14) | Groove Street(15)");
                SendClientMessage(playerid, 0x0ffff6FF, "Al'qaeda(16) | Policia Civil(17) | Ballas(18) | Los Vagos(19) | M. Yakuza(20)");
                SendClientMessage(playerid, 0x0ffff6FF, "Sons of Anarchy(21) | Máfia Cosa Nostra(22) | Comando Vermelho(23)");
                SendClientMessage(playerid, 0x0ffff6FF, "Mayans(24) | Policia Federal(25) | Assassins(26)");
				return 1;
			}
			skinentrarorg[playerid] = GetPlayerSkin(playerid);
			ResetPlayerWeaponsEx(playerid);
			PlayerInfo[playerid][pCargo] = 4;
			PlayerInfo[playerid][pMembro] = level;
			lideradmin[playerid] = 1;
			format(gstring, 128, "* Você se tornou membro da organização %d, está no cargo 4 !",level);
			SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
			SetPlayerSpawn(playerid);
		}
		return 1;
	}
	CMD:departamento(playerid, params[])// || CMD:d(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
			{
				idxzcmd++;
			}
			new offset = idxzcmd;
			new result[82];
			while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
			{
				result[idxzcmd - offset] = cmdtext[idxzcmd];
				idxzcmd++;
			}
			result[idxzcmd - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COR_DEPARTAMENTO, "USE: (/d)epartamento [Chat Governo]");
				return 1;
			}
			if(PlayerInfo[playerid][pCargo] < 2)
			{
				 SendClientMessage(playerid, COR_BALLAS, "Apenas cargo 2+ podem falar no chat do governo.");
				 return 1;
			}
			if(!IsACop(playerid) && GetPlayerOrg(playerid) != 4 && GetPlayerOrg(playerid) != 7)
			{
				 SendClientMessage(playerid, COR_GRAD2, "Você não faz parte de nenhuma equipe do governo !");
				 return 1;
			}
			if(GetTickCount() - TempoChatGov[playerid] < 3000)
    	    {
		         SendClientMessage(playerid,COR_GRAD1,"Você só pode escrever uma mensagem a cada 3 segundos.");
		         return 1;
		    }
            if(TentouDivulgar(result))
            {
            	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
            	format(gstring, 128, "AdmAviso: [%d]%s tentou divulgar: %s.",playerid,PlayerName,result);
				ABroadCast(COR_AMARELO,gstring,1);
				DivulgouLog(gstring);
            	return 1;
            }
            if(Palavrao(result))
   	        {
                 GivePlayerMoneyEx(playerid, -500);
                 SendClientMessage(playerid, COR_LIGHTRED, "É PROIBIDO CHINGAR NO CHAT DO GOVERNO,VOCÊ PERDEU 500 REAIS !");
                 return 1;
    	    }
			if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
			{
			    if(PlayerInfo[playerid][pCargo] == 6)
				{
				     format(gstring, sizeof(gstring), "** PM(L) %s: %s **", sendername, result);
				}
				else if(PlayerInfo[playerid][pCargo] >= 1)
				{
				     format(gstring, sizeof(gstring), "** PM(%d) %s: %s **",PlayerInfo[playerid][pCargo], sendername, result);
				}
				TempoChatGov[playerid] = GetTickCount();
                SendFamilyMessage(1, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(2, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(3, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(4, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(7, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(12, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(13, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(17, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(25, COR_DEPARTAMENTO, gstring);
				printf("%s", gstring);
				ChatDepLog(gstring);
				format(gstring, sizeof(gstring), "* %s usou o rádio para falar com o governo(/d).", PlayerName(playerid));
	            ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				return 1;
			}
			else if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
			{
			    if(PlayerInfo[playerid][pCargo] == 6)
				{
				     format(gstring, sizeof(gstring), "** BOPE(L) %s: %s **", sendername, result);
				}
				else if(PlayerInfo[playerid][pCargo] >= 1)
				{
				     format(gstring, sizeof(gstring), "** BOPE(%d) %s: %s **",PlayerInfo[playerid][pCargo], sendername, result);
				}
				TempoChatGov[playerid] = GetTickCount();
                SendFamilyMessage(1, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(2, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(3, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(4, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(7, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(12, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(13, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(17, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(25, COR_DEPARTAMENTO, gstring);
				printf("%s", gstring);
				ChatDepLog(gstring);
				format(gstring, sizeof(gstring), "* %s usou o rádio para falar com o governo(/d).", PlayerName(playerid));
	            ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				return 1;
			}
			else if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
			{
			    if(PlayerInfo[playerid][pCargo] == 6)
				{
				     format(gstring, sizeof(gstring), "** GN(L) %s: %s **", sendername, result);
				}
				else if(PlayerInfo[playerid][pCargo] >= 1)
				{
				     format(gstring, sizeof(gstring), "** GN(%d) %s: %s **",PlayerInfo[playerid][pCargo], sendername, result);
				}
				TempoChatGov[playerid] = GetTickCount();
                SendFamilyMessage(1, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(2, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(3, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(4, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(7, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(12, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(13, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(17, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(25, COR_DEPARTAMENTO, gstring);
				printf("%s", gstring);
				ChatDepLog(gstring);
				format(gstring, sizeof(gstring), "* %s usou o rádio para falar com o governo(/d).", PlayerName(playerid));
	            ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				return 1;
			}
			else if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
			{
			    if(PlayerInfo[playerid][pCargo] == 6)
				{
				     format(gstring, sizeof(gstring), "** SA:MU(L) %s: %s **", sendername, result);
				}
				else if(PlayerInfo[playerid][pCargo] >= 1)
				{
				     format(gstring, sizeof(gstring), "** SA:MU(%d) %s: %s **",PlayerInfo[playerid][pCargo], sendername, result);
				}
				TempoChatGov[playerid] = GetTickCount();
                SendFamilyMessage(1, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(2, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(3, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(4, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(7, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(12, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(13, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(17, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(25, COR_DEPARTAMENTO, gstring);
				printf("%s", gstring);
				ChatDepLog(gstring);
				format(gstring, sizeof(gstring), "* %s usou o rádio para falar com o governo(/d).", PlayerName(playerid));
	            ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				return 1;
			}
   			else if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)
			{
			    if(PlayerInfo[playerid][pCargo] == 6)
				{
				     format(gstring, sizeof(gstring), "** GOV(L) %s: %s **", sendername, result);
				}
				else if(PlayerInfo[playerid][pCargo] >= 1)
				{
				     format(gstring, sizeof(gstring), "** GOV(%d) %s: %s **",PlayerInfo[playerid][pCargo], sendername, result);
				}
				TempoChatGov[playerid] = GetTickCount();
                SendFamilyMessage(1, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(2, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(3, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(4, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(7, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(12, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(13, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(17, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(25, COR_DEPARTAMENTO, gstring);
				printf("%s", gstring);
				ChatDepLog(gstring);
				format(gstring, sizeof(gstring), "* %s usou o rádio para falar com o governo(/d).", PlayerName(playerid));
	            ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				return 1;
			}
   			else if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
			{
			    if(PlayerInfo[playerid][pCargo] == 6)
				{
				     format(gstring, sizeof(gstring), "** IP(L) %s: %s **", sendername, result);
				}
				else if(PlayerInfo[playerid][pCargo] >= 1)
				{
				     format(gstring, sizeof(gstring), "** IP(%d) %s: %s **",PlayerInfo[playerid][pCargo], sendername, result);
				}
				TempoChatGov[playerid] = GetTickCount();
                SendFamilyMessage(1, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(2, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(3, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(4, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(7, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(12, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(13, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(17, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(25, COR_DEPARTAMENTO, gstring);
				printf("%s", gstring);
				ChatDepLog(gstring);
				format(gstring, sizeof(gstring), "* %s usou o rádio para falar com o governo(/d).", PlayerName(playerid));
	            ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				return 1;
			}
			else if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
			{
			    if(PlayerInfo[playerid][pCargo] == 6)
				{
				     format(gstring, sizeof(gstring), "** GATE(L) %s: %s **", sendername, result);
				}
				else if(PlayerInfo[playerid][pCargo] >= 1)
				{
				     format(gstring, sizeof(gstring), "** GATE(%d) %s: %s **",PlayerInfo[playerid][pCargo], sendername, result);
				}
				TempoChatGov[playerid] = GetTickCount();
                SendFamilyMessage(1, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(2, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(3, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(4, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(7, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(12, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(13, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(17, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(25, COR_DEPARTAMENTO, gstring);
				printf("%s", gstring);
				ChatDepLog(gstring);
				format(gstring, sizeof(gstring), "* %s usou o rádio para falar com o governo(/d).", PlayerName(playerid));
	            ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				return 1;
			}
			else if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
			{
                if(PlayerInfo[playerid][pCargo] == 6)
				{
				     format(gstring, sizeof(gstring), "** PC(L) %s: %s **", sendername, result);
				}
				else if(PlayerInfo[playerid][pCargo] >= 1)
				{
				     format(gstring, sizeof(gstring), "** PC(%d) %s: %s **",PlayerInfo[playerid][pCargo], sendername, result);
				}
				TempoChatGov[playerid] = GetTickCount();
                SendFamilyMessage(1, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(2, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(3, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(4, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(7, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(12, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(13, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(17, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(25, COR_DEPARTAMENTO, gstring);
				printf("%s", gstring);
				ChatDepLog(gstring);
				format(gstring, sizeof(gstring), "* %s usou o rádio para falar com o governo(/d).", PlayerName(playerid));
	            ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				return 1;
			}
			else if(PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25)
			{
			    if(PlayerInfo[playerid][pCargo] == 6)
				{
				     format(gstring, sizeof(gstring), "** PF(L) %s: %s **", sendername, result);
				}
				else if(PlayerInfo[playerid][pCargo] >= 1)
				{
				     format(gstring, sizeof(gstring), "** PF(%d) %s: %s **",PlayerInfo[playerid][pCargo], sendername, result);
				}
				TempoChatGov[playerid] = GetTickCount();
                SendFamilyMessage(1, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(2, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(3, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(4, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(7, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(12, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(13, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(17, COR_DEPARTAMENTO, gstring);
				SendFamilyMessage(25, COR_DEPARTAMENTO, gstring);
				printf("%s", gstring);
				ChatDepLog(gstring);
				format(gstring, sizeof(gstring), "* %s usou o rádio para falar com o governo(/d).", PlayerName(playerid));
	            ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				return 1;
			}
		}
		return 1;
	}
	CMD:ficha(playerid, params[])
	{
	    if(OnDuty[playerid] != 1)
	    {
	       SendClientMessage(playerid, COR_GREY, "Você não Bateu o cartão!");
	       return 1;
	    }
	    if (IsACop(playerid))
     	{
			if(PlayerToPoint(2, playerid,252.5212,69.6307,1003.6406) || PlayerToPoint(2,playerid,255.0129,76.0857,1003.6406)
		    || PlayerToPoint(2,playerid,240.6702,112.7933,1003.2188) || PlayerToPoint(2, playerid,302.6840,-1529.6685,24.9219) || PlayerToPoint(2, playerid,2688.4722,-2443.8438,13.4729) || PlayerToPoint(2, playerid,326.4964,306.9705,999.1484) || PlayerToPoint(1, playerid,914.5157,-1235.1240,17.2109)
			|| PlayerToPoint(2, playerid,229.7716,165.0986,1003.0234) || PlayerToPoint(2, playerid,1709.7360,-1642.6481,20.2188) || PlayerToPoint(2, playerid,2497.8533,2389.3938,4.2109) || PlayerToPoint(2, playerid,2080.9387,-1376.1432,300.5588) || PlayerToPoint(2, playerid,2251.4067,2490.9138,10.9908))
			{
                 format(gstring,sizeof(gstring),"Digite o ID do jogador para ver a ficha");
                 ShowPlayerDialog(playerid, 10, DIALOG_STYLE_INPUT,"Ver Fichas !", gstring,"Confirmar","Cancelar");
			}
			else
			{
			    SendClientMessage(playerid, COR_GRAD2, "Você tem que estar em um carro da policia ou em alguma HQ da policia!");
				return 1;
			}
		}
		return 1;
	}
	CMD:suspeito(playerid, params[])// || CMD:su(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!IsACop(playerid) && PlayerInfo[playerid][pEmprego] != 7)
	        {
	            SendClientMessage(playerid, COR_GREY, "Você não é um Oficial !");
	            return 1;
	        }
			if(OnDuty[playerid] != 1 && PlayerInfo[playerid][pEmprego] != 7)
			{
			    SendClientMessage(playerid, COR_GREY, "Você não Bateu o cartão!");
			    return 1;
			}
			if(IsPlayerInFavela(playerid) || IsPlayerInSkate(playerid) || IsPlayerInPark(playerid) || IsPlayerInCasarao(playerid) || IsPlayerInMotel(playerid) || IsPlayerInMata(playerid) || IsPlayerInEstacao(playerid) || IsPlayerInChuck(playerid))
			{
			     SendClientMessage(playerid, COR_GRAD1, "Você não pode usar este comando agora !");
				 return 1;
			}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: (/su)speito [ id ] [Descrição do Crime]");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			if (IsACop(playerid) || PlayerInfo[playerid][pEmprego] == 7)
			{
            	if(IsPlayerConnected(giveplayeridzcmd))
				{
                    if(IsACop(giveplayeridzcmd))
					{
						SendClientMessage(playerid, COR_GRAD1, "Você não pode dar su em Policiais!");
						return 1;
					}
					if(PlayerInfo[playerid][pEmprego] == 7)
					{
		        		if(PlayerInfo[giveplayeridzcmd][pEmprego] == 2)
		             	{
		    				SendClientMessage(playerid, COR_AMARELO, "Você não pode duvidar de um Advogado !");
		    				return 1;
		         		}
		           		if(!PlayerToPoint(30.0,playerid,1770.6527,-1573.1688,1734.9430))
			 			{
						   	SendClientMessage(playerid, COR_AMARELO, "Você só pode duvidar de jogadores dentro da penitenciária !");
					   		return 1;
						}
     				}
					if(PlayerInfo[giveplayeridzcmd][pAdmin] == 1342)
					{
					    SendClientMessage(playerid, COR_GRAD1, "Você não pode dar su em um Fundador !");
					    return 1;
					}
					if(PlayerInfo[giveplayeridzcmd][pLider] == 7)
					{
						SendClientMessage(playerid, COR_AMARELO, "Você não pode duvidar do Governador !");
						return 1;
					}
					if(GetTickCount() - TempoSu[giveplayeridzcmd] < 4000)
                    {
						SendClientMessage(playerid, COR_GRAY, "Este jogador levou um su a pouco tempo, espere 4 segundos!");
						return 1;
					}
					if(PlayerInfo[playerid][pJailed] != 0 && PlayerInfo[playerid][pCargo] < 5)
					{
						SendClientMessage(playerid, COR_GRAY, "Você não pode dar su em quem está preso, só sub-lider ou lider !");
						return 1;
					}
				    if(giveplayeridzcmd != INVALID_PLAYER_ID)
				    {
   					     if(GetDistanceBetweenPlayers(playerid,giveplayeridzcmd) <= 70)
					     {
					          GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
							  GetPlayerName(playerid, sendername, sizeof(sendername));
							  new length = strlen(cmdtext);
							  while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
							  {
							       idxzcmd++;
							  }
							  new offset = idxzcmd;
							  new result[64];
							  while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
							  {
							       result[idxzcmd - offset] = cmdtext[idxzcmd];
								   idxzcmd++;
							  }
							  result[idxzcmd - offset] = EOS;
							  if(!strlen(result))
							  {
							 	  SendClientMessage(playerid, COR_GRAD2, "USE: (/su)speito [id] [Descrição do Crime]");
								  return 1;
							  }
							  if(!CrimesServidor(result)) { SendClientMessage(playerid, COR_GREY, "Este tipo de su, não é considerado um crime"); return 1; }
							  if(IsPlayerInFavela(playerid) && IsPlayerInSkate(playerid) && IsPlayerInPark(playerid) && IsPlayerInCasarao(playerid) && IsPlayerInMotel(playerid) && IsPlayerInMata(playerid) && IsPlayerInEstacao(playerid) && IsPlayerInTerritorio(playerid))
							  {
							      if(strcmp(!result,"Cumplice(playerid, params[])
							      {
								      SendClientMessage(playerid, COR_GRAY, "Você está em um território, só poderá usar o /su cumplice!");
									  return 1;
								  }
							  }
                              if(giveplayeridzcmd == playerid) { SendClientMessage(playerid, COR_GREY, "Você não pode se dar su!"); return 1; }
                              if(strcmp(result,"DOP(playerid, params[]) { result = "Desobediência a ordem policial"; }
							  if(strcmp(result,"TH(playerid, params[]) { result = "Tentativa de homicídio"; }
							  if(strcmp(result,"PIA(playerid, params[]) { result = "Porte Ilegal de Armas"; }
							  if(strcmp(result,"SEQ(playerid, params[]) { result = "Sequestro"; }
					          if(strcmp(result,"RP(playerid, params[]) { result = "Resistência a Prisão"; }
							  if(strcmp(result,"vandalismo(playerid, params[]) { result = "Atentado Violento ao Pudor"; }
							  if(strcmp(result,"DSC(playerid, params[]) { result = "Dirigndo sem Carteira"; }
							  format(gstring, sizeof(gstring), "* Você colou o jogador %s como suspeito. Crime: %s",giveplayerzcm,result);
					          SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							  SetPlayerCriminal(giveplayeridzcmd,playerid, result);
							  TempoSu[giveplayeridzcmd] = GetTickCount();
							  return 1;
						 }
						 else
						 {
                            SendClientMessage(playerid, COR_LIGHTBLUE, "Este jogador está muito longe de você !");
						    return 1;
						 }
					}
                }
		        else
		        {
				     SendClientMessage(playerid, COR_GRAD1, "Esse jogador não está conectado.");
					 return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COR_GRAD2, "Você não é um Oficial !");
			    return 1;
		    }
		}
		return 1;
    }
	CMD:trancar(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			new carid;
            if (gTeam[playerid] == 2 || gTeam[playerid] == 1)
			{
				if(GetPlayerInterior(playerid) > 0)
				{
					SendClientMessage(playerid, COR_GREY, "Você não pode usar este comando agora !");
					return 1;
				}
				if(gLastCar[playerid] == 0 && PlayerInfo[playerid][pPHousekey] == 999)
				{
					SendClientMessage(playerid, COR_GRAD2, "Você não tem um carro de casa/alugado.");
					return 1;
				}
                else if(gLastCar[playerid] != 0 && gLastCar[playerid] != PlayerInfo[playerid][pCarroCasa])
				{
					if (HireCar[playerid] != gLastCar[playerid] && HireCar[playerid] > 0)
					{
						gLastDriver[HireCar[playerid]] = 300;
						gCarLock[HireCar[playerid]] = 0;
						UnLockCar(HireCar[playerid]);
					}
					HireCar[playerid] = gLastCar[playerid];
				}
			}
            if (PlayerInfo[playerid][pPHousekey] == 999)
			{
				if(HireCar[playerid] == 0)
				{
					SendClientMessage(playerid, COR_GRAD2, "Você não tem um carro.");
					return 1;
				}
			}
			carid = PlayerInfo[playerid][pCarroCasa];
			if(HireCar[playerid] > 0 && !SwitchKey[playerid])
			{
				carid = HireCar[playerid];
			}
			//new driver = gLastDriver[carid];
			new lockstatus = VTrancado[carid];
			new Float:cx,Float:cy,Float:cz;
			GetVehiclePos(carid, cx, cy, cz);
			switch (lockstatus)
			{
				case 0:
				{
					if(HireCar[playerid] == 0 && PlayerInfo[playerid][pPHousekey] == 999)
					{
						SendClientMessage(playerid, COR_GRAD2, "Você não tem um carro !");
						return 1;
					}
					if(HireCar[playerid] == carid && !SwitchKey[playerid])
					{
						GameTextForPlayer(playerid, "~w~Veiculo do Aluguel ~r~Fechado", 2500, 3);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						VTrancado[carid] = 1;
						gCarLock[HireCar[playerid]] = 1;
						LockCar(carid);
					}
					else if(PlayerInfo[playerid][pCarroCasa] == carid)
					{
						GameTextForPlayer(playerid, "~w~Veiculo da casa ~r~Fechado", 2500, 3);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						VTrancado[carid] = 1;
						LockCar(carid);
						return 1;
					}
				}
				case 1:
				{
					if(HireCar[playerid] == 0 && PlayerInfo[playerid][pPHousekey] == 999)
					{
						SendClientMessage(playerid, COR_GRAD2, "Você não tem um carro !");
						return 1;
					}
					if(HireCar[playerid] == carid && !SwitchKey[playerid])
					{
						GameTextForPlayer(playerid, "~w~Veiculo do aluguel ~g~Aberto", 2500, 3);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						VTrancado[carid] = 0;
						UnLockCar(carid);
					}
					if (PlayerInfo[playerid][pCarroCasa] == carid)
					{
						GameTextForPlayer(playerid, "~w~Veiculo da casa ~g~Aberto", 2500, 3);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						VTrancado[carid] = 0;
						UnLockCar(carid);
						return 1;
					}
				}
				default:
				{
					SendClientMessage(playerid, COR_GRAD2, "Erro");
				}
			}
			if(carid == 256)
			{
				SendClientMessage(playerid, COR_GRAD2, "Você não tem um carro!");
			}
		}
		return 1;
	}
	CMD:chave(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        for(new i = 0; i < sizeof(HouseInfo); ++i)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]) || PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
				{
					if(PlayerInfo[playerid][pPHousekey] == i)
					{
						if(HouseInfo[i][hLock] == 1)
						{
							HouseInfo[i][hLock] = 0;
							GameTextForPlayer(playerid, "~w~Porta ~g~Aberta", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
						if(HouseInfo[i][hLock] == 0)
						{
							HouseInfo[i][hLock] = 1;
							GameTextForPlayer(playerid, "~w~Porta ~r~Fechada", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~ Você não tem essa chave", 5000, 6);
						return 1;
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); ++i)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) || PlayerToPoint(3, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i)
					{
						if(BizzInfo[i][bLocked] == 1)
						{
							BizzInfo[i][bLocked] = 0;
							GameTextForPlayer(playerid, "~w~Empresa ~g~Aberta", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
						if(BizzInfo[i][bLocked] == 0)
						{
							BizzInfo[i][bLocked] = 1;
							GameTextForPlayer(playerid, "~w~Empresa ~r~Fechada", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Você não tem essa chave", 5000, 6);
						return 1;
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); ++i)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i+100)
					{
						if(SBizzInfo[i][sbLocked] == 1)
						{
       						SBizzInfo[i][sbLocked] = 0;
							GameTextForPlayer(playerid, "~w~Empresa ~g~Aberta", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
						if(SBizzInfo[i][sbLocked] == 0)
						{
							SBizzInfo[i][sbLocked] = 1;
							GameTextForPlayer(playerid, "~w~Empresa ~r~Fechada", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Você não tem essa chave", 5000, 6);
						return 1;
					}
				}
			}
	    }
	    return 1;
	}
	CMD:dado(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			new dice = random(6)+1;
			if (gDice[playerid] == 1)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(gstring, sizeof(gstring), "* %s jogou um dado e caiu no numero: %d", sendername,dice);
				ProxDetector(5.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD2, "Você não tem um dado, compre em uma 24/7, Dica: use /gps");
				return 1;
			}
		}
		return 1;
	}
	CMD:banco)
	{
	    if(PlayerToPoint(1.5,playerid,2224.1484,-1141.8772,1025.7969) || PlayerToPoint(1.0,playerid,1929.5409,-1785.1664,13.5469) || PlayerToPoint(1.0,playerid,2232.2886,-1162.6107,25.8906) || PlayerToPoint(1.0,playerid,1550.4796,-1669.7039,13.5624) || PlayerToPoint(1.5,playerid,957.4803,-48.7381,1001.1172) || PlayerToPoint(1.5,playerid,-1687.9369,419.4691,7.1797) || PlayerToPoint(1.5,playerid,-2354.0610,995.4572,50.8984)
		|| PlayerToPoint(1.5, playerid,2313.5950,-16.6278,26.7496) || PlayerToPoint(1.5,playerid,1468.6473,-1767.3595,18.7958) || PlayerToPoint(1.5,playerid,1696.2834,-2333.9360,-2.6797) || PlayerToPoint(1.5,playerid,2542.2083,-1321.3375,1031.4219) || PlayerToPoint(1.5,playerid,2544.5088,-1321.3369,1031.4219) || PlayerToPoint(1.5,playerid,-2453.6760,754.2376,35.1719) || PlayerToPoint(1.5,playerid,3011.9722,-1930.5476,7.3162)
		|| PlayerToPoint(1.5,playerid,3055.3694,-1930.3480,7.3160) || PlayerToPoint(1.5, playerid,3083.7417,-1965.3965,7.5805) || PlayerToPoint(1.5, playerid,3057.0127,-1999.4604,7.4151) || PlayerToPoint(1.5,playerid,3011.7734,-1998.9606,7.4159) || PlayerToPoint(1.5,playerid,80.8369,-1577.8439,9.1559) || PlayerToPoint(1.5,playerid,1255.9523,-1256.3892,16.8868) || PlayerToPoint(1.5,playerid,1644.5117,-1666.7175,21.4375)
		|| PlayerToPoint(1.5,playerid,1721.6503,-1651.8380,20.0625) || PlayerToPoint(1.5,playerid,2938.0166,-1803.4374,1191.0657) || PlayerToPoint(1.5,playerid,2927.8650,-1785.6892,1191.0657) || PlayerToPoint(1.5,playerid,998.5322,-910.9012,42.3281))
		{
		    TogglePlayerControllable(playerid, 0);
			ShowPlayerDialog(playerid,69,DIALOG_STYLE_LIST,"BPL - Banco","Deposito\nSacar\nSaldo\nTransferir","Ok","Cancelar");
		}
		else
		{
            SendClientMessage(playerid, COR_GREY, " Você não está em um banco.");
		}
		return 1;
	}
	CMD:comprar(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!PlayerToPoint(100, playerid,-30.875, -88.9609, 1004.53) && !PlayerToPoint(3, playerid,1508.4419,-1703.4607,14.0469) && !PlayerToPoint(3, playerid,-2236.5828,130.2683,1035.4141) && !PlayerToPoint(1, playerid,379.2942,-190.4165,1000.6328))//centerpoint 24-7
			{
				SendClientMessage(playerid, COR_GRAD2, "Você não esta em uma 24-7 ou Mercado, Vá até uma /gps!");
				return 1;
			}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_BRANCO, "USE: /comprar [Numero do item]");
				SendClientMessage(playerid, COR_BRANCO, "{FFFFFF}|__B_P_L__| 24-7|__B_P_L__|");
				SendClientMessage(playerid, COR_GRAD1, "| 1: Celular 	 R$500	 	6: 50 Créditos 	   R$250	11: Televisão   	R$1500");
				SendClientMessage(playerid, COR_GRAD2, "| 2: Raspadinha  R$30		7: Noteobook       R$50		12: Marmita			R$1000");
				SendClientMessage(playerid, COR_GRAD2, "| 3: Agenda 	 R$30		8: Galão 	       R$10		13: Garrafa d'água  R$800");
				SendClientMessage(playerid, COR_GRAD4, "| 4: Dado        R$15	    9: KitCarro 	   R$10");
				SendClientMessage(playerid, COR_GRAD5, "| 5: 20 Créditos R$70");
				return 1;
			}
			new item = strval(tmpzcmd);
			if (item == 1 && GetPlayerMoneyEx(playerid) >= 50)
			{
                ShowPlayerDialog(playerid,134,DIALOG_STYLE_MSGBOX,"Forma de Pagamento","Escolha a Forma de Pagamento","Dinheiro","Débito");
			}
			else if (item == 2 && GetPlayerMoneyEx(playerid) >= 300)
			{
				ShowPlayerDialog(playerid,135,DIALOG_STYLE_MSGBOX,"Forma de Pagamento","Escolha a Forma de Pagamento","Dinheiro","Débito");
			}
			else if (item == 3 && GetPlayerMoneyEx(playerid) >= 500)
			{
				ShowPlayerDialog(playerid,136,DIALOG_STYLE_MSGBOX,"Forma de Pagamento","Escolha a Forma de Pagamento","Dinheiro","Débito");
			}
			else if (item == 4 && GetPlayerMoneyEx(playerid) >= 50)
			{
				ShowPlayerDialog(playerid,137,DIALOG_STYLE_MSGBOX,"Forma de Pagamento","Escolha a Forma de Pagamento","Dinheiro","Débito");
			}
   			else if (item == 5 && GetPlayerMoneyEx(playerid) >= 200)
			{
				ShowPlayerDialog(playerid,138,DIALOG_STYLE_MSGBOX,"Forma de Pagamento","Escolha a Forma de Pagamento","Dinheiro","Débito");
			}
			else if (item == 6 && GetPlayerMoneyEx(playerid) >= 500)
			{
				ShowPlayerDialog(playerid,139,DIALOG_STYLE_MSGBOX,"Forma de Pagamento","Escolha a Forma de Pagamento","Dinheiro","Débito");
			}
			else if (item == 7 && GetPlayerMoneyEx(playerid) >= 600)
			{
				ShowPlayerDialog(playerid,140,DIALOG_STYLE_MSGBOX,"Forma de Pagamento","Escolha a Forma de Pagamento","Dinheiro","Débito");
			}
			else if (item == 8 && GetPlayerMoneyEx(playerid) >= 600)
			{
				ShowPlayerDialog(playerid,141,DIALOG_STYLE_MSGBOX,"Forma de Pagamento","Escolha a Forma de Pagamento","Dinheiro","Débito");
			}
			else if (item == 9 && GetPlayerMoneyEx(playerid) >= 5000)
			{
				ShowPlayerDialog(playerid,142,DIALOG_STYLE_MSGBOX,"Forma de Pagamento","Escolha a Forma de Pagamento","Dinheiro","Débito");
			}
			else if (item == 10 && GetPlayerMoneyEx(playerid) >= 200)
			{
				ShowPlayerDialog(playerid,143,DIALOG_STYLE_MSGBOX,"Forma de Pagamento","Escolha a Forma de Pagamento","Dinheiro","Débito");
			}
			else if (item == 11 && GetPlayerMoneyEx(playerid) >= 200)
			{
				ShowPlayerDialog(playerid,560,DIALOG_STYLE_MSGBOX,"Forma de Pagamento","Escolha a Forma de Pagamento","Dinheiro","Débito");
			}
			else if (item == 12 && GetPlayerMoneyEx(playerid) >= 1000)
			{
				ShowPlayerDialog(playerid,561,DIALOG_STYLE_MSGBOX,"Forma de Pagamento","Escolha a Forma de Pagamento","Dinheiro","Débito");
			}
			else if (item == 13 && GetPlayerMoneyEx(playerid) >= 800)
			{
				ShowPlayerDialog(playerid,562,DIALOG_STYLE_MSGBOX,"Forma de Pagamento","Escolha a Forma de Pagamento","Dinheiro","Débito");
			}
			else
			{
				SendClientMessage(playerid, COR_GREY, "Você não tem dinheiro o suficiente.");
			}
		}
		return 1;
	}
	CMD:comprarcasa(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
				if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 0)
				{
					if(PlayerInfo[playerid][pLevel] < HouseInfo[h][hLevel])
					{
						format(gstring, sizeof(gstring), "Você precisa ter nivel %d Para comprar! !", HouseInfo[h][hLevel]);
						SendClientMessage(playerid, COR_GRAD5, gstring);
						return 1;
					}
					if(PlayerInfo[playerid][pPHousekey] != 999 && strcmp(PlayerName, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
					{
						SendClientMessage(playerid, COR_BRANCO, "Você tem uma casa para vender digite /vendercasa, você receberá o mesmo valor que foi pago!");
						return 1;
					}
					if(strlen(HouseInfo[h][hDiscription]) > 2 && strfind(HouseInfo[h][hDiscription], "VIP", true) != -1 && PlayerInfo[playerid][pVIP] == 0)
					{
						SendClientMessage(playerid, COR_BRANCO, "Você precisa ser VIP para comprar esta casa!");
						return 1;
					}
					if(strlen(HouseInfo[h][hDiscription]) > 2 && strfind(HouseInfo[h][hDiscription], "Mansão Socio", true) != -1 && PlayerInfo[playerid][pSocio] == 0)
					{
						SendClientMessage(playerid, COR_BRANCO, "Você precisa ser Sócio para comprar esta casa!");
						return 1;
					}
					if(strlen(HouseInfo[h][hDiscription]) > 2 && strfind(HouseInfo[h][hDiscription], "Desativada", true) != -1)
					{
						SendClientMessage(playerid, COR_BRANCO, "Algum Administrador desativou está casa, por isso ela não pode ser comprada!");
						return 1;
					}
					if(GetPlayerMoneyEx(playerid) > HouseInfo[h][hValue])
					{
                        HouseInfo[h][hOwned] = 1;
						PlayerInfo[playerid][pPHousekey] = h;
                        PlayerInfo[playerid][pCarroCasa] = HouseInfo[h][hIdCarro];
						HouseInfo[h][hTakings] = 2500;
						HouseInfo[h][hExitx] = 234.0843;
					    HouseInfo[h][hExity] = 1064.6896;
					    HouseInfo[h][hExitz] = 1084.2108;
					    HouseInfo[h][hInt] = 6;
					    HouseInfo[h][hRent] = 200;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(HouseInfo[h][hOwner], sendername, 0, strlen(sendername), 999);
						GivePlayerMoneyEx(playerid,-HouseInfo[h][hValue]);
						PlayerPlayMusic(playerid);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COR_BRANCO, "Parabéns pela sua nova casa, digite /ajudacasa em caso de dúvidas.");
						SendClientMessage(playerid, COR_LIGHTRED, "Obs: Casas Consomem 2200 reais por dia do cofre. Mantenha o dinheiro ou perderá sua casa, Digite: /cofre !");
						PlayerInfo[playerid][pSpawn] = 1;
					    DateProp(playerid);
					    SaveCasa(h);
                        Atualizar3Dtexts();
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COR_BRANCO, "Você não tem dinheiro o suficiente. !");
						return 1;
					}
				}
			}
		}
		return 1;
	}
	CMD:alugarquarto(playerid, params[])// || CMD:alugar(playerid, params[])
	{
		if(IsPlayerConnected(playerid))
		{
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
				if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 1 &&  HouseInfo[h][hRentabil] == 1)
				{
					if(PlayerInfo[playerid][pPHousekey] != 999 && strcmp(PlayerName, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
					{
						SendClientMessage(playerid, COR_BRANCO, "Você tem uma casa, para vender digite /vendercasa, você receberá o mesmo valor que foi pago!");
						return 1;
					}
					if(GetPlayerMoneyEx(playerid) > HouseInfo[h][hRent])
					{
						PlayerInfo[playerid][pPHousekey] = h;
                        PlayerInfo[playerid][pCarroCasa] = HouseInfo[h][hIdCarro];
						GivePlayerMoneyEx(playerid,-HouseInfo[h][hRent]);
						HouseInfo[h][hTakings] = HouseInfo[h][hTakings]+HouseInfo[h][hRent];
						PlayerPlayMusic(playerid);
						GameTextForPlayer(playerid, "~w~Parabens pela compra ~n~~b~Para entrar digite /entrar", 5000, 3);
						SendClientMessage(playerid, COR_BRANCO, "Parabéns pela sua nova casa!");
						SendClientMessage(playerid, COR_BRANCO, "Digite /ajudaaluguel Em caso de duvidas!");
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COR_BRANCO, "Você não tem dinheiro o suficiente.");
						return 1;
					}
				}
			}
		}
		return 1;
    }
	CMD:alugarcarro(playerid, params[])
	{
        if(IsPlayerConnected(playerid))
		{
            new vid = GetPlayerVehicleID(playerid);
			if(AluguelCarros1(GetPlayerVehicleID(playerid)))//Aluguel 1
		    {
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
                if (GetPlayerMoneyEx (playerid) <  SBizzInfo[1][sbEntranceCost])
				{
					SendClientMessage(playerid, COR_GRAD2, "Você não tem esse dinheiro !");
					RemovePlayerFromVehicleEx(playerid);
					return 1;
				}
				if(HireCar[playerid] > 0)
				{
					gCarLock[HireCar[playerid]] = 0;
					UnLockCar(HireCar[playerid]);
					SendClientMessage(playerid, COR_GREY, "Você já tem um carro alugado. Digite: /desalugarcarro !");
					RemovePlayerFromVehicleEx(playerid);
					return 1;
				}
				for(new i=0; i<MAX_PLAYERS; ++i)
				{
				    if(HireCar[i] == GetPlayerVehicleID(playerid))
				    {
				        SendClientMessage(playerid, COR_GREY, "Alguem já alugou esse veiculo !");
				        RemovePlayerFromVehicleEx(playerid);
				        return 1;
				    }
				}
                GivePlayerMoneyEx(playerid,-SBizzInfo[1][sbEntranceCost]);
				SBizzInfo[1][sbTill] += SBizzInfo[1][sbEntranceCost];
				ExtortionSBiz(1, SBizzInfo[1][sbEntranceCost]);
				HireCar[playerid] = GetPlayerVehicleID(playerid);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                format(gstring, sizeof(gstring), "~w~Carro Alugado!~n~~r~/desalugarcarro = desalugar~n~~g~/trancar = trancar ou abrir",hirefee);
                TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid, gstring, 5000, 3);
                new cofregov[64];
			    format(cofregov, sizeof(cofregov), "Configs/CofreGov.cfg");
			    if(DOF2_FileExists(cofregov))
			    {
			        new Conta = DOF2_GetInt(cofregov, "Dinheiro") + 1200;
				    DOF2_SetInt(cofregov, "Dinheiro", Conta);
			    }
                GetVehicleParamsEx(vid,enginezcmd,lightszcmd,alarmzcmd,doorszcmd,bonnetzcmd,bootzcmd,objectivezcmd);
                SetVehicleParamsEx(vid,VEHICLE_PARAMS_ON,lightszcmd,alarmzcmd,doorszcmd,bonnetzcmd,bootzcmd,objectivezcmd);
                EngineCarro[vid] = 1;
                SendClientMessage(playerid, 0xFFFFFFFF, "Veiculo: {228B22}Ligado!");
				return 1;
			}
			else if(AluguelCarros2(GetPlayerVehicleID(playerid)))//Aluguel 2
		    {
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if (GetPlayerMoneyEx (playerid) <  SBizzInfo[2][sbEntranceCost])
				{
					SendClientMessage(playerid, COR_GRAD2, "Você não tem esse dinheiro !");
					RemovePlayerFromVehicleEx(playerid);
					return 1;
				}
				if(HireCar[playerid] > 0)
				{
					gCarLock[HireCar[playerid]] = 0;
					UnLockCar(HireCar[playerid]);
					SendClientMessage(playerid, COR_GREY, "Você já tem um carro alugado. Digite: /desalugarcarro !");
					RemovePlayerFromVehicleEx(playerid);
					return 1;
				}
				for(new i=0; i<MAX_PLAYERS; ++i)
				{
				    if(HireCar[i] == GetPlayerVehicleID(playerid))
				    {
				        SendClientMessage(playerid, COR_GREY, "Alguem já alugou esse veiculo !");
				        RemovePlayerFromVehicleEx(playerid);
				        return 1;
				    }
				}
				GivePlayerMoneyEx(playerid,-SBizzInfo[2][sbEntranceCost]);
				SBizzInfo[2][sbTill] += SBizzInfo[2][sbEntranceCost];
				ExtortionSBiz(2, SBizzInfo[2][sbEntranceCost]);
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(gstring, sizeof(gstring), "~w~Carro Alugado!~n~~r~/desalugarcarro = desalugar~n~~g~/trancar = trancar ou abrir",hirefee);
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid, gstring, 5000, 3);
				new cofregov[64];
			    format(cofregov, sizeof(cofregov), "Configs/CofreGov.cfg");
			    if(DOF2_FileExists(cofregov))
			    {
			        new Conta = DOF2_GetInt(cofregov, "Dinheiro") + 1200;
				    DOF2_SetInt(cofregov, "Dinheiro", Conta);
			    }
				GetVehicleParamsEx(vid,enginezcmd,lightszcmd,alarmzcmd,doorszcmd,bonnetzcmd,bootzcmd,objectivezcmd);
                SetVehicleParamsEx(vid,VEHICLE_PARAMS_ON,lightszcmd,alarmzcmd,doorszcmd,bonnetzcmd,bootzcmd,objectivezcmd);
                EngineCarro[vid] = 1;
                SendClientMessage(playerid, 0xFFFFFFFF, "Veiculo: {228B22}Ligado!");
				return 1;
			}
			else if(AluguelCarros3(GetPlayerVehicleID(playerid)))// Aluguel 3
		    {
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if (GetPlayerMoneyEx (playerid) <  SBizzInfo[1][sbEntranceCost])
				{
					SendClientMessage(playerid, COR_GRAD2, "Você não tem esse dinheiro !");
					RemovePlayerFromVehicleEx(playerid);
					return 1;
				}
				if(HireCar[playerid] > 0)
				{
					gCarLock[HireCar[playerid]] = 0;
					UnLockCar(HireCar[playerid]);
					SendClientMessage(playerid, COR_GREY, "Você já tem um carro alugado. Digite: /desalugarcarro !");
					RemovePlayerFromVehicleEx(playerid);
					return 1;
				}
				for(new i=0; i<MAX_PLAYERS; ++i)
				{
				    if(HireCar[i] == GetPlayerVehicleID(playerid))
				    {
				        SendClientMessage(playerid, COR_GREY, "Alguem já alugou esse veiculo !");
				        RemovePlayerFromVehicleEx(playerid);
				        return 1;
				    }
				}
				GivePlayerMoneyEx(playerid,-SBizzInfo[1][sbEntranceCost]);
				SBizzInfo[1][sbTill] += SBizzInfo[1][sbEntranceCost];
				ExtortionSBiz(1, SBizzInfo[1][sbEntranceCost]);
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(gstring, sizeof(gstring), "~w~Carro Alugado!~n~~r~/desalugarcarro = desalugar~n~~g~/trancar = trancar ou abrir",hirefee);
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid, gstring, 5000, 3);
				new cofregov[64];
			    format(cofregov, sizeof(cofregov), "Configs/CofreGov.cfg");
			    if(DOF2_FileExists(cofregov))
			    {
			        new Conta = DOF2_GetInt(cofregov, "Dinheiro") + 1200;
				    DOF2_SetInt(cofregov, "Dinheiro", Conta);
			    }
				GetVehicleParamsEx(vid,enginezcmd,lightszcmd,alarmzcmd,doorszcmd,bonnetzcmd,bootzcmd,objectivezcmd);
                SetVehicleParamsEx(vid,VEHICLE_PARAMS_ON,lightszcmd,alarmzcmd,doorszcmd,bonnetzcmd,bootzcmd,objectivezcmd);
                EngineCarro[vid] = 1;
                SendClientMessage(playerid, 0xFFFFFFFF, "Veiculo: {228B22}Ligado!");
				return 1;
			}
			else if(AluguelCarros4(GetPlayerVehicleID(playerid)))// Aluguel 4 LV
		    {
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if (GetPlayerMoneyEx (playerid) <  SBizzInfo[2][sbEntranceCost])
				{
					SendClientMessage(playerid, COR_GRAD2, "Você não tem esse dinheiro !");
					RemovePlayerFromVehicleEx(playerid);
					return 1;
				}
				if(HireCar[playerid] > 0)
				{
					gCarLock[HireCar[playerid]] = 0;
					UnLockCar(HireCar[playerid]);
					SendClientMessage(playerid, COR_GREY, "Você já tem um carro alugado. Digite: /desalugarcarro !");
					RemovePlayerFromVehicleEx(playerid);
					return 1;
				}
				for(new i=0; i<MAX_PLAYERS; ++i)
				{
				    if(HireCar[i] == GetPlayerVehicleID(playerid))
				    {
				        SendClientMessage(playerid, COR_GREY, "Alguem já alugou esse veiculo !");
				        RemovePlayerFromVehicleEx(playerid);
				        return 1;
				    }
				}
				GivePlayerMoneyEx(playerid,-SBizzInfo[2][sbEntranceCost]);
				SBizzInfo[2][sbTill] += SBizzInfo[2][sbEntranceCost];
				ExtortionSBiz(2, SBizzInfo[2][sbEntranceCost]);
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(gstring, sizeof(gstring), "~w~Carro Alugado!~n~~r~/desalugarcarro = desalugar~n~~g~/trancar = trancar ou abrir",hirefee);
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid, gstring, 5000, 3);
				new cofregov[64];
			    format(cofregov, sizeof(cofregov), "Configs/CofreGov.cfg");
			    if(DOF2_FileExists(cofregov))
			    {
			        new Conta = DOF2_GetInt(cofregov, "Dinheiro") + 1200;
				    DOF2_SetInt(cofregov, "Dinheiro", Conta);
			    }
				GetVehicleParamsEx(vid,enginezcmd,lightszcmd,alarmzcmd,doorszcmd,bonnetzcmd,bootzcmd,objectivezcmd);
                SetVehicleParamsEx(vid,VEHICLE_PARAMS_ON,lightszcmd,alarmzcmd,doorszcmd,bonnetzcmd,bootzcmd,objectivezcmd);
                EngineCarro[vid] = 1;
                SendClientMessage(playerid, 0xFFFFFFFF, "Veiculo: {228B22}Ligado!");
				return 1;
			}
			else if(AeroAluguel(GetPlayerVehicleID(playerid)))//Aluguel Aeros
		    {
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if (GetPlayerMoneyEx (playerid) <  SBizzInfo[1][sbEntranceCost])
				{
					SendClientMessage(playerid, COR_GRAD2, "Você não tem esse dinheiro !");
					RemovePlayerFromVehicleEx(playerid);
					return 1;
				}
				if(HireCar[playerid] > 0)
				{
					gCarLock[HireCar[playerid]] = 0;
					UnLockCar(HireCar[playerid]);
					SendClientMessage(playerid, COR_GREY, "Você já tem um carro alugado. Digite: /desalugarcarro !");
					RemovePlayerFromVehicleEx(playerid);
					return 1;
				}
				for(new i=0; i<MAX_PLAYERS; ++i)
				{
				    if(HireCar[i] == GetPlayerVehicleID(playerid))
				    {
				        SendClientMessage(playerid, COR_GREY, "Alguem já alugou esse veiculo !");
				        RemovePlayerFromVehicleEx(playerid);
				        return 1;
				    }
				}
    			new modeloo = GetVehicleModel(vid);
				GivePlayerMoneyEx(playerid,-SBizzInfo[1][sbEntranceCost]);
				SBizzInfo[1][sbTill] += SBizzInfo[1][sbEntranceCost];
				ExtortionSBiz(1, SBizzInfo[1][sbEntranceCost]);
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(gstring, sizeof(gstring), "~w~Carro Alugado!~n~~r~/desalugarcarro = desalugar~n~~g~/trancar = trancar ou abrir",hirefee);
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid, gstring, 5000, 3);
				new cofregov[64];
			    format(cofregov, sizeof(cofregov), "Configs/CofreGov.cfg");
			    if(DOF2_FileExists(cofregov))
			    {
			        new Conta = DOF2_GetInt(cofregov, "Dinheiro") + 1200;
				    DOF2_SetInt(cofregov, "Dinheiro", Conta);
			    }
				GetVehicleParamsEx(vid,enginezcmd,lightszcmd,alarmzcmd,doorszcmd,bonnetzcmd,bootzcmd,objectivezcmd);
                SetVehicleParamsEx(vid,VEHICLE_PARAMS_ON,lightszcmd,alarmzcmd,doorszcmd,bonnetzcmd,bootzcmd,objectivezcmd);
                EngineCarro[vid] = 1;
                SendClientMessage(playerid, 0xFFFFFFFF, "Veiculo: {228B22}Ligado!");
                if(modeloo == 592 || modeloo == 513 || modeloo == 519)
				{
					format(gstring, sizeof(gstring), "ANTIABUSOS: %s[%d] Alugou um avião, fique de olho nele!", PlayerName(playerid), playerid);
					ABroadCast(COR_LIGHTRED,gstring,1);
					return 1;
				}
				return 1;
			}
			else if(BarcosAluguel(GetPlayerVehicleID(playerid)))//Aluguel Barcos
		    {
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if (GetPlayerMoneyEx (playerid) <  SBizzInfo[17][sbEntranceCost])
				{
					SendClientMessage(playerid, COR_GRAD2, "Você não tem esse dinheiro !");
					RemovePlayerFromVehicleEx(playerid);
					return 1;
				}
				if(HireCar[playerid] > 0)
				{
					gCarLock[HireCar[playerid]] = 0;
					UnLockCar(HireCar[playerid]);
					SendClientMessage(playerid, COR_GREY, "Você já tem um carro alugado. Digite: /desalugarcarro !");
					RemovePlayerFromVehicleEx(playerid);
					return 1;
				}
				for(new i=0; i<MAX_PLAYERS; ++i)
				{
				    if(HireCar[i] == GetPlayerVehicleID(playerid))
				    {
				        SendClientMessage(playerid, COR_GREY, "Alguem já alugou esse veiculo !");
				        RemovePlayerFromVehicleEx(playerid);
				        return 1;
				    }
				}
                GivePlayerMoneyEx(playerid,-SBizzInfo[17][sbEntranceCost]);
				SBizzInfo[17][sbTill] += SBizzInfo[17][sbEntranceCost];
				ExtortionSBiz(17, SBizzInfo[17][sbEntranceCost]);
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(gstring, sizeof(gstring), "~w~Carro Alugado!~n~~r~/desalugarcarro = desalugar~n~~g~/trancar = trancar ou abrir",hirefee);
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid, gstring, 5000, 3);
				new cofregov[64];
			    format(cofregov, sizeof(cofregov), "Configs/CofreGov.cfg");
			    if(DOF2_FileExists(cofregov))
			    {
			        new Conta = DOF2_GetInt(cofregov, "Dinheiro") + 1200;
				    DOF2_SetInt(cofregov, "Dinheiro", Conta);
			    }
				GetVehicleParamsEx(vid,enginezcmd,lightszcmd,alarmzcmd,doorszcmd,bonnetzcmd,bootzcmd,objectivezcmd);
                SetVehicleParamsEx(vid,VEHICLE_PARAMS_ON,lightszcmd,alarmzcmd,doorszcmd,bonnetzcmd,bootzcmd,objectivezcmd);
                EngineCarro[vid] = 1;
                SendClientMessage(playerid, 0xFFFFFFFF, "Veiculo: {228B22}Ligado!");
				return 1;
			}
		}
		return 1;
	}
 	CMD:trocarchave(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			if(!SwitchKey[playerid])
			{
				if(HireCar[playerid] != 299)
				{
					SwitchKey[playerid] = 1;
					GameTextForPlayer(playerid, "~w~Voce controla a chave do seu carro de casa", 5000, 6);
				}
				else
				{
					GameTextForPlayer(playerid, "~w~Voce nao possui uma chave de carro", 5000, 6);
				}
				return 1;
			}
			else
			{
				SwitchKey[playerid] = 0;
				GameTextForPlayer(playerid, "~w~Voce controla a chave do seu carro alugado", 5000, 6);
			}
		}
		return 1;
	}
    CMD:desalugarcarro(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			if(HireCar[playerid] != 299)
			{
			    new idcar = GetPlayerVehicleID(playerid);
			    if(HireCar[playerid] == 0)
			    {
					 SendClientMessage(playerid, COR_GRAD1, "Você não tem um carro alugado !");
					 return 1;
			    }
			    if(idcar == HireCar[playerid])
			    {
			        TogglePlayerControllable(playerid, 1);
			    }
			    VTrancado[HireCar[playerid]] = 0;
				UnLockCar(HireCar[playerid]);
				SetVehicleToRespawn(HireCar[playerid]);
				HireCar[playerid] = 0;
				GameTextForPlayer(playerid, "~w~Voce desalugou o carro", 5000, 3);
			}
		}
		return 1;
	}
	CMD:darchaves(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			tmpzcmd = strtok(cmdtext, idxzcmd);
			new car;
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD1, "USE: /darchaves [id]");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			if(HireCar[playerid] == 299 && PlayerInfo[playerid][pPHousekey] == 999)
			{
				SendClientMessage(playerid, COR_GRAD1, "  Você não tem uma chave para dar");
				SendClientMessage(playerid, COR_GRAD1, "  Chave: Veiculo");
				return 1;
			}
			else
			{
				if(HireCar[playerid] != 299 && SwitchKey[playerid] == 0)
				{
					car = HireCar[playerid];
					VTrancado[car] = 0;
					UnLockCar(car);
					HireCar[playerid] = 299;
				}
				else
				{
     				car = PlayerInfo[playerid][pPHousekey];
				}
			}
			if (IsPlayerConnected(giveplayeridzcmd))
			{
			    if(giveplayeridzcmd != INVALID_PLAYER_ID)
			    {
					if(ProxDetectorS(5.0, playerid, giveplayeridzcmd))
					{
						if(HireCar[giveplayeridzcmd] != 299)
						{
							VTrancado[HireCar[giveplayeridzcmd]] = 0;
							UnLockCar(HireCar[giveplayeridzcmd]);
						}
						HireCar[giveplayeridzcmd] = car;
						HireCar[playerid] = 999;
						GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(gstring, sizeof(gstring), "   Você deu a chave do seu veiculo para %s", giveplayerzcm);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COR_GRAD1, gstring);
						format(gstring, sizeof(gstring), "   Você recebeu a chave do veiculo de %s", sendername);
						SendClientMessage(giveplayeridzcmd, COR_GRAD1, gstring);
						format(gstring, sizeof(gstring), "* %s da uma chave para %s.", sendername ,giveplayerzcm);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
					}
				}
			}
		}
		return 1;
	}
	CMD:desalugar(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
			if(PlayerInfo[playerid][pPHousekey] != 999 && strcmp(PlayerName, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				SendClientMessage(playerid, COR_BRANCO, "Você desalugou uma casa, e agora está desabrigado!");
				PlayerInfo[playerid][pPHousekey] = 999;
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GREY, " Você não alugou nenhuma casa.");
			}
		}
		return 1;
	}
	CMD:admvbizz(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD1, "USE: /admvbizz [empresa id]");
				return 1;
			}
			new biz = strval(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 1338)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
				     SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				     return 1;
				}
				BizzInfo[biz][bLocked] = 1;
				BizzInfo[biz][bOwned] = 0;
				strmid(BizzInfo[biz][bOwner], "O estado", 0, strlen("O estado"), 255);
				strmid(BizzInfo[biz][bExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(gstring, sizeof(gstring), "~w~Voce vendeu a empresa ID:%d", biz);
				GameTextForPlayer(playerid, gstring, 10000, 3);
				Atualizar3Dtexts();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GREY, "Você não tem permissão para usar esse comando !");
				return 1;
			}
		}
		return 1;
	}
	CMD:admvsbizz(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD1, "USE: /admvsbizz [sbizid]");
				return 1;
			}
			new sbiz = strval(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
				     SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				     return 1;
				}
				SBizzInfo[sbiz][sbLocked] = 1;
				SBizzInfo[sbiz][sbOwned] = 0;
				strmid(SBizzInfo[sbiz][sbOwner], "O estado", 0, strlen("O estado"), 255);
				strmid(SBizzInfo[sbiz][sbExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(gstring, sizeof(gstring), "~w~Voce vendeu a empresa ID:%d", sbiz);
				GameTextForPlayer(playerid, gstring, 10000, 3);
				Atualizar3Dtexts();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GREY, "Você não tem permissão para usar esse comando !");
				return 1;
			}
		}
		return 1;
    }
    CMD:admvcasaall(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			if (PlayerInfo[playerid][pAdmin] >= 1341)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
				     SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				     return 1;
				}
				for(new h = 0; h < sizeof(HouseInfo); h++)
	            {
				     HouseInfo[h][hHel] = 0;
				     HouseInfo[h][hArm] = 0;
				     HouseInfo[h][hHealthx] = 0;
				     HouseInfo[h][hHealthy] = 0;
				     HouseInfo[h][hHealthz] = 0;
				     HouseInfo[h][hArmorrx] = 0;
				     HouseInfo[h][hArmorry] = 0;
				     HouseInfo[h][hArmorrz] = 0;
				     HouseInfo[h][hLevel] = 5;
				     HouseInfo[h][hLock] = 1;
				     HouseInfo[h][hOwned] = 0;
				     HouseInfo[h][hVec] = 475;
				     HouseInfo[h][hValue] = 60000;
				     HouseInfo[h][hVcol1] = -1;
				     HouseInfo[h][hVcol2] = -1;
				     strmid(HouseInfo[h][hOwner], "O estado", 0, strlen("O estado"), 999);
				     PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				     format(gstring, sizeof(gstring), "~w~Voce vendeu a propriedade ID:%d", h);
				     GameTextForPlayer(playerid, gstring, 10000, 3);
				     SaveCasa(h);
				     Atualizar3Dtexts();
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GREY, "Você não tem permissão para usar esse comando !");
			}
		}
		return 1;
	}
	CMD:admvcasa(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD1, "USE: /admvcasa [Casa id]");
				return 1;
			}
			new House = strval(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
				     SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				     return 1;
				}
				HouseInfo[House][hHel] = 0;
				HouseInfo[House][hArm] = 0;
				HouseInfo[House][hHealthx] = 0;
				HouseInfo[House][hHealthy] = 0;
				HouseInfo[House][hHealthz] = 0;
				HouseInfo[House][hArmorrx] = 0;
				HouseInfo[House][hArmorry] = 0;
				HouseInfo[House][hArmorrz] = 0;
				HouseInfo[House][hLock] = 1;
				HouseInfo[House][hOwned] = 0;
				HouseInfo[House][hVec] = 475;
				HouseInfo[House][hVcol1] = -1;
				HouseInfo[House][hVcol2] = -1;
				strmid(HouseInfo[House][hOwner], "O estado", 0, strlen("O estado"), 999);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(gstring, sizeof(gstring), "~w~Voce vendeu a propriedade ID:%d", House);
				GameTextForPlayer(playerid, gstring, 10000, 3);
				SaveCasa(House);
				Atualizar3Dtexts();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GREY, "Você não tem permissão para usar esse comando !");
			}
		}
		return 1;
	}
	CMD:vendercasa(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
			if(PlayerInfo[playerid][pPHousekey] == 999)
			{
				SendClientMessage(playerid, COR_BRANCO, "Você não tem casa.");
				return 1;
			}
			if(PlayerInfo[playerid][pMarried] > 0)
		    {
		        SendClientMessage(playerid, COR_GREY, "Você é casado (a) não pode vender a casa !");
		        return 1;
		    }
			if(PlayerInfo[playerid][pPHousekey] != 999 && strcmp(PlayerName, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				new House = PlayerInfo[playerid][pPHousekey];
				HouseInfo[House][hTakings] = 0;
				HouseInfo[House][hHel] = 0;
				HouseInfo[House][hArm] = 0;
				HouseInfo[House][hHealthx] = 0;
				HouseInfo[House][hHealthy] = 0;
				HouseInfo[House][hHealthz] = 0;
				HouseInfo[House][hArmorrx] = 0;
				HouseInfo[House][hArmorry] = 0;
				HouseInfo[House][hArmorrz] = 0;
				HouseInfo[House][hLock] = 1;
				HouseInfo[House][hOwned] = 0;
				HouseInfo[House][hVec] = 475;
				HouseInfo[House][hVcol1] = -1;
				HouseInfo[House][hVcol2] = -1;
				resetarMoveis(House);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(HouseInfo[House][hOwner], "O estado", 0, strlen("O estado"), 999);
				ConsumingMoney[playerid] = 1;
				new precovenda;
				precovenda = HouseInfo[House][hValue];
				precovenda -= 3000;
				GivePlayerMoneyEx(playerid, precovenda);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(gstring, sizeof(gstring), "~w~Parabens~n~ Voce vendeu a casa por ~n~~g~R$%d",precovenda );
				GameTextForPlayer(playerid, gstring, 5000, 3);
	            PlayerInfo[playerid][pNotebook] = 0;
				PlayerInfo[playerid][pPHousekey] = 999;
				if(LocalAtual[playerid] == House)
				{
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,HouseInfo[House][hEntrancex],HouseInfo[House][hEntrancey],HouseInfo[House][hEntrancez]);
					InteriorAtual[playerid] = 0;
				}
				SaveCasa(House);
                Atualizar3Dtexts();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GREY, "Você não tem casa.");
			}
		}
		return 1;
	}
	CMD:aluguel(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
			if (borse != 999 && strcmp(PlayerName, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd))
				{
					SendClientMessage(playerid, COR_GRAD2, "USE: /aluguel [Preço]");
					return 1;
				}
				if(strval(tmpzcmd) < 200 || strval(tmpzcmd) > 1000)
				{
					SendClientMessage(playerid, COR_GRAD2, "Preço Mínimo R$200, Maximo R$1000.");
					return 1;
				}
				HouseInfo[borse][hRent] = strval(tmpzcmd);
				SaveCasa(borse);
				Atualizar3Dtexts();
				format(gstring, sizeof(gstring), "Aluguel definido para: R$%d", HouseInfo[borse][hRent]);
				SendClientMessage(playerid, COR_BRANCO, gstring);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GREY, "Voce nao tem uma casa");
				return 1;
			}
		}
		return 1;
	}
	CMD:despejartodos(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPHousekey];
			if (borse != 999 && strcmp(PlayerName, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				for(new i = 0; i < MAX_PLAYERS; ++i)
				{
					if(IsPlayerConnected(i))
					{
						if(i != playerid)
						{
							if (PlayerInfo[i][pPHousekey] == PlayerInfo[playerid][pPHousekey] )
							{
								SendClientMessage(i, COR_BRANCO, "Você foi despejado de sua casa.");
								SendClientMessage(playerid, COR_BRANCO, "Você expulsou todos os inquilinos de sua casa.");
								PlayerInfo[i][pPHousekey] = 999;
								return 1;
							}
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD2, "Você não é dono de uma casa !");
				return 1;
			}
		}
		return 1;
	}
	CMD:despejar(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
			if (borse != 999 && strcmp(PlayerName, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd))
				{
					SendClientMessage(playerid, COR_BRANCO, "USE: /despejar [id]");
				}
				new target;
				target = ReturnUser(tmpzcmd);
				if (target == playerid)
				{
					SendClientMessage(target, COR_BRANCO, "Você não pode despejar a si mesmo.");
					return 1;
				}
				if(IsPlayerConnected(target))
				{
				    if(target != INVALID_PLAYER_ID)
				    {
						if(PlayerInfo[target][pPHousekey] == PlayerInfo[playerid][pPHousekey])
						{
							SendClientMessage(target, COR_BRANCO, "Você foi despejado");
							SendClientMessage(playerid, COR_BRANCO, "Você despejou o jogador");
							PlayerInfo[target][pPHousekey] = 999;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COR_BRANCO, "O Jogador não alugou sua casa !");
						    return 1;
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD2, "Você não é dono de uma casa !");
				return 1;
			}
		}
		return 1;
	}
	CMD:alugada(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
			if (borse != 999 && strcmp(PlayerName, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd))
				{
					SendClientMessage(playerid, COR_BRANCO, "USE: /alugada [0 - Nao / 1 - Sim]");
				}
				HouseInfo[borse][hRentabil] = strval(tmpzcmd);
				SaveCasa(borse);
				Atualizar3Dtexts();
				format(gstring, sizeof(gstring), "Casa alugada mudada para - %d.", HouseInfo[borse][hRentabil]);
				SendClientMessage(playerid, COR_BRANCO, gstring);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD2, "Você não é dono de uma casa !");
				return 1;
			}
		}
		return 1;
	}
	CMD:ligar(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerMutado[playerid] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COR, "Você não pode falar, pois foi calado !");
				return 1;
			}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /ligar [Telefone]");
				return 1;
			}
			if(PlayerInfo[playerid][pConnectTime] <  1)
			{
				  SendClientMessage(playerid, COR_GRAD1, "Você deve ter 1+ horas jogadas, para efetuar ligações !");
			      return 1;
			}
			if(PlayerInfo[playerid][pPnumber] == 0)
			{
				SendClientMessage(playerid, COR_GRAD2, "Você não tem um celular");
				return 1;
			}
			if(PlayerInfo[playerid][pJailed] != 0)
			{
				SendClientMessage(playerid,COR_AMARELO," Você não pode ligar na cadeia !");
				return 1;
			}
			if(PlayerInfo[playerid][pCreditos] < 2)
	        {
	            SendClientMessage(playerid, COR_GREY, "Voce não tem créditos suficientes, compre mais na 24-7!");
	            return 1;
	        }
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(gstring, sizeof(gstring), "* %s pega o celular e faz uma ligação.", sendername);
			ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			SetPlayerAttachedObject(playerid,0,18870,2,0.033999,0.015000,-0.112999,-2.000003,-1.100000,38.400005,1.000000,1.000000,1.000000);
			new phonenumb = strval(tmpzcmd);
			if(phonenumb == 0)
			{
				SendClientMessage(playerid, COR_GRAD2, "Você está ligando para ninguém !");
				RemovePlayerAttachedObject(playerid, 0);
				return 1;
			}
			if(phonenumb == PlayerInfo[playerid][pPnumber])
			{
				SendClientMessage(playerid, COR_GRAD2, "Voce não pode ligar para sí mesmo !");
				RemovePlayerAttachedObject(playerid, 0);
				return 1;
			}
			if(Mobile[playerid] != 255)
			{
				SendClientMessage(playerid, COR_GRAD2, "Você ja está em uma ligação !");
				RemovePlayerAttachedObject(playerid, 0);
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; ++i)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
					{
						giveplayeridzcmd = i;
						Mobile[playerid] = giveplayeridzcmd; //caller connecting
						if(IsPlayerConnected(giveplayeridzcmd))
						{
						    if(giveplayeridzcmd != INVALID_PLAYER_ID)
						    {
						        if(PhoneOnline[giveplayeridzcmd] > 0)
						        {
						            SendClientMessage(playerid, COR_GREY, "O celular chamado está fora da área de cobertura ou está desligado !");
						            RemovePlayerAttachedObject(playerid, 0);
						            return 1;
						        }
						        if(PlayerInfo[giveplayeridzcmd][pJailed] != 0)
    	                        {
                                    SendClientMessage(playerid,COR_GRAD2,"O jogador que você tentou ligar está preso, não pode receber ligações !");
                                    RemovePlayerAttachedObject(playerid, 0);
		                            return 1;
	                            }
	                            if(Sequestrado[giveplayeridzcmd] == 1)
	                            {
									 SendClientMessage(playerid, COR_GRAD1, "O jogador que você tentou igar está calado ou sequestrado, não pode receber ligações !");
									 RemovePlayerAttachedObject(playerid, 0);
									 return 1;
	                            }
								if (Mobile[giveplayeridzcmd] == 255)
								{
									format(gstring, sizeof(gstring), "[Celular] %s está ligando para o seu celular, use: /at.", sendername);
									SendClientMessage(giveplayeridzcmd, COR_AMARELO, gstring);
									GetPlayerName(giveplayeridzcmd, sendername, sizeof(sendername));
									PlayerPlaySound(playerid, 39047, 0.0, 0.0, 10.0);
									RingTone[giveplayeridzcmd] = 10;
									format(gstring, sizeof(gstring), "* %s's está tocando o celular.", sendername);
									PlayerPlaySound(giveplayeridzcmd, 39052, 0.0, 0.0, 0.0);
									PlayerPlaySound(playerid, 39052, 0.0, 0.0, 0.0);
									format(gstring, sizeof(gstring), "* %s pega o celular e faz uma ligação.", sendername);
									ProxDetector(30.0, i, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
									SendClientMessage(playerid, COR_BALLAS, "[BPL]: Use 'T' para falar, digite /des para desligar");
									CellTime[playerid] = 1;
									GameTextForPlayer(playerid,"~r~ -2 Creditos", 5000, 1);
									PlayerInfo[playerid][pCreditos] -= 2;
								    SBizzInfo[7][sbTill] += 1000;
			                        ExtortionSBiz(7, 1000);
			                        new cofregov[64];
								    format(cofregov, sizeof(cofregov), "Configs/CofreGov.cfg");
								    if(DOF2_FileExists(cofregov))
								    {
								        new Conta = DOF2_GetInt(cofregov, "Dinheiro") + 500;
				    					DOF2_SetInt(cofregov, "Dinheiro", Conta);
								    }
									return 1;
								}
							}
						}
					}
				}
			}
			SendClientMessage(playerid, COR_GRAD2, "O Número que você ligou está ocupado !");
		}
		return 1;
	}
	CMD:sms(playerid, params[])// || CMD:sms(playerid, params[])
	{
    	if(PlayerMutado[playerid] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COR, "Você não pode falar, pois foi calado !");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
		{
		    if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COR_GREY, "Voce não está logado!");
	            return 1;
	        }
			if(PlayerInfo[playerid][pConnectTime] <  1)
			{
				  SendClientMessage(playerid, COR_GRAD1, "Você deve ter 1+ horas jogadas, para efetuar ligações !");
			      return 1;
			}
	        if(PlayerInfo[playerid][pCreditos] < 1)
	        {
	            SendClientMessage(playerid, COR_GREY, "Voce não tem créditos suficientes compre mais na 24-7!");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pJailed] != 0)
	        {
	            SendClientMessage(playerid,COR_AMARELO," Você não pode manda sms na cadeia !");
	            return 1;
	        }
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /sms [Nº Cel] [Mensagem]");
				return 1;
			}
			if(PlayerInfo[playerid][pPnumber] == 0)
			{
				SendClientMessage(playerid, COR_GRAD2, "Você não tem um celular, compre um na 24/7 !");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(gstring, sizeof(gstring), "* %s pegou o celular e enviou um sms.", sendername);
			ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
			new phonenumb = strval(tmpzcmd);
			new length = strlen(cmdtext);
			while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
			{
				idxzcmd++;
			}
			new offset = idxzcmd;
			new result[85];
			while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
			{
				result[idxzcmd - offset] = cmdtext[idxzcmd];
				idxzcmd++;
			}
			result[idxzcmd - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /sms [telefone] [texto]");
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; ++i)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
					{
						giveplayeridzcmd = i;
						Mobile[playerid] = giveplayeridzcmd; //caller connecting
						if(IsPlayerConnected(giveplayeridzcmd))
						{
						    if(giveplayeridzcmd != INVALID_PLAYER_ID)
						    {
                                if(GetTickCount() - TempoChatSMS[playerid] < 3000)
    	                        {
		                             SendClientMessage(playerid,COR_GRAD1,"Você só pode escrever uma mensagem a cada 3 segundos.");
		                             return 1;
		                        }
						        if(PhoneOnline[giveplayeridzcmd] > 0)
						        {
						            SendClientMessage(playerid, COR_GREY, "Falha ao enviar o sms!");
						            return 1;
						        }
						        if(PlayerInfo[giveplayeridzcmd][pJailed] != 0)
    	                        {
                                    SendClientMessage(playerid,COR_GRAD2,"O jogador que você tentou enviar sms está preso, não pode receber mensagens !");
		                            return 1;
	                            }
                                if(TentouDivulgar(result))
            					{
					            	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
					            	format(gstring, 128, "AdmAviso: [%d]%s tentou divulgar: %s.",playerid,PlayerName,result);
									ABroadCast(COR_AMARELO,gstring,1);
									DivulgouLog(gstring);
					            	return 1;
            					}
            					if(giveplayeridzcmd != playerid)
								{
								    new gmsg[255];
								    format(gmsg, sizeof(gmsg), "PLAYER(%s[%d]) - Para(%s[%d]) SMS: %s", PlayerName(playerid), playerid, PlayerName(giveplayeridzcmd), giveplayeridzcmd, (result));
									SpyAll(COR_AMARELO, gmsg);
								}
            					TempoChatSMS[playerid] = GetTickCount();
								format(gstring, sizeof(gstring), "SMS: %s, enviou: %s - CEL:[%d]", result,sendername,PlayerInfo[playerid][pPnumber]);
								SendClientMessage(giveplayeridzcmd, COR_AMARELO, gstring);
								SendClientMessage(playerid,  COR_AMARELO, gstring);
								SMSLog(gstring);
								format(gstring, sizeof(gstring), "SmsAviso: %s[%d], enviou: %s - Para: %s[%d]",PlayerName(playerid),playerid,result,PlayerName(giveplayeridzcmd),giveplayeridzcmd);
                                SpySMS(COR_AMARELO, playerid, gstring);
								GetPlayerName(giveplayeridzcmd, sendername, sizeof(sendername));
								RingTone[giveplayeridzcmd] = 20;
								SendClientMessage(playerid, COR_BRANCO, "SMS Enviado.");
								print(gstring);
								GameTextForPlayer(playerid,"~r~ -1 Credito", 5000, 1);
								PlayerInfo[playerid][pCreditos] -= 1;
								SBizzInfo[7][sbTill] += 50;
                                ExtortionSBiz(7, 50);
                                new cofregov[64];
							    format(cofregov, sizeof(cofregov), "Configs/CofreGov.cfg");
							    if(DOF2_FileExists(cofregov))
							    {
							        new Conta = DOF2_GetInt(cofregov, "Dinheiro") + 25;
				    				DOF2_SetInt(cofregov, "Dinheiro", Conta);
							    }
					           	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					           	Mobile[playerid] = 255;
					           	format(gstring, sizeof(gstring), "[%d/%d/%d] [%d:%d:%d] SMS: %s, enviou: %s para %s", v[2], v[1], v[0], v[3], v[4], v[5], result,PlayerName,sendername);
								return 1;
							}
						}
					}
				}
			}
			SendClientMessage(playerid, COR_GRAD2, " Falha ao enviar a mensagem!");
		}
		return 1;
    }
    CMD:equipargov(playerid, params[])
	{
		if(PlayerToPoint(5.0,playerid, 345.3161,161.3379,1025.7891))
		{
		    if(PlayerInfo[playerid][pLider] == 7)
			{
			    SendClientMessage(playerid, COR_BRANCO, "Você pegou seus Equipamentos");
			    format(gstring, sizeof(gstring), "Membro do Governo: %s Pegou Seus Equipamentos.", PlayerName(playerid));
			    ProxDetector(30.0, playerid, gstring, COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE);
			    ResetPlayerWeaponsEx(playerid);
			    SetPlayerArmour(playerid, 100);
				SetPlayerHealth(playerid, 100);
				GivePlayerWeaponEx(playerid, 24, 150);
				return 1;
			}
			else if(PlayerInfo[playerid][pMembro] == 7)
			{
			    SendClientMessage(playerid, COR_BRANCO, "Você pegou seus Equipamentos");
			    format(gstring, sizeof(gstring), "Membro do Governo: %s Pegou Seus Equipamentos.", PlayerName(playerid));
			    ProxDetector(30.0, playerid, gstring, COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE,COR_DBLUE);
			    ResetPlayerWeaponsEx(playerid);
			    SetPlayerArmour(playerid, 100);
				SetPlayerHealth(playerid, 100);
				GivePlayerWeaponEx(playerid, 3, 1);
				GivePlayerWeaponEx(playerid, 24, 150);
				GivePlayerWeaponEx(playerid, 29, 650);
				GivePlayerWeaponEx(playerid, 31, 450);
				return 1;
			}
			else
			{
			    SendClientMessage(playerid, COR_GRAD2, "Você não é um membro da prefeitura!");
			}
		}
        return 1;
	}
	CMD:equiparsamu(playerid, params[])
	{
		if(PlayerToPoint(5.0,playerid, 1159.4353,-1324.8629,-44.2836))
		{
		    if(GetPlayerOrg(playerid) == 4)
			{
			    format(gstring, sizeof(gstring), "Médico: %s Pegou Seus Equipamentos.", PlayerName(playerid));
			    ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
			    ResetPlayerWeaponsEx(playerid);
			    SetPlayerArmour(playerid, 100);
				SetPlayerHealth(playerid, 100);
				GivePlayerWeaponEx(playerid, 42, 2499);
				return 1;
			}
			else
			{
			    SendClientMessage(playerid, COR_GRAD2, "Você não é da SA:MU!");
			}
		}
        return 1;
	}
	CMD:livrardrogas(playerid, params[])
	{
		 if(PlayerInfo[playerid][pMaconha] > 0 && PlayerInfo[playerid][pCocaina] > 0 && PlayerInfo[playerid][pCrack] > 0 && PlayerInfo[playerid][pLsd] > 0)
		 {
			  PlayerInfo[playerid][pMaconha] = 0;
			  PlayerInfo[playerid][pCocaina] = 0;
			  PlayerInfo[playerid][pCrack] = 0;
			  PlayerInfo[playerid][pLsd] = 0;
			  format(gstring, sizeof(gstring), "Jogador: %s jogou as drogas fora.", PlayerName(playerid));
			  ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
		 }
		 else
		 {
			  SendClientMessage(playerid, COR_AMARELO, "Você não tem drogas para jogar fora!");
			  return 1;
		 }
		 return 1;
	}
	CMD:livrarmateriais(playerid, params[])
	{
		 if(PlayerInfo[playerid][pMats] > 0)
		 {
			  PlayerInfo[playerid][pMats] = 0;
			  format(gstring, sizeof(gstring), "Jogador: %s jogou os materiais fora.", PlayerName(playerid));
			  ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
		 }
		 else
		 {
			  SendClientMessage(playerid, COR_AMARELO, "Você não tem materiais para jogar fora!");
			  return 1;
		 }
		 return 1;
	}
	CMD:livrardinamites(playerid, params[])
	{
		 if(PlayerInfo[playerid][pDina] > 0)
		 {
			  PlayerInfo[playerid][pDina] = 0;
			  format(gstring, sizeof(gstring), "Jogador: %s jogou as dinamites fora.", PlayerName(playerid));
			  ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
		 }
		 else
		 {
			  SendClientMessage(playerid, COR_AMARELO, "Você não tem dinamites para jogar fora!");
			  return 1;
		 }
		 return 1;
	}
	CMD:livrarcb(playerid, params[])
	{
		 if(PlayerInfo[playerid][pCB] > 0)
		 {
			  PlayerInfo[playerid][pDina] = 0;
			  format(gstring, sizeof(gstring), "Jogador: %s jogou as cb's fora.", PlayerName(playerid));
			  ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
		 }
		 else
		 {
			  SendClientMessage(playerid, COR_AMARELO, "Você não tem cb para jogar fora!");
			  return 1;
		 }
		 return 1;
	}
	CMD:meuskin(playerid, params[])
	{
	    if(PlayerToPoint(2.0,playerid,218.1294,-98.5891,1005.2578) || PlayerToPoint(2.0,playerid,181.3896,-86.4844,1002.0234))
        {
            if(OnDuty[playerid]==1)
	        {
	            SendClientMessage(playerid,COR_GRAD2,"Você está com o cartão batido !");
		        return 1;
    	    }
            if(PlayerInfo[playerid][pEmprego] != 0 && IsAGangster(playerid) && !IsACop(playerid) && GetPlayerOrg(playerid) == 8 && GetPlayerOrg(playerid) == 22 && GetPlayerOrg(playerid) == 21 && GetPlayerOrg(playerid) == 12 && GetPlayerOrg(playerid) == 13
			&& GetPlayerOrg(playerid) == 10 && GetPlayerOrg(playerid) == 9 && GetPlayerOrg(playerid) == 24 && GetPlayerOrg(playerid) == 26 && GetPlayerOrg(playerid) == 7)
    	    {
		        SendClientMessage(playerid,COR_GRAD2,"Você está em um emprego que não pode mudar a skin !");
		        return 1;
		    }
		    if(OnDuty[playerid]==1)
	        {
	            SendClientMessage(playerid,COR_GRAD2,"Você está com o cartão batido !");
		        return 1;
    	    }
    	    if(IsPlayerConnected(playerid))
	 	    {
                SkinAtual[playerid] = 1;
                ShowModelSelectionMenu(playerid, skinlist, "Selecione a Skin");
				EmDialog[playerid] = 1;
                return 1;
            }
        }
        else
        {
            SendClientMessage(playerid, COR_GREY, "Você não está no colete azul que fica dentro da loja de roupas !");
            return 1;
        }
        return 1;
	}
	CMD:atender(playerid, params[])// || CMD:at(playerid, params[])
	{
    	if(PlayerMutado[playerid] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COR, "Você não pode falar, pois foi calado !");
			return 1;
		}
        if(IsPlayerConnected(playerid))
		{
			if(Mobile[playerid] != 255)
			{
				SendClientMessage(playerid, COR_GRAD2, "Você já está em uma ligação.");
				return 1;
			}
	        if(PlayerInfo[playerid][pJailed] != 0)
	        {
				SendClientMessage(playerid,0x9E50FFAA," Você não pode usar esse comando na cadeia!");
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; ++i)
			{
				if(IsPlayerConnected(i))
				{
					if(Mobile[i] == playerid)
					{
						Mobile[playerid] = i; //caller connecting
						SendClientMessage(i,  COR_GRAD2, "Atendeu o celular.");
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(gstring, sizeof(gstring), "* %s atendeu o celular.", sendername);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
						SetPlayerAttachedObject(playerid,0,18870,2,0.033999,0.015000,-0.112999,-2.000003,-1.100000,38.400005,1.000000,1.000000,1.000000);
						RingTone[playerid] = 0;
						if(TaEscutando[playerid] == 0) StopAudioStreamForPlayer(playerid);
					}

				}
			}
		}
		return 1;
	}
	CMD:desligar(playerid, params[])// || CMD:des(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			new caller = Mobile[playerid];
			if(IsPlayerConnected(caller))
			{
			    if(caller != INVALID_PLAYER_ID)
			    {
					if(caller != 255)
					{
						if(caller < 255)
						{
							SendClientMessage(caller,  COR_GRAD2, "Desligaram do outro lado da linha.");
							CellTime[caller] = 0;
							CellTime[playerid] = 0;
							SendClientMessage(playerid,  COR_GRAD2, "Você desligou seu celular.");
							Mobile[caller] = 255;
						}
						Mobile[playerid] = 255;
						CellTime[playerid] = 0;
						RingTone[playerid] = 0;
						return 1;
					}
				}
			}
			SendClientMessage(playerid,  COR_GRAD2, "Guardou o celular no bolso.");
			if(TaEscutando[playerid] == 0) StopAudioStreamForPlayer(playerid);
			new pSpecialAction = GetPlayerSpecialAction(playerid);
			if (pSpecialAction == SPECIAL_ACTION_USECELLPHONE)
			{
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				RemovePlayerAttachedObject(playerid, 0);
			}
		}
		return 1;
	}
	CMD:orelhao(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerToPoint(3.0, playerid,1535.5697,-1637.5358,13.5469) || PlayerToPoint(3.0, playerid,1611.2460,-1713.0765,13.5469) || PlayerToPoint(3.0, playerid,1804.5630,-1167.7408,23.8281) || PlayerToPoint(3.0, playerid,638.0870,-1229.1331,18.0796) || PlayerToPoint(3.0, playerid,638.0259,-1227.5466,18.1406)
			|| PlayerToPoint(3.0, playerid,638.0941,-1229.1331,18.0803) || PlayerToPoint(3.0, playerid,1663.4932,-1666.4585,21.4375) || PlayerToPoint(3.0, playerid,1808.7209,-1598.2458,13.5469) || PlayerToPoint(3.0, playerid,1806.7490,-1599.9321,13.5469))
            {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /orelhao [Nº TELEFONE]");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(gstring, sizeof(gstring), "* %s disca algum numero no telefone.", sendername);
			ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
			new phonenumb = strval(tmpzcmd);
			if(phonenumb == 0)
			{
				SendClientMessage(playerid, COR_GRAD2, "Você está ligando para ninguém");
				return 1;
			}
			if(phonenumb == PlayerInfo[playerid][pPnumber])
			{
				SendClientMessage(playerid, COR_GRAD2, "Voce não pode ligar para si mesmo");
				return 1;
			}
			if(Mobile[playerid] != 255)
			{
				SendClientMessage(playerid, COR_GRAD2, "Voce ja está em uma ligação...");
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; ++i)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
					{
						giveplayeridzcmd = i;
						Mobile[playerid] = giveplayeridzcmd; //caller connecting
						if(IsPlayerConnected(giveplayeridzcmd))
						{
						    if(giveplayeridzcmd != INVALID_PLAYER_ID)
						    {
						        if(PhoneOnline[giveplayeridzcmd] > 0)
						        {
						            SendClientMessage(playerid, COR_GREY, "O celular chamado está fora da área de cobertura ou está desligado !");
						            return 1;
						        }
								if (Mobile[giveplayeridzcmd] == 255)
								{
									format(gstring, sizeof(gstring), "Seu celular está tocando (/At) Chamando: %s", sendername);
									SendClientMessage(giveplayeridzcmd, COR_AMARELO, gstring);
									GetPlayerName(giveplayeridzcmd, sendername, sizeof(sendername));
									RingTone[giveplayeridzcmd] = 10;
									format(gstring, sizeof(gstring), "* %s's está tocando o celular.", sendername);
									ProxDetector(30.0, i, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
									SendClientMessage(playerid, COR_MSG, "USE: 'T' para falar, digite /des para desligar");
									CellTime[playerid] = 1;
									SBizzInfo[7][sbTill] += 500;
                                    ExtortionSBiz(7, 500);
                                    new cofregov[64];
								    format(cofregov, sizeof(cofregov), "Configs/CofreGov.cfg");
								    if(DOF2_FileExists(cofregov))
								    {
								        new Conta = DOF2_GetInt(cofregov, "Dinheiro") + 250;
				    					DOF2_SetInt(cofregov, "Dinheiro", Conta);
							    	}
									return 1;
								}
							}
						}
					}
				}
			}
			SendClientMessage(playerid, COR_GRAD2, "Você acabou de ligar para um número ocupado...");}
		}
		return 1;
	}
 	CMD:desligarorelhao(playerid, params[])// || CMD:deso(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			new caller = Mobile[playerid];
			if(IsPlayerConnected(caller))
			{
			    if(caller != INVALID_PLAYER_ID)
			    {
					if(caller != 255)
					{
						if(caller < 255)
						{
							SendClientMessage(caller,  COR_GRAD2, "Desligou.");
							CellTime[caller] = 0;
							CellTime[playerid] = 0;
							SendClientMessage(playerid,  COR_GRAD2, "Desligou.");
							Mobile[caller] = 255;
						}
						Mobile[playerid] = 255;
						CellTime[playerid] = 0;
						RingTone[playerid] = 0;
						return 1;
					}
				}
			}
			SendClientMessage(playerid,  COR_GRAD2, "Colocou o orelhão no gancho.");
			new pSpecialAction = GetPlayerSpecialAction(playerid);
			if (pSpecialAction == SPECIAL_ACTION_USECELLPHONE)
			{
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			}
		}
		return 1;
	}
	CMD:horas(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
  			if(GetTickCount() - TempoHoras[playerid] < 4000)
  			{
             	SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
             	return 1;
  			}
		    new mtext[20];
			getdate(year, month, day);
			if(month == 1) { mtext = "Janeiro"; }
			else if(month == 2) { mtext = "Fevereiro"; }
			else if(month == 3) { mtext = "Marco"; }
			else if(month == 4) { mtext = "Abril"; }
			else if(month == 5) { mtext = "Maio"; }
			else if(month == 6) { mtext = "Junho"; }
			else if(month == 7) { mtext = "Julho"; }
			else if(month == 8) { mtext = "Agosto"; }
			else if(month == 9) { mtext = "Setembro"; }
			else if(month == 10) { mtext = "Outubro"; }
			else if(month == 11) { mtext = "Novembro"; }
			else if(month == 12) { mtext = "Dezembro"; }
			gettime(hour,minute,second);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(gstring, sizeof(gstring), "* %s olhou as horas.", sendername);
			ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
			if (minute < 10)
			{
				if (PlayerInfo[playerid][pJailTime] > 0)
				{
					format(gstring, sizeof(gstring), "~y~%d %s~n~~g~|~w~%d:0%d~g~|~n~~w~Tempo De Prisao: %d seg", day, mtext, hour, minute, PlayerInfo[playerid][pJailTime]);
				}
				else
				{
					format(gstring, sizeof(gstring), "~y~%d %s~n~~g~|~w~%d:0%d~g~|", day, mtext, hour, minute);
				}
			}
			else
			{
				if (PlayerInfo[playerid][pJailTime] > 0)
				{
					format(gstring, sizeof(gstring), "~y~%d %s~n~~g~|~w~%d:%d~g~|~n~~w~Tempo De Prisao: %d seg", day, mtext, hour, minute, PlayerInfo[playerid][pJailTime]);
				}
				else
				{
					format(gstring, sizeof(gstring), "~y~%d %s~n~~g~|~w~%d:%d~g~|", day, mtext, hour, minute);
				}
			}
			GameTextForPlayer(playerid, gstring, 5000, 1);
			TempoHoras[playerid] = GetTickCount();
		}
		return 1;
    }
    CMD:ircasa(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
	        if(PlayerInfo[playerid][pAdmin] < 3)
			{
	            SendClientMessage(playerid, COR_GREY, "Voce não tem autorização para usar esse comando!");
	            return 1;
	        }
	        if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
        	tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /ircasa [ID]");
				return 1;
			}
			new Casa;
			Casa = strval(tmpzcmd);
			SetPlayerPos(playerid,HouseInfo[Casa][hEntrancex],HouseInfo[Casa][hEntrancey],HouseInfo[Casa][hEntrancez]);
			return 1;
		}
		return 1;
	}
 	CMD:iremp(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
	        if(PlayerInfo[playerid][pAdmin] < 4)
			{
	            SendClientMessage(playerid, COR_GREY, "Voce não tem autorização para usar esse comando!");
	            return 1;
	        }
	        if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
        	tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /iremp [ID]");
				return 1;
			}
			new Emp;
			Emp = strval(tmpzcmd);
			SetPlayerPos(playerid,BizzInfo[Emp][bEntranceX],BizzInfo[Emp][bEntranceY],BizzInfo[Emp][bEntranceZ]);
			return 1;
		}
		return 1;
	}
	CMD:irsemp(playerid, params[])
	{
		if(IsPlayerConnected(playerid))
		{
	        if(PlayerInfo[playerid][pAdmin] < 4)
			{
	            SendClientMessage(playerid, COR_GREY, "Voce não tem autorização para usar esse comando!");
	            return 1;
	        }
	        if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
        	tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /iremp [ID]");
				return 1;
			}
			new Emp;
			Emp = strval(tmpzcmd);
			SetPlayerPos(playerid,SBizzInfo[Emp][sbEntranceX],SBizzInfo[Emp][sbEntranceY],SBizzInfo[Emp][sbEntranceZ]);
			return 1;
		}
		return 1;
	}
	CMD:casa(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 1338)
		    {
				tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd))
				{
					SendClientMessage(playerid, COR_GRAD2, "USE: /casa [numero da casa]");
					return 1;
				}
				new Housenum = strval(tmpzcmd);
				SetPlayerInterior(playerid,HouseInfo[Housenum][hInt]);
				SetPlayerVirtualWorld(playerid,HouseInfo[Housenum][hWorld]);
				SetPlayerPos(playerid,HouseInfo[Housenum][hExitx],HouseInfo[Housenum][hExity],HouseInfo[Housenum][hExitz]);
				GameTextForPlayer(playerid, "~w~Teleportado", 5000, 1);
				InteriorAtual[playerid] = HouseInfo[Housenum][hInt];
				LocalAtual[playerid] = Housenum;
			}
		}
		return 1;
	}
	CMD:biz(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 1339)
		    {
				tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd))
				{
					SendClientMessage(playerid, COR_GRAD2, "USE: /biz [empresa]");
					return 1;
				}
				new Housenum = strval(tmpzcmd);
				SetPlayerInterior(playerid,BizzInfo[Housenum][bInterior]);
				SetPlayerPos(playerid,BizzInfo[Housenum][bExitX],BizzInfo[Housenum][bExitY],BizzInfo[Housenum][bExitZ]);
				GameTextForPlayer(playerid, "~w~Teleportado", 5000, 1);
				InteriorAtual[playerid] = BizzInfo[Housenum][bInterior];
				LocalAtual[playerid] = Housenum+99;
			}
		}
		return 1;
	}
	CMD:sbizz(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 1339)
		    {
				tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd))
				{
					SendClientMessage(playerid, COR_GRAD2, "USE: /sbiz [empresa]");
					return 1;
				}
				new Housenum = strval(tmpzcmd);
				SetPlayerPos(playerid,SBizzInfo[Housenum][sbEntranceX],SBizzInfo[Housenum][sbEntranceY],SBizzInfo[Housenum][sbEntranceZ]);
				GameTextForPlayer(playerid, "~w~Teleportado", 5000, 1);
			}
		}
		return 1;
	}
	CMD:seditar(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] == 0)
			{
				SendClientMessage(playerid, COR_GREY, "Você não é um admin !");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] < 1337)
			{
				SendClientMessage(playerid, COR_GREY, "Você não tem autorização para usar esse comando!");
				return 1;
			}
			if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			new x_Emprego[32];
			x_Emprego = strtok(cmdtext, idxzcmd);
			if(!strlen(x_Emprego)) {
				SendClientMessage(playerid, COR_BRANCO, "|____________ Editar ____________|");
				SendClientMessage(playerid, COR_BRANCO, "USE: /seditar [nome] [quantidade] (Use para casas e empresas)");
				SendClientMessage(playerid, COR_GREY, "Casas: Level, Preco, carro, descricao, chave(0 aberto - 1 fechado)");
				SendClientMessage(playerid, COR_GREY, "Empresas: Level, Preco, fundos, descricao, chave(0 aberto - 1 fechado)");
				return 1;
			}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /seditar [nome] [quantidade]");
				return 1;
			}
			new proplev = strval(tmpzcmd);
	        for(new i = 0; i < sizeof(HouseInfo); ++i)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					format(gstring, sizeof(gstring), "Casa: %d", i);
					SendClientMessage(playerid, COR_GRAD2, gstring);
	                if(strcmp(x_Emprego,"level(playerid, params[])
	                {
                         if(proplev < 1) { return 1; }
					     HouseInfo[i][hLevel] = proplev;
					     format(gstring, sizeof(gstring), "Você Ajustou o Level Minímo da Casa para: %d", proplev);
                         SendClientMessage(playerid, COR_BRANCO, gstring);
                         SaveCasa(i);
					}
					else if(strcmp(x_Emprego,"preco(playerid, params[])
	                {
                         if(proplev < 1) { return 1; }
					     HouseInfo[i][hValue] = proplev;
						 format(gstring, sizeof(gstring), "Você Ajustou o Preço Minímo da Casa para: %d", proplev);
			             SendClientMessage(playerid, COR_BRANCO, gstring);
			             SaveCasa(i);
					}
					else if(strcmp(x_Emprego,"carro(playerid, params[])
		            {
                         if(proplev < 1) { return 1; }
					     HouseInfo[i][hVec] = proplev;
						 format(gstring, sizeof(gstring), "Você Ajustou o Carro da Casa para: %d", proplev);
			             SendClientMessage(playerid, COR_BRANCO, gstring);
			             SaveCasa(i);
					}
					if(strcmp(x_Emprego,"chave(playerid, params[])
	                {
                         if(proplev < 0 || proplev > 1) { SendClientMessage(playerid, COR_GRAD1, "Você só pode Abrir(0) ou Fechar(1) a Empresa."); return 1; }
					     HouseInfo[i][hLock] = proplev;
					     format(gstring, sizeof(gstring), "Você Ajustou a Chave da Casa para: %d", proplev);
                         SendClientMessage(playerid, COR_BRANCO, gstring);
                         SaveCasa(i);
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); ++i)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					format(gstring, sizeof(gstring), "Bizz: %d (Empresa com interior)", i);
					SendClientMessage(playerid, COR_GRAD2, gstring);
                    if(strcmp(x_Emprego,"level(playerid, params[])
				    {
                         if(proplev < 1) { return 1; }
					     BizzInfo[i][bLevelNeeded] = proplev;
					     format(gstring, sizeof(gstring), "Você Ajustou o Level Minímo da Empresa para: %d", proplev);
                         SendClientMessage(playerid, COR_BRANCO, gstring);
                         SalvarEmpresa(i);
					}
					else if(strcmp(x_Emprego,"preco(playerid, params[])
	                {
                         if(proplev < 1) { return 1; }
						 BizzInfo[i][bBuyPrice] = proplev;
					     format(gstring, sizeof(gstring), "Você Ajustou o Preço Minímo da Empresa para: %d", proplev);
                         SendClientMessage(playerid, COR_BRANCO, gstring);
                         SalvarEmpresa(i);
					}
					else if(strcmp(x_Emprego,"fundos(playerid, params[])
	                {
                         if(proplev < 1) { return 1; }
					     BizzInfo[i][bTill] = proplev;
					     format(gstring, sizeof(gstring), "Você Ajustou os Fundos da Empresa para: %d", proplev);
                         SendClientMessage(playerid, COR_BRANCO, gstring);
                         SalvarEmpresa(i);
					}
					else if(strcmp(x_Emprego,"chave(playerid, params[])
				    {
                         if(proplev < 0 || proplev > 1) { SendClientMessage(playerid, COR_GRAD1, "Você só pode Abrir(0) ou Fechar(1) a Empresa."); return 1; }
				  	     BizzInfo[i][bLocked] = proplev;
				  	     format(gstring, sizeof(gstring), "Você Ajustou a Chave da Empresa para: %d", proplev);
                         SendClientMessage(playerid, COR_BRANCO, gstring);
                         SalvarEmpresa(i);
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); ++i)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					format(gstring, sizeof(gstring), "Sbizz: %d (Empresa sem interior)", i);
					SendClientMessage(playerid, COR_GRAD2, gstring);
	                if(strcmp(x_Emprego,"level(playerid, params[])
				    {
                         if(proplev < 1) { return 1; }
					     SBizzInfo[i][sbLevelNeeded] = proplev;
					     format(gstring, sizeof(gstring), "Você Ajustou o Level Minímo da Empresa para: %d", proplev);
                         SendClientMessage(playerid, COR_BRANCO, gstring);
                         SalvarSEmpresa(i);
					}
					else if(strcmp(x_Emprego,"preco(playerid, params[])
	                {
                         if(proplev < 1) { return 1; }
						 SBizzInfo[i][sbBuyPrice] = proplev;
					     format(gstring, sizeof(gstring), "Você Ajustou o Preço Minímo da Empresa para: %d", proplev);
                         SendClientMessage(playerid, COR_BRANCO, gstring);
                         SalvarSEmpresa(i);
					}
					else if(strcmp(x_Emprego,"fundos(playerid, params[])
	                {
                         if(proplev < 1) { return 1; }
					     SBizzInfo[i][sbTill] = proplev;
					     format(gstring, sizeof(gstring), "Você Ajustou os Fundos da Empresa para: %d", proplev);
                         SendClientMessage(playerid, COR_BRANCO, gstring);
                         SalvarSEmpresa(i);
					}
                    else if(strcmp(x_Emprego,"chave(playerid, params[])
	                {
                         if(proplev < 0 || proplev > 1) { SendClientMessage(playerid, COR_GRAD1, "Você só pode Abrir(0) ou Fechar(1) a Empresa."); return 1; }
					     SBizzInfo[i][sbLocked] =  proplev;
					     format(gstring, sizeof(gstring), "Você Ajustou a Chave da Empresa para: %d", proplev);
			             SendClientMessage(playerid, COR_BRANCO, gstring);
			             SalvarSEmpresa(i);
					}
				}
			}
			Atualizar3Dtexts();
		}
		return 1;
    }
    CMD:entrarBPL(playerid, params[])
	{
		if (GetPlayerState(playerid) == 1)
		{
			VerificarEntradas(playerid);
		}
		return 1;
	}
	CMD:entrar(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			for(new i = 0; i < sizeof(HouseInfo); ++i)
			{
				if (PlayerToPoint(2, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					if(PlayerInfo[playerid][pLevel] == 2)
					{
					    SendClientMessage(playerid, -1, "Você não tem level necessário para entrar em casa !");
					    return 1;
					}
					if(PlayerInfo[playerid][pPHousekey] == i || HouseInfo[i][hLock] == 0)
					{
						SetPlayerInterior(playerid,HouseInfo[i][hInt]);
						SetPlayerVirtualWorld(playerid,HouseInfo[i][hWorld]);
						SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
						GameTextForPlayer(playerid, "~w~Bem vindo em casa", 5000, 6);
						InteriorAtual[playerid] = HouseInfo[i][hInt];
						LocalAtual[playerid] = i;
						HouseEntered[playerid] = i;
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Fechado", 5000, 3);
					}
				}
            }
			for(new i = 0; i < sizeof(BizzInfo); ++i)
			{
				if (PlayerToPoint(2, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i || GetPlayerMoneyEx(playerid) >= BizzInfo[i][bEntranceCost])
					{
						if(PlayerInfo[playerid][pPbiskey] != i)
						{
							if(BizzInfo[i][bLocked] == 1)
							{
								GameTextForPlayer(playerid, "~r~Fechado", 5000, 3);
								return 1;
							}
							GivePlayerMoneyEx(playerid,-BizzInfo[i][bEntranceCost]);
							format(gstring, sizeof(gstring), "~r~-R$%d", BizzInfo[i][bEntranceCost]);
							GameTextForPlayer(playerid, gstring, 5000, 3);
							BizzInfo[i][bTill] += BizzInfo[i][bEntranceCost];
							ExtortionBiz(i, BizzInfo[i][bEntranceCost]);
						}
						SetPlayerInterior(playerid,BizzInfo[i][bInterior]);
						if(PlayerToPoint(2, playerid,1412.078979,-1700.173583,13.539500))
						{
							 ctlicencasls[playerid] = 1;
						}
						else if(PlayerToPoint(2, playerid,2085.6714,2066.7856,11.0579))
						{
							 ctlicencaslv[playerid] = 1;
						}
						else if(PlayerToPoint(2, playerid,1791.2120,-1164.6317,23.8281))
						{
							 localizadolj1[playerid] = 1;
						}
						else if(PlayerToPoint(2, playerid,1069.8628,-1873.4392,13.5469))
						{
							 localizadolj2[playerid] = 1;
						}
						else if(PlayerToPoint(2, playerid,1498.3601,-1583.0319,13.5469))
						{
						    localizadoRestaurante[playerid] = 1;
						}
						else if(PlayerToPoint(2, playerid,2177.5850,961.3901,10.8203))
						{
							 localizadolj3[playerid] = 1;
						}
						else if(PlayerToPoint(2, playerid,1684.4463,-1343.2856,17.4371))
						{
						    locaizadoPenitenciariaLS[playerid] = 1;
						}
						else if(PlayerToPoint(2, playerid,1631.8335,-1172.7843,24.0843))
						{
							localizadoLotericaLS[playerid] = 1;
						}
						if (PlayerToPoint(2, playerid,BizzInfo[4][bEntranceX], BizzInfo[4][bEntranceY], BizzInfo[4][bEntranceZ]))
						{
						    localizarbanco[playerid] = 1;
							LoadObjects(playerid);
						}
						SetPlayerPos(playerid,BizzInfo[i][bExitX],BizzInfo[i][bExitY],BizzInfo[i][bExitZ]);
						InteriorAtual[playerid] = BizzInfo[i][bInterior];
						LocalAtual[playerid] = i+99;
						new dood[MAX_PLAYER_NAME];
						GetPlayerName(playerid, dood, sizeof(dood));
						format(gstring, sizeof(gstring), "%s pagou R$%d para entrar na empresa %d", dood, BizzInfo[i][bEntranceCost], i);
						printf("%s", gstring);
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro suficiente", 5000, 1);
					}
				}
            }
			/*for(new i = 0; i < sizeof(SBizzInfo); ++i)
			{
				if (PlayerToPoint(1, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i || GetPlayerMoneyEx(playerid) >= SBizzInfo[i][sbEntranceCost])
					{
						if(PlayerInfo[playerid][pPbiskey] != i)
						{
							if(SBizzInfo[i][sbLocked] == 1)
							{
								GameTextForPlayer(playerid, "~r~Fechado", 5000, 3);
								return 1;
                            }
							GivePlayerMoneyEx(playerid,-SBizzInfo[i][sbEntranceCost]);
							gSpentCash[playerid] = GetPlayerMoneyEx(playerid);
							SBizzInfo[i][sbTill] += SBizzInfo[i][sbEntranceCost];
							ExtortionSBiz(i, SBizzInfo[i][sbEntranceCost]);
							new dood[MAX_PLAYER_NAME];
							GetPlayerName(playerid, dood, sizeof(dood));
							format(gstring, sizeof(gstring), "%s payed R$%d to enter sbiz %d", dood, SBizzInfo[i][sbEntranceCost], i);
							printf("%s", gstring);
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro suficiente", 5000, 1);
					}
				}
			}*/
		}
	}
	CMD:sair(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			for(new i = 0; i <  sizeof(HouseInfo); ++i)
			{
				if(PlayerToPoint(1, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
				{
					if(HouseEntered[playerid] == i)
    				{
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
						InteriorAtual[playerid] = 0;
						SetPlayerVirtualWorld(playerid, 0);
						LocalAtual[playerid] = 255;
						HouseEntered[playerid] = 999;
						return 1;
					}
				}
			}
			if(PlayerToPoint(2, playerid,316.3746,-169.6989,999.6010))
			{
		 		localizadolj1[playerid] = 0;
			}
			else if(PlayerToPoint(2, playerid,285.8286,-85.2722,1001.5156))
			{
		 		localizadolj2[playerid] = 0;
			}
			else if(PlayerToPoint(2, playerid, -794.9362,490.6324,1376.1953))
			{
			    localizadoRestaurante[playerid] = 0;
			}
			else if(PlayerToPoint(2, playerid,315.7019,-142.9840,999.6016))
			{
		 		localizadolj3[playerid] = 0;
			}
			else if(PlayerToPoint(2, playerid,1846.6278,-1721.8167,5202.5859))
			{
			    locaizadoPenitenciariaLS[playerid] = 0;
			}
			else if(PlayerToPoint(2, playerid, 832.6270,7.2666,1004.1797))
			{
			    localizadoLotericaLS[playerid] = 0;
			}
			for(new i = 0; i <  sizeof(BizzInfo); ++i)
			{
				if(PlayerToPoint(2, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
				{
                    ctlicencasls[playerid] = 0;
                    ctlicencaslv[playerid] = 0;
					SetPlayerInterior(playerid,0);
					InteriorAtual[playerid] = 0;
                    SetPlayerVirtualWorld(playerid, 0);
                    SetPlayerPos(playerid,BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ]);
					LocalAtual[playerid] = 255;
					return 1;
				}
			}
			if(IsPlayerInAnyVehicle(playerid))
			{
                 TogglePlayerControllable(playerid, 1);
                 RemovePlayerFromVehicleEx(playerid);
			}
		}
	}
	CMD:home(playerid, params[])// || CMD:mapacasa(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pPHousekey] != 999)
			{
				SetPlayerCheckpoint(playerid,HouseInfo[PlayerInfo[playerid][pPHousekey]][hEntrancex], HouseInfo[PlayerInfo[playerid][pPHousekey]][hEntrancey], HouseInfo[PlayerInfo[playerid][pPHousekey]][hEntrancez], 4.0);
				GameTextForPlayer(playerid, "~r~mapa da casa marcado", 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_HOME;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não possui uma empresa !");
				return 1;
			}
		}
		return 1;
	}
	CMD:mapaemp(playerid, params[])
	{
	    for(new h = 0; h < sizeof(SBizzInfo); h++)
	    {
			if(PlayerInfo[playerid][pPbiskey] != 255)
			{
				SetPlayerCheckpoint(playerid, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ], 4.0);
				GameTextForPlayer(playerid, "~r~mapa da empresa marcado", 5000, 1);
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não possui uma empresa !");
				return 1;
			}
		}
		return 1;
	}
	CMD:acharcarro(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pPHousekey] != 999)
			{
				new House = PlayerInfo[playerid][pPHousekey];
				SetPlayerCheckpoint(playerid, HouseInfo[House][hCarrox], HouseInfo[House][hCarroy], HouseInfo[House][hCarroz], 4.0);
				GameTextForPlayer(playerid, "~r~mapa do carro marcado!", 5000, 1);
			}
			else
			{
				GameTextForPlayer(playerid, "~w~Voce nao tem casa", 5000, 1);
			}
		}
		return 1;
	}
	CMD:compraremp(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			if(PlayerInfo[playerid][pPbiskey] != 255)
			{
				SendClientMessage(playerid, COR_GREY, "Você ja tem uma empresa, Digite /venderemp para comprar outra.");
				return 1;
			}
			if(PlayerInfo[playerid][pVIP] == 0)
			{
				SendClientMessage(playerid, COR_GREY, "Você não é VIP!");
				return 1;
			}
			for(new b = 0; b < sizeof(SBizzInfo); ++b)
			{
				if(PlayerToPoint(2.0, playerid, SBizzInfo[b][sbEntranceX], SBizzInfo[b][sbEntranceY], SBizzInfo[b][sbEntranceZ]) && SBizzInfo[b][sbOwned] == 0)
				{
				    if(PlayerToPoint(2.0, playerid, SBizzInfo[6][sbEntranceX], SBizzInfo[6][sbEntranceY], SBizzInfo[6][sbEntranceZ]) && PlayerInfo[playerid][pSocio] < 3)
				    {
				        SendClientMessage(playerid, COR_GREY, "Você não é o Sócio Diamante!");
				        return 1;
				    }
					if(PlayerInfo[playerid][pLevel] < SBizzInfo[b][sbLevelNeeded])
					{
						format(gstring, sizeof(gstring), "Você precisa ser nível %d para comprar essa empresa",SBizzInfo[b][sbLevelNeeded]);
						SendClientMessage(playerid, COR_GRAD5, gstring);
						return 1;
					}
					if(GetPlayerMoneyEx(playerid) > SBizzInfo[b][sbBuyPrice])
					{
						PlayerInfo[playerid][pPbiskey] = b+100;
						SBizzInfo[b][sbOwned] = 1;
						SBizzInfo[b][sbLocked] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(SBizzInfo[b][sbOwner], sendername, 0, strlen(sendername), 255);
						GivePlayerMoneyEx(playerid,-SBizzInfo[b][sbBuyPrice]);
						PlayerPlayMusic(playerid);
						SendClientMessage(playerid, COR_BRANCO, "Parabens, Você comprou uma empresa.");
						SendClientMessage(playerid, COR_BRANCO, "Digite /ajudaemp para ver os comandos de sua empresa.");
                        SendClientMessage(playerid, COR_LIGHTRED, "Obs: Empresas Consomem 2200 reais por dia do cofre (Imposto). Mantenha o dinheiro ou perderá sua empresa!");
						SalvarSEmpresa(b);
						OnPlayerSave(playerid);
						Atualizar3Dtexts();
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COR_GREY, "Você não tem grana suficiente");
						return 1;
					}
				}
            }
			for(new b = 0; b < sizeof(BizzInfo); b++)
			{
				if(PlayerToPoint(2.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bOwned] == 0)
				{
					if(PlayerInfo[playerid][pLevel] < BizzInfo[b][bLevelNeeded])
					{
						format(gstring, sizeof(gstring), "Você precisa ser nível %d para comprar essa empresa",BizzInfo[b][bLevelNeeded]);
						SendClientMessage(playerid, COR_GRAD5, gstring);
						return 1;
					}
					if(GetPlayerMoneyEx(playerid) > BizzInfo[b][bBuyPrice])
					{
						PlayerInfo[playerid][pPbiskey] = b;
						BizzInfo[b][bOwned] = 1;
						BizzInfo[b][bLocked] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(BizzInfo[b][bOwner], sendername, 0, strlen(sendername), 255);
						GivePlayerMoneyEx(playerid,-BizzInfo[b][bBuyPrice]);
						PlayerPlayMusic(playerid);
						SetPlayerInterior(playerid,BizzInfo[b][bInterior]);
						InteriorAtual[playerid] = BizzInfo[b][bInterior];
						SetPlayerPos(playerid,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
						GameTextForPlayer(playerid, "~w~Bem Vindo~n~Voce pode sair da sua empresa digitando /sair", 5000, 3);
						InteriorAtual[playerid] = BizzInfo[b][bInterior];
						LocalAtual[playerid] = b ;
						SendClientMessage(playerid, COR_BRANCO, "Parabens, Você comprou esta empresa.");
						SendClientMessage(playerid, COR_BRANCO, "Digite /ajudaemp para ver os comandos de sua empresa.");
						SalvarEmpresa(b);
						SalvarEmpresas();
						OnPlayerSave(playerid);
						Atualizar3Dtexts();
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COR_GREY, "Você nao tem grana o suficiente");
						return 1;
					}
				}
			}
		}
		return 1;
	}
	CMD:venderemp(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
			if(PlayerInfo[playerid][pPbiskey] == 255)
			{
				SendClientMessage(playerid, COR_GREY, "Você não possui uma empresa.");
				return 1;
			}
			if(PlayerInfo[playerid][pMarried] > 0)
		    {
		        SendClientMessage(playerid, COR_GREY, "Você é casado(a), não pode vender a empresa!");
		        return 1;
		    }
		    if(PlayerInfo[playerid][pVIP] < 1)
			{
				SendClientMessage(playerid, COR_GREY, "Você não é Vip");
				return 1;
			}
			if(PlayerInfo[playerid][pPbiskey] >= 100 && strcmp(PlayerName, SBizzInfo[PlayerInfo[playerid][pPbiskey]-100][sbOwner], true) == 0)
			{
				new borse = PlayerInfo[playerid][pPbiskey]-100;
				GivePlayerMoneyEx(playerid,SBizzInfo[borse][sbTill]);
				SBizzInfo[borse][sbLocked] = 0;
				SBizzInfo[borse][sbOwned] = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(SBizzInfo[borse][sbOwner], "The State", 0, strlen("The State"), 255);
				strmid(SBizzInfo[borse][sbExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
				ConsumingMoney[playerid] = 1;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(gstring, sizeof(gstring), "~w~Parabens~n~ Voce vendeu imoveis para ~n~~g~R$%d", SBizzInfo[borse][sbTill]);
				GameTextForPlayer(playerid, gstring, 10000, 3);
				SBizzInfo[borse][sbTill] = 0;
				PlayerInfo[playerid][pPbiskey] = 255;
				Atualizar3Dtexts();
				OnPlayerSave(playerid);
				return 1;
			}
			if(strcmp(PlayerName, BizzInfo[PlayerInfo[playerid][pPbiskey]][bOwner], true) == 0)
			{
				new borse = PlayerInfo[playerid][pPbiskey];
				BizzInfo[borse][bLocked] = 0;
				BizzInfo[borse][bOwned] = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(BizzInfo[borse][bOwner], "The State", 0, strlen("The State"), 255);
				strmid(BizzInfo[borse][bExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
				ConsumingMoney[playerid] = 1;
				GivePlayerMoneyEx(playerid,BizzInfo[borse][bTill]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(gstring, sizeof(gstring), "~w~Parabens~n~ Voce vendeu imoveis para ~n~~g~R$%d", BizzInfo[borse][bTill]);
				GameTextForPlayer(playerid, gstring, 10000, 3);
				BizzInfo[borse][bTill] = 0;
				PlayerInfo[playerid][pPbiskey] = 255;
				Atualizar3Dtexts();
				OnPlayerSave(playerid);
				return 1;
			}
			if(PlayerInfo[playerid][pPbiskey] != 255)
			{
			    new borse = PlayerInfo[playerid][pPbiskey];
			    format(gstring, sizeof(gstring), "~w~Parabens~n~ Voce vendeu imoveis para ~n~~g~R$%d", BizzInfo[borse][bTill]);
				GameTextForPlayer(playerid, gstring, 10000, 3);
				ConsumingMoney[playerid] = 1;
                PlayerInfo[playerid][pPbiskey] = 255;
                OnPlayerSave(playerid);
                return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_BRANCO, "Você não tem uma Empresa.");
			}
		}
		return 1;
	}
	CMD:infoempresa(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if(borse == 255)
			{
				SendClientMessage(playerid, COR_GREY, "Você não tem uma empresa.");
				return 1;
			}
			if (borse >= 100)
			{
				PrintSBizInfo(playerid,borse-100);
			}
			else
			{
				PrintBizInfo(playerid,borse);
			}
		}
		return 1;
	}
	CMD:entradadaempresa(playerid, params[])// || CMD:entradaemp(playerid, params[])// || CMD:precoentradaemp(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if (borse == 255)
			{
				SendClientMessage(playerid, COR_GRAD2, "Você não tem uma Empresa !");
				return 1;
			}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_BRANCO, "USE: /entradadaempresa [preço]");
			}
			if(strval(tmpzcmd) < 25 || strval(tmpzcmd) > 45)
			{
				SendClientMessage(playerid, COR_BRANCO, "Preço da entrada mínimo R$25, máximo R$45.");
				return 1;
			}
			if (borse >= 100)
			{
				SBizzInfo[borse-100][sbEntranceCost] = strval(tmpzcmd);
				format(gstring, sizeof(gstring), "Entrada Definida Para: R$%d.", SBizzInfo[borse-100][sbEntranceCost]);
			}
			else
			{
				BizzInfo[borse][bEntranceCost] = strval(tmpzcmd);
				format(gstring, sizeof(gstring), "Entrada Definida Para: R$%d.", BizzInfo[borse][bEntranceCost]);
			}
			Atualizar3Dtexts();
			SendClientMessage(playerid, COR_BRANCO, gstring);
		}
		return 1;
	}
	CMD:extorcao(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if (borse == 255)
			{
				SendClientMessage(playerid, COR_GRAD2, "Você não tem uma Empresa");
				return 1;
			}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
			    SendClientMessage(playerid, COR_BRANCO, "USE: /extorcao [id] (ou 0 para Nenhum)");
			    return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			if(IsPlayerConnected(giveplayeridzcmd))
			{
			    if(giveplayeridzcmd != INVALID_PLAYER_ID)
			    {
			        GetPlayerName(playerid, sendername, sizeof(sendername));
			        GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
			        format(gstring, sizeof(gstring), "* %s esta na extorcao de sua empresa.",giveplayerzcm);
			        SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
			        format(gstring, sizeof(gstring), "* Agora você está na extorção da empresa de %s.",sendername);
			        SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
			        if (borse >= 100)
					{
					    format(gstring, sizeof(gstring), "%s",giveplayerzcm);
						strmid(SBizzInfo[borse-100][sbExtortion], gstring, 0, sizeof(gstring), 255);
						format(gstring, sizeof(gstring), "Novo dono da Extorçao: %s",SBizzInfo[borse-100][sbExtortion]);
					}
					else
					{
					    format(gstring, sizeof(gstring), "%s",giveplayerzcm);
						strmid(BizzInfo[borse][bExtortion], gstring, 0, sizeof(gstring), 255);
						format(gstring, sizeof(gstring), "Novo dono da Extorçao: %s",BizzInfo[borse][bExtortion]);
					}
					Atualizar3Dtexts();
					SendClientMessage(playerid, COR_BRANCO, gstring);
			    }
			}
			else if(giveplayeridzcmd == 555)
			{
			    if (borse >= 100)
				{
				    format(gstring, sizeof(gstring), "Nenhum");
					strmid(SBizzInfo[borse-100][sbExtortion], gstring, 0, sizeof(gstring), 255);
					format(gstring, sizeof(gstring), "Novo dono da Extorçao: %s",SBizzInfo[borse-100][sbExtortion]);
				}
				else
				{
				    format(gstring, sizeof(gstring), "Nenhum");
					strmid(BizzInfo[borse][bExtortion], gstring, 0, sizeof(gstring), 255);
					format(gstring, sizeof(gstring), "Novo dono da Extorçao: %s",BizzInfo[borse][bExtortion]);
				}
				Atualizar3Dtexts();
				SendClientMessage(playerid, COR_BRANCO, gstring);
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "O Jogador esta offline !");
			    return 1;
			}
		}
		return 1;
	}
	CMD:nomeempresa(playerid, params[])// || CMD:nomeemp(playerid, params[])
	{
	    if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pAdmin] >= 1341)
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if (borse == 255)
			{
				SendClientMessage(playerid, COR_GRAD2, "Você não tem uma Empresa");
				return 1;
			}
			if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COR_GRAD2, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
			{
				idxzcmd++;
			}
			new offset = idxzcmd;
			new result[64];
			while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
			{
				result[idxzcmd - offset] = cmdtext[idxzcmd];
				idxzcmd++;
			}
			result[idxzcmd - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COR_BRANCO, "USE: /nomeempresa [Nome]");
			}
			if (borse >= 100)
			{
				strmid(SBizzInfo[borse-100][sbMessage], result, 0, 64, 255);
				format(gstring, sizeof(gstring), "Nome da Empresa Mudada Para: %s",SBizzInfo[borse-100][sbMessage]);
			}
			else
			{
				strmid(BizzInfo[borse][bMessage], result, 0, 64, 255);
				format(gstring, sizeof(gstring), "Nome da Empresa Mudada Para: %s",BizzInfo[borse][bMessage]);
			}
			Atualizar3Dtexts();
			SendClientMessage(playerid, COR_BRANCO, gstring);
		}
		return 1;
	}
	CMD:sacarempresa(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if (borse == 255)
			{
				SendClientMessage(playerid, COR_GRAD2, "Você não tem uma Empresa");
				return 1;
			}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				if (borse >= 100)
				{
					format(gstring, sizeof(gstring), "Você tem R$%d no cofre da empresa.", SBizzInfo[borse-100][sbTill]);
					SendClientMessage(playerid, COR_GRAD3, gstring);
				}
				else
				{
					format(gstring, sizeof(gstring), "Você tem R$%d no cofre da empresa.", BizzInfo[borse][bTill]);
					SendClientMessage(playerid, COR_GRAD3, gstring);
				}
				SendClientMessage(playerid, COR_GRAD2, "USE: /sacarempresa [quantidade]");
				return 1;
			}
			new cashdeposit = strval(tmpzcmd);
			if (borse > 100)
			{
			    if (cashdeposit > SBizzInfo[borse - 100][sbTill] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COR_GRAD2, "Sua empresa não possui essa quantia.");
					return true;
				}
				if(PlayerToPoint(100, playerid,SBizzInfo[borse-100][sbEntranceX],SBizzInfo[borse-100][sbEntranceY],SBizzInfo[borse-100][sbEntranceZ]))
				{
                    GivePlayerMoneyEx(playerid,cashdeposit);
					SBizzInfo[borse-100][sbTill] -= cashdeposit;
					format(gstring, sizeof(gstring), "  Você retirou R$%d de sua empresa - restante: R$%d ", cashdeposit,SBizzInfo[borse-100][sbTill]);
					SendClientMessage(playerid, COR_GRAD1, gstring);
					SalvarSEmpresa(borse-100);
				}
				else
				{
					SendClientMessage(playerid, COR_GRAD1, "  Sua empresa esta longe de você.");
					return true;
				}
			}
			if (borse < 100)
			{
			    if (cashdeposit > BizzInfo[borse][bTill] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COR_GRAD2, " Você nao tem essa quantia.");
					return true;
				}
				if (PlayerToPoint(100, playerid,BizzInfo[borse][bExitX],BizzInfo[borse][bExitY],BizzInfo[borse][bExitZ]))
				{
					SendClientMessage(playerid, COR_GRAD1, "Entre na sua empresa.");
					return true;
				}
				else
				{
					GivePlayerMoneyEx(playerid,cashdeposit);
					BizzInfo[borse][bTill] -= cashdeposit;
					format(gstring, sizeof(gstring), "   Você retirou R$%d de sua empresa - restante: R$%d ", cashdeposit,BizzInfo[borse][bTill]);
					SendClientMessage(playerid, COR_GRAD1, gstring);
					SalvarEmpresa(borse);
				}
			}
		}
		return 1;
	}
	CMD:depositarempresa(playerid, params[])// || CMD:depositaremp(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if (borse == 255)
			{
				SendClientMessage(playerid, COR_GRAD2, "Você não tem uma empresa.");
				return 1;
			}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				if (borse >= 100)
				{
					format(gstring, sizeof(gstring), "Você tem R$%d de saldo em sua empresa.", SBizzInfo[borse-100][sbTill]);
					SendClientMessage(playerid, COR_GRAD3, gstring);
				}
				else
				{
					format(gstring, sizeof(gstring), "Você tem R$%d de saldo em sua empresa.", BizzInfo[borse][bTill]);
					SendClientMessage(playerid, COR_GRAD3, gstring);
				}
				SendClientMessage(playerid, COR_GRAD2, "USE: /depositarempresa [quantidade]");
				return 1;
			}
			new cashdeposit = strval(tmpzcmd);
			if (cashdeposit > GetPlayerMoneyEx(playerid) || cashdeposit < 1)
			{
				SendClientMessage(playerid, COR_GRAD2, "Você não tem tanto");
				return 1;
			}
			if (borse >= 100)
			{
				if(PlayerToPoint(100, playerid,SBizzInfo[borse-100][sbEntranceX],SBizzInfo[borse-100][sbEntranceY],SBizzInfo[borse-100][sbEntranceZ]))
				{
				    GivePlayerMoneyEx(playerid,-cashdeposit);
					SBizzInfo[borse-100][sbTill] += cashdeposit;
					ExtortionSBiz(borse-100, cashdeposit);
					format(gstring, sizeof(gstring), "Você guardou R$%d no cofre de sua empresa. O saldo de sua empresa: R$%d", cashdeposit,SBizzInfo[borse-100][sbTill]);
					SendClientMessage(playerid, COR_AMARELO, gstring);
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COR_GRAD2, "Você está longe de sua empresa");
					return 1;
				}
			}
			else
			{
				if (!PlayerToPoint(100, playerid,BizzInfo[borse][bExitX],BizzInfo[borse][bExitY],BizzInfo[borse][bExitZ]))
				{
					SendClientMessage(playerid, COR_GRAD1, "Entre na sua empresa.");
					return 1;
				}
				else
				{
					GivePlayerMoneyEx(playerid,-cashdeposit);
					BizzInfo[borse][bTill] += cashdeposit;
					ExtortionBiz(borse, cashdeposit);
					format(gstring, sizeof(gstring), "Voce depositou $%d no cofre de sua empresa Total: $%d", cashdeposit,BizzInfo[borse][bTill]);
					SendClientMessage(playerid, COR_AMARELO, gstring);
					return 1;
				}
			}
		}
		return 1;
	}
	CMD:tvon(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1)
	        {
	            SendClientMessage(playerid, COR_GREEN, "Você não é um Administrador");
	            return 1;
	        }
            if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
	        {
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
	        }
	        if(PlayerInfo[playerid][pAdmin] >= 1)
	        {
	            if(WatchingTV[playerid] < 1)
			    {
		        	GetPlayerPos(playerid, Unspec[playerid][Coords][0],Unspec[playerid][Coords][1],Unspec[playerid][Coords][2]);
		        }
	        }
	        if(Spectate[playerid] == 255 && PlayerInfo[playerid][pAdmin] >= 1)
			{
				GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
				Unspec[playerid][sPint] = InteriorAtual[playerid];
				Unspec[playerid][sLocal] = LocalAtual[playerid];
				LocalAtual[playerid] = 255;
				gTeam[playerid] = 0;
			}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				giveplayeridzcmd = ReturnUser(tmpzcmd);
				new world;
	    		world = GetPlayerVirtualWorld(giveplayeridzcmd);
				if(IsPlayerConnected(giveplayeridzcmd))
			    {
			        if(giveplayeridzcmd != INVALID_PLAYER_ID)
                    {
			        	if(PlayerInfo[giveplayeridzcmd][pAdmin] >= 1340 && PlayerInfo[playerid][pAdmin] < 1340)
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não pode ficar de TV em um Admin Dono !");
							return 1;
						}
				        Spectate[playerid] = giveplayeridzcmd;
						new Float:health;
						GetPlayerHealth(Spectate[playerid], health);
						GetPlayerName(Spectate[playerid], giveplayerzcm, sizeof(giveplayerzcm));
						new cash =  GetPlayerMoneyEx(Spectate[playerid]);
						if (PlayerInfo[playerid][pAdmin] >= 1)
						{
						    SetPlayerToTeamColor(playerid);
						    SetPlayerVirtualWorld(playerid,world);
						    PlayerInfo[playerid][pSpawn] = 0;
							format(gstring, sizeof(gstring), "Info: (%d) %s R$%d H:%.0f",Spectate[playerid],giveplayerzcm,cash,health);
							TogglePlayerSpectating(playerid, 1);
						    if(IsPlayerInAnyVehicle(giveplayeridzcmd))
						    {
				            	PlayerSpectateVehicle(playerid, GetPlayerVehicleID(giveplayeridzcmd));
						    }
						    else
						    {
								PlayerSpectatePlayer(playerid, giveplayeridzcmd);
							}
						}
						SendClientMessage(playerid, COR_AMARELO2, gstring);
						WatchingTV[playerid] = 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COR_BRANCO, "Use /tvon [playerid]");
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GREEN, "Você não tem permissão para usar esse comando!");
				return 1;
			}
		}
		return 1;
	}
	CMD:tvoff(playerid, params[])
	{
        new nome[24];
        GetPlayerName(playerid, nome, sizeof nome);
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
		  	if(WatchingTV[playerid] > 0)
 		    {
				if(AdminTrabalhando[playerid] == 1)
				{
					 SetPlayerSkin(playerid,217);
				}
		        WatchingTV[playerid] = 0;
				Spectate[playerid] = 253;
				GameTextForPlayer(playerid, "~n~~n~~n~~n~~w~TV OFF", 5000, 3);
				MedicBill[playerid] = 0;
				return 1;
			}
			else
			{
  			  SendClientMessage(playerid, COR_GREY, "Você não está de TV em Ninguem !");
  			  return 1;
			}
		}
		return 1;
	}
    CMD:lchat(playerid, params[])
	{
		if(PlayerMutado[playerid] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COR, "Você não pode falar, pois foi calado !");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
			{
				idxzcmd++;
			}
			new offset = idxzcmd;
			new result[84];
			while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
			{
				result[idxzcmd - offset] = cmdtext[idxzcmd];
				idxzcmd++;
			}
			result[idxzcmd - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /lchat");
				return 1;
			}
			if(TentouDivulgar(result))
			{
  				GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
  				format(gstring, 128, "AdmAviso: [%d]%s tentou divulgar: %s.",playerid,PlayerName,result);
				ABroadCast(COR_AMARELO,gstring,1);
				DivulgouLog(gstring);
        		return 1;
			}
			if(PlayerInfo[playerid][pCargo] == 6)
			{
				format(gstring, sizeof(gstring), "[Líder %s] %s: %s", NomeORG(playerid),PlayerName(playerid),result);
			    ChatLider(COR_AMARELO, gstring, 1);
				return 1;
			}
			else if(PlayerInfo[playerid][pCargo] == 5)
			{
			    format(gstring, sizeof(gstring), "[Sub-Líder %s] %s: %s", NomeORG(playerid),PlayerName(playerid),result);
				ChatLider(COR_AMARELO, gstring, 1);
				return 1;
			}
		}
		return 1;
	}
    CMD:echat(playerid, params[])
	{
		if(PlayerMutado[playerid] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COR, "Você não pode falar, pois foi calado ! !");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
			{
				idxzcmd++;
			}
			new offset = idxzcmd;
			new result[64];
			while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
			{
				result[idxzcmd - offset] = cmdtext[idxzcmd];
				idxzcmd++;
			}
			result[idxzcmd - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: (/echat) [Chat Emprego]");
				return 1;
			}
			if(TentouDivulgar(result))
			{
  				GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
  				format(gstring, 128, "AdmAviso: [%d]%s tentou divulgar: %s.",playerid,PlayerName,result);
				ABroadCast(COR_AMARELO,gstring,1);
				DivulgouLog(gstring);
        		return 1;
        	}
        	if(Palavrao(result))
   	        {
                 GivePlayerMoneyEx(playerid, -50);
                 SendClientMessage(playerid, COR_LIGHTRED, "É PROIBIDO CHINGAR NO CHAT DE EMPREGO,VOCÊ PERDEU 50 REAIS !");
                 return 1;
    	    }
			if (PlayerInfo[playerid][pEmprego] == 2)
			{
				format(gstring, sizeof(gstring), "** Advogado %s: %s **", PlayerName(playerid), result);
				SendEmpregoMessage(2, 0xBEBEBEFF, gstring);
				for(new i = 0; i < MAX_PLAYERS; ++i)
	   			{
					if(IsPlayerConnected(i))
					{
	    				if(PlayerInfo[i][pVIP] == 0 && PlayerInfo[playerid][pSocio] == 0)
					    {
		    				SendClientMessage(i, 0xba55d3FF,gstring);
					    }
					}
	   			}
			}
			if (PlayerInfo[playerid][pEmprego] == 3)
			{
				format(gstring, sizeof(gstring), "** Segurança %s: %s **", PlayerName(playerid), result);
				SendEmpregoMessage(3, 0xBEBEBEFF, gstring);
				for(new i = 0; i < MAX_PLAYERS; ++i)
	   			{
					if(IsPlayerConnected(i))
					{
	    				if(PlayerInfo[i][pVIP] == 0 && PlayerInfo[playerid][pSocio] == 0)
					    {
		    				SendClientMessage(i, 0xba55d3FF,gstring);
					    }
					}
	   			}
			}
			if (PlayerInfo[playerid][pEmprego] == 4)
			{
				format(gstring, sizeof(gstring), "** Motorista %s: %s **", PlayerName(playerid), result);
				SendEmpregoMessage(4, 0xBEBEBEFF, gstring);
				for(new i = 0; i < MAX_PLAYERS; ++i)
	   			{
					if(IsPlayerConnected(i))
					{
	    				if(PlayerInfo[i][pVIP] == 0 && PlayerInfo[playerid][pSocio] == 0)
					    {
		    				SendClientMessage(i, 0xba55d3FF,gstring);
					    }
					}
	   			}
			}
			if (PlayerInfo[playerid][pEmprego] != 5)
			{
				format(gstring, sizeof(gstring), "** Mendigo %s: %s **", PlayerName(playerid), result);
				SendEmpregoMessage(5, 0xBEBEBEFF, gstring);
				for(new i = 0; i < MAX_PLAYERS; ++i)
	   			{
					if(IsPlayerConnected(i))
					{
	    				if(PlayerInfo[i][pVIP] == 0 && PlayerInfo[playerid][pSocio] == 0)
					    {
		    				SendClientMessage(i, 0xba55d3FF,gstring);
					    }
					}
	   			}
			}
			if (PlayerInfo[playerid][pEmprego] == 6)
			{
				format(gstring, sizeof(gstring), "** Caminhoneiro %s: %s **", PlayerName(playerid), result);
				SendEmpregoMessage(6, 0xBEBEBEFF, gstring);
				for(new i = 0; i < MAX_PLAYERS; ++i)
	   			{
					if(IsPlayerConnected(i))
					{
	    				if(PlayerInfo[i][pVIP] == 0 && PlayerInfo[playerid][pSocio] == 0)
					    {
		    				SendClientMessage(i, 0xba55d3FF,gstring);
					    }
					}
	   			}
			}
			if (PlayerInfo[playerid][pEmprego] == 7)
			{
				format(gstring, sizeof(gstring), "** Agente Penitenciário %s: %s **", PlayerName(playerid), result);
				SendEmpregoMessage(7, 0xBEBEBEFF, gstring);
				for(new i = 0; i < MAX_PLAYERS; ++i)
	   			{
					if(IsPlayerConnected(i))
					{
	    				if(PlayerInfo[i][pVIP] == 0 && PlayerInfo[playerid][pSocio] == 0)
					    {
		    				SendClientMessage(i, 0xba55d3FF,gstring);
					    }
					}
	   			}
			}
			if (PlayerInfo[playerid][pEmprego] == 8)
			{
				format(gstring, sizeof(gstring), "** Lixeiro %s: %s *", PlayerName(playerid), result);
				SendEmpregoMessage(8, 0xBEBEBEFF, gstring);
				for(new i = 0; i < MAX_PLAYERS; ++i)
	   			{
					if(IsPlayerConnected(i))
					{
	    				if(PlayerInfo[i][pVIP] == 0 && PlayerInfo[playerid][pSocio] == 0)
					    {
		    				SendClientMessage(i, 0xba55d3FF,gstring);
					    }
					}
	   			}
			}
			if (PlayerInfo[playerid][pEmprego] == 9)
			{
				format(gstring, sizeof(gstring), "** Ladrão %s: %s *", PlayerName(playerid), result);
				SendEmpregoMessage(8, 0xBEBEBEFF, gstring);
				for(new i = 0; i < MAX_PLAYERS; ++i)
	   			{
					if(IsPlayerConnected(i))
					{
	    				if(PlayerInfo[i][pVIP] == 0 && PlayerInfo[playerid][pSocio] == 0)
					    {
		    				SendClientMessage(i, 0xba55d3FF,gstring);
					    }
					}
	   			}
			}
			if (PlayerInfo[playerid][pEmprego] == 10)
		    {
				format(gstring, sizeof(gstring), "** Fazendeiro %s: %s **", sendername, result);
				SendEmpregoMessage(PlayerInfo[playerid][pEmprego], COR_HITMAN, gstring);
				for(new i = 0; i < MAX_PLAYERS; ++i)
	   			{
					if(IsPlayerConnected(i))
					{
	    				if(PlayerInfo[i][pVIP] == 0 && PlayerInfo[playerid][pSocio] == 0)
					    {
		    				SendClientMessage(i, 0xba55d3FF,gstring);
					    }
					}
	   			}
			}
			if (PlayerInfo[playerid][pEmprego] == 11)
		    {
				format(gstring, sizeof(gstring), "** Coveiro %s: %s **", sendername, result);
				SendEmpregoMessage(PlayerInfo[playerid][pEmprego], COR_HITMAN, gstring);
				for(new i = 0; i < MAX_PLAYERS; ++i)
	   			{
					if(IsPlayerConnected(i))
					{
	    				if(PlayerInfo[i][pVIP] == 0 && PlayerInfo[playerid][pSocio] == 0)
					    {
		    				SendClientMessage(i, 0xba55d3FF,gstring);
					    }
					}
	   			}
			}
			if (PlayerInfo[playerid][pEmprego] == 12)
		    {
				format(gstring, sizeof(gstring), "** Carteiro %s: %s **", sendername, result);
				SendEmpregoMessage(PlayerInfo[playerid][pEmprego], COR_HITMAN, gstring);
				for(new i = 0; i < MAX_PLAYERS; ++i)
	   			{
					if(IsPlayerConnected(i))
					{
	    				if(PlayerInfo[i][pVIP] == 0 && PlayerInfo[playerid][pSocio] == 0)
					    {
		    				SendClientMessage(i, 0xba55d3FF,gstring);
					    }
					}
	   			}
			}
			//TempoChatEmprego[playerid] = GetTickCount();
			format(gstring, sizeof(gstring), "* %s usou o rádio para falar com o seu emprego(/echat).", PlayerName(playerid));
	        ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
		}
		return 1;
	}
	CMD:cs(playerid, params[])// || CMD:cq(playerid, params[])
	{
		if(PlayerMutado[playerid] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COR, "Você não pode falar, pois foi calado ! !");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
	        if(TendoQuarentena == 1 || TanoWarZone[playerid] == 1)
	        {
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
				{
					idxzcmd++;
				}
				new offset = idxzcmd;
				new result[90];
				while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
				{
					result[idxzcmd - offset] = cmdtext[idxzcmd];
					idxzcmd++;
				}
				result[idxzcmd - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COR_GRAD2, "USE: (/cs) [Chat CS]");
					return 1;
				}
			/*	if(GetTickCount() - TempoChatEmprego[playerid] < 3000)
	    	    {
			         SendClientMessage(playerid,COR_GRAD1,"Você só pode escrever uma mensagem a cada 3 segundos.");
			         return 1;
			    }*/
				if(TentouDivulgar(result))
				{
	  				GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	  				format(gstring, 128, "AdmAviso: [%d]%s tentou divulgar: %s.",playerid,PlayerName,result);
					ABroadCast(COR_AMARELO,gstring,1);
					DivulgouLog(gstring);
	        		return 1;
	        	}
	        	if (EquipeQuarentena[playerid] == 1)
	        	{
					format(gstring, sizeof(gstring), "[Humano] %s: %s", PlayerName(playerid), result);
					SendCSMessage(1, COR_DBLUE, gstring);
	        	}
	        	if (EquipeQuarentena[playerid] == 2)
	        	{
					format(gstring, sizeof(gstring), "[Infectado] %s: %s", PlayerName(playerid), result);
					SendCSMessage(2, COR_VERMELHO, gstring);
	        	}
				if (EquipeWarZone[playerid] == 3)
				{
					format(gstring, sizeof(gstring), "[Green] %s: %s", PlayerName(playerid), result);
					SendCSMessage(1, COR_GREEN, gstring);
				}
				if (EquipeWarZone[playerid] == 2)
				{
					format(gstring, sizeof(gstring), "[Blue] %s: %s", PlayerName(playerid), result);
					SendCSMessage(2, COR_AZTECAS, gstring);
				}
				if (EquipeWarZone[playerid] == 1)
				{
					format(gstring, sizeof(gstring), "[Red] %s: %s", PlayerName(playerid), result);
					SendCSMessage(3, COR_VERMELHO, gstring);
				}
				//TempoChatEmprego[playerid] = GetTickCount();
			}
			else
			{
				SendClientMessage(playerid, COR_BALLAS, "Você não pode usar este comando agora!");
			}
		}
		return 1;
	}
	CMD:noob(playerid, params[])// || CMD:n(playerid, params[])// || CMD:chatduvida(playerid, params[])
	{
		if(PlayerMutado[playerid] == 1)
			return SendClientMessage(playerid, TEAM_CYAN_COR, "Você não pode falar, pois foi calado !");
		if(GetTickCount() - TempoChatNoob[playerid] < 15000)
  			return SendClientMessage(playerid,COR_GRAD1,"Você só pode usar o chat dúvida a cada 15 segundos.");
        if(ChatNoob == true)
			return SendClientMessage(playerid, COR_GRAD1, "Chat de dúvida está desatiado!");
		if(PlayerInfo[playerid][pBloqueadoChatDuvida] > 0)
            return SendClientMessage(playerid, COR_GRAD1, "Você não pode falar, está com o chat bloqueado.");
            
		if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
			{
				idxzcmd++;
			}
			new offset = idxzcmd;
			new result[120];
			while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
			{
				result[idxzcmd - offset] = cmdtext[idxzcmd];
				idxzcmd++;
			}
			result[idxzcmd - offset] = EOS;
			if(!strlen(result))
				return SendClientMessage(playerid, COR_GRAD2, "USE: (/n [chat dúvida]");
			if(TentouDivulgar(result))
			{
  				GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
  				format(gstring, 128, "AdmAviso: [%d]%s tentou divulgar: %s.",playerid,PlayerName,result);
				ABroadCast(COR_AMARELO,gstring,1);
				DivulgouLog(gstring);
        		return 1;
        	}
        	if(Palavrao(result))
   	        {
                 GivePlayerMoneyEx(playerid, -3000);
                // TempoChatEmprego[playerid] = GetTickCount();
                 SendClientMessage(playerid, COR_LIGHTRED, "É PROIBIDO XINGAR NO CHAT DE DÚVIDAS,VOCÊ PERDEU 3000 REAIS !");
                 return 1;
    	    }
    		VarChatDuvida[playerid] = 0;
			strins(VarChatDuvida[playerid],result,0) ;
			new Dialog[300];
			format(gstring, sizeof(gstring), "{0000FF}» {2EFEF7}%s{FFFFFF} Chat dúvida é exclusivamente para dúvidas, caso seja usado para outra coisa que não seja dúvida, será punido!",PlayerName(playerid));
			strcat(Dialog,gstring);
			format(gstring, sizeof(gstring), "\nSua dúvida {F7FE2E}%s {0000FF}deseja enviar essa mensagem ?",result);
			strcat(Dialog,gstring);
			ShowPlayerDialog(playerid, 8725, DIALOG_STYLE_MSGBOX, "{0000FF}» {FFFFFF}Chat Dúvida", Dialog, "Enviar", "Cancelar");
		}
		return 1;
    }
	CMD:admin(playerid, params[])// || CMD:a(playerid, params[])
	{
		if(PlayerMutado[playerid] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COR, "Você não pode falar, pois foi calado !");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
			{
				idxzcmd++;
			}
			new offset = idxzcmd;
			new result[120];
			while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
			{
				result[idxzcmd - offset] = cmdtext[idxzcmd];
				idxzcmd++;
			}
			result[idxzcmd - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: (/a)dmin [chat administração]");
				return 1;
			}
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    new lolz[25];
				if(PlayerInfo[playerid][pAdmin] == 1)lolz = "Sub Moderador";
				if(PlayerInfo[playerid][pAdmin] == 2)lolz = "Admin Moderador";
				if(PlayerInfo[playerid][pAdmin] == 3)lolz = "Admin Auxiliar";
				if(PlayerInfo[playerid][pAdmin] == 4)lolz = "Sub Master";
				if(PlayerInfo[playerid][pAdmin] == 1337)lolz = "Master";
				if(PlayerInfo[playerid][pAdmin] == 1338)lolz = "Admin Sub-Gerente";
				if(PlayerInfo[playerid][pAdmin] == 1339)lolz = "Admin Gerente";
				if(PlayerInfo[playerid][pAdmin] == 1340)lolz = "Sub-Dono";
				if(PlayerInfo[playerid][pAdmin] == 1341)lolz = "Dono";
				if(PlayerInfo[playerid][pAdmin] == 1342)lolz = "Fundador";
				if(&& strcmp(PlayerName(playerid),"Dudu_Insane(playerid, params[])
		        {
		            lolz = "Scripter";
		        }
				format(gstring, sizeof(gstring), "[Admin {ff3399}%s{33CCFF}] %s: %s", lolz, PlayerName(playerid), result);
				ABroadCast(COR_LIGHTBLUE, gstring, 1);// chat admin
				ChatAdminLog(gstring);
			}
		}
		return 1;
    }
    CMD:sireneon(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(!IsPlayerInAnyVehicle(playerid))
		    {
                     SendClientMessage(playerid, COR_BALLAS, "Você não está em um veiculo !");
                     return 1;
            }
		    new vehicleid = GetPlayerVehicleID(playerid);
            if(IsACop(playerid) && Sireneon[playerid] == 0)
            {
                 new Subaru = GetVehicleModel(vehicleid);
                 if(Subaru == 560)
	             {
                     new Float:x,Float:y,Float:z;
                     GetPlayerPos(playerid,x,y,z);
                     Sireneon[playerid] = 1;
                     sirene[GetPlayerVehicleID(playerid)] = CreateDynamicObject(19419,x,y,z,0,0,0,0);
                     sirene2[GetPlayerVehicleID(playerid)] = CreateDynamicObject(19288,x,y,z,0,0,0,0);
                     AttachDynamicObjectToVehicle(sirene[GetPlayerVehicleID(playerid)],GetPlayerVehicleID(playerid),0.0,0,0.82,0,0,0);
		             SendClientMessage(playerid, COR_BRANCO, "Sirene Instalada !");
	             }
	             new Barco = GetVehicleModel(vehicleid);
                 if(Barco == 430)
	             {
                     new Float:x,Float:y,Float:z;
                     GetPlayerPos(playerid,x,y,z);
                     Sireneon[playerid] = 1;
                     sirene[playerid] = CreateDynamicObject(19419,x,y,z,0,0,0,0);
                     sirene2[playerid] = CreateDynamicObject(19288,x,y,z,0,0,0,0);
                     AttachDynamicObjectToVehicle(sirene[GetPlayerVehicleID(playerid)],GetPlayerVehicleID(playerid),0.0,0,2.13,0,0,0);
		             SendClientMessage(playerid, COR_BRANCO, "Sirene Instalada !");
	             }
	             new BF = GetVehicleModel(vehicleid);
                 if(BF == 581)
	             {
                     new Float:x,Float:y,Float:z;
                     GetPlayerPos(playerid,x,y,z);
                     Sireneon[playerid] = 1;
                     sirene[GetPlayerVehicleID(playerid)] = CreateDynamicObject(18646,x,y,z,0,0,0,0);
                     sirene2[GetPlayerVehicleID(playerid)] = CreateDynamicObject(19288,x,y,z,0,0,0,0);
                     AttachDynamicObjectToVehicle(sirene[GetPlayerVehicleID(playerid)],GetPlayerVehicleID(playerid),0.0,0,0.62,0,0,0);
		             SendClientMessage(playerid, COR_BRANCO, "Sirene Instalada !");
	             }
	             new Hornet = GetVehicleModel(vehicleid);
                 if(Hornet == 521)
	             {
                     new Float:x,Float:y,Float:z;
                     GetPlayerPos(playerid,x,y,z);
                     Sireneon[playerid] = 1;
                     sirene[GetPlayerVehicleID(playerid)] = CreateDynamicObject(18646,x,y,z,0,0,0,0);
                     sirene2[GetPlayerVehicleID(playerid)] = CreateDynamicObject(19288,x,y,z,0,0,0,0);
                     AttachDynamicObjectToVehicle(sirene[GetPlayerVehicleID(playerid)],GetPlayerVehicleID(playerid),0.0,0,0.65,0,0,0);
		             SendClientMessage(playerid, COR_BRANCO, "Sirene Instalada !");
	             }
	             new r1 = GetVehicleModel(vehicleid);
                 if(r1 == 522)
	             {
                     new Float:x,Float:y,Float:z;
                     GetPlayerPos(playerid,x,y,z);
                     Sireneon[playerid] = 1;
                     sirene[GetPlayerVehicleID(playerid)] = CreateDynamicObject(18646,x,y,z,0,0,0,0);
                     sirene2[GetPlayerVehicleID(playerid)] = CreateDynamicObject(19288,x,y,z,0,0,0,0);
                     AttachDynamicObjectToVehicle(sirene[GetPlayerVehicleID(playerid)],GetPlayerVehicleID(playerid),0.0,0,0.68,0,0,0);
		             SendClientMessage(playerid, COR_BRANCO, "Sirene Instalada !");
	             }
                 new GT = GetVehicleModel(vehicleid);
                 if(GT == 541)
	             {
                     new Float:x,Float:y,Float:z;
                     GetPlayerPos(playerid,x,y,z);
                     Sireneon[playerid] = 1;
                     sirene[GetPlayerVehicleID(playerid)] = CreateDynamicObject(19419,x,y,z,0,0,0,0);
                     sirene2[GetPlayerVehicleID(playerid)] = CreateDynamicObject(19288,x,y,z,0,0,0,0);
                     AttachDynamicObjectToVehicle(sirene[GetPlayerVehicleID(playerid)],GetPlayerVehicleID(playerid),0.0,0,0.62,0,0,0);
		             SendClientMessage(playerid, COR_BRANCO, "Sirene Instalada !");
	             }
	             new Patriot = GetVehicleModel(vehicleid);
	             if(Patriot == 470)
	             {
	                 new Float:x,Float:y,Float:z;
                     GetPlayerPos(playerid,x,y,z);
                     Sireneon[playerid] = 1;
                     sirene[GetPlayerVehicleID(playerid)] = CreateDynamicObject(19419,x,y,z,0,0,0,0);
                     sirene2[GetPlayerVehicleID(playerid)] = CreateDynamicObject(19288,x,y,z,0,0,0,0);
                     AttachDynamicObjectToVehicle(sirene[GetPlayerVehicleID(playerid)],GetPlayerVehicleID(playerid),0.0,0,1.10,0,0,0);
		             SendClientMessage(playerid, COR_BRANCO, "Sirene Instalada !");
	             }
	             new Rancher = GetVehicleModel(vehicleid);
	             if(Rancher == 490)
	             {
	                 new Float:x,Float:y,Float:z;
                     GetPlayerPos(playerid,x,y,z);
                     Sireneon[playerid] = 1;
                     sirene[GetPlayerVehicleID(playerid)] = CreateDynamicObject(19419,x,y,z,0,0,0,0);
                     sirene2[GetPlayerVehicleID(playerid)] = CreateDynamicObject(19288,x,y,z,0,0,0,0);
                     AttachDynamicObjectToVehicle(sirene[GetPlayerVehicleID(playerid)],GetPlayerVehicleID(playerid),0.0,0,1.11,0,0,0);
		             SendClientMessage(playerid, COR_BRANCO, "Sirene Instalada !");
	             }
	             new Cheetah = GetVehicleModel(vehicleid);
	             if(Cheetah == 415)
	             {
	                 new Float:x,Float:y,Float:z;
                     GetPlayerPos(playerid,x,y,z);
                     Sireneon[playerid] = 1;
                     sirene[GetPlayerVehicleID(playerid)] = CreateDynamicObject(19419,x,y,z,0,0,0,0);
                     sirene2[GetPlayerVehicleID(playerid)] = CreateDynamicObject(19288,x,y,z,0,0,0,0);
                     AttachDynamicObjectToVehicle(sirene[GetPlayerVehicleID(playerid)],GetPlayerVehicleID(playerid),0.0,0,0.57,0,0,0);
		             SendClientMessage(playerid, COR_BRANCO, "Sirene Instalada !");
	             }
	             new carro = GetVehicleModel(vehicleid);
	             if(carro != 560 && carro != 430 && carro != 581 && carro != 521 && carro != 522 && carro != 541 && carro != 470 && carro != 490 && carro!= 415)
	             {
                      SendClientMessage(playerid, COR_EXE, "Você não pode colocar sirene neste tipo de Veículo !");
			          return 1;
	             }
            }
            else if(Sireneon[playerid] == 1)
   	        {
		        Sireneon[playerid] = 0;
                DestroyDynamicObject(sirene[GetPlayerVehicleID(playerid)]);
                DestroyDynamicObject(sirene2[GetPlayerVehicleID(playerid)]);
	            SendClientMessage(playerid, COR_BRANCO, "Sirene Removida !");
            }
	    }
	    return 1;
	}
	CMD:cnn(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
				{
					idxzcmd++;
				}
				new offset = idxzcmd;
				new result[64];
				while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
				{
					result[idxzcmd - offset] = cmdtext[idxzcmd];
					idxzcmd++;
				}
				result[idxzcmd - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COR_GRAD2, "USE: /cnn [cnn formato ~n~=NovaLinha ~r~=Vermelho ~g~=Verde ~b~=Azul ~w~=Branco ~y~=Amarelo ~l~=Preto]");
					return 1;
				}
				if(AdminTrabalhando[playerid] == 1 && admhide[playerid] == 1)
				{
					format(gstring, sizeof(gstring), "~b~Anonimo: ~w~%s",result);
				}
				else
				{
					format(gstring, sizeof(gstring), "~b~%s: ~w~%s",sendername,result);
				}
				cnnlog(gstring);
				for(new i = 0; i < MAX_PLAYERS; ++i)
				{
					if(IsPlayerConnected(i))
					{
						GameTextForPlayer(i, gstring, 5000, 3);
					}
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!");
				return 1;
			}
		}
		return 1;
	}
	CMD:cnnn(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1340)
			{
				tmpzcmd = strtok(cmdtext, idxzcmd);
				new txtid;
				if(!strlen(tmpzcmd))
				{
					SendClientMessage(playerid, COR_GRAD2, "USE: /cnnn <Digite> ");
					return 1;
				}
				txtid = strval(tmpzcmd);
				if(txtid == 2)
				{
					SendClientMessage(playerid, COR_GRAD2, "Não existe 2! só 0,1,3,4!");
					return 1;
				}
				new length = strlen(cmdtext);
				while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
				{
					idxzcmd++;
				}
				new offset = idxzcmd;
				new result[64];
				while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
				{
					result[idxzcmd - offset] = cmdtext[idxzcmd];
					idxzcmd++;
				}
				result[idxzcmd - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COR_GRAD2, "USE: /cnnn <Digite> [cnnc formato ~n~=NovaLinha ~r~=Vermelho ~g~=Verde ~b~=Azul ~w~=Branco ~y~=Amarelo ~l~=Preto]");
					return 1;
				}
				format(gstring, sizeof(gstring), "~w~%s",result);
				for(new i = 0; i < MAX_PLAYERS; ++i)
				{
					if(IsPlayerConnected(i) == 1)
					{
						GameTextForPlayer(i, gstring, 5000, txtid);
					}
				}
				format(gstring, sizeof(gstring), "%s : %s", PlayerName(playerid), result);
				cnnlog(gstring);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não esta autorizado a usar este comando!");
				return 1;
			}
		}
		return 1;
	}
	CMD:cadeia(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /cadeia [id] [tempo] [motivo]");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] < 2)
			{
				 return 1;
			}
			new length = strlen(cmdtext);
            new playa;
			new money;
			playa = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			money = strval(tmpzcmd);
			while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
			{
				idxzcmd++;
			}
			new offset = idxzcmd;
			new result[64];
			while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
			{
				result[idxzcmd - offset] = cmdtext[idxzcmd];
				idxzcmd++;
			}
			result[idxzcmd - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /cadeia [id] [tempo] [motivo]");
				return 1;
			}
			if(PlayerInfo[playa][pJailed] != 0 && PlayerInfo[playerid][pAdmin] < 4)
			{
				SendClientMessage(playerid,COR_AMARELO,"Você não pode soltar presos,só admins nivel 4 + !");
				return 1;
  			}
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						PlayerInfo[playa][pSkin] = GetPlayerSkin(playa);
			            if(PlayerInfo[playa][pSex] == 1)
						{
							SetPlayerSkin(playa, 42);
						}
						else
						{
						    SetPlayerSkin(playa, 69);
						}
						SetPlayerSkin(playa, 268);
                        if(PlayerInfo[playa][pSex] == 2) {  SetPlayerSkin(playa, 69); }
                   	    if(PlayerInfo[playa][pSocio] >= 1) {  SetPlayerSkin(playa, 42); }
				        GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						ResetPlayerWeaponsEx(playa);
						WantedLevel[playa] = 0;
						PlayerInfo[playa][pJailed] = 3;
						PlayerInfo[playa][pJailTime] = money*60;
						SetPlayerInterior(playa, 0);
						SetPlayerPos(playa, 1175.5886,-1182.0431,87.0254);
						format(gstring, sizeof(gstring), "* Voçê prendeu %s,Motivo: %s.", PlayerName(playa),(result));
						SendClientMessage(playerid, COR_LIGHTRED, gstring);
						format(gstring, sizeof(gstring), "ADMCMD: %s colocou %s por [%d] minutos na cadeia. Motivo: %s.", PlayerName(playerid), PlayerName(playa) ,money,(result));
                        SendClientMessageToAll(COR_LIGHTRED, gstring);
						if(AdminTrabalhando[playerid] < 1 && admhide[playerid] == 1)
						{
							format(gstring, sizeof(gstring), "* Você foi preso por [%d] minutos por algum Administrador.", money);
					        SendClientMessage(playa, COR_LIGHTBLUE, gstring);
						}
						else
						{
							format(gstring, sizeof(gstring), "* Você foi preso por [%d] minutos por %s.", money,sendername);
					        SendClientMessage(playa, COR_LIGHTBLUE, gstring);
						}
					    SetPlayerChatBubble(playa, ".", COR_VERMELHO, 1, 1);
					    return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Voce não esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
 	CMD:cadeiaoculta(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1340)
	        {
	            SendClientMessage(playerid, COR_GREY, "Você não esta autorizado para usar este comando!");
	            return 1;
	        }
            tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /cadeiaoculta [ ID ]");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
		    if(IsPlayerConnected(giveplayeridzcmd))
		    {
		      if(giveplayeridzcmd != INVALID_PLAYER_ID)
   			  {
   			        if(PlayerInfo[giveplayeridzcmd][pSex] == 1)
					{
						SetPlayerSkin(giveplayeridzcmd, 42);
					}
					else
					{
					    SetPlayerSkin(giveplayeridzcmd, 69);
					}
		            GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(gstring, sizeof(gstring), "* Você retirou o player %s da cadeia.", giveplayerzcm);
                    SendClientMessage(playerid, COR_LIGHTRED, gstring);
	    			SetPlayerWorldBounds(giveplayeridzcmd,20000.0000,-20000.0000,20000.0000,-20000.0000); //Reset world to player
					PlayerInfo[giveplayeridzcmd][pJailed] = 0;
					SetPlayerSkin(giveplayeridzcmd, PlayerInfo[giveplayeridzcmd][pSkin]);
					if(gTeam[giveplayeridzcmd] == 4) { gTeam[giveplayeridzcmd] = 3; }
					ClearCrime(giveplayeridzcmd);
					SetPlayerToTeamColor(giveplayeridzcmd);
					ResetPlayerWeaponsEx(giveplayeridzcmd);
					WantedLevel[giveplayeridzcmd] = 0;
      				SetPlayerWantedLevel(giveplayeridzcmd, 0);
      				StopAudioStreamForPlayer(giveplayeridzcmd);
		        }
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "O jogador está offline !");
			    return 1;
			}
	    }
	    return 1;
	}
/*	CMD:carandiru(playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdmin] > 2)
	    {
     		ShowPlayerDialog(playerid, 1314, DIALOG_STYLE_INPUT, "Menu Cadeia", "Digite o id do player", "Confirmar", "Cancelar");
       		return 1;
	    }
	    else return SendClientMessage(playerid, COR_GREY, "Você não esta autorizado para usar este comando!");
	}*/
 	CMD:bloquearchatduvida(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new tempo[20];
	        new tempo2;
	        if(PlayerInfo[playerid][pAdmin] < 2)
	        {
	            SendClientMessage(playerid, COR_GREY, "Você não esta autorizado para usar este comando!");
	            return 1;
	        }
            tmpzcmd = strtok(cmdtext, idxzcmd);
	        tempo = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /bloquearchatduvida [ ID ] [ Tempo ] [ Motivo ]");
				return 1;
			}
			if(!strlen(tempo))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /bloquearchatduvida [ ID ] [ Tempo ] [ Motivo ]");
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
			{
				idxzcmd++;
			}
			new offset = idxzcmd;
			new result[64];
			while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
			{
				result[idxzcmd - offset] = cmdtext[idxzcmd];
				idxzcmd++;
			}
			result[idxzcmd - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /bloquearchatduvida [ ID ] [ Tempo ] [ Motivo ]");
				return 1;
			}
			if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			tempo2 = strval(tempo);
		    if(IsPlayerConnected(giveplayeridzcmd))
		    {
		      if(giveplayeridzcmd != INVALID_PLAYER_ID)
   			  {
		            GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(gstring, sizeof(gstring), "* Você bloqueou o chat dúvida o(a) %s, motivo: %s.", giveplayerzcm, (result));
                    SendClientMessage(playerid, COR_LIGHTRED, gstring);
                    format(gstring, sizeof(gstring), "ADMCMD: %s Bloqueou o chat de %s por [%d] Minutos, Motivo: %s.", sendername, giveplayerzcm, tempo2, (result));
                    SendClientMessageToAll(COR_LIGHTRED, gstring);
					PlayerInfo[giveplayeridzcmd][pBloqueadoChatDuvida] = tempo2 * 60;
		        }
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "O jogador está offline !");
			    return 1;
			}
	    }
	    return 1;
	}
 	CMD:carandiru(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new tempo[20];
	        new tempo2;
	        if(PlayerInfo[playerid][pAdmin] < 3)
	        {
	            SendClientMessage(playerid, COR_GREY, "Você não esta autorizado para usar este comando!");
	            return 1;
	        }
	        if(PlayerInfo[giveplayeridzcmd][pJailed] != 0 && PlayerInfo[playerid][pAdmin] <= 4)
	        {
	             SendClientMessage(playerid, COR_GREY, "Você não pode prender quem já está Preso!"); // nivel 4 +
				 return 1;
			}
            tmpzcmd = strtok(cmdtext, idxzcmd);
	        tempo = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /carandiru [ ID ] [ Tempo ] [ Motivo ]");
				return 1;
			}
			if(!strlen(tempo))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /carandiru [ ID ] [ Tempo ] [ Motivo ]");
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
			{
				idxzcmd++;
			}
			new offset = idxzcmd;
			new result[64];
			while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
			{
				result[idxzcmd - offset] = cmdtext[idxzcmd];
				idxzcmd++;
			}
			result[idxzcmd - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /carandiru [ ID ] [ Tempo ] [ Motivo ]");
				return 1;
			}
			if(PlayerInfo[giveplayeridzcmd][pAdmin] == 1340  && PlayerInfo[giveplayeridzcmd][pAdmin] == 1341 && PlayerInfo[giveplayeridzcmd][pAdmin] == 1342)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não pode dar Carandiru em um Admin Dono/Scripter,VOCÊ É UM MERDA HUAHUAHUA!");
				return 1;
			}
			if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			tempo2 = strval(tempo);
		    if(IsPlayerConnected(giveplayeridzcmd))
		    {
		      if(giveplayeridzcmd != INVALID_PLAYER_ID)
   			  {
   			        if(PlayerInfo[giveplayeridzcmd][pSex] == 1)
					{
						SetPlayerSkin(giveplayeridzcmd, 42);
					}
					else
					{
					    SetPlayerSkin(giveplayeridzcmd, 69);
					}
                    SetPlayerSkin(giveplayeridzcmd, 268);
                    SetPlayerInterior(giveplayeridzcmd, 0);
                    if(PlayerInfo[giveplayeridzcmd][pSex] == 2) {  SetPlayerSkin(giveplayeridzcmd, 69); }
                   	if(PlayerInfo[giveplayeridzcmd][pSocio] >= 1) {  SetPlayerSkin(giveplayeridzcmd, 42); }
		            GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(gstring, sizeof(gstring), "* Você colocou o(a) %s no carandiru, motivo: %s.", giveplayerzcm, (result));
                    SendClientMessage(playerid, COR_LIGHTRED, gstring);
                    format(gstring, sizeof(gstring), "ADMCMD: %s Colocou %s por [%d] Minutos no Carandiru. Motivo: %s.", sendername, giveplayerzcm, tempo2, (result));
                    SendClientMessageToAll(COR_LIGHTRED, gstring);
					GameTextForPlayer(giveplayeridzcmd, "~b~Bem Vindo ao ~n~~r~Carandiru", 5000, 3);
					ResetPlayerWeaponsEx(giveplayeridzcmd);
					WantedLevel[giveplayeridzcmd] = 0;
      				SetPlayerWantedLevel(giveplayeridzcmd, 0);
					PlayerInfo[giveplayeridzcmd][pJailed] = 2;
					PlayerInfo[giveplayeridzcmd][pJailTime] = tempo2 * 60;
		            SetPlayerPos(giveplayeridzcmd, 268.58, 1857.94, 9.81);
					SetPlayerWorldBounds(giveplayeridzcmd, 337.5694,101.5826,1940.9759,1798.7453);
					SetPlayerChatBubble(giveplayeridzcmd, ".", COR_VERMELHO, 1, 1);
					if(tempo2 > 0)
					{
					     if(TaEscutando[playerid] == 0) PlayAudioStreamForPlayer(giveplayeridzcmd, "http://dl.dropboxusercontent.com/s/3tt0blqulyu2nxi/carandiru.mp3");
					}
					else
					{
                         StopAudioStreamForPlayer(giveplayeridzcmd);
					}
		        }
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "O jogador está offline !");
			    return 1;
			}
	    }
	    return 1;
	}
	/*
    CMD:carandiru(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new tempo[20];
	        new tempo2;
	        if(PlayerInfo[playerid][pAdmin] < 3)
	        {
	            SendClientMessage(playerid, COR_GREY, "Você não esta autorizado para usar este comando!");
	            return 1;
	        }
	        if(PlayerInfo[giveplayeridzcmd][pJailed] != 0 && PlayerInfo[playerid][pAdmin] <= 4)
	        {
	             SendClientMessage(playerid, COR_GREY, "Você não pode prender quem já está Preso!"); // nivel 4 +
				 return 1;
			}
            tmpzcmd = strtok(cmdtext, idxzcmd);
	        tempo = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /carandiru [ ID ] [ Tempo ] [ Motivo ]");
				return 1;
			}
			if(!strlen(tempo))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /carandiru [ ID ] [ Tempo ] [ Motivo ]");
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
			{
				idxzcmd++;
			}
			new offset = idxzcmd;
			new result[64];
			while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
			{
				result[idxzcmd - offset] = cmdtext[idxzcmd];
				idxzcmd++;
			}
			result[idxzcmd - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /carandiru [ ID ] [ Tempo ] [ Motivo ]");
				return 1;
			}
			if(PlayerInfo[giveplayeridzcmd][pAdmin] == 1340  && PlayerInfo[giveplayeridzcmd][pAdmin] == 1341 && PlayerInfo[giveplayeridzcmd][pAdmin] == 1342)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não pode dar Carandiru em um Admin Dono/Scripter,VOCÊ É UM MERDA HUAHUAHUA!");
				return 1;
			}
			if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			tempo2 = strval(tempo);
		    if(IsPlayerConnected(giveplayeridzcmd))
		    {
		      if(giveplayeridzcmd != INVALID_PLAYER_ID)
   			  {
   			        if(PlayerInfo[giveplayeridzcmd][pSex] == 1)
					{
						SetPlayerSkin(giveplayeridzcmd, 42);
					}
					else
					{
					    SetPlayerSkin(giveplayeridzcmd, 69);
					}
                    SetPlayerSkin(giveplayeridzcmd, 268);
                    SetPlayerInterior(giveplayeridzcmd, 0);
                    if(PlayerInfo[giveplayeridzcmd][pSex] == 2) {  SetPlayerSkin(giveplayeridzcmd, 69); }
                   	if(PlayerInfo[giveplayeridzcmd][pSocio] >= 1) {  SetPlayerSkin(giveplayeridzcmd, 42); }
		            GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(gstring, sizeof(gstring), "* Você colocou o(a) %s no carandiru, motivo: %s.", giveplayerzcm, (result));
                    SendClientMessage(playerid, COR_LIGHTRED, gstring);
                    format(gstring, sizeof(gstring), "ADMCMD: %s Colocou %s por [%d] Minutos no Carandiru. Motivo: %s.", sendername, giveplayerzcm, tempo2, (result));
                    SendClientMessageToAll(COR_LIGHTRED, gstring);
					GameTextForPlayer(giveplayeridzcmd, "~b~Bem Vindo ao ~n~~r~Carandiru", 5000, 3);
					ResetPlayerWeaponsEx(giveplayeridzcmd);
					WantedLevel[giveplayeridzcmd] = 0;
      				SetPlayerWantedLevel(giveplayeridzcmd, 0);
					PlayerInfo[giveplayeridzcmd][pJailed] = 2;
					PlayerInfo[giveplayeridzcmd][pJailTime] = tempo2 * 60;
		            SetPlayerPos(giveplayeridzcmd, 268.58, 1857.94, 9.81);
					SetPlayerWorldBounds(giveplayeridzcmd, 337.5694,101.5826,1940.9759,1798.7453);
					SetPlayerChatBubble(giveplayeridzcmd, ".", COR_VERMELHO, 1, 1);
					if(tempo2 > 0)
					{
					     if(TaEscutando[playerid] == 0) PlayAudioStreamForPlayer(giveplayeridzcmd, "http://dl.dropboxusercontent.com/s/3tt0blqulyu2nxi/carandiru.mp3");
					}
					else
					{
                         StopAudioStreamForPlayer(giveplayeridzcmd);
					}
		        }
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "O jogador está offline !");
			    return 1;
			}
	    }
	    return 1;
	}*/
	CMD:setarorgvip(playerid, params[])
    {
    	if(IsPlayerConnected(playerid))
    	{
    		new org, tipo, dias;
    		tmpzcmd = strtok(cmdtext, idxzcmd);
    		tmpzcmd3 = strtok(cmdtext, idxzcmd);
            if(!strlen(tmpzcmd))
    		{
    			SendClientMessage(playerid, COR_GRAD2, "USE: /setarorgvip [org] [dias]");
    			return 1;
    		}
    		org = strval(tmpzcmd);
    		dias = strval(tmpzcmd3);
    		if(PlayerInfo[playerid][pAdmin] >= 1341)
    		{
                new arquivo[64];
		        getdate(year, month, day);
				format(arquivo, sizeof(arquivo), Pasta_ORGVIP, org);
				if(DOF2_FileExists(arquivo))
				{
				    DOF2_SetInt(arquivo,"Tipo",1);
                	DOF2_SetInt(arquivo,"Dias",dias);
                	DOF2_SetInt(arquivo,"Data",day);
                	format(gstring, sizeof(gstring), "AvisoAdmin: %s ativou uma orgvip para org:[%d] por [%d] dias.",PlayerName(playerid),org,dias);
				    ABroadCast(COR_AMARELO,gstring,1);
                }
                else
                {
                    DOF2_CreateFile(arquivo);
                    DOF2_SetInt(arquivo,"Tipo",1);
                	DOF2_SetInt(arquivo,"Dias",dias);
                	DOF2_SetInt(arquivo,"Data",day);
                	format(gstring, sizeof(gstring), "AvisoAdmin: %s ativou uma orgvip para org:[%d] por [%d] dias.",PlayerName(playerid),org,tipo,dias);
				    ABroadCast(COR_AMARELO,gstring,1);
           		}
           		DOF2_SaveFile();
                return 1;
            }
            else
    		{
    		    SendClientMessage(playerid, COR_GRAD1, "Você não tem permissao para usar esse comando !");
    		}
    	}
    	return 1;
	}
	CMD:removerorgvip(playerid, params[])
	{

		if(IsPlayerConnected(playerid))
		{

			new org;
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{

				SendClientMessage(playerid, COR_GRAD2, "USE: /removerorgvip [org]");
				return 1;
			}
			org = strval(tmpzcmd);
			if(PlayerInfo[playerid][pAdmin] >= 1341)
			{

				new arquivo[64];
				format(arquivo, sizeof(arquivo), Pasta_ORGVIP, org);
				if(DOF2_FileExists(arquivo))
				{

					DOF2_SetInt(arquivo,"Tipo",0);
					DOF2_SetInt(arquivo,"Dias",0);
					DOF2_SetInt(arquivo,"Data",0);
					format(gstring, sizeof(gstring), "AdmCmd: %s Desativou uma ORG VIP da ORG:[%s].",PlayerName(playerid),getOrgName(org));
					ABroadCast(COR_AMARELO,gstring,1);
				}
				DOF2_SaveFile();
				LoadOrgs();
				return 1;
			}
			else
			{

				SendClientMessage(playerid, COR_GRAD1, "Você não tem permissao para usar esse comando !");
			}
		}
		return 1;
	}
	CMD:setarorgvip(playerid, params[])
	{

		if(IsPlayerConnected(playerid))
		{

			new org, tipo, dias;
			tmpzcmd = strtok(cmdtext, idxzcmd);
			tmpzcmd2 = strtok(cmdtext, idxzcmd);
			tmpzcmd3 = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{

				SendClientMessage(playerid, COR_GRAD2, "USE: /setarorgvip [org] [tipo] [dias]");
				return 1;
			}
			org = strval(tmpzcmd);
			if(org < 1 || org > 26)
			{

				SendClientMessage(playerid, COR_GRAD2, "Orgs 1 á 26.");
				return 1;
			}
			tipo = strval(tmpzcmd2);
			if(tipo < 1 || tipo > 3)
			{

				SendClientMessage(playerid, COR_GRAD2, "Tipos: 1 (Bronze), 2 (Prata), 3 (Ouro).");
				return 1;
			}
			new lolz[7];
			if(tipo == 1)
			{
			    lolz = "Bronze";
			}
			if(tipo == 2)
			{
			    lolz = "Prata";
			}
			if(tipo == 3)
			{
			    lolz = "Ouro";
			}
			dias = strval(tmpzcmd3);
			if(PlayerInfo[playerid][pAdmin] >= 1341)
			{

				new arquivo[64];
				getdate(year, month, day);
				format(arquivo, sizeof(arquivo), Pasta_ORGVIP, org);
				if(DOF2_FileExists(arquivo))
				{

					DOF2_SetInt(arquivo,"Tipo",tipo);
					DOF2_SetInt(arquivo,"Dias",dias);
					DOF2_SetInt(arquivo,"Data",day);
					format(gstring, sizeof(gstring), "AdmCmd: %s Ativou uma ORG VIP para a ORG:[%s], Tipo[%s], Dias[%d].",PlayerName(playerid),getOrgName(org),lolz,dias);
					ABroadCast(COR_AMARELO,gstring,1);
				}
				else
				{

					DOF2_CreateFile(arquivo);
					DOF2_SetInt(arquivo,"Tipo",tipo);
					DOF2_SetInt(arquivo,"Dias",dias);
					DOF2_SetInt(arquivo,"Data",day);
					format(gstring, sizeof(gstring), "AdmCmd: %s Ativou uma ORG VIP para a ORG:[%s], Tipo[%s], Dias[%d].",PlayerName(playerid),getOrgName(org),lolz,dias);
					ABroadCast(COR_AMARELO,gstring,1);
				}
				DOF2_SaveFile();
				LoadOrgs();
				return 1;
			}
			else
			{

				SendClientMessage(playerid, COR_GRAD1, "Você não tem permissao para usar esse comando !");
			}
		}
		return 1;
	}
	CMD:agendarcoins(playerid, params[])
	{
		if(IsPlayerConnected(playerid))
		{
			new playa[64];
			new Moedas;
			playa = strtok(cmdtext, idxzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			tmpzcmd2 = strtok(cmdtext, idxzcmd);
			tmpzcmd3 = strtok(cmdtext, idxzcmd);
			if(!strlen(playa))
			{
				SendClientMessage(playerid, COR_GRAD2, "Use: /agendarcoins [nomejogador] [Coins]");
				return 1;
			}
			Moedas = strval(tmpzcmd);
			if(PlayerInfo[playerid][pAdmin] >= 1342)
			{
				if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				new arquivo[64];
				format(arquivo, sizeof(arquivo), Pasta_Contas,playa);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(!DOF2_FileExists(arquivo))
				{
					SendClientMessage(playerid, COR_GRAD1, "Conta Inexistente!");
					return true;
				}
				format(arquivo, sizeof(arquivo), Pasta_Moedas,playa);
				if(DOF2_FileExists(arquivo))
				{
					DOF2_SetString(arquivo,"Admin",PlayerName(playerid));
					DOF2_SetInt(arquivo,"Coins",Moedas);
					format(gstring,sizeof(gstring), "[%d/%d/%d][Coins agendadas]%s agendou Coins no jogador: %s, Coins [%d].", day, month, year, sendername, playa, Moedas);
					ABroadCast(COR_AMARELO,gstring,1);
					MoedasAgendadasLog(gstring);
				}
				else
				{
					DOF2_CreateFile(arquivo);
					DOF2_SetString(arquivo,"Admin",PlayerName(playerid));
					DOF2_SetInt(arquivo,"Coins",Moedas);
					format(gstring,sizeof(gstring), "[%d/%d/%d][Coins agendadas]%s agendou Coins no jogador: %s, Coins [%d].", day, month, year, sendername, playa, Moedas);
					ABroadCast(COR_AMARELO,gstring,1);
					MoedasAgendadasLog(gstring);
				}
				DOF2_SaveFile();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não tem permissao para usar esse comando !");
			}
		}
		return 1;
	}
	CMD:agendar(playerid, params[])
    {
    	if(IsPlayerConnected(playerid))
    	{
    		new playa[64];
    		new tempo, iddenuncia, avisos;
    		playa = strtok(cmdtext, idxzcmd);
    		tmpzcmd = strtok(cmdtext, idxzcmd);
    		tmpzcmd2 = strtok(cmdtext, idxzcmd);
    		tmpzcmd3 = strtok(cmdtext, idxzcmd);
            if(!strlen(playa))
    		{
    			SendClientMessage(playerid, COR_GRAD2, "Use: /agendar [nomejogador] [minutos] [iddenuncia] [avisos]");
    			return 1;
    		}
    		tempo = strval(tmpzcmd);
    		iddenuncia = strval(tmpzcmd2);
    		avisos = strval(tmpzcmd3);
    		if(PlayerInfo[playerid][pAdmin] >= 3)
    		{
                if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
    			{
    				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
    				return 1;
    			}
                new arquivo[64];
                format(arquivo, sizeof(arquivo), Pasta_Contas,playa);
                GetPlayerName(playerid, sendername, sizeof(sendername));
                if(!DOF2_FileExists(arquivo))
                {
                    SendClientMessage(playerid, COR_GRAD1, "Conta Inexistente!");
                    return true;
                }
                format(arquivo, sizeof(arquivo), Pasta_Agendados,playa);
                if(DOF2_FileExists(arquivo))
                {
                    DOF2_SetString(arquivo,"Admin",PlayerName(playerid));
                	DOF2_SetInt(arquivo,"Tempo",tempo);
                	DOF2_SetInt(arquivo,"Denuncia",iddenuncia);
                	DOF2_SetInt(arquivo,"Avisos",avisos);
                	format(gstring,sizeof(gstring), "[%d/%d/%d][Agendar]%s agendou no jogador: %s, Minutos[%d] Denuncia[%d] Avisos[%d].", day, month, year, sendername, playa, tempo, iddenuncia, avisos);
				    ABroadCast(COR_AMARELO,gstring,1);
				    CarandiruAgendado(gstring);
                }
                else
                {
                    DOF2_CreateFile(arquivo);
                    DOF2_SetString(arquivo,"Admin",PlayerName(playerid));
                	DOF2_SetInt(arquivo,"Tempo",tempo);
                	DOF2_SetInt(arquivo,"Denuncia",iddenuncia);
                	DOF2_SetInt(arquivo,"Avisos",avisos);
                	format(gstring,sizeof(gstring), "[%d/%d/%d][Agendar]%s agendou no jogador: %s, Minutos[%d] Denuncia[%d] Avisos[%d].", day, month, year, sendername, playa, tempo, iddenuncia, avisos);
					ABroadCast(COR_AMARELO,gstring,1);
					CarandiruAgendado(gstring);
           		}
           		DOF2_SaveFile();
                return 1;
            }
            else
    		{
    		    SendClientMessage(playerid, COR_GRAD1, "Você não tem permissao para usar esse comando !");
    		}
    	}
    	return 1;
	}
	CMD:desagendar(playerid, params[])
    {
    	if(IsPlayerConnected(playerid))
    	{
    		new playa[64];
    		playa = strtok(cmdtext, idxzcmd);
            if(!strlen(playa))
    		{
    			SendClientMessage(playerid, COR_GRAD2, "Use: /desagendar [ Nick ]");
    			return 1;
    		}
    		if(PlayerInfo[playerid][pAdmin] >= 3)
    		{
                if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
    			{
    				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
    				return 1;
    			}
                new arquivo[64];
                format(arquivo, sizeof(arquivo), Pasta_Contas,playa);
                GetPlayerName(playerid, sendername, sizeof(sendername));
                if(!DOF2_FileExists(arquivo))
                {
                    SendClientMessage(playerid, COR_GRAD1, "Conta Inexistente!");
                    return true;
                }
                format(arquivo, sizeof(arquivo), Pasta_Agendados,playa);
                if(DOF2_FileExists(arquivo))
                {
                	DOF2_RemoveFile(arquivo);
                	format(gstring,sizeof(gstring),"Admin: %s retirou o agendamento automático de carandiru da conta: %s.",sendername, playa);
				    ABroadCast(COR_AMARELO,gstring,1);
				    CarandiruDesagendados(gstring);
                }
                return 1;
            }
            else
    		{
    		    SendClientMessage(playerid, COR_GRAD1, "Você não tem permissao para usar esse comando !");
    		}
    	}
    	return 1;
	}
	CMD:sethora(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /sethora [hora do dia] (0-23)");
				return 1;
			}
			new hour2;
			hour2 = strval(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
	            SetWorldTime(hour2);
				format(gstring, sizeof(gstring), "Tempo Definido Para %d Horas.", hour2);
				SendClientMessageToAll(COR_GRAD1, gstring);
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar o comando!");
			}
		}
		return 1;
	}
	CMD:iniciarloteria(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 1337)
	        {
	            if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
	            format(gstring, sizeof(gstring), "Loteria: Ja comecou a loteria.");
	            SendClientMessageToAll(COR_BRANCO, gstring);
	            new rand = random(80);
	            if(rand < 77) { rand += 3; }
	            Lotto(rand);
	        }
	        else
	        {
	            SendClientMessage(playerid, COR_GREY, "Você não é um admin !");
	            return 1;
	        }
	    }
		return 1;
	}
	CMD:iniciarhay(playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdmin] < 1337)return SendClientMessage(playerid, COR_GRAD1, " Voce não pode usar este comando!");
		if(hayiniciado)
	 		return SendClientMessage(playerid, COR_GRAD1, "Hay ja iniciado, use /destruirhay primeiro!");
        moneyHay = 100000;
		GivePlayerMoney(playerid, -moneyHay);
		hayiniciado = 1;
		RestartEveryThing();
		for(new i; i != MAX_PLAYERS; i++)
		{
		    JoinedHay[i] = 0;
		    ShowPlayerDialog(i, 335, DIALOG_STYLE_MSGBOX, "Evento Hay", "Você deseja ir ao evento ?", "Sim", "Nao");
      		SendClientMessage(i, COR_LIGHTBLUE, "Admin está chamando todos para um evento de FallOut!");
        	SendClientMessage(i, COR_LIGHTBLUE, "Clique em Sim para ir ou Não Para Continuar aonde está !");
		}
	}
	CMD:destruirhay(playerid, params[])
	{
		if(PlayerInfo[playerid][pAdmin] < 1337)return SendClientMessage(playerid, COR_GRAD1, " Voce não pode usar este comando!");
		hayiniciado = 0;
		DestroyHay();
		for(new i; i != MAX_PLAYERS; i++)
		{
		    JoinedHay[i] = 0;
		}
		return 1;
	}
	CMD:criarfall(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 1337)
	        {
	            if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
                if(falliniciado)return SendClientMessage(playerid, COR_GRAD1, " Fallout já criado,  destrua ou /iniciarfall para iniciar!");
		        loadFall();
	            falliniciado = 1;
		        ForPlayers(i)
		        {
		            SetPVarInt(i, "inFall", 0);
                    ShowPlayerDialog(i, 333, DIALOG_STYLE_MSGBOX, "Evento FallOut", "Você deseja ir ao evento ?", "Sim", "Nao");
                    SendClientMessage(i, COR_LIGHTBLUE, "Admin está chamando todos para um evento de FallOut!");
                    SendClientMessage(i, COR_LIGHTBLUE, "Clique em Sim para ir ou Não Para Continuar aonde está !");
		        }
	            fallstart = 0;
	            SetTimer("IniciarFalloutA", 15000, false);
	        }
	        else
	        {
	            SendClientMessage(playerid, COR_GREY, "Você não tem permissão para usar esse comando!");
	            return 1;
	        }
	    }
		return 1;
	}
	CMD:iniciarfall(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 1337)
	        {
	            if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
	            if(!falliniciado)return SendClientMessage(playerid, COR_GRAD1, " Fallout não criado, digite /criarfall para criar!");

		        KillTimer(fallTimer);

		        fallTimer = SetTimer("fallfunc", 3000, 1);

		        GameTextForAll("~p~Fallout iniciado!", 5000, 1);

		        new Stri[128];

		        format(Stri, sizeof Stri, "O admin %s iniciou o FallOut, Boa Sorte aos participantes!", PlayerName(playerid));
		        SendClientMessageToAll(COR_AMARELO, Stri);

	            fallCount = totalo;

	            fallstart = 1;
	        }
	        else
	        {
	            SendClientMessage(playerid, COR_GREY, "Você não tem permissão para usar esse comando!");
	            return 1;
	        }
	    }
		return 1;
	}
	CMD:destruirfall(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 1337)
	        {
	            if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
		        fallDestroy();
	        }
	        else
	        {
	            SendClientMessage(playerid, COR_GREY, "Você não tem permissão para usar esse comando!");
	            return 1;
	        }
	    }
		return 1;
	}
	CMD:editar(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new editarnome[MAX_PLAYER_NAME];
			new editarnome2[MAX_PLAYER_NAME];
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
                SendClientMessage(playerid, COR_GRAD1, "USE: /editar [ ID ] [STATUS] [QUANTIDADE]");
                SendClientMessage(playerid, COR_GRAD4, "|1 Level |2 Horas Jogadas |3 Conta Bancária |4 Nº Telefone |5 Respeito");
                SendClientMessage(playerid, COR_GRAD3, "|6 Chave Casa |7 ChaveBizz |8 Detetive |9 Advogado |10 Mecânico");
                SendClientMessage(playerid, COR_GRAD2, "|11 V.Drogas |12 Materiais |13 Maconha |14 Cocaina |15 Crack");
                SendClientMessage(playerid, COR_GRAD2, "|16 Lsd |17 Avisos |18 P.Neg Carteira |19 VIP |20 Sócio");
                SendClientMessage(playerid, COR_GRAD2, "|21 Dinamites |22 Crimes Cometidos |23 Dias VIP |24 Mudanças de Nick");
                SendClientMessage(playerid, COR_GRAD2, "|25 Carro VIP |26 Carro Fixo |27 Coins | 28 Sementes De Maconha");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
            if(IsPlayerConnected(giveplayeridzcmd))
	    	{
	    	    GetPlayerName(playerid,editarnome,sizeof(editarnome));
	    	    GetPlayerName(giveplayeridzcmd,editarnome2,sizeof(editarnome2));
	    	    if(giveplayeridzcmd != INVALID_PLAYER_ID)
	    	    {
					tmpzcmd = strtok(cmdtext, idxzcmd);
					if(!strlen(tmpzcmd))
					{
                        SendClientMessage(playerid, COR_GRAD1, "USE: /editar [ ID ] [STATUS] [QUANTIDADE]");
                        SendClientMessage(playerid, COR_GRAD4, "|1 Level |2 Horas Jogadas |3 Conta Bancária |4 Nº Telefone |5 Respeito");
                        SendClientMessage(playerid, COR_GRAD3, "|6 Chave Casa |7 ChaveBizz |8 Detetive |9 Advogado |10 Mecânico");
                        SendClientMessage(playerid, COR_GRAD2, "|11 V.Drogas |12 Materiais |13 Maconha |14 Cocaina |15 Crack");
                        SendClientMessage(playerid, COR_GRAD2, "|16 Lsd |17 Avisos |18 P.Neg Carteira |19 VIP |20 Sócio");
                        SendClientMessage(playerid, COR_GRAD2, "|21 Dinamites |22 Crimes Cometidos |23 Dias VIP |24 Mudanças de Nick");
                        SendClientMessage(playerid, COR_GRAD2, "|25 Carro VIP |26 Carro Fixo |27 Coins | 28 Sementes De Maconha");
						return 1;
					}
					new stat;
					stat = strval(tmpzcmd);
					tmpzcmd = strtok(cmdtext, idxzcmd);
					if(!strlen(tmpzcmd))
					{
						SendClientMessage(playerid, COR_GRAD1, "USE: /editar [ ID ] [STATUS] [QUANTIDADE]");
                        SendClientMessage(playerid, COR_GRAD4, "|1 Level |2 Horas Jogadas |3 Conta Bancária |4 Nº Telefone |5 Respeito");
                        SendClientMessage(playerid, COR_GRAD3, "|6 Chave Casa |7 ChaveBizz |8 Detetive |9 Advogado |10 Mecânico");
                        SendClientMessage(playerid, COR_GRAD2, "|11 V.Drogas |12 Materiais |13 Maconha |14 Cocaina |15 Crack");
                        SendClientMessage(playerid, COR_GRAD2, "|16 Lsd |17 Avisos |18 P.Neg Carteira |19 VIP |20 Sócio");
                        SendClientMessage(playerid, COR_GRAD2, "|21 Dinamites |22 Crimes Cometidos |23 Dias VIP |24 Mudanças de Nick");
                        SendClientMessage(playerid, COR_GRAD2, "|25 Carro VIP |26 Carro Fixo |27 Coins | 28 Sementes De Maconha");
                        return 1;
					}
					new quantidade;
					quantidade = strval(tmpzcmd);
					if (PlayerInfo[playerid][pAdmin] >= 1337)
					{
					    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
							return 1;
						}
						if(PlayerInfo[giveplayeridzcmd][pAdmin] == 1342 && PlayerInfo[playerid][pAdmin] != 1342)
						{
							 SendClientMessage(playerid, COR_GRAD1, "Você não pode editar o Dono/Scripter !");
							 return 1;
						}
						if(giveplayeridzcmd == playerid && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não pode se editar");
							return 1;
						}
						switch (stat)
						{
							case 1:
							{
								PlayerInfo[giveplayeridzcmd][pLevel] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou level:[%d] em: %s", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
								ScoreLevel(giveplayeridzcmd);
								EditarLog(gstring);
							}
							case 2:
							{
								PlayerInfo[giveplayeridzcmd][pConnectTime] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou horas jogadas:[%d] em: %s", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							case 3:
							{
								if(PlayerInfo[playerid][pAdmin] < 1340)
								{
									 if(quantidade > 500000)
									 {
										  SendClientMessage(playerid, COR_GRAD1, "Apenas um Administrador Dono, pode editar um valor mais alto que 500000 !");
										  return 1;
									 }
								}
								new ValorAntigo;
                                ValorAntigo = PlayerInfo[giveplayeridzcmd][pConta];
								PlayerInfo[giveplayeridzcmd][pConta] = quantidade;
								new logs[256];
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou conta bancária:[%d] em: %s", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                format(logs, sizeof(logs), "[EDITAR] Admin %s editou a conta bancária:[%d] em: %s(Valor bancário antigo era de %d)",PlayerName(playerid), quantidade, ValorAntigo);
								EditarLog(logs);
							}
							case 4:
							{
								PlayerInfo[giveplayeridzcmd][pPnumber] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou número:[%d] em: %s", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							case 5:
							{
								PlayerInfo[giveplayeridzcmd][pExp] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou respeito:[%d] em: %s", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							case 6:
							{
								PlayerInfo[giveplayeridzcmd][pPHousekey] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou chave da casa:[%d] em: %s", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							case 7:
							{
								PlayerInfo[giveplayeridzcmd][pPbiskey] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou chave da empresa:[%d] em: %s", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							case 8:
							{
								PlayerInfo[giveplayeridzcmd][pDetSkill] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou detetive:[%d] em: %s", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							case 9:
							{
								PlayerInfo[giveplayeridzcmd][pLawSkill] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou advogado:[%d] em: %s", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							case 10:
							{
								PlayerInfo[giveplayeridzcmd][pMechSkill] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou mecânico:[%d] em: %s", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							case 11:
							{
								PlayerInfo[giveplayeridzcmd][pDrogasSkill] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou nivel de drogas:[%d] em: %s", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							case 12:
							{
								PlayerInfo[giveplayeridzcmd][pMats] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou materiais:[%d] em: %s", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							case 13:
							{
								PlayerInfo[giveplayeridzcmd][pMaconha] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou maconha:[%d] em: %s", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							case 14:
							{
								PlayerInfo[giveplayeridzcmd][pCocaina] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou cocaína:[%d] em: %s", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							case 15:
							{
								PlayerInfo[giveplayeridzcmd][pCrack] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou crack:[%d] em: %s", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							case 16:
							{
								PlayerInfo[giveplayeridzcmd][pLsd] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou lsd:[%d] em: %s", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							case 17:
							{
								PlayerInfo[giveplayeridzcmd][pAvisos] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou avisos:[%d] em: %s", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							case 18:
							{
								PlayerInfo[giveplayeridzcmd][pPontos] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou p.negativos na carteira:[%d] em: %s", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							case 19:
							{
							    if(quantidade > 2) { return 1; }
								PlayerInfo[giveplayeridzcmd][pVIP] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou vip:[%d] em: %s", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							case 20:
							{
							    if(quantidade > 3) { return 1; }
							    if(PlayerInfo[playerid][pAdmin] != 1342) return 1;
								PlayerInfo[giveplayeridzcmd][pSocio] = quantidade;
								if(PlayerInfo[giveplayeridzcmd][pSocio] < 3)
								{
								    PlayerInfo[giveplayeridzcmd][pVIP] = quantidade;
								}
								else
								{
								    PlayerInfo[giveplayeridzcmd][pVIP] = 2;
								}
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou sócio:[%d] em: %s.", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							case 21:
							{
								PlayerInfo[giveplayeridzcmd][pDina] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou dinamites:[%d] em: %s.", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							case 22:
							{
								PlayerInfo[giveplayeridzcmd][pCrimes] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou crimes cometidos:[%d] em: %s.", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							case 23:
							{
							    if(PlayerInfo[playerid][pAdmin] != 1342) return 1;
								PlayerInfo[giveplayeridzcmd][pDiaVIP] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou dias vip:[%d] em: %s", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							case 24://
							{
							    if(PlayerInfo[playerid][pAdmin] != 1342) return 1;
								MudarNick[giveplayeridzcmd] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou mudanças de nick:[%d] em: %s.", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							case 25://
							{
								PlayerInfo[giveplayeridzcmd][pCarKey] = quantidade;
								PlayerInfo[giveplayeridzcmd][pOldCarKey] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou carro vip:[%d] em: %s.", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							case 26://
							{
								PlayerInfo[giveplayeridzcmd][pCarFixo] = quantidade;
								PlayerInfo[giveplayeridzcmd][pOldCarFixo] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou carro fixo:[%d] em: %s.", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							case 27://
							{
							    if(PlayerInfo[playerid][pAdmin] != 1342) return 1;
								PlayerInfo[giveplayeridzcmd][pCoins] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou Coins:[%d] em: %s.", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							case 28://
							{
								PlayerInfo[giveplayeridzcmd][pSementes] = quantidade;
								format(gstring, sizeof(gstring), "[EDITAR] Admin %s editou Sementes:[%d] em: %s.", PlayerName(playerid), quantidade, PlayerName(giveplayeridzcmd));
                                EditarLog(gstring);
							}
							default:
							{
							    return SendClientMessage(playerid, COR_AMARELO, "Código inválido!");
							}

						}
						ABroadCast(COR_AMARELO,gstring,1);
					}
					else
					{
						SendClientMessage(playerid, COR_GRAD1, "Você não esta autorizado a usar este comando!");
					}
				}
			}
		}
		return 1;
	}
	CMD:setarint(playerid, params[])//)
    {
         if(IsPlayerConnected(playerid))
         {
              if(PlayerInfo[playerid][pAdmin] < 1)
              {
                   SendClientMessage(playerid, COR_GRAD1, "Você não tem autorização para usar esse comando.");
                   return 1;
              }
              if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
			  {
                   SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				   return 1;
			  }
              tmpzcmd = strtok(cmdtext, idxzcmd);
              if(!strlen(tmpzcmd))
              {
                   SendClientMessage(playerid, COR_GRAD2, "USE: /setarint [playerid] [intid]");
                   return 1;
              }
              new para1;
              new intid;
              para1 = ReturnUser(tmpzcmd);
              tmpzcmd = strtok(cmdtext, idxzcmd);
              if(!strlen(tmpzcmd))
              {
                   SendClientMessage(playerid, COR_GRAD2, "USE: /setarint [playerid] [intid]");
                   return 1;
              }
              intid = strval(tmpzcmd);
              if(IsPlayerConnected(para1))
              {
                   if(para1 != INVALID_PLAYER_ID)
                   {
                        format(gstring, sizeof(gstring), "* Você colocou o(a) %s no interior [%d].", PlayerName(para1), intid);
                        SendClientMessage(playerid, COR_LIGHTRED, gstring);
                        format(gstring, sizeof(gstring), "Admin %s setou o interior [%d] em você.",PlayerName(playerid), intid);
			            SendClientMessage(para1, COR_LIGHTRED, gstring);
				        SetPlayerInterior(playerid,intid);
						InteriorAtual[playerid] = intid;
                   }
              }
         }
	}
	CMD:meavalie(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1)
			{
			    SendClientMessage(playerid, COR_GRAD2, "Você não tem permissão para usar esse comando!");
				return 1;
			}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /meavalie [playerid/Parte-do-Nick]");
				return 1;
			}
			if(ChatAtendimento[playerid] == 0)
			{
			    SendClientMessage(playerid, COR_GRAD2, "Você não pode mandar avaliação sem estar em um atendimento");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmpzcmd);
			if(para1 == playerid)
			{
			    SendClientMessage(playerid, COR_GRAD2, "Você não pode se avaliar");
				return 1;
			}
			if(PlayerInfo[para1][pAdmin] > 0 && PlayerInfo[para1][pAdmin] < 1341)
			{
			    SendClientMessage(playerid, COR_GRAD2, "Administradores não podem se avaliar!");
				return 1;
			}
			if(IDAvaliou[playerid] == para1)
			{
			    SendClientMessage(playerid, COR_GRAD2, "Você Já avaliou este player aguarde terminar o seu atendimento.");
				return 1;
			}
   			if(para1 != INVALID_PLAYER_ID)
      		{
      		    IDAvaliou[playerid] = para1;
      		    SendClientMessage(playerid, COR_GRAD2, "ATENÇÃO ADM! Não abuse desse comando, ou você será punido severamente!");
   				PedirAvaliar[para1] = playerid;
        		format(gstring, sizeof gstring, "Você pediu para o player %s lhe avaliar, aguarde respostas.",PlayerName(para1));
		    	SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
		    	ShowPlayerDialog(para1, 9282, DIALOG_STYLE_LIST, "Avaliar","Nota 1\nNota 2\nNota 3\nNota 4\nNota 5\nNota 6\nNota 7\nNota 8\nNota 9\nNota 10","Avaliar", "Cancelar");
			}
		}
		return 1;
	}
	CMD:desconvidar(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /desconvidar [playerid/Parte-do-Nick]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmpzcmd);
			if (PlayerInfo[playerid][pLider] >= 1 || PlayerInfo[playerid][pCargo] == 5)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(PlayerInfo[para1][pMembro] != 0 || PlayerInfo[para1][pLider] != 0)
					{
						SendClientMessage(playerid, COR_GREY, "Este player já participa de Org/Gang/Mafia.");
						return 1;
					}
					if(convidado[para1] == 0)
					{
						SendClientMessage(playerid, COR_AMARELO, "Você não convidou este jogador para a sua organização!");
						return 1;
					}
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(gstring, sizeof(gstring), "* VOcê foi desconvidado da organização: %s", NomeORG(playerid));
						SendClientMessage(para1, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "* Você desconvidou %s para sua organização.", giveplayerzcm);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						convidado[para1] = 0;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GREY, "Somente líderes podem usar este comando !");
			}
		}
		return 1;
	}
	CMD:convidar(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /convidar [playerid/Parte-do-Nick]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmpzcmd);
			if (PlayerInfo[playerid][pLider] > 0 || PlayerInfo[playerid][pCargo] == 5)
			{
			    new lolz = GetPlayerOrg(playerid);
	    		if(TemVaga(lolz) == 0)
	    		{
					SendClientMessage(playerid, COR_GRAD1, "Não há mais vagas na lista use /limparvaga primeiro.");
					return 1;
	    		}
			    if(IsPlayerConnected(para1))
			    {
			        if(PlayerInfo[para1][pMembro] != 0 || PlayerInfo[para1][pLider] != 0)
					{
						SendClientMessage(playerid, COR_GREY, "Este player já participa de Org/Gang/Mafia.");
						return 1;
					}
					if(WantedLevel[para1] != 0)
					{
						SendClientMessage(playerid, COR_AMARELO, "Você não pode convidar um procurado !");
						return 1;
					}
					if(PlayerInfo[para1][pLevel] < 2)
					{
                        SendClientMessage(playerid, COR_AMARELO, "Você não pode convidar um novato !");
						return 1;
					}
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(gstring, sizeof(gstring), "* Jogador: %s lhe convidou para entrar para a org: %s (digite /aceitar convite).", PlayerName(playerid), NomeORG(playerid));
						SendClientMessage(para1, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "* Você convidou %s para sua organização: %s.", giveplayerzcm,NomeORG(playerid));
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						convidado[para1] = 1;
						InviteOffer[para1] = playerid;
						InviteJob[para1] = lolz;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GREY, "Somente líderes podem usar este comando !");
			}
		}
		return 1;
	}
	CMD:demitir(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "/demitir [ID/NICK] [Motivo]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmpzcmd);
			if (PlayerInfo[playerid][pLider] > 0 || PlayerInfo[playerid][pCargo] == 5)
			{
			    new lolz = GetPlayerOrg(playerid);
			    if(PlayerInfo[para1][pMembro] != lolz)
				{
				    SendClientMessage(playerid, COR_GREY, "Você não pode demitir quem não é da sua org.");
				    return 1;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
					    if (PlayerInfo[para1][pMembro] > 0)
					    {
							GetPlayerName(para1, giveplayerzcm, sizeof(giveplayerzcm));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
							{
								idxzcmd++;
							}
							new offset = idxzcmd;
							new result[64];
							while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
							{
								result[idxzcmd - offset] = cmdtext[idxzcmd];
								idxzcmd++;
							}
							result[idxzcmd - offset] = EOS;
							if(!strlen(result))
							{
								SendClientMessage(playerid, COR_GRAD2, "USE: /Demitir [ID/NICK] [Motivo]");
								return 1;
							}
							DemitirInfoOrg(PlayerName(para1));
							format(gstring, sizeof(gstring), "* Você foi demitido pelo líder %s Motivo: %s.", sendername, (result));
							SendClientMessage(para1, COR_LIGHTBLUE, gstring);
							SendClientMessage(para1, COR_LIGHTBLUE, "* Agora você é um civil novamente.");
				            gTeam[para1] = 3;
							PlayerInfo[para1][pTeam] = 3;
							PlayerInfo[para1][pMembro] = 0;
							PlayerInfo[para1][pCargo] = 0;
            				SetSpawnInfo(para1, gTeam[para1], PlayerInfo[para1][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
							MedicBill[para1] = 0;
							SpawnPlayer(para1);
							format(gstring, sizeof(gstring), "Você demitiu %s, Motivo: %s.", giveplayerzcm, result);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							if(PlayerInfo[para1][pSex] == 1){SetPlayerSkin(para1, 119); PlayerInfo[para1][pSkin] = 119; } else { SetPlayerSkin(para1, 216); PlayerInfo[para1][pSkin] = 216; }
					  	    return 1;
						}
					}
				}
			}//not connected
		}
		else
		{
			SendClientMessage(playerid, COR_GRAD1, "Você não é um líder!");
		}
		return 1;
	}
//-----------------------------------{ IP }-----------------------------------------------------
    CMD:ip(playerid, params[])//)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 4)
			{
		         tmpzcmd = strtok(cmdtext, idxzcmd);
			     if(!strlen(tmpzcmd))
			     {
				     SendClientMessage(playerid, COR_AMARELO, "Use: /ip [ID]");
				     SendClientMessage(playerid, COR_AMARELO, "Comando Para Ver o Ip Do Jogador.");
				     return 1;
			     }
			     giveplayeridzcmd = ReturnUser(tmpzcmd);
			     if(PlayerInfo[giveplayeridzcmd][pAdmin] >= 1340 && PlayerInfo[playerid][pAdmin] != 1342)
		         {
			         SendClientMessage(playerid, COR_GRAD1, "Você não pode ver o ip de um Admin Dono !");
			         return 1;
		         }
			     GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
			     if(IsPlayerConnected(giveplayeridzcmd))
			     {
                      if(giveplayeridzcmd != INVALID_PLAYER_ID)
			          {
                           new ip[128];
				           GetPlayerIp(giveplayeridzcmd,ip,128);
				           GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
				           format(gstring, sizeof(gstring), "Jogador: %s | IP: %s", giveplayerzcm,ip);
				           SendClientMessage(playerid,COR_LIGHTBLUE, gstring);
				      }
			     }
			     else
			     {
				      SendClientMessage(playerid, COR_GRAD1, "Esse não é um jogador ativo !");
				      return 1;
				 }
			}
			else
			{
                SendClientMessage(playerid, COR_VERMELHO, "Você não tem permissão para usar esse comando.");
	    	    return 1;
			}
		}
		return 1;
    }
    CMD:ultimologin(playerid, params[])
	{
		if (IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] < 1337)
			{
		 		return  1;
			}
			if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			tmpzcmd = strtok(cmdtext,idxzcmd);
		    if(!strlen(tmpzcmd))
		    {
		        SendClientMessage(playerid,COR_GRAD1,"USE: /ultimologin [Nome do Jogador]");
		        return 1;
   			}
			format(gstring, sizeof(gstring), "[BPL LOGIN]:{FFFFFF} O último login de %s, foi em %s.", tmpzcmd, getUltimoLogin(tmpzcmd));
			SendClientMessage(playerid, COR_LIGHTRED, gstring);
		}
		return true;
	}
	CMD:desbanip(playerid, params[])
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
		    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
		    tmpzcmd = strtok(cmdtext,idxzcmd);
		    if(!strlen(tmpzcmd))
		    {
		        SendClientMessage(playerid,COR_GRAD1,"USE: /desbanip [Ip do Jogador]");
		        return 1;
   			}
   			new gstring2[264];
			format(gstring, 128, Pasta_IPBanidos, tmpzcmd);
			format(gstring2, 128, Pasta_IPBanidosTemp, tmpzcmd);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(DOF2_FileExists(gstring))
			{
			    //desban rcon(samp.ban).
       			format(gstring, 30, "unbanip %s", tmpzcmd);
	            SendRconCommand(gstring);
	            SendRconCommand("reloadbans");
	            //
			    fremove(gstring);
				format(gstring, 128, "AdmCmd: O admin %s desbaniu o IP %s", sendername,tmpzcmd);
				ABroadCast(COR_AMARELO,gstring,1);
				Desbanlog(gstring);
		        return 1;
			}
  			else if(DOF2_FileExists(gstring2))
			{
			    //desban rcon(samp.ban).
    			format(gstring, 30, "unbanip %s", tmpzcmd);
	            SendRconCommand(gstring);
	            SendRconCommand("reloadbans");
	            //
			    fremove(gstring2);
				format(gstring, 128, "AdmCmd: O admin %s desbaniu o IP (temporariamente banido) %s", sendername,tmpzcmd);
				ABroadCast(COR_AMARELO,gstring,1);
				Desbanlog(gstring);
		        return 1;
			}
			else
			{
   				//desban rcon(samp.ban).
       			format(gstring, 30, "unbanip %s", tmpzcmd);
	            SendRconCommand(gstring);
	            SendRconCommand("reloadbans");
	            //
		        format(gstring, 128, "IP:[%d] não encontrado no banco de dados, ou acabou de ser desban pelo rcon!", tmpzcmd);
		        SendClientMessage(playerid, COR_GRAD1, gstring);
		        return 1;
			}
		}
		return 1;
	}
	CMD:desbanconta(playerid, params[])
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
		    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
		    tmpzcmd = strtok(cmdtext,idxzcmd);
		    if(!strlen(tmpzcmd))
		    {
		        SendClientMessage(playerid,COR_GRAD1,"USE: /desbanir [Nick do Jogador]");
		        return 1;
   			}
   			new arquivo[64];
			format(arquivo, sizeof(arquivo), Pasta_Banidos, tmpzcmd);
			new arquivo2[64];
			format(arquivo2, sizeof(arquivo2), Pasta_BanidosTemp,tmpzcmd);
   			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(DOF2_FileExists(arquivo))
			{
			   	format(gstring, 128, "AdminAviso: O admin %s desbaniu %s.", sendername,tmpzcmd);
				ABroadCast(COR_AMARELO,gstring,1);
				DOF2_RemoveFile(arquivo);
				Desbanlog(gstring);
			}
   			else if(DOF2_FileExists(arquivo2))
			{
			   	format(gstring, 128, "AdmCmd: %s desbaniu (temporariamente banido) %s.", sendername,tmpzcmd);
				ABroadCast(COR_AMARELO,gstring,1);
				DOF2_RemoveFile(arquivo2);
			    Desbanlog(gstring);
			}
			else
			{
   				format(gstring, 128, "Nick:[%s] não encontrado no banco de dados !", tmpzcmd);
		        SendClientMessage(playerid, COR_GRAD1, gstring);
		        return 1;
			}
		}
		return 1;
	}
	CMD:pegarlider(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] < 1339)
			{
				SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar este comando !");
				return 1;
			}
			if(AdminTrabalhando[playerid] < 1  && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /pegarlider [org]");
				return 1;
			}
			new level;
			level = strval(tmpzcmd);
			if(level > 26 || level < 1) { SendClientMessage(playerid, COR_GREY, "Lideres de 1 a 30"); return 1; }
			if(PlayerInfo[playerid][pLider] != 0 && PlayerInfo[playerid][pMembro] != 0)
			{
			    SendClientMessage(playerid, COR_GRAD1, "Este player já participa de uma organização!");
			    return 1;
			}
		    if(IsPlayerConnected(playerid))
		    {
		        if(playerid != INVALID_PLAYER_ID)
		        {
                    skincop[playerid] = GetPlayerSkin(playerid);
					if(level == 1) { PlayerInfo[playerid][pSkin] = 265; }//Policia Militar
					else if(level == 2)	{ PlayerInfo[playerid][pSkin] = 285; }//BOPE
					else if(level == 3) { PlayerInfo[playerid][pSkin] = 73; }//Exército
					else if(level == 4) { PlayerInfo[playerid][pSkin] = 70; }//SA:MU
					else if(level == 5) { PlayerInfo[playerid][pSkin] = 115; }//Los Aztecas
					else if(level == 6) { PlayerInfo[playerid][pSkin] = 249; }//Taliban
					else if(level == 7) { PlayerInfo[playerid][pSkin] = 147; }//Prefeito
					else if(level == 8) { PlayerInfo[playerid][pSkin] = 294; }//Hitmans
					else if(level == 9) { PlayerInfo[playerid][pSkin] = 227; }//Rede Globo
					else if(level == 10) { PlayerInfo[playerid][pSkin] = 61; }//Taxistas
					else if(level == 11) { PlayerInfo[playerid][pSkin] = 143; }//PCC
					else if(level == 12) { PlayerInfo[playerid][pSkin] = 17; }//Rota
                    else if(level == 13){ PlayerInfo[playerid][pSkin] = 285; }//GATE
                    else if(level == 14) { PlayerInfo[playerid][pSkin] = 50; }//Mecanicos
					else if(level == 15) { PlayerInfo[playerid][pSkin] = 270; }//Groove
                    else if(level == 16) { PlayerInfo[playerid][pSkin] = 123; }//AlQaeda
					else if(level == 17) { PlayerInfo[playerid][pSkin] = 186; }//Policia Civil
                    else if(level == 18) { PlayerInfo[playerid][pSkin] = 104; }//Ballas
                    else if(level == 19) { PlayerInfo[playerid][pSkin] = 108; }//Vagos
					else if(level == 20) { PlayerInfo[playerid][pSkin] = 120; }//Máfia Yakuza
					else if(level == 21) { PlayerInfo[playerid][pSkin] = 100; }//Sons of Anarchy
					else if(level == 22) { PlayerInfo[playerid][pSkin] = 113; }//Máfia Cosa Nostra
					else if(level == 23) { PlayerInfo[playerid][pSkin] = 19; }//CV
                    else if(level == 24) { PlayerInfo[playerid][pSkin] = 261; }//Mayans
					else if(level == 25) { PlayerInfo[playerid][pSkin] = 295; }//Policia Federal
					else if(level == 26) { PlayerInfo[playerid][pSkin] = 294; }//Assassins
					PlayerInfo[playerid][pLider] = level;
					SendClientMessage(playerid, COR_LIGHTBLUE,"Promovido Com sucesso !");
                    MedicBill[playerid] = 0;
					gTeam[playerid] = 11;
				    PlayerInfo[playerid][pTeam] = 11;
				    PlayerInfo[playerid][pCargo] = 6;
				    liderhide[playerid] = 1;
				    lideradmin[playerid] = 1;
				    SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
				    SetPlayerSpawn(playerid);
				}
			}
		}
		return 1;
	}
	CMD:lider(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /lider [id] [Numero]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			level = strval(tmpzcmd);
			if(level < 1)
			{
                 SendClientMessage(playerid, COR_GREY, "Para tirar o lider de uma organização você deve usar /limparlider");
			     return 1;
			}
			if(level > 26)
			{
			     SendClientMessage(playerid, COR_GREY, "Lideres de 1 a 30");
				 return 1;
			}
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				if(PlayerInfo[para1][pLider] != 0 || PlayerInfo[para1][pMembro] != 0)
				{
				    SendClientMessage(playerid, COR_GRAD1, "Este player já participa de uma organização!");
				    return 1;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						if(strcmp(InfoOrg[level][Lider],"Ninguem)
						{
							ConviteInfoOrg(PlayerName(para1), level, 6);
						}
						else
						{
						    SendClientMessage(playerid, COR_GRAD2, "Já tem líder nessa ORG, use /limparlider antes de colocar outro lider");
						    return 1;
						}
						skincop[para1] = GetPlayerSkin(playerid);
						if(level == 1) { PlayerInfo[para1][pSkin] = 265; }//Policia Militar
						else if(level == 2)	{ PlayerInfo[para1][pSkin] = 285; }//BOPE
						else if(level == 3) { PlayerInfo[para1][pSkin] = 73; }//Exército
						else if(level == 4) { PlayerInfo[para1][pSkin] = 70; }//SA:MU
						else if(level == 5) { PlayerInfo[para1][pSkin] = 115; }//Los Aztecas
						else if(level == 6) { PlayerInfo[para1][pSkin] = 249; }//Taliban
						else if(level == 7) { PlayerInfo[para1][pSkin] = 147; }//Prefeito
						else if(level == 8) { PlayerInfo[para1][pSkin] = 294; }//Hitmans
						else if(level == 9) { PlayerInfo[para1][pSkin] = 227; }//Rede Globo
						else if(level == 10) { PlayerInfo[para1][pSkin] = 61; }//Taxistas
						else if(level == 11) { PlayerInfo[para1][pSkin] = 143; }//PCC
            			else if(level == 12) { PlayerInfo[para1][pSkin] = 17; }//Rota
                        else if(level == 13){ PlayerInfo[para1][pSkin] = 285; }//GATE
                        else if(level == 14) { PlayerInfo[para1][pSkin] = 50; }//Mecanicos
						else if(level == 15) { PlayerInfo[para1][pSkin] = 270; }//Groove
                        else if(level == 16) { PlayerInfo[para1][pSkin] = 123; }//AlQaeda
						else if(level == 17) { PlayerInfo[para1][pSkin] = 186; }//Policia Civil
                        else if(level == 18) { PlayerInfo[para1][pSkin] = 104; }//Ballas
                        else if(level == 19) { PlayerInfo[para1][pSkin] = 108; }//Vagos
						else if(level == 20) { PlayerInfo[para1][pSkin] = 120; }//Máfia Yakuza
						else if(level == 21) { PlayerInfo[para1][pSkin] = 100; }//Sons of Anarchy
						else if(level == 22) { PlayerInfo[para1][pSkin] = 113; }//Máfia Cosa Nostra
						else if(level == 23) { PlayerInfo[para1][pSkin] = 19; }//CV
                        else if(level == 24) { PlayerInfo[para1][pSkin] = 261; }//Mayans
					    else if(level == 25) { PlayerInfo[para1][pSkin] = 295; }//Policia Federal
					    else if(level == 26) { PlayerInfo[para1][pSkin] = 294; }//Assassins
						GetPlayerName(para1, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pLider] = level;
					    SendClientMessage(para1, COR_LIGHTBLUE, "Você foi promovido a lider pelo admin.");
		                SendClientMessage(para1, COR_LIGHTBLUE,"Promovido Com sucesso !");
						format(gstring, sizeof(gstring), "Você promoveu %s a líder da organização [%s].", giveplayerzcm, NomeORG(para1));
                        SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
                        format(gstring, 256, "AdmCmd: %s deu líder da organização: %s Para: %s[%d].", PlayerName(playerid), NomeORG(para1), PlayerName(para1), para1);
					    ABroadCast(COR_LIGHTRED,gstring,1);
                        LideresLog(gstring);
                        MedicBill[para1] = 0;
						gTeam[para1] = 11;
					    PlayerInfo[para1][pTeam] = 11;
					    PlayerInfo[para1][pCargo] = 6;
					    PlayerInfo[para1][pEmprego] = 0;
					    SetPlayerSkin(para1, PlayerInfo[para1][pSkin]);
					    SetPlayerSpawn(para1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
	CMD:promover(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /promover [ID/Nick] [Cargos (1-5)]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			level = strval(tmpzcmd);
			if(level > 5 || level < 1) { SendClientMessage(playerid, COR_GREY, "Cargos de 1 a 5, Cargo 5 é Sub-Líder!"); return 1; }
			if (PlayerInfo[playerid][pLider] > 0)
			{
			     if(IsPlayerConnected(para1))
			     {
						if(PlayerInfo[para1][pMembro] == PlayerInfo[playerid][pLider])
				  		{
					    	if(para1 != INVALID_PLAYER_ID)
					      	{
								GetPlayerName(para1, giveplayerzcm, sizeof(giveplayerzcm));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								PlayerInfo[para1][pCargo] = level;
								format(gstring, sizeof(gstring), "Você foi promovido pelo líder %s para o cargo %d.", sendername, level);
								SendClientMessage(para1, COR_LIGHTBLUE, gstring);
								ResetPlayerWeaponsEx(para1);
								format(gstring, sizeof(gstring), "Você promoveu %s para o cargo %d.", giveplayerzcm,level);
								SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
								new org = PlayerInfo[playerid][pLider];
								if(level == 5)
								{
						    		if(strcmp(InfoOrg[org][SubLider],"Ninguem)
									{
							    		DemitirInfoOrg(giveplayerzcm);
							    		ConviteInfoOrg(giveplayerzcm, org, 5);
									}
									else
									{
										SendClientMessage(playerid, COR_GRAD1, "Você já possui um sub-lider, use /limparvaga primeiro !");
										return 1;
									}
								}
								if(strcmp(InfoOrg[org][SubLider],giveplayerzcm,true)==0)
								{
		    						if(level < 5)
									{
										DemitirInfoOrg(giveplayerzcm);
								    	ConviteInfoOrg(giveplayerzcm, org, level);
									}
								}
								return 1;
							}
							if(PlayerInfo[para1][pMembro] != PlayerInfo[playerid][pLider])
					  		{
					  		    SendClientMessage(playerid, COR_GREY, "Não pode promover quem não é da sua org.");
					  		    return 1;
							}
						}
				 }//not connected
			}
			else
			{
				   SendClientMessage(playerid, COR_GRAD1, "Você não é um líder !");
			}
		}
		return 1;
	}
	CMD:settime(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /settime [id]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(para1))
			    {
						GetPlayerName(para1, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						SetPlayerSpawn(para1);
						ClearCrime(para1);
						if(GetPlayerState(para1) == PLAYER_STATE_DRIVER) { SetVehicleToRespawn(GetPlayerVehicleID(para1)); }
						format(gstring, sizeof(gstring), "O Admin %s colocou você em seu spawn.",sendername);
						SendClientMessage(para1, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "Você colocou %s em seu spawn.",giveplayerzcm);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "AvisoAdmin: %s colocou o Jogador: %s para seu spawn.",sendername,giveplayerzcm);
				        ABroadCast(COR_AMARELO,gstring,1);
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(!strcmp("/pedircontas", cmdtext, true))
	{
		if(PlayerInfo[playerid][pMembro] == 0 && PlayerInfo[playerid][pLider] == 0)
    	{
	   		SendClientMessage(playerid,COR_GREY," Você não faz parte de nenhuma organização!");
	   		return 1;
    	}
    	return ShowPlayerDialog(playerid, 1834, DIALOG_STYLE_MSGBOX, "Pedindo Contas", "Você deseja voltar a ser um civil?", "Sim", "Não");
	}
	CMD:membros(playerid, params[])
	{
		if(IsPlayerConnected(playerid))
		{
		    if(GetPlayerOrg(playerid) < 1)
			{
				return SendClientMessage(playerid,COR_GRAD1,"Você não é Membro de nenhuma Equipe!");
			}
			SendClientMessage(playerid,GetPlayerColor(playerid),"Membros Online:");
			for(new i = 0; i < MAX_PLAYERS; ++i)
			{
				if(GetPlayerOrg(i) == GetPlayerOrg(playerid) && IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pLider] == GetPlayerOrg(playerid))format(gstring, sizeof gstring, "%s [LIDER]", PlayerName(i));
					else if(DeslogandoSocio[i] == 1)format(gstring,sizeof(gstring),"[Sócio]%s,Cargo: [%d].",PlayerName(i),PlayerInfo[i][pCargo]);
				    else format(gstring, sizeof gstring, "%s,Cargo: [%d].", PlayerName(i), PlayerInfo[i][pCargo]);
				    SendClientMessage(playerid, COR_GRAD1, gstring);
				}
			}
			return 1;
		}
		return true;
	}
	/*
	CMD:membros)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new teamnumber;
			if(PlayerInfo[playerid][pLider] != 0) teamnumber = PlayerInfo[playerid][pLider];
			else if (PlayerInfo[playerid][pMembro] != 0) teamnumber = PlayerInfo[playerid][pMembro];
			else
			{
				SendClientMessage(playerid,COR_GRAD1,"Você não é Membro de nenhuma Equipe!");
				return 1;
			}
	    	SendClientMessage(playerid,0xFFDAB9FF,"Membros Online:");
			for(new i = 0; i < MAX_PLAYERS; ++i)
			{
				if (IsPlayerConnected(i))
				{
					GetPlayerName(i,sendername,sizeof(sendername));
					format(gstring,sizeof(gstring),"");
					GetPlayerName(i,sendername,sizeof(sendername));
					format(gstring,sizeof(gstring),"");
					if (PlayerInfo[i][pLider] == teamnumber)
					{
						 if(lideradmin[i] == 0)
						 {
					          format(gstring,sizeof(gstring),"%s [LIDER]",sendername);
					     }
					}
					else if (PlayerInfo[i][pMembro] == teamnumber)
					{
					    if(lideradmin[i] == 0)
					    {
							if(DeslogandoSocio[i] == 1)
						 	{
                            	format(gstring,sizeof(gstring),"[Sócio]%s,Cargo: [%d].",sendername,PlayerInfo[i][pCargo]);
						 	}
						 	else
						 	{
					        	format(gstring,sizeof(gstring),"%s,Cargo: [%d].",sendername,PlayerInfo[i][pCargo]);
					     	}
						}
					}
                    if (strlen(gstring) > 1) SendClientMessage(playerid,COR_BRANCO,gstring);
				}
			}
		}
		return 1;
	}*/
	CMD:avisar(playerid, params[])// || CMD:av(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] < 1)
	        {
			   SendClientMessage(playerid, COR_GRAD1, "Você não tem autorização para usar esse comando.");
			   return 1;
	        }
			if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340) if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1341) if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
			{
				idxzcmd++;
			}
			new offset = idxzcmd;
			new result[120];
			while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
			{
				result[idxzcmd - offset] = cmdtext[idxzcmd];
				idxzcmd++;
			}
			result[idxzcmd - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: (/av)isar [texto]");
				return 1;
			}
   			if(TentouDivulgar(result) && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
			{
  				GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
  				format(gstring, 128, "AdmAviso: [%d]%s tentou divulgar: %s.",playerid,PlayerName,result);
				ABroadCast(COR_AMARELO,gstring,1);
				DivulgouLog(gstring);
        		return 1;
			}
            SendClientMessageToAll(COR_DBLUE, "|__________________[ Aviso dos Admins ]__________________|");
			format(gstring, sizeof(gstring), "Admin %s: %s", sendername, result);
			SendClientMessageToAll(COR_VERDE, gstring);
			AvisoAdmin(gstring);
		}
		return 1;
	}
	CMD:limparchat(playerid, params[])
	{
    	if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] < 3)
			{
		        SendClientMessage(playerid, COR_GREY, "Você não é um Administrador!");
		    	return 1;
		    }
		    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			for(new i = 0;  i < MAX_PLAYERS; ++i)
			{
				if(IsPlayerConnected(i)) ClearChatbox(i, 100);
			}
            format(gstring, sizeof(gstring), "~y~%s ~n~~w~resetou o chat!",PlayerName(playerid));
			GameTextForAll(gstring, 5000, 1);
		    return 1;
		}
		return 1;
	}
	CMD:blockpar(playerid, params[])
	{
	    if(BlockPar == 0)
	    {
	        BlockPar = 1;
	        format(gstring, sizeof(gstring), "AdmAviso: %s bloqueou o envio de particulares.", PlayerName(playerid));
			ABroadCast(COR_AMARELO,gstring,1);
			return 1;
	    }
	    else
	    {
	        BlockPar = 0;
	        format(gstring, sizeof(gstring), "AdmAviso: %s desbloqueou o envio de particulares.", PlayerName(playerid));
			ABroadCast(COR_AMARELO,gstring,1);
			return 1;
	    }
	}
	CMD:particular(playerid, params[])// || CMD:par(playerid, params[])
	{
		if(PlayerMutado[playerid] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COR, "Você não pode falar, pois foi calado !");
			return 1;
		}
		if(IsPlayerConnected(playerid))
	    {
            if(PlayerInfo[playerid][pAdmin] < 1)
			{
	            SendClientMessage(playerid, COR_GREY, "Voce não é um admin!");
	            return 1;
   			}
            if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: (/par)ticular [id] [texto]");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
            if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[giveplayeridzcmd][pAdmin] < 1)
			{
	            SendClientMessage(playerid, COR_GREY, "Voce não é um admin ou o player que você digitou não é admin!");
	            return 1;
	        }
	        if(BlockPar == 1)
	        {
	            SendClientMessage(playerid, COR_GREY, "O envio de particulares está desativado, fale com um admin 1340+ para desbloquear!");
	            return 1;
	        }
			if (IsPlayerConnected(giveplayeridzcmd))
			{
			    if(giveplayeridzcmd != INVALID_PLAYER_ID)
			    {
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
					new length = strlen(cmdtext);
					while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
					{
						idxzcmd++;
					}
					new offset = idxzcmd;
					new result[256];
					while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
					{
						result[idxzcmd - offset] = cmdtext[idxzcmd];
						idxzcmd++;
					}
					result[idxzcmd - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COR_GRAD2, "USE: (/par)ticular [id] [texto]");
						return 1;
					}
					format(gstring, sizeof(gstring), "%s[%d] particular: %s", sendername, playerid, (result));
					SendClientMessage(giveplayeridzcmd, COR_VAGOS, gstring);
					if(giveplayeridzcmd != playerid)
					{
					    new gmsg[255];
					    format(gmsg, sizeof(gmsg), "Admin(%s[%d]) - Para(%s[%d]) particular: %s", PlayerName(playerid), playerid, PlayerName(giveplayeridzcmd), giveplayeridzcmd, (result));
						SpyAll(COR_AMARELO, gmsg);
					}
					ParticularLog(gstring);
					format(gstring, sizeof(gstring), "PM enviada para %s(ID: %d).", giveplayerzcm, giveplayeridzcmd, result);
					SendClientMessage(playerid,  COR_VAGOS, gstring);
					format(gstring, sizeof(gstring), "[Spy Particular]: %s[%d], enviou: %s - Para: %s[%d]",sendername,playerid,(result),PlayerName(giveplayeridzcmd),giveplayeridzcmd);
                    SpyPAR(COR_AMARELO, playerid, gstring);
                    format(gstring, sizeof(gstring), "AvisoAdmin: %s respondeu com um particular o Jogador: %s.",sendername,PlayerName(giveplayeridzcmd));
     				ABroadCast(COR_AMARELO,gstring,1);
					return 1;
                 }
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Esse jogador está off-line.");
				return 1;
			}
		}
	 	return 1;
    }
	CMD:irtunning", cmdtext, true, 10) == 0 || strcmp("/tunning(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				     SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				     return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpzcmdcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpzcmdcar, -2692.8701,211.2929,4.3281); LinkVehicleToInterior(tmpzcmdcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,-2692.8701,211.2929,4.3281);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COR_GRAD1, "Você foi teletransportado pelo Admin!");
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	CMD:aerols(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpzcmdcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpzcmdcar, 2038.5096,-2628.2659,13.5469); LinkVehicleToInterior(tmpzcmdcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,2038.5096,-2628.2659,13.5469);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COR_GRAD1, "Você foi teletransportado pelo Admin!");
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "   Você não esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
	CMD:aerolv(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpzcmdcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpzcmdcar, 1653.3486,1521.3514,10.7798); LinkVehicleToInterior(tmpzcmdcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,1653.3486,1521.3514,10.7798);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COR_GRAD1, "Você foi teletransportado pelo Admin!");
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "   Você não esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
	CMD:batebate(playerid, params[])
	{
	    if(AdminTrabalhando[playerid] == 1)
	    {
		    if(PlayerInfo[playerid][pAdmin] >= 2)
		    {
				SetPlayerPos(playerid,2739.1577,-1745.2816,43.7656);
				SendClientMessage(playerid, COR_GRAD1, "Você foi teletransportado pelo Admin!");
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!");
				return 1;
   			}
		}
	}
    CMD:hqadm(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
				     SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				     return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpzcmdcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpzcmdcar, 2420.1274,-1773.6055,13.5391); LinkVehicleToInterior(tmpzcmdcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 2454.8298,-2102.8135,13.5469);
				}
				SendClientMessage(playerid, COR_GRAD1, "Você foi teletransportado pelo Admin!");
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				InteriorAtual[playerid] = 0;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar o comando!");
			}
		}
		return 1;
	}
	CMD:irmaleta(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(PlayerInfo[playerid][pAdmin] >= 1341)
			{
				if(GetPlayerState(playerid) == 2)
				{
					new tmpzcmdcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpzcmdcar, maletax, maletay,maletaz);  SetPlayerVirtualWorld(tmpzcmdcar, 15);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, maletax,maletay,maletaz);
				}
				SendClientMessage(playerid, COR_GRAD1, "Você foi teletransportado pelo Admin!");
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,15);
				InteriorAtual[playerid] = 0;
			}
		}
		return 1;
	}
	CMD:destruirmaleta(playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdmin] == 1342)
	    {
    		for(new i = 0; i<MAX_PLAYERS; ++i)
			{
   				DestroyDynamicObject(MaletaInicial[i]);
    		}
	        SendClientMessage(playerid, -1, "Maleta destruida com sucesso !");
	        DestroyDynamicObject(maletaid);
	        return 1;
	    }
	}
	CMD:ls(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
				     SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				     return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpzcmdcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpzcmdcar, 1539.6094,-1694.4749,13.5469); LinkVehicleToInterior(tmpzcmdcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 1539.6094,-1694.4749,13.5469);
				}
				SendClientMessage(playerid, COR_GRAD1, "Você foi teletransportado pelo Admin!");
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				InteriorAtual[playerid] = 0;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar o comando!");
			}
		}
		return 1;
	}
	CMD:irincendio(playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdmin] >= 1)
	    {
			if(IncendioAcontecendo != true) return SendClientMessage(playerid, COR_AMARELO, "[ERRO] Não está acontecendo nenhum incêndio !");
			new Float:PlayerX, Float:PlayerY, Float:PlayerZ, Float:PlayerA;
			GetPlayerPos(playerid,PlayerX,PlayerY,PlayerZ);
			GetPlayerFacingAngle(playerid, PlayerA);
			SetPlayerPos(playerid, FogoX[1],FogoY[1],FogoZ[1]);
			SendClientMessage(playerid, COR_GRAD1, "Você foi teletransportado pelo Admin!");
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			InteriorAtual[playerid] = 0;
			return 1;
	    }
	    else
		{
		    return SendClientMessage(playerid, COR_GRAD1,"Você não está autorizado a usar este comando!");
		}
    }
	CMD:carros(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
				     SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				     return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpzcmdcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpzcmdcar, 1567.6632,-1024.1198,23.9063); LinkVehicleToInterior(tmpzcmdcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 1567.6632,-1024.1198,23.9063);
				}
				SendClientMessage(playerid, COR_GRAD1, "Você foi teletransportado pelo Admin!");
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				InteriorAtual[playerid] = 0;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar o comando!");
			}
		}
		return 1;
	}
	CMD:ircaixa(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
				     SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				     return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpzcmdcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpzcmdcar, 1480.0254,-1639.6423,14.1484); LinkVehicleToInterior(tmpzcmdcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 1480.0254,-1639.6423,14.1484);
				}
				SendClientMessage(playerid, COR_GRAD1, "Você foi teletransportado pelo Admin!");
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				InteriorAtual[playerid] = 0;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
	CMD:predio(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COR_GRAD1, "Você precisa logar para usar este comando, use /logar [senha]!");
	            return 1;
	        }
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
				     SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				     return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpzcmdcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpzcmdcar, 1547.6465,-1355.1556,329.4779);
    				SetPlayerVirtualWorld(playerid,0);
				}
				else
				{
					ResetPlayerWeaponsEx(playerid);
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,1547.6465,-1355.1556,329.4779);
					SetPlayerFacingAngle(playerid,226.0);
    				SetPlayerVirtualWorld(playerid,0);
				}
				SendClientMessage(playerid, COR_GRAD1, "Você foi teletransportado pelo Admin!");
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "   Você não está autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	CMD:irin(playerid, params[])// || CMD:esconderijo(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
				     SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				     return 1;
				}
				else
				{
					SetPlayerPos(playerid, 1416.107000,0.268620,1000.926000);
				}
				SendClientMessage(playerid, COR_GRAD1, "Você foi teletransportado pelo Admin!");
				SetPlayerInterior(playerid,1);
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	CMD:csobrado(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
				     SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				     return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpzcmdcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpzcmdcar, -580.4379,2590.9597,65.8368); LinkVehicleToInterior(tmpzcmdcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, -580.4379,2590.9597,65.8368);
				}
				SendClientMessage(playerid, COR_GRAD1, "Você foi teletransportado pelo Admin!");
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				InteriorAtual[playerid] = 0;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar o comando!");
			}
		}
		return 1;
	}
	CMD:lv(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
				     SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				     return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpzcmdcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpzcmdcar, 1699.2, 1435.1, 10.7); LinkVehicleToInterior(tmpzcmdcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 1699.2,1435.1, 10.7);
				}
				SendClientMessage(playerid, COR_GRAD1, "Você foi teletransportado pelo Admin!");
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				InteriorAtual[playerid] = 0;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
	CMD:sf(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
				     SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				     return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpzcmdcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpzcmdcar, -1417.0,-295.8,14.1); LinkVehicleToInterior(tmpzcmdcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, -1417.0,-295.8,14.1);
				}
				SendClientMessage(playerid, COR_GRAD1, "Você foi teletransportado pelo Admin!");
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				InteriorAtual[playerid] = 0;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
	CMD:entrarcarro(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD1, "USE: /entrarcarro [carro id]");
				return 1;
			}
			new testcar = strval(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				PutPlayerInVehicle(playerid, testcar, 1);
				SendClientMessage(playerid, COR_GRAD1, "Você foi teletransportado pelo Admin!");
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
    CMD:entrarcarro2(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD1, "USE: /entrarcarro [carro id]");
				return 1;
			}
			new testcar = strval(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				PutPlayerInVehicle(playerid, testcar, 0);
				SendClientMessage(playerid, COR_GRAD1, "Você foi teletransportado pelo Admin!");
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
	CMD:ircarro(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD1, "USE: /ircarro [carro id]");
				return 1;
			}
			new testcar = strval(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
				}
				new Float:cwx2,Float:cwy2,Float:cwz2;
				GetVehiclePos(testcar, cwx2, cwy2, cwz2);
				if (GetPlayerState(playerid) == 2)
				{
					new tmpzcmdcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpzcmdcar, cwx2, cwy2, cwz2); LinkVehicleToInterior(tmpzcmdcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, cwx2, cwy2, cwz2);
				}
				SendClientMessage(playerid, COR_GRAD1, "Você foi teletransportado pelo Admin!");
				SetPlayerInterior(playerid,0);
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
	CMD:mark(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
				}
				GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				SendClientMessage(playerid, COR_GRAD1, "Local Marcado Para o Teleporte");
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
	CMD:irmark(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            new plo, world;
			plo = ReturnUser(tmpzcmd);
			world = GetPlayerVirtualWorld(plo);
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpzcmdcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpzcmdcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]); LinkVehicleToInterior(tmpzcmdcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				}
				SetPlayerVirtualWorld(playerid, world);
				SendClientMessage(playerid, COR_GRAD1, "Você foi teletransportado pelo Admin!");
				SetPlayerInterior(playerid,0);
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
    CMD:ir(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /ir [id]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo, world;
			plo = ReturnUser(tmpzcmd);
			world = GetPlayerVirtualWorld(plo);
			new idinterior = GetPlayerInterior(plo);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
                    if (PlayerInfo[playerid][pAdmin] >= 1)
					{
					    if(strcmp(PlayerName(plo),"Dudu_Insane(playerid, params[]) && playerid != giveplayeridzcmd)
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não pode ir no Dudu_Insane, KJKJKJKJKJKJ !");
							return 1;
						}
 				        if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
							return 1;
						}
                        if(PlayerInfo[plo][pAdmin] >= 1340 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não pode ir até um Admin Dono !");
							return 1;
						}
						if(Spectate[playerid] != 255)
						{
							Spectate[playerid] = 256;
						}
						GetPlayerPos(plo, plocx, plocy, plocz);
						if(InteriorAtual[plo] > 0)
						{
							SetPlayerInterior(playerid,InteriorAtual[plo]);
							InteriorAtual[playerid] = InteriorAtual[plo];
							LocalAtual[playerid] = LocalAtual[plo];
						}
						if(InteriorAtual[plo] == 0)
						{
							SetPlayerInterior(playerid,0);
						}
						if(plocz > 530.0 && InteriorAtual[plo] == 0) //the highest land point in sa = 526.8
						{
							SetPlayerInterior(playerid,1);
							InteriorAtual[playerid] = 1;
						}
						SetPlayerInterior(playerid, idinterior);
						SetPlayerVirtualWorld(playerid, world);
						if (GetPlayerState(playerid) == 2)
						{
							new tmpzcmdcar = GetPlayerVehicleID(playerid);
							LinkVehicleToInterior(tmpzcmdcar, idinterior);
							SetVehiclePos(tmpzcmdcar, plocx, plocy+4, plocz);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						}
						else
						{
							SetPlayerPos(playerid,plocx,plocy+2, plocz);
						}
						SendClientMessage(playerid, COR_GRAD1, "Você foi teletransportado pelo Admin!");
						GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
						GetPlayerName(plo, plnamezcmd, MAX_PLAYER_NAME);
                        format(gstring, sizeof(gstring), "Administrador %s foi até: %s.",PlayerName,plnamezcmd);
						ProxDetector(30.0, playerid, gstring, 0x33FF00FF,0x33FF00FF,0x33FF00FF,0x33FF00FF,0x33FF00FF);
					}
					else
					{
						SendClientMessage(playerid, COR_GRAD1, "Você não esta autorizado a usar este comando!");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Esse não é um player ativo.");
			}
		}
		return 1;
	}
	if(!strcmp("/destruir", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
        	if(PlayerInfo[playerid][pAdmin] < 4)
			{
			    SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando !");
			    return 1;
			}
			if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			for(new i; i != MAX_VEHICLES; ++i)
			{
				new dist = ChecarveiculoBPL(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COR_GREY, "Não há nenhum carro nesse raio!");
				}
				case 1:
				{
				    if(result < MAX_VEHICLES)
				    {
				    	SendClientMessage(playerid, COR_GREY, "Você só pode destruir veículos criados");
				    	return 1;
				    }
					new name[MAX_PLAYER_NAME];
				    GetPlayerName(playerid, name, sizeof(name));
				    format(gstring, sizeof(gstring), "Você destruiu o veículo ID:[%d]", result);
				    SendClientMessage(playerid, COR_GREY, gstring);
					format(gstring, sizeof(gstring), "[AdmAviso]: Carro ID:[%d] foi destruido Por: %s", result, name);
					ABroadCast(COR_AMARELO,gstring,1);
					DestroyVehicle(result);
				}
				default:
				{
					SendClientMessage(playerid, COR_GREY, "Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return 1;
	}
	if(!strcmp("/darrespawn", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
        	if(GetPlayerOrg(playerid) != 14)
			{
			    SendClientMessage(playerid, COR_GRAD1, "Você não é um Mecânico");
			    return 1;
            }
			if(PlayerInfo[playerid][pCargo] < 2)
			{
			    SendClientMessage(playerid, COR_GREY, "Voce Precisa ter pelo menos cargo 2 para usar este comando!");
			    return 1;
			}
			if(!PlayerToPoint(30.0, playerid, 2801.2949,-1446.4310,16.2398))
			{
				SendClientMessage(playerid, COR_GRAD1, "Voce So Pode Dar Spawn Nos Veiculos Dentro Da Sua HQ!");
				return 1;
			}
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			for(new i; i != MAX_VEHICLES; ++i)
			{
				new dist = ChecarveiculoBPL(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			if(VeiculoOcupado(result))
			{
			     SendClientMessage(playerid, COR_GRAD1, "Você não pode respawnar um carro com alguem dentro !");
			     return 1;
		    }
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COR_GREY, "*Não há nenhum Veiculo neste raio!");
				}
				case 1:
				{
					new name[MAX_PLAYER_NAME];
				    GetPlayerName(playerid, name, sizeof(name));
				    format(gstring, sizeof(gstring), "Você deu respawn no carro ID:[%d]", result);
				    SendClientMessage(playerid, COR_GREY, gstring);
				    {
						format(gstring, sizeof(gstring), "Mecânicos: Carro ID:[%d] foi respawnado Por: %s", result, name);
						SendFamilyMessage(14, COR_VAGOS, gstring);
					}
					SetVehicleToRespawn(result);
				}
				default:
				{
					SendClientMessage(playerid, COR_GREY, "*Foram encontrados mais de um Veiculo neste Local!");
				}
			}
		}
		return 1;
	}
	if(!strcmp("/respawnid", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
        	if(PlayerInfo[playerid][pAdmin] < 1)
			{
			    SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando !");
			    return 1;
			}
			if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
            for(new i; i != MAX_VEHICLES; ++i)
			{
				new dist = ChecarveiculoBPL(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COR_GREY, "Não há nenhum carro nesse raio!");
				}
				case 1:
				{
					new name[MAX_PLAYER_NAME];
   				    GetPlayerName(playerid, name, sizeof(name));
   				    format(gstring, sizeof(gstring), "Você deu respawn no carro ID:[%d]", result);
   				    SendClientMessage(playerid, COR_GREY, gstring);
					format(gstring, sizeof(gstring), "AdmAviso: carro ID:[%d] foi respawnado Por: %s", result, name);
					ABroadCast(COR_AMARELO,gstring,1);
    	            SetVehicleToRespawn(result);
				}
				default:
				{
					SendClientMessage(playerid, COR_GREY, "Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return 1;
	}
	if(!strcmp("/respawnperto", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
        	if(PlayerInfo[playerid][pAdmin] < 1)
			{
			    SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando !");
			    return 1;
			}
			if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			new name[MAX_PLAYER_NAME];
   			GetPlayerName(playerid, name, sizeof(name));
            for(new i; i != MAX_VEHICLES; ++i)
			{
				new dist = ChecarveiculoBPL(50, playerid, i);
				if(dist)
				{
                    if(!VeiculoOcupado(i))
			        {
   			             SetVehicleToRespawn(i);
   			        }
				}
			}
			SendClientMessage(playerid, COR_GREY, "Você deu respawn nos carros que estavam perto de você");
   			format(gstring, sizeof(gstring), "AdmAviso: %s deu respawn em todos os carros perto dele", name);
   			ABroadCast(COR_AMARELO,gstring,1);
		}
		return 1;
	}
	if(!strcmp("/acarro", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
         	if(PlayerInfo[playerid][pAdmin] < 1)
			{
			    SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando !");
			    return 1;
			}
			if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			new vid = GetPlayerVehicleID(playerid);
			if(IsPlayerInVehicle(playerid, vid))
			{
				format(gstring, sizeof(gstring), "AdmAviso: %s Abasteceu Seu Carro.",  PlayerName(playerid));
				ABroadCast(COR_AMARELO,gstring,1);
				Gas[vid] = 100;
			}
			else
			{
			    SendClientMessage(playerid, COR_GRAD1, "Você não está dentro de nenhum carro!");
			}
		}
		return 1;
	}
	if(!strcmp("/bcarro", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
         	if(PlayerInfo[playerid][pAdmin] < 1)
			{
			    SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando !");
			    return 1;
			}
			if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			new vid = GetPlayerVehicleID(playerid);
			if(IsPlayerInVehicle(playerid, vid))
			{
				format(gstring, sizeof(gstring), "AdmAviso: %s Blindou seu carro.", PlayerName(playerid));
				ABroadCast(COR_AMARELO,gstring,1);
				Quebrado[vid] = 0;
 			    Vuln[vid] = MaxVuln;
			}
			else
			{
			    SendClientMessage(playerid, COR_GRAD1, "Você não está dentro de nenhum carro!");
			}
		}
		return 1;
	}
	if(!strcmp("/rcarro", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
         	if(PlayerInfo[playerid][pAdmin] < 1)
			{
			    SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando !");
			    return 1;
			}
			if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			new vid = GetPlayerVehicleID(playerid);
			if(IsPlayerInVehicle(playerid, vid))
			{
				format(gstring, sizeof(gstring), "AdmAviso: %s Reparou seu carro.", PlayerName(playerid));
				ABroadCast(COR_AMARELO,gstring,1);
				Quebrado[vid] = 0;
	    		RepairVehicle(vid);
			}
			else
			{
			    SendClientMessage(playerid, COR_GRAD1, "Você não está dentro de nenhum carro!");
			}
		}
		return 1;
	}
	if(!strcmp("/abastecerrid", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
         	if(PlayerInfo[playerid][pAdmin] < 1)
			{
			    SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando !");
			    return 1;
			}
			if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			for(new i; i != MAX_VEHICLES; ++i)
			{
				new dist = ChecarveiculoBPL(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COR_GREY, "Não há nenhum carro nesse raio!");
				}
				case 1:
				{
					new name[MAX_PLAYER_NAME];
				    GetPlayerName(playerid, name, sizeof(name));
			    	format(gstring, sizeof(gstring), "Você abasteceu o carro ID:[%d]", result);
				    SendClientMessage(playerid, COR_GREY, gstring);
					format(gstring, sizeof(gstring), "AdmAviso: carro ID:[%d] foi abastecido Por: %s", result, name);
					ABroadCast(COR_AMARELO,gstring,1);
					Gas[result] = 100;
				}
				default:
				{
					SendClientMessage(playerid, COR_GREY, "Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return 1;
	}
	if(!strcmp("/blindarperto", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
        	if(PlayerInfo[playerid][pAdmin] < 2)
			{
			    SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando !");
			    return 1;
			}
			if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			new name[MAX_PLAYER_NAME];
   			GetPlayerName(playerid, name, sizeof(name));
            for(new i; i != MAX_VEHICLES; ++i)
			{
				new dist = ChecarveiculoBPL(50, playerid, i);
				if(dist)
				{
				     Quebrado[i] = 0;
	 			     Vuln[i] = MaxVuln;
				}
			}
			SendClientMessage(playerid, COR_GREY, "Você blindou os carros que estavam perto de você");
   			format(gstring, sizeof(gstring), "AdmAviso: %s blindou todos os carros perto dele", name);
   			ABroadCast(COR_AMARELO,gstring,1);
		}
		return 1;
	}
	if(!strcmp("/repararid", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] < 1)
			{
			    SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando !");
			    return 1;
			}
			if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
            for(new i; i != MAX_VEHICLES; ++i)
			{
				new dist = ChecarveiculoBPL(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COR_GREY, "Não há nenhum carro nesse raio!");
				}
				case 1:
				{
					new name[MAX_PLAYER_NAME];
				    GetPlayerName(playerid, name, sizeof(name));
				    format(gstring, sizeof(gstring), "Você reparou o carro ID:[%d]", result);
				    SendClientMessage(playerid, COR_GREY, gstring);
					format(gstring, sizeof(gstring), "AdmAviso: carro ID:[%d] foi reparado por: %s", result, name);
					ABroadCast(COR_AMARELO,gstring,1);
					Quebrado[result] = 0;
	    			RepairVehicle(result);
				}
				default:
				{
					SendClientMessage(playerid, COR_GREY, "Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return 1;
	}
	CMD:respawnorg(playerid, params[])
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
		    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD1, "USE: /respawnorg [ id ]");
				return 1;
			}
			new org;
			new bool:unwanted[MAX_VEHICLES];
			org = strval(tmpzcmd);
			if(org < 1 || org > 31)
			{
			     return 1;
			}
			if(org == 1)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros da Policia Militar foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosPm[x]])
					  {
                           SetVehicleToRespawn(CarrosPm[x]);
					  }
				 }
			}
			else if(org == 2)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros da BOPE foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosBope[x]])
					  {
                           SetVehicleToRespawn(CarrosBope[x]);
					  }
				 }
			}
			else if(org == 3)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros do Exército foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosExe[x]])
					  {
                           SetVehicleToRespawn(CarrosExe[x]);
					  }
				 }
			}
			else if(org == 4)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros dos Médicos foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosSamu[x]])
					  {
                           SetVehicleToRespawn(CarrosSamu[x]);
					  }
				 }
			}
			else if(org == 5)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros dos Aztecas foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosAztecas[x]])
					  {
                           SetVehicleToRespawn(CarrosAztecas[x]);
					  }
				 }
			}
			else if(org == 6)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros da Taliban foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosTaliban[x]])
					  {
                           SetVehicleToRespawn(CarrosTaliban[x]);
					  }
				 }
			}
			else if(org == 7)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros do Governo foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosGov[x]])
					  {
                           SetVehicleToRespawn(CarrosGov[x]);
					  }
				 }
			}
			else if(org == 8)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros dos Hitmans foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosHitmans[x]])
					  {
                           SetVehicleToRespawn(CarrosHitmans[x]);
					  }
				 }
			}
			else if(org == 9)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros dos Repórteres foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosGlobo[x]])
					  {
                           SetVehicleToRespawn(CarrosGlobo[x]);
					  }
				 }
			}
			else if(org == 10)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros dos Taxistas foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosTaxista[x]])
					  {
                           SetVehicleToRespawn(CarrosTaxista[x]);
					  }
				 }
			}
			else if(org == 11)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros da PCC foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosPcc[x]])
					  {
                           SetVehicleToRespawn(CarrosPcc[x]);
					  }
				 }
			}
            else if(org == 12)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros da Rota foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosRota[x]])
					  {
                           SetVehicleToRespawn(CarrosRota[x]);
					  }
				 }
			}
			else if(org == 13)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros da GATE foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosGate[x]])
					  {
                           SetVehicleToRespawn(CarrosGate[x]);
					  }
				 }
			}
			else if(org == 14)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros dos Mecânicos foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosMecanicos[x]])
					  {
                           SetVehicleToRespawn(CarrosMecanicos[x]);
					  }
				 }
			}
			else if(org == 15)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros da Groove Street foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosGroove[x]])
					  {
                           SetVehicleToRespawn(CarrosGroove[x]);
					  }
				 }
			}
			else if(org == 16)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros da Al'qaeda foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosAlqaeda[x]])
					  {
                           SetVehicleToRespawn(CarrosAlqaeda[x]);
					  }
				 }
			}
			else if(org == 17)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros da Polícia Civil foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosPc[x]])
					  {
                           SetVehicleToRespawn(CarrosPc[x]);
					  }
				 }
			}
			else if(org == 18)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros dos Ballas foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosBallas[x]])
					  {
                           SetVehicleToRespawn(CarrosBallas[x]);
					  }
				 }
			}
			else if(org == 19)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros dos Vagos foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosVagos[x]])
					  {
                           SetVehicleToRespawn(CarrosVagos[x]);
					  }
				 }
			}
			else if(org == 20)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros da Máfia Yakuza foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosYakuza[x]])
					  {
                           SetVehicleToRespawn(CarrosYakuza[x]);
					  }
				 }
			}
			else if(org == 21)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros dos Sons foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosSons[x]])
					  {
                           SetVehicleToRespawn(CarrosSons[x]);
					  }
				 }
			}
			else if(org == 22)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros da Máfia C.N foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosCn[x]])
					  {
                           SetVehicleToRespawn(CarrosCn[x]);
					  }
				 }
			}
			else if(org == 23)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros do Comando Vermelho foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosCv[x]])
					  {
                           SetVehicleToRespawn(CarrosCv[x]);
					  }
				 }
			}
			else if(org == 24)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros dos Mayans foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosMC[x]])
					  {
                           SetVehicleToRespawn(CarrosMC[x]);
					  }
				 }
			}
			else if(org == 25)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros da Polícia Federal foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosPF[x]])
					  {
                           SetVehicleToRespawn(CarrosPF[x]);
					  }
				 }
			}
			else if(org == 26)
			{
                 format(gstring, sizeof(gstring), "[BPL]: Todos os carros dos Assassins foram para seus locais de inicio. By: %s.", PlayerName(playerid));
				 ABroadCast(0x80FF8096, gstring, 1);
				 for(new i = 0;  i < MAX_PLAYERS; ++i)
			     {
             	      if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
					  {
					       unwanted[GetPlayerVehicleID(i)] = true;
					  }
     		     }
			     for(new x; x != MAX_VEHICLES; x++)
				 {
				      if(!unwanted[CarrosAssassins[x]])
					  {
                           SetVehicleToRespawn(CarrosAssassins[x]);
					  }
				 }
			}
		}
		else
		{
	  		SendClientMessage(playerid,COR_GRAD5,"Você não tem permissão para usar esse comando!");
	 	}
		return 1;
	}
	CMD:rcarro(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1342)
			{
			    SendClientMessage(playerid, COR_GRAD1, "   Você não esta autorizado a usar este comando!");
			    return 1;
			}
			if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			if(IsPlayerInAnyVehicle(playerid))
			{
			    new Float:vida;
                new vid = GetPlayerVehicleID(playerid);
                GetVehicleHealth(vid, vida);
                new name[MAX_PLAYER_NAME];
			    GetPlayerName(playerid, name, sizeof(name));
			    Quebrado[vid] = 0;
			    SetVehicleHealth(GetPlayerVehicleID(playerid), 700);
			    RepairVehicle(GetPlayerVehicleID(playerid));
			    SendClientMessage(playerid,COR_GRAD1,"Carro Concertado Com sucesso !");
			}
		}
		return 1;
	}
	CMD:respawncarros(playerid, params[])// || CMD:rc(playerid, params[])
	{
		if(IsPlayerConnected(playerid))
	    {
        	if(PlayerInfo[playerid][pAdmin] < 3)
			{
			    SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando !");
			    return 1;
			}
			if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			new name[MAX_PLAYER_NAME];
   			GetPlayerName(playerid, name, sizeof(name));
            for(new i; i != MAX_VEHICLES; ++i)
			{
   				if(!VeiculoOcupado(i))
			    {
   			    	SetVehicleToRespawn(i);
				}
			}
			GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
			format(gstring, sizeof(gstring), "[BPL]: Todos os carros foram para seus locais de inicio. By: %s.", PlayerName);
			SendClientMessageToAll(0x80FF8096,gstring);
		}
		return 1;
	}
	CMD:HomemBomba(playerid, params[])
	{
		if(PlayerInfo[playerid][pJailed] != 0)
		{
			 SendClientMessage(playerid,COR_AMARELO," Você não pode usar homem bomba na cadeia!");
			 return 1;
		}
		if(WantedLevel[playerid] != 0)
		{
			SendClientMessage(playerid, COR_GREY, "Você está procurado,não pode usar este comando!");
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] != 6 && PlayerInfo[playerid][pLider] != 6 && PlayerInfo[playerid][pMembro] != 16 && PlayerInfo[playerid][pLider] != 16 && PlayerInfo[playerid][pMembro] != 30 && PlayerInfo[playerid][pLider] != 30)
		{
			SendClientMessage(playerid, COR_LIGHTRED, "Você não é do Taliban/Al'Qaeda");
			return 1;
		}
		if(phbomba == 1)
		{
			SendClientMessage(playerid,COR_GRAD2,"Já usaram homembomba,aguarde 20 segundos!");
			return 1;
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6 || PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
			{
				SetPlayerHealth(playerid, 0);
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				CreateExplosion(x, y, z, 7, 25);
				printf("[Terrorista] Usou Homem Bomba");
				format(gstring, sizeof(gstring), "Terrorista %s Usou Homem Bomba! ID[%d]", sendername, playerid);
				ABroadCast(COR_AMARELO,gstring,1);
				format(gstring, 128, "Terrorista: %s Usou Homem Bomba !.",sendername);
				ProxDetector(70.0, playerid, gstring, COR_VERMELHO,COR_VERMELHO,COR_VERMELHO,COR_VERMELHO,COR_VERMELHO);
				phbomba = 1;
				Tempohbomba = SetTimer("hbomba", 20000, 0);
			}
		}
		else
		{
			SendClientMessage(playerid, COR_VERMELHO, "Você não está autorizado a usar este comando!");
		}
		return 1;
	}
	CMD:carrobomba(playerid, params[])
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
		   SendClientMessage(playerid,COR_GREY," Você não pode usar carro bomba na cadeia!");
		   return 1;
   		}
		if(PlayerInfo[playerid][pMembro] != 6 && PlayerInfo[playerid][pLider] != 6 && PlayerInfo[playerid][pMembro] != 16 && PlayerInfo[playerid][pLider] != 16 && PlayerInfo[playerid][pMembro] != 30 && PlayerInfo[playerid][pLider] != 30)
		{
		    SendClientMessage(playerid, COR_GREY, "Você não é um Terrorista");
		    return 1;
		}
		if(PlayerInfo[playerid][pCargo] < 3)
		{
			 SendClientMessage(playerid, COR_GRAD1, "Você precisa ser cargo 3+ para usar este comando.");
			 return 1;
		}
		if(pcbomba == 1)
	    {
	        SendClientMessage(playerid,COR_GRAD2,"Já usaram carrobomba, aguarde 20 segundos para usar novamente!");
	        return 1;
	    }
		new vehicle;
		vehicle = GetPlayerVehicleID(playerid);
		new Float:x, Float:y, Float:z;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(IsPlayerConnected(playerid))
		{
			if(vehicle != 0)
			{
				SetPlayerHealth(playerid, 0);
				GetVehiclePos(vehicle, x, y, z);
				CreateExplosion(x, y, z, 7, 50);
				printf("[Terrorista] Usou Carro Bomba");
				format(gstring, sizeof(gstring), "Terrorista %s Usou Carro Bomba! ID[%d]", sendername, playerid);
			    ABroadCast(COR_AMARELO,gstring,1);
				pcbomba = 1;
			    Tempocbomba = SetTimer("cbomba", 20000, 0);
			}
			if(vehicle == 0)
			{
				SendClientMessage(playerid, COR_GREY, "Você precisa estar em um carro");
			    return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar este comando!");
		}
  		return 1;
	}
	CMD:trazer(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /trazer [ id ]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo, world;
			plo = ReturnUser(tmpzcmd);
			world = GetPlayerVirtualWorld(playerid);
			new idinterior = GetPlayerInterior(playerid);
			if(PlayerInfo[plo][pJailed] != 0)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não pode trazer um Preso");
				return 1;
			}
			if(roubando[plo] == 1)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você nao pode traser este player ele esta roubando");
				return 1;
			}
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
                    if(strcmp(PlayerName(plo),"Dudu_Insane(playerid, params[])
					{
							SendClientMessage(playerid, COR_GRAD1, "Você não pode trazer Dudu_Insane, KJKJKJKJKJKJ !");
							return 1;
					}
					if (PlayerInfo[playerid][pAdmin] >= 1)
					{
					    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1340)
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
							return 1;
						}
                        if(PlayerInfo[plo][pAdmin] >= 1340 && PlayerInfo[playerid][pAdmin] < 1340)
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não pode trazer um Administrador Dono !");
							return 1;
						}
						DevolverInterior[plo] = GetPlayerInterior(plo);
						GetPlayerPos(plo, DevolverX,DevolverY, DevolverZ);
						GetPlayerPos(playerid, plocx, plocy, plocz);
						if(InteriorAtual[playerid] > 0)
						{
							SetPlayerInterior(plo,InteriorAtual[playerid]);
							InteriorAtual[plo] = InteriorAtual[playerid];
							LocalAtual[plo] = LocalAtual[playerid];
						}
						if(InteriorAtual[playerid] == 0)
						{
							SetPlayerInterior(plo,0);
						}
						if(plocz > 930.0 && InteriorAtual[playerid] == 0) //the highest land point in sa = 526.8
						{
							SetPlayerInterior(plo,1);
							InteriorAtual[plo] = 1;
						}
						SetPlayerInterior(plo, idinterior);
						SetPlayerVirtualWorld(plo,world);
						if (GetPlayerState(plo) == 2)
						{
							TelePos[plo][0] = 0.0;
							TelePos[plo][1] = 0.0;
							new tmpzcmdcar = GetPlayerVehicleID(plo);
							LinkVehicleToInterior(tmpzcmdcar, idinterior);
							SetVehiclePos(tmpzcmdcar, plocx, plocy+4, plocz);
							SetVehicleVirtualWorld(tmpzcmdcar,world);
						}
						else
						{
							SetPlayerPos(plo,plocx,plocy+2, plocz);
						}
						SendClientMessage(plo, COR_GRAD1, "Você foi teletransportado pelo Admin!");
						format(gstring, sizeof(gstring), "Admin %s Trouxe %s.", PlayerName(playerid), PlayerName(plo));
						ProxDetector(30.0, playerid, gstring, COR_VERDE,COR_VERDE,COR_VERDE,COR_VERDE,COR_VERDE);
					}
					else
					{
						SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Esse não é um jogador ativo.");
			}
		}
		return 1;
	}
	CMD:devolver(playerid, params[])
	{

		if(IsPlayerConnected(playerid))
		{

			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{

				SendClientMessage(playerid, COR_GRAD2, "USE: /devolver [ id ]");
				return 1;
			}
			new plo;
			plo = ReturnUser(tmpzcmd);
			if(PlayerInfo[plo][pJailed] != 0)
			{

				SendClientMessage(playerid, COR_GRAD1, "Você não pode devolver um Preso");
				return 1;
			}
			if(roubando[plo] == 1)
			{

				SendClientMessage(playerid, COR_GRAD1, "Você nao pode devolver este player ele esta roubando");
				return 1;
			}
			if (IsPlayerConnected(plo))
			{

				if(plo != INVALID_PLAYER_ID)
				{

					if (PlayerInfo[playerid][pAdmin] >= 1)
					{
						if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1340)
						{

							SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
							return 1;
						}
						if(PlayerInfo[plo][pAdmin] >= 1340 && PlayerInfo[playerid][pAdmin] < 1340)
						{

							SendClientMessage(playerid, COR_GRAD1, "Você não devolver trazer um Administrador Dono !");
							return 1;
						}
						if(strcmp(PlayerName(plo),"Dudu_Insane(playerid, params[]) )
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não pode devolver o Dudu_Insane, ele traz você !");
							return 1;
						}
						if(IsPlayerNPC(plo))
						{

							SendClientMessage(playerid, COR_GREY, "Você não pode devolver NPC's.");
							return 1;
						}
						if(DevolverInterior[plo] != 0) //the highest land point in sa = 526.8
						{

							SetPlayerInterior(plo,1);
							InteriorAtual[plo] = 1;
						}
						if (GetPlayerState(plo) == 2)
						{

							TelePos[plo][0] = 0.0;
							TelePos[plo][1] = 0.0;
							new tmpzcmdcar = GetPlayerVehicleID(plo);
							SetVehiclePos(tmpzcmdcar, DevolverX,DevolverY, DevolverZ);
						}
						else
						{

							SetPlayerPos(plo,DevolverX,DevolverY, DevolverZ);
						}
						SendClientMessage(plo, COR_GRAD1, "Você foi teletransportado pelo Admin!");
						format(gstring, sizeof(gstring), "Admin %s Devolveu %s.", PlayerName(playerid), PlayerName(plo));
						ProxDetector(30.0, playerid, gstring, COR_VERDE,COR_VERDE,COR_VERDE,COR_VERDE,COR_VERDE);
					}
					else
					{

						SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!");
					}
				}
			}
			else
			{

				SendClientMessage(playerid, COR_GRAD1, "Esse não é um jogador ativo.");
			}
		}
		return 1;
	}
	CMD:iniciarx1(playerid, params[])
	{
		if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pAdmin] < 1)
			{
			    SendClientMessage(playerid, COR_GRAD2, "Você Não pode usar esse CMD!");
				return 1;
			}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /iniciarx1 [Jogador 1] e [Jogador 2]");
				return 1;
			}
			new id1, id2;
			id1 = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			id2 = ReturnUser(tmpzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /iniciarx1 [Jogador 1] e [Jogador 2]");
				return 1;
			}
			if(!IsPlayerConnected(id1))
			{
			    SendClientMessage(playerid, COR_GRAD2, "O Jogador 1, não está conetado!");
				return 1;
			}
			if(!IsPlayerConnected(id2))
			{
			    SendClientMessage(playerid, COR_GRAD2, "O Jogador 2, não está conetado!");
				return 1;
			}
			SendClientMessageToAll(COR_DBLUE, "|__________________[ Evento De X1 ]__________________|");
			format(gstring, sizeof(gstring), "[EVENTO X1]: O próximo duelo x1 será [%s] x [%s], BOA SORTE!", PlayerName(id1), PlayerName(id2));
			SendClientMessageToAll(COR_VERDE, gstring);
			KillTimer(timerx1);
			countx1 = 3;
			timerx1 = SetTimer("contarx1", 1000, 1);
			Playersx1[0] = id1;
			Playersx1[1] = id2;
			TogglePlayerControllable(Playersx1[0], 0);
			TogglePlayerControllable(Playersx1[1], 0);
			///////////////////////////
			ResetPlayerWeapons(id1);
			GivePlayerWeapon(id1, 24, 999);
			GivePlayerWeapon(id1, 25, 999);
			SetPlayerHealth(id1, 100.0);
			SetPlayerArmour(id1, 100.0);
			SetPlayerInterior(id1, 1);
			SetPlayerVirtualWorld(id1, 0);
			SetPlayerPos(id1, 1401.8556,-21.4622,1000.9098);
			SetPlayerFacingAngle(id1, 87.8167);
			///////////////////////////
			ResetPlayerWeapons(id2);
			GivePlayerWeapon(id2, 24, 999);
			GivePlayerWeapon(id2, 25, 999);
			SetPlayerHealth(id2, 100.0);
			SetPlayerArmour(id2, 100.0);
			SetPlayerInterior(id2, 1);
			SetPlayerVirtualWorld(id2, 0);
			SetPlayerPos(id2, 1379.3420,-22.3326,1000.9252);
			SetPlayerFacingAngle(id2, 274.5353);
		    return 1;
		}
		return 1;
	}
	CMD:trazerx1(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /trazerx1 [id]");
				return 1;
			}
			new plo, world;
			plo = ReturnUser(tmpzcmd);
			world = GetPlayerVirtualWorld(playerid);
			if(PlayerInfo[plo][pJailed] != 0)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não pode trazer um Preso");
				return 1;
			}
			if(roubando[plo] == 1)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você nao pode traser este player ele esta roubando");
				return 1;
			}
			if(PlayerInfo[playerid][pGunLic] == 0)
			{
				SendClientMessage(playerid, COR_GRAD1, "Este jogador não possui licenças de armas !");
				return 1;
			}
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pAdmin] >= 2)
					{
					    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1340)
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
							return 1;
						}
                        if(PlayerInfo[plo][pAdmin] >= 1342 && PlayerInfo[playerid][pAdmin] < 1342)
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não pode trazer um Administrador Dono !");
							return 1;
						}
						SetPlayerPos(plo, -2326.8809,-1636.9822,483.7031);
						SetPlayerInterior(plo,InteriorAtual[playerid]);
						InteriorAtual[plo] = InteriorAtual[playerid];
						LocalAtual[plo] = LocalAtual[playerid];
						NaPorraDoEvento[plo] = true;
						SetPlayerInterior(plo,0);
						ResetPlayerWeaponsEx(plo);
						Equipado[plo] = 0;
			            GivePlayerWeaponEx(plo, 24, 500);
			            SetPlayerArmour(plo, 100);
			            SetPlayerHealth(plo, 100);
						SetPlayerVirtualWorld(plo, world);
						format(gstring, sizeof(gstring), "* Você Foi Equipado e Teletransportado pelo Administrador: %s !",PlayerName(playerid));
		    	        SendClientMessage(plo, COR_DBLUE, gstring);
					}
					else
					{
						SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Esse não é um jogador ativo.");
			}
		}
		return 1;
	}
	CMD:lcarro(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /lcarro [carid]");
				return 1;
			}
			new org = GetPlayerOrg(playerid);
			new Float:carrox,Float:carroy,Float:carroz;
			new carroid;
			carroid = strval(tmpzcmd);
			if(!GetPlayerOrg(playerid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não faz parte de nenhuma organização !");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 1 && !PmCarro(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 2 && !BopeCarro(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 3 && !ExercitoCarro(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 4 && !SamuCarro(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 5 && !AztecasCarro(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 6 && !TalibanCarros(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 7 && !GovernoCarros(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 8 && !HitmansCarros(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 9 && !GloboCarros(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 10 && !TaxistaCarros(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 25 && !PFCarros(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 22 && !CNCarros(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 20 && !YakuzaCarros(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 15 && !GrooveCarros(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 16 && !AlqaedaCarros(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 17 && !PCCarros(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 18 && !BallasCarros(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 19 && !VagosCarros(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 23 && !CVCarros(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 11 && !PccCarros(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 21 && !SonsCarros(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 24 && !MayansCarros(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 12 && !RotaCarros(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 14 && !MecanicosCarros(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 13 && !GateCarros(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
            if(GetPlayerOrg(playerid) == 26 && !AssassinsCarros(carroid))
			{
				SendClientMessage(playerid, COR_GRAD1, "Você só pode localizar veículos da sua organização!");
				return 1;
			}
			new arquivo[64];
			format(arquivo, sizeof(arquivo), Pasta_ORGVIP, org);
			if(DOF2_FileExists(arquivo))
			{
			    if(DOF2_GetInt(arquivo, "Dias") == 0)
			    {
			        return 1;
			    }
			}
			if(!VeiculoOcupado(carroid))
			{
			     GetVehiclePos(carroid, carrox, carroy, carroz);
			     SetPlayerCheckpoint(playerid, carrox, carroy, carroz, 6.0);
			     SendClientMessage(playerid, COR_GRAD1, "Você marcou um veículo da sua organização no mapa!");
			     return 1;
		    }
	  	    else
		    {
				SendClientMessage(playerid, COR_GREY, "Você não pode localizar um veículo que esteja ocupado !");
				return 1;
			}
		}
		return 1;
	}
	CMD:dcarro(playerid, params[])
	{
		if(IsPlayerConnected(playerid))
		{
		    tmpzcmd = strtok(cmdtext, idxzcmd);
		    if(!strlen(tmpzcmd))
		    {
		        SendClientMessage(playerid, COR_GRAD2, "USE: /dcarro [carro id]");
		        return 1
		    }
		    new carroid;
		    carroid = strval(tmpzcmd);
		    if(PlayerInfo[playerid][pAdmin] >= 2)
		    {
		        for(new i = 0; i < MAX_PLAYERS; ++i)
	            {
		        	if(IsPlayerConnected(i))
		            {
			        	SetVehicleParamsForPlayer(carroid,i,0,0);
		            }
		        }
		        GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				format(gstring, sizeof(gstring), "AdmAviso: %s destrancou o carro %d.",PlayerName, carroid);
				ABroadCast(COR_AMARELO,gstring,1);
		    }
		    else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!");
				return 1;
			}
		}
	}
	CMD:trazercarro(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /trazercarro [carro id]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			plo = strval(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				GetPlayerPos(playerid, plocx, plocy, plocz);
				SetVehiclePos(plo,plocx,plocy+4, plocz);
				LinkVehicleToInterior(plo, 0);
				SetVehicleVirtualWorld(plo, 0);
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!");
				return 1;
			}
		}
		return 1;
	}
	CMD:setarcarroworld(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /setarcarroworld [carro id]");
				return 1;
			}
			new plo;
			plo = strval(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				SetVehicleVirtualWorld(plo, 0);
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!");
				return 1;
			}
		}
		return 1;
	}
	CMD:carroantigo(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 1338)
	        {
	        	if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
		    	format(gstring, sizeof(gstring), "ID do último carro: %d",gLastCar[playerid]);
		    	SendClientMessage(playerid, COR_GREY, gstring);
		    	return 1;
		    }
		    else
	        {
	            SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!");
	            return 1;
	        }
	    }
	    return 1;
	}
	CMD:abastecercarros(playerid, params[])// || CMD:ab(playerid, params[])
	{
		if(IsPlayerConnected(playerid))
	    {
        	if(PlayerInfo[playerid][pAdmin] < 3)
			{
			    SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando !");
			    return 1;
			}
			if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
	        for(new c; c != MAX_VEHICLES; c++)
			{
				Gas[c] = GasMax;
			}
			format(gstring, sizeof(gstring), "ADMIN CMD: %s Abasteceu Todos os Carros",sendername);
			SendClientMessageToAll(COR_LIGHTRED, gstring);
		}
		return 1;
	}
	CMD:eventodararma(playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdmin] >= 1338)
	    {
			new gun;
			new ammo;
			tmpzcmd = strtok(cmdtext, idxzcmd);
			gun = strval(tmpzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /eventodararma [weaponid(eg. 46 = Parachute)] [ammo]");
				SendClientMessage(playerid, COR_GRAD4, "3(Cassetete) 4(Faca) 5(Taco de Baseball) 6(Pá) 7(Espada) 8(Katana) 10-13(Vibrador) 14(Flores) 16(Granadas) 17(Granada Gás) 18(Molotovs) 22(Pistola)");
				SendClientMessage(playerid, COR_GRAD3, "23(Pistola com Silenciador) 24(Eagle) 25(Escopeta) 29(MP5) 30(AK47) 31(M4) 33(Rifle) 34(Sniper) 37(Lança Chamas) 41(spray) 42(extintor) 43(Camera) 46(Paraquedas)");
				return 1;
			}
			if(gun < 1 || gun > 46 || gun==44 || gun==45 || gun==9  || gun==26 || gun==27 || gun==28 || gun==32)
			{ SendClientMessage(playerid, COR_GRAD1, "ID Proibido!"); return 1; }
			tmpzcmd = strtok(cmdtext, idxzcmd);
			ammo = strval(tmpzcmd);
			if(ammo <1||ammo > 9999)
			{ SendClientMessage(playerid, COR_GRAD1, "O minimo de munição é 1 e o máximo é 999!"); return 1; }
			if (PlayerInfo[playerid][pAdmin] >= 1338)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    ForPlayers(i)
			    {
			        if(NaPorraDoEvento[i] == true)
			        {
						GivePlayerWeaponEx(i, gun, ammo);
						SetPlayerHealth(i, 100);
						SetPlayerArmour(i, 100);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, " Você não esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
	CMD:desarmarevento(playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdmin] >= 1338)
	    {
			if(IsPlayerConnected(playerid))
			{
				if (PlayerInfo[playerid][pAdmin] >= 1338)
				{
				    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
					{
						SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
						return 1;
					}
				    ForPlayers(i)
				    {
				        if(NaPorraDoEvento[i] == true)
				        {
							ResetPlayerWeaponsEx(i);
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COR_GRAD1, " Você não esta autorizado a usar este comando!");
				}
			}
		}
		return 1;
	}
	CMD:dararma(playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdmin] >= 1338)
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /dararma [ id ] [weaponid(eg. 46 = Parachute)] [ammo]");
				return 1;
			}
            new playa;
			new gun;
			new ammo;
			playa = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			gun = strval(tmpzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /dararma [ id ] [weaponid(eg. 46 = Parachute)] [ammo]");
				SendClientMessage(playerid, COR_GRAD4, "3(Cassetete) 4(Faca) 5(Taco de Baseball) 6(Pá) 7(Espada) 8(Katana) 10-13(Vibrador) 14(Flores) 16(Granadas) 17(Granada Gás) 18(Molotovs) 22(Pistola)");
				SendClientMessage(playerid, COR_GRAD3, "23(Pistola com Silenciador) 24(Eagle) 25(Escopeta) 29(MP5) 30(AK47) 31(M4) 33(Rifle) 34(Sniper) 37(Lança Chamas) 41(spray) 42(extintor) 43(Camera) 46(Paraquedas)");
				return 1;
			}
            if(PlayerInfo[playa][pGunLic] == 0)
			{
			   SendClientMessage(playerid, COR_GRAD1, "Este Jogador não possui licencas de armas !");
			   return 1;
			}
			if(PlayerInfo[playa][pLevel] == 2)
			{
               SendClientMessage(playerid, COR_GRAD1, "Você não pode dar licencas para novatos !");
			   return 1;
			}
			if(gun < 1 || gun > 46 || gun==44 || gun==45 || gun==9  || gun==26 || gun==27 || gun==28 || gun==32)
			{ SendClientMessage(playerid, COR_GRAD1, "ID Proibido!"); return 1; }
			tmpzcmd = strtok(cmdtext, idxzcmd);
			ammo = strval(tmpzcmd);
			if(ammo <1||ammo > 9999)
			{ SendClientMessage(playerid, COR_GRAD1, "O minimo de munição é 1 e o máximo é 999!"); return 1; }
			if (PlayerInfo[playerid][pAdmin] >= 1338)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						GivePlayerWeaponEx(playa, gun, ammo);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, " Você não esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
	CMD:encher(playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdmin] >= 3)
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /encher [id]");
				return 1;
			}
            new playa;
			playa = ReturnUser(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
				     SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				     return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            format(gstring, sizeof(gstring), "ADMIN CMD: %s teve a vida enchida por: %s",PlayerName(playa) ,PlayerName(playerid));
						ABroadCast(COR_LIGHTRED,gstring,1);
						SetPlayerHealth(playa, 100);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não pode usar este comando,use /matar");
			}
		}
		return 1;
	}
	CMD:darvida(playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdmin] >= 4)
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /darvida [ id ] [life]");
				return 1;
			}
            new playa;
			new health;
			playa = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			health = strval(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 1338)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
				     SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				     return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						SetPlayerHealth(playa, health);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não pode usar este comando,use /matar");
			}
		}
		return 1;
	}
	CMD:darcolete(playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdmin] >= 4)
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /darcolete [ id ] [armor]");
				return 1;
			}
            new playa;
			new health;
			playa = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			health = strval(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
				     SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				     return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						SetPlayerArmour(playa, health);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
	CMD:sequestrados(playerid, params[])
	{
		if(IsPlayerConnected(playerid))
	    {
	        if(!IsACop(playerid) && PlayerInfo[playerid][pAdmin] != 1 && PlayerInfo[playerid][pAdmin] != 2 && PlayerInfo[playerid][pAdmin] != 3 && PlayerInfo[playerid][pAdmin] != 4
			&& PlayerInfo[playerid][pAdmin] != 1337 && PlayerInfo[playerid][pAdmin] != 1338 && PlayerInfo[playerid][pAdmin] != 1339
			&& PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
			{
			    SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar este comando!");
			    return 1;
            }
			SendClientMessage(playerid, COR_VERDE, "Jogadores Sequestrados(Na Jaula):");
			for(new i = 0; i < MAX_PLAYERS; ++i)
			{
				if(IsPlayerConnected(i))
				{
				    if(SequestroAcontecendo == true)
				    {
						if(sequestradolocal[i] == 1)
						{
						     GetPlayerName(sequestradoid[i], sendername, sizeof(sendername));
						     format(gstring, 128, "%s: ID[%d] - Cativeiro[Cativeiro 1]", PlayerName(sequestradoid[i]), sequestradoid[i]);
      					     SendClientMessage(playerid, COR_GRAD1, gstring);
      					     return 1;
      					}
      					if(sequestradolocal[i] == 2)
						{
						     GetPlayerName(sequestradoid[i], sendername, sizeof(sendername));
						     format(gstring, 128, "%s: ID[%d] - Cativeiro[Cativeiro 2]", PlayerName(sequestradoid[i]), sequestradoid[i]);
      					     SendClientMessage(playerid, COR_GRAD1, gstring);
      					     return 1;
      					}
      					if(sequestradolocal[i] == 3)
						{
						     GetPlayerName(sequestradoid[i], sendername, sizeof(sendername));
						     format(gstring, 128, "%s: ID[%d] - Cativeiro[Cativeiro 3]", PlayerName(sequestradoid[i]), sequestradoid[i]);
      					     SendClientMessage(playerid, COR_GRAD1, gstring);
      					     return 1;
      					}
      					if(sequestradolocal[i] == 4)
						{
						     GetPlayerName(sequestradoid[i], sendername, sizeof(sendername));
						     format(gstring, 128, "%s: ID[%d] - Cativeiro[Cativeiro 4]", PlayerName(sequestradoid[i]), sequestradoid[i]);
      					     SendClientMessage(playerid, COR_GRAD1, gstring);
      					     return 1;
      					}
					}
				}
			}
		}
		return 1;
	}
	CMD:roubos(playerid, params[])
	{
		if(IsPlayerConnected(playerid))
	    {
	        if(!IsACop(playerid) && PlayerInfo[playerid][pAdmin] != 1 && PlayerInfo[playerid][pAdmin] != 2 && PlayerInfo[playerid][pAdmin] != 3 && PlayerInfo[playerid][pAdmin] != 4
			&& PlayerInfo[playerid][pAdmin] != 1337 && PlayerInfo[playerid][pAdmin] != 1338 && PlayerInfo[playerid][pAdmin] != 1339
			&& PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
			{
			    SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar este comando!");
			    return 1;
            }
			SendClientMessage(playerid, COR_VERDE, "Roubos Acontecendo:");
			for(new i = 0; i < MAX_PLAYERS; ++i)
			{
				if(IsPlayerConnected(i))
				{
				    if(ProvocoBanco[i] == 1)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(gstring, 128, "BANCO(LS) SENDO ROUBADO: [%d] segundos.", Contagem[i]);
      					SendClientMessage(playerid, COR_LIGHTRED, gstring);
      					return 1;
					}
					if(ProvocoLot[i] == 1)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(gstring, 128, "LOTÉRICA(LS) SENDO ROUBADA: [%d] segundos.", Contagem[i]);
      					SendClientMessage(playerid, COR_LIGHTRED, gstring);
      					return 1;
					}
					if(ProvocoMotel[i] == 1)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(gstring, 128, "MOTEL(LS) SENDO ROUBADO: [%d] segundos.", Contagem[i]);
      					SendClientMessage(playerid, COR_LIGHTRED, gstring);
      					return 1;
					}
					if(ProvocoLoja3[i] == 1)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(gstring, 128, "LOJA DE ARMAS 3 SENDO ROUBADA: [%d] segundos.", Contagem[i]);
      					SendClientMessage(playerid, COR_LIGHTRED, gstring);
      					return 1;
					}
					if(Provocolotlv[i] == 1)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(gstring, 128, "LOTÉRICA SENDO ROUBADA: [%d] segundos.", Contagem[i]);
      					SendClientMessage(playerid, COR_LIGHTRED, gstring);
      					return 1;
					}
					if(ProvocoLoja1[i] == 1)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(gstring, 128, "LOJA DE ARMAS 1(LS) SENDO ROUBADA: [%d] segundos.", Contagem[i]);
      					SendClientMessage(playerid, COR_LIGHTRED, gstring);
      					return 1;
					}
					if(ProvocoLoja2[i] == 1)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(gstring, 128, "LOJA DE ARMAS 2(LS) SENDO ROUBADA: [%d] segundos.", Contagem[i]);
      					SendClientMessage(playerid, COR_LIGHTRED, gstring);
      					return 1;
      				}
					if(ProvocoLoja3[i] == 1)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(gstring, 128, "LOJA DE ARMAS 3(LS) SENDO ROUBADA: [%d] segundos.", Contagem[i]);
      					SendClientMessage(playerid, COR_LIGHTRED, gstring);
      					return 1;
					}
					if(ProvocoPut[i] == 1)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(gstring, 128, "PUTEIRO(LS) SENDO ROUBADO: [%d] segundos.", Contagem[i]);
      					SendClientMessage(playerid, COR_LIGHTRED, gstring);
      					return 1;
      				}
					if(Provocoilha[i] == 1)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(gstring, 128, "ILHA PIRATA SENDO ROUBADO: [%d] segundos.", Contagem[i]);
      					SendClientMessage(playerid, COR_LIGHTRED, gstring);
      					return 1;
					}
					if(Provoconavio[i] == 1)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(gstring, 128, "NAVIO SENDO ROUBADO: [%d] segundos.", Contagem[i]);
      					SendClientMessage(playerid, COR_LIGHTRED, gstring);
      					return 1;
					}
					if(Provococaixa[i] == 1)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						format(gstring, 128, "CAIXA ELETRÔNICO SENDO ROUBADO: [%d] segundos.", Contagem[i]);
						SendClientMessage(playerid, COR_LIGHTRED, gstring);
						return 1;
					}
				}
			}
		}
		return 1;
	}
	CMD:tempo(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1337)
			{
			    SendClientMessage(playerid, COR_GRAD1, "Você não precisa ser um admin master para usar este comando!");
			    return 1;
			}
			if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
			    SendClientMessage(playerid, COR_BRANCO, "USE: /tempo [tempo id]");
			    return 1;
			}
			new name[MAX_PLAYER_NAME];
			GetPlayerName(playerid, name, sizeof(name));
			new weather;
			weather = strval(tmpzcmd);
			if(weather < 0||weather > 45) { SendClientMessage(playerid, COR_GREY, "Tempo id de 0 ~ 45 !"); return 1; }
			SetWeather(weather);
			format(gstring, 128, "[AdmAviso]: %s setou o tempo para %d",name,weather);
			ABroadCast(COR_AMARELO,gstring,1);
			SendClientMessage(playerid, COR_GREY, "Tempo setado!");
		}
		return 1;
	}
	CMD:setgrana(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /setgrana [ id ] [money]");
				return 1;
			}
            new playa;
			new money;
			playa = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			money = strval(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 1340)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            ResetPlayerMoneyEx(playa);
						ConsumingMoney[playa] = 1;
						GivePlayerMoneyEx(playa, money);
      					GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						format(gstring, sizeof(gstring), "Administrador Dono: %s setou %d de money para %s.",PlayerName(playerid),money,giveplayerzcm);
						GranaLog(gstring);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
	CMD:dargrana(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /dargrana [ id ] [money]");
				return 1;
			}
            new playa;
			new money;
			new name[MAX_PLAYER_NAME];
			playa = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			money = strval(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 1338)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            ConsumingMoney[playa] = 1;
						GivePlayerMoneyEx(playa, money);
		                GetPlayerName(playerid, name, sizeof(name));
			            GetPlayerName(playa, PlayerName, sizeof(PlayerName));
						format(gstring, 256, "ADMIN CMD: O Admin %s está dando R$%d para %s.",name,money,PlayerName);
						ABroadCast(COR_LIGHTRED,gstring,1);
						GranaLog(gstring);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
	CMD:setskin(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /setskin [playerid] [skin id]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			level = strval(tmpzcmd);
			if(level > 299 || level < 1) { SendClientMessage(playerid, COR_GREY, "id desconhecido!"); return 1; }
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pSkin] = level;
						format(gstring, sizeof(gstring), "O admin %s mudou sua Skin para %d", sendername,level);
						SendClientMessage(para1, COR_BRANCO, gstring);
						format(gstring, sizeof(gstring), "Você mudou a skin do %s para %d.", giveplayerzcm,level);
						SendClientMessage(playerid, COR_BRANCO, gstring);
					    SetPlayerSkin(para1, PlayerInfo[para1][pSkin]);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não tem permissão para usar esse comando!");
			}
		}
		return 1;
    }
    CMD:setworld(playerid, params[])//)
    {
         if(IsPlayerConnected(playerid))
         {
              if(PlayerInfo[playerid][pAdmin] < 1338)
              {
                   SendClientMessage(playerid, COR_GRAD1, "Você não tem autorização para usar esse comando.");
                   return 1;
              }
              if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
			  {
                   SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				   return 1;
			  }
              tmpzcmd = strtok(cmdtext, idxzcmd);
              if(!strlen(tmpzcmd))
              {
                   SendClientMessage(playerid, COR_GRAD2, "USE: /setworld [playerid] [virtualworld]");
                   return 1;
              }
              new para1;
              new world;
              para1 = ReturnUser(tmpzcmd);
              tmpzcmd = strtok(cmdtext, idxzcmd);
              if(!strlen(tmpzcmd))
              {
                   SendClientMessage(playerid, COR_GRAD2, "USE: /setworld [playerid] [virtualworld]");
                   return 1;
              }
              world = strval(tmpzcmd);
              if(IsPlayerConnected(para1))
              {
                   if(para1 != INVALID_PLAYER_ID)
                   {
                        format(gstring, sizeof(gstring), "* Você colocou o(a) %s no mundo [%d].", PlayerName(para1), world);
                        SendClientMessage(playerid, COR_LIGHTRED, gstring);
                        format(gstring, sizeof(gstring), "Admin %s setou o mundo [%d] em você.",PlayerName(playerid), world);
			            SendClientMessage(para1, COR_LIGHTRED, gstring);
				        SetPlayerVirtualWorld(para1, world);
                   }
              }
         }
	}
	CMD:resetlocalizadoint(playerid, params[])
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
		    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD5, "USE: /resetlocalizadoint [playerid]");
				return 1;
			}
			new para1;
			para1 = strval(tmpzcmd);
            localizadolj1[para1] = 0;
			localizadolj2[para1] = 0;
			localizadolj3[para1] = 0;
			localizadoRestaurante[para1] = 0;
			localizadoPizzaria[para1] = 0;
			locaizadoPenitenciariaLS[para1] = 0;
			localizadoLotericaLS[para1] = 0;
			localizardpgate[para1] = 0;
			localizarpref[para1] = 0;
			localizarpreflv[para1] = 0;
			localizardppm[para1] = 0;
			localizarcv[para1] = 0;
			localizargl[para1] = 0;
			localizarmotel[para1] = 0;
			localizarljlv[para1] = 0;
			localizar247gasstation[para1] = 0;
			localizar247postosul[para1] = 0;
			localizar247maddog[para1] = 0;
			localizar247pracadp[para1] = 0;
			localizar247barlv[para1] = 0;
			localizar247lv[para1] = 0;
			localizarvagos[para1] = 0;
			localizaryakuza[para1] = 0;
			localizarcosa[para1] = 0;
			localizardppc[para1] = 0;
			localizardpbope[para1] = 0;
			localizarrep[para1] = 0;
			localizardppf[para1] = 0;
			localizarballas[para1] = 0;
			localizarpcc[para1] = 0;
			localizarmecanico[para1] = 0;
			localizarcativeiro1[para1] = 0;
			localizarcativeiro2[para1] = 0;
			localizarcativeiro3[para1] = 0;
			localizarcativeiro4[para1] = 0;
			localizarbanco[para1] = 0;
			localizarcofrebanco[para1] = 0;
			localizarloja1[para1] = 0;
			localizarlotericals[para1] = 0;
			localizarlotericalv[para1] = 0;
			localizarloja2[para1] = 0;
			localizarloja3[para1] = 0;
			localizarbarlv[para1] = 0;
			localizaralqaeda[para1] = 0;
			localizartaliban[para1] = 0;
			localizargroove[para1] = 0;
			localizarhitman[para1] = 0;
			localizarassassins[para1] = 0;
			localizarada[para1] = 0;
			localizardprota[para1] = 0;
			localizarpen[para1] = 0;
			localizarpenlv[para1] = 0;
			localizarsons[para1] = 0;
			localizarmayans[para1] = 0;
			localizarsonsbanheiro[para1] = 0;
			localizaraztecas[para1] = 0;
			localizaralhambra[para1] = 0;
			localizarputeiro[para1] = 0;
			localizarcofrebancolv[para1] = 0;
			localizarbancolv[para1] = 0;
			format(gstring, sizeof(gstring), "Você resetou as variáveis de interior do jogador [%s].",PlayerName(para1));
			SendClientMessage(playerid, -1, gstring);
			format(gstring, sizeof(gstring), "ADMIN CMD: %s resetou as variáveis de interior do jogador [%s].",PlayerName(playerid),PlayerName(para1));
			ABroadCast(COR_LIGHTRED,gstring,1);
		}
		else
		{
	  		SendClientMessage(playerid,COR_GRAD5,"Você não tem permissão para usar esse comando!");
	 	}
		return 1;
	}
	CMD:versenha(playerid, params[])
    {
    	if(IsPlayerConnected(playerid))
    	{
    		new playa[64];
    		playa = strtok(cmdtext, idxzcmd);
            if(!strlen(playa))
    		{
    			SendClientMessage(playerid, COR_GRAD2, "Use: /versenha [nomejogador]");
    			return 1;
    		}
    		if(PlayerInfo[playerid][pAdmin] >= 1342)
    		{
                new arquivo[64];
                format(arquivo, sizeof(arquivo), Pasta_Contas, playa);
                if(!DOF2_FileExists(arquivo))
                {
                    SendClientMessage(playerid, COR_GRAD1, "Conta Inexistente!");
                    return true;
                }
                else
                {
	                format(gstring,sizeof(gstring), "Jogador: %s - Senha:[%s].", playa, DOF2_GetString(arquivo, "Key"));
					SendClientMessage(playerid, COR_AMARELO, gstring);
           		}
                return 1;
            }
    	}
    	return 1;
	}
	CMD:versenha(playerid, params[])
	{
		if(PlayerInfo[playerid][pAdmin] >= 1342)
		{
		    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD5, "USE: /versenha [playerid]");
				return 1;
			}
			new player[65];
			format(player, sizeof(playerid), Pasta_Contas, tmpzcmd);
			if(DOF2_FileExists(player))
			{
				format(gstring, sizeof(gstring), "Jogador: %s - Senha[%s].", tmpzcmd, DOF2_GetString(player, "Key"));
				ABroadCast(COR_LIGHTRED, gstring, 1);
			}
		}
		else
		{
	  		SendClientMessage(playerid,COR_GRAD5,"Você não tem permissão para usar esse comando!");
	 	}
		return 1;
	}
	CMD:fogo(playerid, params[])
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
		    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD5, "USE: /Fogo [playerid]");
				return 1;
			}
			new player1;
			player1 = strval(tmpzcmd);
			if(strcmp(PlayerName(player1),"Dudu_Insane(playerid, params[]) )
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não pode fazer colocar fogo no Dudu_Insane, KJKJKJKJKJKJ !");
				format(gstring, sizeof(gstring), "/fogo %d.", playerid);
				OnPlayerCommandText(player1, gstring);
				return 1;
			}
			new Float:burnx, Float:burny, Float:burnz;
			GetPlayerPos(player1,burnx, burny, burnz);
			CreateExplosion(burnx, burny , burnz + 3, 1, 3);
			format(gstring, sizeof(gstring), "ADMIN CMD: %s Colocou Fogo em %s",PlayerName(playerid),PlayerName(player1));
			ABroadCast(COR_LIGHTRED,gstring,1);
		}
		else
		{
	  		SendClientMessage(playerid,COR_GRAD5,"Você não tem permissão para usar esse comando!");
	 	}
		return 1;
	}
	CMD:tapa(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /tapa [id]");
				return 1;
			}
            new playa;
			new Float:slx, Float:sly, Float:slz;
			playa = ReturnUser(tmpzcmd);
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
           			if(playa != INVALID_PLAYER_ID)
			        {
			        	if(PlayerInfo[playa][pAdmin] >= 1340 && PlayerInfo[playerid][pAdmin] != 1342)
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não pode dar tapa em um Admin Dono !");
							return 1;
						}
						if(strcmp(PlayerName(playa),"Dudu_Insane(playerid, params[]) )
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não pode dar tapa em Dudu_Insane, KJKJKJKJKJKJ !");
       						format(gstring, sizeof(gstring), "/tapa %d.", playerid);
							OnPlayerCommandText(giveplayeridzcmd, gstring);
							return 1;
						}
				        GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerPos(playa, slx, sly, slz);
						SetPlayerPos(playa, slx, sly, slz+12);
						PlayerPlaySound(playa, 1130, slx, sly, slz+12);
						printf("ADMIN CMD: %s ganhou um tapa de: %s",sendername,  giveplayerzcm);
						format(gstring, sizeof(gstring), "ADMIN CMD: %s ganhou um tapa de: %s",giveplayerzcm ,sendername);
						ABroadCast(COR_LIGHTRED,gstring,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!");
			}
		}
		return 1;
 	}
	CMD:explodir(playerid, params[])
	{
	    GetPlayerName(playerid, sendername, sizeof(sendername));
		tmpzcmd = strtok(cmdtext, idxzcmd);
		if(!strlen(tmpzcmd) && PlayerInfo[playerid][pAdmin] >= 3)
		{
			SendClientMessage(playerid, COR_GREY, "/explodir [id]");
			return 1;
		}
		giveplayeridzcmd = strval(tmpzcmd);
		GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(IsPlayerConnected(giveplayeridzcmd))
		{
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
                if(PlayerInfo[giveplayeridzcmd][pAdmin] >= 1340 && PlayerInfo[playerid][pAdmin] != 1342)
			    {
			       SendClientMessage(playerid, COR_GRAD1, "Você não pode explodir um Admin Dono !");
			       return 1;
			    }
			    if(IsPlayerConnected(giveplayeridzcmd))
			    {
			        if(strcmp(PlayerName(giveplayeridzcmd),"Dudu_Insane(playerid, params[]) )
					{
						SendClientMessage(playerid, COR_GRAD1, "Você não pode explodir Dudu_Insane, KJKJKJKJKJKJ !");
						format(gstring, sizeof(gstring), "/explodir %d.", playerid);
						OnPlayerCommandText(giveplayeridzcmd, gstring);
						return 1;
					}
					format(gstring, sizeof(gstring), "ADMIN CMD: %s foi explodido por %s",giveplayerzcm, sendername);
					ABroadCast(COR_LIGHTRED,gstring,1);
					SetPlayerHealth(giveplayeridzcmd, 10);
					new Float:boomx, Float:boomy, Float:boomz;
					GetPlayerPos(giveplayeridzcmd,boomx, boomy, boomz);
					CreateExplosion(boomx, boomy , boomz, 7, 10);
					new PlayerName2[30];
					GetPlayerName(playerid, PlayerName2, 30);
					printf("[Admins] %s usou /explode em %s", PlayerName2, giveplayerzcm);
				}
				else
				{
					SendClientMessage(playerid, COR_GREY, "Esse jogador não está online.");
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar este comando!");
			}
		}
		else
		{
		    SendClientMessage(playerid, COR_GREY, "Você deve estar logado para usar o comando!");
		}
		return 1;
	}
	CMD:tapao(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /tapao [id]");
				return 1;
			}
            new playa;
			new Float:slx, Float:sly, Float:slz;
			playa = ReturnUser(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
                        if(PlayerInfo[playa][pAdmin] >= 1340 && PlayerInfo[playerid][pAdmin] != 1342)
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não pode dar tapão em um Administrador Dono !");
							return 1;
						}
						if(strcmp(PlayerName(playa),"Dudu_Insane(playerid, params[]) )
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não pode dar tapao em Dudu_Insane, KJKJKJKJKJKJ !");
       						format(gstring, sizeof(gstring), "/tapao %d.", playerid);
							OnPlayerCommandText(giveplayeridzcmd, gstring);
							return 1;
						}
				        GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerPos(playa, slx, sly, slz);
						SetPlayerPos(playa, slx, sly, slz+130);
						SetPlayerHealth(playerid, 100.0);
						PlayerPlaySound(playa, 1130, slx, sly, slz+130);
						printf("ADMIN CMD: %s slapped %s",sendername,  giveplayerzcm);
						format(gstring, sizeof(gstring), "ADMIN CMD: %s ganhou um tapao de: %s",giveplayerzcm ,sendername);
						ABroadCast(COR_LIGHTRED,gstring,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
	CMD:tapinha(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /tapinha [id]");
				return 1;
			}
            new playa;
			new Float:slx, Float:sly, Float:slz;
			playa = ReturnUser(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
                        if(PlayerInfo[playa][pAdmin] >= 1340 && PlayerInfo[playerid][pAdmin] != 1342)
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não pode dar tapão em um Administrador Dono !");
							return 1;
						}
						if(strcmp(PlayerName(playa),"Dudu_Insane(playerid, params[]) )
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não dar tapinha em Dudu_Insane, KJKJKJKJKJKJ !");
							format(gstring, sizeof(gstring), "/tapinha %d.", playerid);
							OnPlayerCommandText(giveplayeridzcmd, gstring);
							return 1;
						}
				        GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerPos(playa, slx, sly, slz);
						SetPlayerPos(playa, slx, sly, slz+2);
						SetPlayerHealth(playerid, 100.0);
						PlayerPlaySound(playa, 1130, slx, sly, slz+4);
						printf("ADMIN CMD: %s slapped %s",sendername,  giveplayerzcm);
						format(gstring, sizeof(gstring), "ADMIN CMD: %s ganhou um tapinha de: %s",giveplayerzcm ,sendername);
						ABroadCast(COR_LIGHTRED,gstring,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
    CMD:matar(playerid, params[]) || strcmp(cmd,"/kill)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /matar [id]");
				return 1;
			}
            new playa;
			playa = ReturnUser(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >=2)
			{
				if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
                        if(PlayerInfo[playa][pAdmin] >= 1340 && PlayerInfo[playerid][pAdmin] != 1342)
                        {
							SendClientMessage(playerid, COR_GRAD1, "Você não pode matar um Admin Dono !");
							return 1;
						}
						if(strcmp(PlayerName(playa),"Dudu_Insane(playerid, params[]) && playerid != giveplayeridzcmd)
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não pode matar Dudu_Insane, KJKJKJKJKJKJ !");
							format(gstring, sizeof(gstring), "/matar %d.", playerid);
							OnPlayerCommandText(giveplayeridzcmd, gstring);
							return 1;
						}
				        GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						SetPlayerHealth(playa, 0.0);
						SetPlayerVirtualWorld(playa,0);
						printf("ADMIN CMD: %s matou %s",sendername,  giveplayerzcm);
						format(gstring, sizeof(gstring), "ADMIN CMD: %s ganhou uma morte de: %s",giveplayerzcm ,sendername);
						ABroadCast(COR_LIGHTRED,gstring,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
	CMD:retirararmas(playerid, params[]) || strcmp(cmd,"/rarmas)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /rarmas [id]");
				return 1;
			}
            new playa;
			playa = ReturnUser(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            if(strcmp(PlayerName(playa),"Dudu_Insane(playerid, params[]) && playerid != giveplayeridzcmd)
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não pode retirar as armas de Dudu_Insane, KJKJKJKJKJKJ !");
							format(gstring, sizeof(gstring), "/retirararmas %d.", playerid);
							OnPlayerCommandText(giveplayeridzcmd, gstring);
							return 1;
						}
				        GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						ResetPlayerWeaponsEx(playa);
						Equipado[playa] = 0;
						printf("ADMIN CMD: %s retirou as armas de %s",sendername,  giveplayerzcm);
						format(gstring, sizeof(gstring), "ADMIN CMD: %s teve as armas retiradas por: %s",giveplayerzcm ,sendername);
						ABroadCast(COR_LIGHTRED,gstring,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
	///rarmasall
	CMD:calar(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /calar [id]");
				return 1;
			}
            new playa;
			playa = ReturnUser(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        if(PlayerInfo[playa][pAdmin] >= 1340 && PlayerInfo[playerid][pAdmin] != 1342)
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não pode calar um Admin Dono !");
							return 1;
						}
						if(strcmp(PlayerName(playa),"Dudu_Insane(playerid, params[]) && playerid != giveplayeridzcmd)
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não pode calar Dudu_Insane, KJKJKJKJKJKJ !");
							format(gstring, sizeof(gstring), "/calar %d.", playerid);
							OnPlayerCommandText(giveplayeridzcmd, gstring);
							return 1;
						}
					    GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(PlayerMutado[playa] == 0)
						{
							PlayerMutado[playa] = 1;
							printf("ADMIN CMD: %s calou %s",sendername,  giveplayerzcm);
							format(gstring, sizeof(gstring), "ADMIN CMD: %s foi calado por %s",giveplayerzcm ,sendername);
							ABroadCast(COR_LIGHTRED,gstring,1);
						}
						else
						{
							PlayerMutado[playa] = 0;
							printf("ADMIN CMD: %s descalou %s",sendername,  giveplayerzcm);
							format(gstring, sizeof(gstring), "ADMIN CMD: %s foi descalado por %s",giveplayerzcm ,sendername);
							ABroadCast(COR_LIGHTRED,gstring,1);
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
   	CMD:testegod(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /testegod [id]");
				return 1;
			}
            new playa;
			new Float:slx, Float:sly, Float:slz;
			playa = ReturnUser(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >=2)
			{
				if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1340)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
           			if(playa != INVALID_PLAYER_ID)
			        {
			        	if(PlayerInfo[playa][pAdmin] >= 1340 && PlayerInfo[playerid][pAdmin] < 1338)
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não pode dar testgods em um Admin Dono !");
							return 1;
						}
						if(strcmp(PlayerName(playa),"Dudu_Insane(playerid, params[]) )
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não pode fazer o teste no Dudu_Insane, KJKJKJKJKJKJ !");
       						format(gstring, sizeof(gstring), "/testegod %d.", playerid);
							OnPlayerCommandText(giveplayeridzcmd, gstring);
							return 1;
						}
				        GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						SetPlayerArmour(giveplayeridzcmd, 0);
						new Float:boomx, Float:boomy, Float:boomz;
						GetPlayerPos(playa, slx, sly, slz);
						SetPlayerPos(playa, slx, sly, slz+12);
						GetPlayerPos(playa,boomx, boomy, boomz);
						CreateExplosion(boomx, boomy , boomz, 7, 10);
						PlayerPlaySound(playa, 1130, slx, sly, slz+12);
						printf("ADMCMD: %s slapped %s",sendername,  giveplayerzcm);
                        if(AdminTrabalhando[playerid] == 1 && admhide[playerid] == 1)
                        {
							format(gstring, sizeof(gstring), "ADMCMD: %s Ganhou um Teste God de: Anônimo",giveplayerzcm);
						}
                        else
                        {
							format(gstring, sizeof(gstring), "ADMCMD: %s Ganhou um Teste God By: %s",giveplayerzcm ,sendername);
						}
						ABroadCast(COR_LIGHTRED,gstring,1);
                        SendClientMessage(playerid ,COR_LIGHTRED, "|ATENÇÃO| Verifique se o Player não está com o Relógio Travado.");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
    CMD:infoarmas(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_BRANCO, "USE: /infoarmas [id do player]");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] < 1)
			{
			  	SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar esse comando!");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			if(IsPlayerConnected(giveplayeridzcmd))
			{
				if(giveplayeridzcmd != INVALID_PLAYER_ID)
				{
				    new weapons[13][2];
				    new playerck[MAX_PLAYER_NAME];
				    GetPlayerName(giveplayeridzcmd, playerck, sizeof(playerck));
   					format(gstring, sizeof(gstring), "EXIBINDO AS INFORMAÇÕES DAS ARMAS DE: %s",playerck);
   					SendClientMessage(playerid, TEAM_BALLAS_COR, gstring);
                    GetPlayerWeaponData(giveplayeridzcmd, 2, weapons[2][0], weapons[2][1]);
				    format(gstring, sizeof(gstring), "Arma: %s,                Munição: %d",aNames[weapons[2][0]], weapons[2][1]);
   					SendClientMessage(playerid, COR_BRANCO, gstring);
				    GetPlayerWeaponData(giveplayeridzcmd, 3, weapons[3][0], weapons[3][1]);
				    format(gstring, sizeof(gstring), "Arma: %s,                Munição: %d",aNames[weapons[3][0]], weapons[3][1]);
   					SendClientMessage(playerid, COR_BRANCO, gstring);
				    GetPlayerWeaponData(giveplayeridzcmd, 4, weapons[4][0], weapons[4][1]);
				    format(gstring, sizeof(gstring), "Arma: %s,                Munição: %d",aNames[weapons[4][0]], weapons[4][1]);
   					SendClientMessage(playerid, COR_BRANCO, gstring);
   					GetPlayerWeaponData(giveplayeridzcmd, 5, weapons[5][0], weapons[5][1]);
				    format(gstring, sizeof(gstring), "Arma: %s,                Munição: %d",aNames[weapons[5][0]], weapons[5][1]);
   					SendClientMessage(playerid, COR_BRANCO, gstring);
   					GetPlayerWeaponData(giveplayeridzcmd, 6, weapons[6][0], weapons[6][1]);
				    format(gstring, sizeof(gstring), "Arma: %s,                Munição: %d",aNames[weapons[6][0]], weapons[6][1]);
   					SendClientMessage(playerid, COR_BRANCO, gstring);
   					GetPlayerWeaponData(giveplayeridzcmd, 7, weapons[7][0], weapons[7][1]);
				    format(gstring, sizeof(gstring), "Arma: %s,                Munição: %d",aNames[weapons[7][0]], weapons[7][1]);
   					SendClientMessage(playerid, COR_BRANCO, gstring);
   					GetPlayerWeaponData(giveplayeridzcmd, 8, weapons[8][0], weapons[8][1]);
				    format(gstring, sizeof(gstring), "Arma: %s,                Munição: %d",aNames[weapons[8][0]], weapons[8][1]);
   					SendClientMessage(playerid, COR_BRANCO, gstring);
   					GetPlayerWeaponData(giveplayeridzcmd, 9, weapons[9][0], weapons[9][1]);
				    format(gstring, sizeof(gstring), "Arma: %s,                Munição: %d",aNames[weapons[9][0]], weapons[9][1]);
   					SendClientMessage(playerid, COR_BRANCO, gstring);
   					GetPlayerWeaponData(giveplayeridzcmd, 11, weapons[11][0], weapons[11][1]);
				    format(gstring, sizeof(gstring), "Arma: %s,                Munição: %d",aNames[weapons[11][0]], weapons[11][1]);
  					SendClientMessage(playerid, COR_BRANCO, gstring);
		    	}
			}
        	else
	        {
	            SendClientMessage(playerid, COR_GREY, "Este jogador está off-line !");
	            return 1;
	        }
		}
	    return 1;
	}
	CMD:infoplayer(playerid, params[])
	{
	 	new armatext[30];
	    new municao;
	    new arma;
	    new Float:plrtempheal;
	    new Float:plrarmour;
	    new iplayer[MAX_PLAYER_NAME];
	    new plrIP[16];
	    new smunicao;
		if(IsPlayerConnected(playerid))
	    {
	        tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_BRANCO, "USE: /infoplayer [id do player]");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] < 4)
			{
			  	SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar esse comando!");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			if(IsPlayerConnected(giveplayeridzcmd))
			{
				if(giveplayeridzcmd != INVALID_PLAYER_ID)
				{
				    if(strcmp(PlayerName(giveplayeridzcmd),"Dudu_Insane(playerid, params[]) && playerid != giveplayeridzcmd)
					{
							SendClientMessage(playerid, COR_GRAD1, "Você não pode ver Dudu_Insane, KJKJKJKJKJKJ !");
							return 1;
					}
				    GetPlayerIp(giveplayeridzcmd, plrIP, sizeof(plrIP));
   					GetPlayerName(giveplayeridzcmd, iplayer, sizeof(iplayer));
			    	GetPlayerArmour(giveplayeridzcmd, plrarmour);
					GetPlayerHealth(playerid,plrtempheal);
					arma = GetPlayerWeapon(giveplayeridzcmd);
					municao = GetPlayerAmmo(giveplayeridzcmd);
					SendClientMessage(playerid, COR_GREEN, "|__________________ EXIBINDO INFORMAÇÕES __________________|");
					format(gstring, sizeof(gstring), "Nome: %s", iplayer);
					SendClientMessage(playerid, COR_GRAD1, gstring);
					format(gstring, sizeof(gstring), "IP: %s", plrIP);
					SendClientMessage(playerid, COR_GRAD1, gstring);
					format(gstring, sizeof(gstring), "Colete: %1f", plrarmour);
					SendClientMessage(playerid, COR_GRAD1, gstring);
					format(gstring, sizeof(gstring), "Saúde: %1f", plrtempheal);
					SendClientMessage(playerid, COR_GRAD1, gstring);
					if(arma == 38) { armatext = "Minigun"; }
					else if(arma == 40) { armatext = "Detonador"; }
					else if(arma == 36) { armatext = "Lança missil RPG"; }
					else if(arma == 35) { armatext = "Lança missil"; }
					else if(arma == 16) { armatext = "Granada"; }
					else if(arma == 18) { armatext = "Coctel Molotov"; }
					else if(arma == 22) { armatext = "Pistola de Duas mãos 9mm"; }
					else if(arma == 26) { armatext = "Escopeta de Cano Serrado"; }
					else if(arma == 27) { armatext = "Escopeta de Combate"; }
					else if(arma == 28) { armatext = "Micro Uzi"; }
					else if(arma == 32) { armatext = "Tec9"; }
					else if(arma == 37) { armatext = "Lança Chamas"; }
					else if(arma == 0) { armatext = "Desarmado"; }
                    else if(arma == 4) { armatext = "Faca"; }
                    else if(arma == 5) { armatext = "Bastão de Base Ball"; }
                    else if(arma == 9) { armatext = "Motoserra"; }
                    else if(arma == 14) { armatext = "Flores"; }
                    else if(arma == 17) { armatext = "Granada de Gas"; }
                    else if(arma == 23) { armatext = "Pistola com silênciador"; }
                    else if(arma == 16) { armatext = "Granada"; }
                    else if(arma == 24) { armatext = "Desert Eagle"; }
                    else if(arma == 25) { armatext = "ShotGun"; }
                    else if(arma == 29) { armatext = "MP5"; }
                    else if(arma == 30) { armatext = "AK-47"; }
                    else if(arma == 31) { armatext = "M4"; }
                    else if(arma == 33) { armatext = "Rifle"; }
                    else if(arma == 34) { armatext = "Rifle Sniper"; }
                    else if(arma == 41) { armatext = "Spray"; }
                    else if(arma == 42) { armatext = "Extintor"; }
                    else if(arma == 46) { armatext = "Paraquedas"; }
                    else { armatext = "Desconhecido"; }
                    format(gstring, sizeof(gstring), "Arma: %s", armatext);
					SendClientMessage(playerid, COR_GRAD1, gstring);
					if(arma == 38 || arma == 40 || arma == 36 || arma == 35 || arma == 16 || arma == 18 || arma == 26 || arma == 27 || arma == 28 || arma == 32 || arma == 37)
					{
					    SendClientMessage(playerid, COR_LIGHTRED, "/tvon nele, pois ele pode estar usando xiter de armas");
					}
					if(municao == 65535) { smunicao = 0; } else { smunicao = municao; }
					format(gstring, sizeof(gstring), "Munição: %d", smunicao);
					SendClientMessage(playerid, COR_GRAD1, gstring);
 				 }
			}
	        else
	        {
	            SendClientMessage(playerid, COR_GREY, "Este jogador está off-line !");
	            return 1;
	        }
		}
	    return 1;
	}
    CMD:guinchar)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(GetPlayerOrg(playerid) == 14 || IsACop(playerid))
		    {
		        if(IsPlayerInAnyVehicle(playerid))
		        {
			    	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 525)
		     	   	{
		     	   	    if(GetPlayerState(playerid)==2)
		     	   	    {
							new Float:pX,Float:pY,Float:pZ;
							GetPlayerPos(playerid,pX,pY,pZ);
							new Float:vX,Float:vY,Float:vZ;
							new Found=0;
							new vid=0;
							while((vid<MAX_VEHICLES)&&(!Found))
							{
			   					vid++;
			   					GetVehiclePos(vid,vX,vY,vZ);
			   					if ((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
								{
								    if(veiculospawn[vid] != 1)
								    {
								        SendClientMessage(playerid,COR_LIGHTBLUE,"Você não pode guinchar um veiculo que está spawnado na hq.");
			   							return 1;
								    }
			   				    	if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
			           				{
			   				        	DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
						           	}
						           	else
						           	{
					                   AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));
									}
			 					}
			     			}
                            if(!Found)
				 			{
			   					//SendClientMessage(playerid,COR_GREY,"Não tem nenhum carro perto.");
			   					//return 1;
			   				}
						}
						else
						{
							SendClientMessage(playerid, COR_GRAD2, "Você precisa estar dirigindo!");
							return 1;
						}
                    }
					else
					{
						SendClientMessage(playerid, COR_GRAD2, "Você não tem um Guincho!");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COR_GRAD2, "Você não está em um Guincho!");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid,COR_GRAD2,"Você não é mecanico/oficial!");
				return 1;
			}
		}
		return 1;
	}
	CMD:soltarmotos(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(GetPlayerOrg(playerid) == 14)
	        {
	            if(IsPlayerInAnyVehicle(playerid))
		        {
			    	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 498)
		     	   	{
		     	   	    if(GetPlayerState(playerid) == 2)
		     	   	    {
		     	   	        if(PlayerToPoint(50.0, playerid,2808.7634,-1445.2111,16.2311) || PlayerToPoint(100.0, playerid,1086.5616,2161.3308,10.8203))
    						{
			     	   	        if(MotoGuincho1[playerid] != 0)
			     	   	        {
			     	   	            new rand;
			     	   	        	new arquivo[64];
			     	   	            rand = random(sizeof(MotoMecSpawn));
			     	   	            SetVehicleVirtualWorld(MotoGuincho1[playerid], 0);
			     	   	            LinkVehicleToInterior(MotoGuincho1[playerid], 0);
			     	   	            SetVehiclePos(MotoGuincho1[playerid], MotoMecSpawn[rand][0], MotoMecSpawn[rand][1], MotoMecSpawn[rand][2]);
		                			format(arquivo, sizeof(arquivo), Pasta_CarrosFixados,MotoGuincho1[playerid]);
					                if(!DOF2_FileExists(arquivo))
					                {
					                    DOF2_CreateFile(arquivo);
					                    DOF2_SetFloat(arquivo,"PosX", MotoMecSpawn[rand][0]);
					                    DOF2_SetFloat(arquivo,"PosY", MotoMecSpawn[rand][1]);
					                	DOF2_SetFloat(arquivo,"PosZ", MotoMecSpawn[rand][2]);
					                	DOF2_SetFloat(arquivo,"Angulo", 0);
					                	format(gstring, sizeof(gstring), "Mecânico: %s fixou a moto:[%d] na hq mecânico ls, custo para recuperar:[3000].", PlayerName(playerid), MotoGuincho1[playerid]);
		                				SendFamilyMessage(14, COR_AMARELO, gstring);
					                }
					                MotoGuincho1[playerid] = 0;
			     	   	        }
			     	   	        if(MotoGuincho2[playerid] != 0)
			     	   	        {
			     	   	            new rand;
			     	   	        	new arquivo[64];
			     	   	            rand = random(sizeof(MotoMecSpawn));
			     	   	            SetVehicleVirtualWorld(MotoGuincho2[playerid], 0);
			     	   	            LinkVehicleToInterior(MotoGuincho2[playerid], 0);
			     	   	            SetVehiclePos(MotoGuincho2[playerid], MotoMecSpawn[rand][0], MotoMecSpawn[rand][1], MotoMecSpawn[rand][2]);
		                			format(arquivo, sizeof(arquivo), Pasta_CarrosFixados,MotoGuincho2[playerid]);
					                if(!DOF2_FileExists(arquivo))
					                {
					                    DOF2_CreateFile(arquivo);
					                    DOF2_SetFloat(arquivo,"PosX", MotoMecSpawn[rand][0]);
					                    DOF2_SetFloat(arquivo,"PosY", MotoMecSpawn[rand][1]);
					                	DOF2_SetFloat(arquivo,"PosZ", MotoMecSpawn[rand][2]);
					                	DOF2_SetFloat(arquivo,"Angulo", 0);
					                	format(gstring, sizeof(gstring), "Mecânico: %s fixou a moto:[%d] na hq mecânico ls, custo para recuperar:[3000].", PlayerName(playerid), MotoGuincho2[playerid]);
		                				SendFamilyMessage(14, COR_AMARELO, gstring);
					                }
					                MotoGuincho2[playerid] = 0;
			     	   	        }
			     	   	        if(MotoGuincho3[playerid] != 0)
			     	   	        {
			     	   	            new rand;
			     	   	        	new arquivo[64];
			     	   	            rand = random(sizeof(MotoMecSpawn));
			     	   	            SetVehicleVirtualWorld(MotoGuincho3[playerid], 0);
			     	   	            LinkVehicleToInterior(MotoGuincho3[playerid], 0);
			     	   	            SetVehiclePos(MotoGuincho3[playerid], MotoMecSpawn[rand][0], MotoMecSpawn[rand][1], MotoMecSpawn[rand][2]);
		                			format(arquivo, sizeof(arquivo), Pasta_CarrosFixados,MotoGuincho3[playerid]);
					                if(!DOF2_FileExists(arquivo))
					                {
					                    DOF2_CreateFile(arquivo);
					                    DOF2_SetFloat(arquivo,"PosX", MotoMecSpawn[rand][0]);
					                    DOF2_SetFloat(arquivo,"PosY", MotoMecSpawn[rand][1]);
					                	DOF2_SetFloat(arquivo,"PosZ", MotoMecSpawn[rand][2]);
					                	DOF2_SetFloat(arquivo,"Angulo", 0);
					                	format(gstring, sizeof(gstring), "Mecânico: %s fixou a moto:[%d] na hq mecânico ls, custo para recuperar:[3000].", PlayerName(playerid), MotoGuincho3[playerid]);
		                				SendFamilyMessage(14, COR_AMARELO, gstring);
					                }
					                MotoGuincho3[playerid] = 0;
			     	   	        }
			     	   	        if(MotoGuincho4[playerid] != 0)
			     	   	        {
			     	   	            new rand;
			     	   	        	new arquivo[64];
			     	   	            rand = random(sizeof(MotoMecSpawn));
			     	   	            SetVehicleVirtualWorld(MotoGuincho4[playerid], 0);
			     	   	            LinkVehicleToInterior(MotoGuincho4[playerid], 0);
			     	   	            SetVehiclePos(MotoGuincho4[playerid], MotoMecSpawn[rand][0], MotoMecSpawn[rand][1], MotoMecSpawn[rand][2]);
		                			format(arquivo, sizeof(arquivo), Pasta_CarrosFixados,MotoGuincho4[playerid]);
					                if(!DOF2_FileExists(arquivo))
					                {
					                    DOF2_CreateFile(arquivo);
					                    DOF2_SetFloat(arquivo,"PosX", MotoMecSpawn[rand][0]);
					                    DOF2_SetFloat(arquivo,"PosY", MotoMecSpawn[rand][1]);
					                	DOF2_SetFloat(arquivo,"PosZ", MotoMecSpawn[rand][2]);
					                	DOF2_SetFloat(arquivo,"Angulo", 0);
					                	format(gstring, sizeof(gstring), "Mecânico: %s fixou a moto:[%d] na hq mecânico ls, custo para recuperar:[3000].", PlayerName(playerid), MotoGuincho4[playerid]);
		                				SendFamilyMessage(14, COR_AMARELO, gstring);
					                }
					                MotoGuincho4[playerid] = 0;
			     	   	        }
			     	   	        if(MotoGuincho5[playerid] != 0)
			     	   	        {
                                    new rand;
			     	   	        	new arquivo[64];
			     	   	            rand = random(sizeof(MotoMecSpawn));
			     	   	            SetVehicleVirtualWorld(MotoGuincho5[playerid], 0);
			     	   	            LinkVehicleToInterior(MotoGuincho5[playerid], 0);
			     	   	            SetVehiclePos(MotoGuincho5[playerid], MotoMecSpawn[rand][0], MotoMecSpawn[rand][1], MotoMecSpawn[rand][2]);
		                			format(arquivo, sizeof(arquivo), Pasta_CarrosFixados,MotoGuincho5[playerid]);
					                if(!DOF2_FileExists(arquivo))
					                {
					                    DOF2_CreateFile(arquivo);
					                    DOF2_SetFloat(arquivo,"PosX", MotoMecSpawn[rand][0]);
					                    DOF2_SetFloat(arquivo,"PosY", MotoMecSpawn[rand][1]);
					                	DOF2_SetFloat(arquivo,"PosZ", MotoMecSpawn[rand][2]);
					                	DOF2_SetFloat(arquivo,"Angulo", 0);
					                	format(gstring, sizeof(gstring), "Mecânico: %s fixou a moto:[%d] na hq mecânico ls, custo para recuperar:[3000].", PlayerName(playerid), MotoGuincho5[playerid]);
		                				SendFamilyMessage(14, COR_AMARELO, gstring);
					                }
					                MotoGuincho5[playerid] = 0;
			     	   	        }
			     	   	        DOF2_SaveFile();
			     	   	    }
			     	   	    else
							{
						         SendClientMessage(playerid, COR_GRAD1, "Você não está na hq mecânicos !");
								 return 1;
							}
		     	   	    }
		     	   	    else
						{
							SendClientMessage(playerid, COR_GRAD2, "Você precisa estar dirigindo!");
							return 1;
						}
                    }
					else
					{
						SendClientMessage(playerid, COR_GRAD2, "Você não tem um boxville!");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COR_GRAD2, "Você não está em um boxville!");
					return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid,COR_GRAD2,"Você não é mecanico!");
				return 1;
			}
		}
	}
	CMD:guincharmoto(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(GetPlayerOrg(playerid) == 14)
	        {
	            if(IsPlayerInAnyVehicle(playerid))
		        {
			    	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 498)
		     	   	{
		     	   	    if(GetPlayerState(playerid) == 2)
		     	   	    {
	                        tmpzcmd = strtok(cmdtext, idxzcmd);
							if(!strlen(tmpzcmd))
							{
								SendClientMessage(playerid, COR_GRAD2, "USE: /guincharmoto [veiculo id]");
								return 1;
							}
							new Float:vx,Float:vy,Float:vz;
							new carroid;
							carroid = strval(tmpzcmd);
							GetVehiclePos(carroid, vx, vy, vz);
							if(PlayerToPoint(7.0, playerid, vx, vy,vz))
							{
							    if(veiculospawn[carroid] != 1)
							    {
							        SendClientMessage(playerid,COR_LIGHTBLUE,"Você não pode guinchar um veiculo que está spawnado na hq.");
			   						return 1;
							    }
							    if(!IsAMoto(carroid))
							    {
							        SendClientMessage(playerid, COR_GRAD1, "Este veículo não é uma moto !");
							        return 1;
							    }
							    if(VeiculoOcupado(carroid))
								{
								     SendClientMessage(playerid, COR_GRAD1, "Você não pode guinchar uma moto com alguem dentro !");
								     return 1;
							    }
							    if(!PmCarro(carroid) && !BopeCarro(carroid) && !ExercitoCarro(carroid) && !SamuCarro(carroid) && !AztecasCarro(carroid) && !TalibanCarros(carroid) && !GovernoCarros(carroid) && !HitmansCarros(carroid) && !GloboCarros(carroid) && !TaxistaCarros(carroid)
							    && !PFCarros(carroid) && !CNCarros(carroid) && !YakuzaCarros(carroid) && !GrooveCarros(carroid) && !AlqaedaCarros(carroid) && !PCCarros(carroid) && !BallasCarros(carroid) && !VagosCarros(carroid) && !CVCarros(carroid)
							    && !PccCarros(carroid) && !SonsCarros(carroid) && !MayansCarros(carroid) && !RotaCarros(carroid) && !MecanicosCarros(carroid) && !GateCarros(carroid) && !AssassinsCarros(carroid))
							    {
							        SendClientMessage(playerid, COR_GRAD1, "Você só pode guinchar motos de organizações !");
							        return 1;
							    }
			   				   	if(MotoGuincho1[playerid] == 0)
			   				   	{
			   				   	    MotoGuincho1[playerid] = carroid;
			   				   	    SetVehicleVirtualWorld(carroid, 20);
			   				   	    LinkVehicleToInterior(carroid, 1);
			   				   	    SetVehiclePos(carroid, 2085.1401,-1373.3632,305.5588);
			   				   	    format(gstring, sizeof(gstring), "Você guinchou a moto: [%d], para fixa-la na hq, use /soltarmotos.", carroid);
			   				   	    SendClientMessage(playerid, COR_GRAD1, gstring);
			   				   	}
			   				   	else if(MotoGuincho2[playerid] == 0)
			   				   	{
			   				   	    MotoGuincho2[playerid] = carroid;
			   				   	    SetVehicleVirtualWorld(carroid, 20);
			   				   	    LinkVehicleToInterior(carroid, 1);
			   				   	    SetVehiclePos(carroid, 2085.2268,-1375.3748,305.5588);
			   				   	    format(gstring, sizeof(gstring), "Você guinchou a moto: [%d], para fixa-la na hq, use /soltarmotos.", carroid);
			   				   	    SendClientMessage(playerid, COR_GRAD1, gstring);
			   				   	}
			   				   	else if(MotoGuincho3[playerid] == 0)
			   				   	{
			   				   	    MotoGuincho3[playerid] = carroid;
			   				   	    SetVehicleVirtualWorld(carroid, 20);
			   				   	    LinkVehicleToInterior(carroid, 1);
			   				   	    SetVehiclePos(carroid, 2082.4592,-1375.3235,305.5588);
			   				   	    format(gstring, sizeof(gstring), "Você guinchou a moto: [%d], para fixa-la na hq, use /soltarmotos.", carroid);
			   				   	    SendClientMessage(playerid, COR_GRAD1, gstring);
			   				   	}
			   				   	else if(MotoGuincho4[playerid] == 0)
			   				   	{
			   				   	    MotoGuincho4[playerid] = carroid;
			   				   	    SetVehicleVirtualWorld(carroid, 20);
			   				   	    LinkVehicleToInterior(carroid, 1);
			   				   	    SetVehiclePos(carroid, 2077.8906,-1374.2089,305.5588);
			   				   	    format(gstring, sizeof(gstring), "Você guinchou a moto: [%d], para fixa-la na hq, use /soltarmotos.", carroid);
			   				   	    SendClientMessage(playerid, COR_GRAD1, gstring);
			   				   	}
			   				   	else if(MotoGuincho5[playerid] == 0)
			   				   	{
			   				   	    MotoGuincho5[playerid] = carroid;
			   				   	    SetVehicleVirtualWorld(carroid, 20);
			   				   	    LinkVehicleToInterior(carroid, 1);
			   				   	    SetVehiclePos(carroid, 2081.0781,-1373.3550,305.5588);
			   				   	    format(gstring, sizeof(gstring), "Você guinchou a moto: [%d], para fixa-la na hq, use /soltarmotos.", carroid);
			   				   	    SendClientMessage(playerid, COR_GRAD1, gstring);
			   				   	}
			   				   	else
			   				   	{
			   				   	    SendClientMessage(playerid, COR_BRANCO, "Este box já possui 5 motos, use /soltarmotos na hq antes de guinchar mais!");
			   				   	    return 1;
			   				   	}
                            }
						}
						else
						{
							SendClientMessage(playerid, COR_GRAD2, "Você precisa estar dirigindo!");
							return 1;
						}
                    }
					else
					{
						SendClientMessage(playerid, COR_GRAD2, "Você não tem um boxville!");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COR_GRAD2, "Você não está em um boxville!");
					return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid,COR_GRAD2,"Você não é mecanico!");
				return 1;
			}
		}
		return 1;
	}
	CMD:admvcarro(playerid, params[])// || CMD:admvc(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD1, "USE: /admvcarro [Carro id]");
				return 1;
			}
			new vehid = strval(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 1338)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				new arquivo[64];
			    format(arquivo, sizeof(arquivo), Pasta_CarrosVIP, vehid);
				if(DOF2_FileExists(arquivo))
				{
				    if(IsPlayerOnline(DOF2_GetString(arquivo, "Dono")))
				    {
				        new idono = GetPlayerID(DOF2_GetString(arquivo, "Dono"));
				        PlayerInfo[idono][pCarKey] = 0;
				        RemovePlayerFromVehicleEx(idono);
                        SetVehiclePos(vehid, 268.6729, 2888.4353, 11.3289);
			     		SetVehicleVirtualWorld(vehid, 20);
				        format(gstring, sizeof(gstring), "O admin: %s, vendeu seu carro vip !",PlayerName(playerid));
			            SendClientMessage(idono, COR_AMARELO, gstring);
					}
					else
					{
					    new conta[64];
					    format(conta, sizeof(conta), Pasta_Contas, DOF2_GetString(arquivo, "Dono"));
					    if(DOF2_FileExists(conta))
						{
							DOF2_SetInt(conta, "CarroVIP", 0);
							DOF2_SetInt(conta, "OldCarroVIP", 0);
						}
						SetVehiclePos(vehid, 268.6729, 2888.4353, 11.3289);
			     		SetVehicleVirtualWorld(vehid, 20);
						DOF2_SaveFile();
					}
					DOF2_RemoveFile(arquivo);
					format(gstring, sizeof(gstring), "~w~Voce vendeu este veiculo");
					GameTextForPlayer(playerid, gstring, 10000, 3);
				}
				format(arquivo, sizeof(arquivo), Pasta_CarrosFixo, vehid);
				if(DOF2_FileExists(arquivo))
				{
				    if(IsPlayerOnline(DOF2_GetString(arquivo, "Dono")))
				    {
				        new idono = GetPlayerID(DOF2_GetString(arquivo, "Dono"));
				        PlayerInfo[idono][pCarFixo] = 0;
				        RemovePlayerFromVehicleEx(idono);
			            SetVehiclePos(vehid, 268.6729, 2888.4353, 11.3289);
			            SetVehicleVirtualWorld(vehid, 20);
				        format(gstring, sizeof(gstring), "O admin: %s, vendeu seu carro fixo !",PlayerName(playerid));
			            SendClientMessage(idono, COR_AMARELO, gstring);
					}
					else
					{
					    new conta[64];
					    format(conta, sizeof(conta), Pasta_Contas, DOF2_GetString(arquivo, "Dono"));
					    if(DOF2_FileExists(conta))
						{
							DOF2_SetInt(conta, "CarroFIXO", 0);
							DOF2_SetInt(conta, "OldCarroFIXO", 0);
						}
						SetVehiclePos(vehid, 268.6729, 2888.4353, 11.3289);
			     		SetVehicleVirtualWorld(vehid, 20);
						DOF2_SaveFile();
					}
					DOF2_RemoveFile(arquivo);
					format(gstring, sizeof(gstring), "~w~Voce vendeu este veiculo");
					GameTextForPlayer(playerid, gstring, 10000, 3);
				}
				format(arquivo, sizeof(arquivo), Pasta_CarrosTunados, vehid);
				if(DOF2_FileExists(arquivo))
				{
					DOF2_RemoveFile(arquivo);
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GREY, "Você não tem permissão para usar esse comando !");
			}
		}
		return 1;
	}
	CMD:carrocasa(playerid, params[])
	{

		if(PlayerInfo[playerid][pPHousekey] != 999)
		{
			ShowPlayerDialog(playerid, 14, DIALOG_STYLE_LIST, "Modificar Carro da Casa", "Modificar Cor Principal(R$300)\nModificar Cor Secundária(R$300)\nVer Modelos Disponíveis\nModificar Modelo(R$2000)\nSalvar Alterações", "Confirmar", "Cancelar");
		}
		else
		{

			SendClientMessage(playerid, COR_GRAD1, "Você não tem uma casa !");
			return 1;
		}
		return 1;
	}
	CMD:veiculo(playerid, params[])
    {
		GetPlayerName(playerid,PlayerName,sizeof(PlayerName));
	    tmpzcmd = strtok(cmdtext, idxzcmd);
	    if(!strlen(tmpzcmd))
	    {
	        SendClientMessage(playerid, COR_BRANCO, "USE: /veiculo ajuda para ver os comandos do seu carro permanente:");
	        return 1;
	    }
		if(strcmp(tmpzcmd, "ajuda(playerid, params[])
		{
	    	if(IsPlayerConnected(playerid))
	    	{
	        	if(PlayerInfo[playerid][pCarKey]!=0)
	        	{
					SendClientMessage(playerid, COR_GRAD2,"** (/v)eiculo ajuda - para ver os comandos do carro");
					SendClientMessage(playerid, COR_GRAD2,"** (/v)eiculo cor - para mudar a cor do carro");
					SendClientMessage(playerid, COR_GRAD2,"** (/v)eiculo estacionar - para estacionar o carro");
					SendClientMessage(playerid, COR_GRAD2,"** (/v)eiculo modelo - para mudar o modelo do carro");
					SendClientMessage(playerid, COR_GRAD2,"** (/v)eiculo localizar  - para localizar o seu carro");
					SendClientMessage(playerid, COR_GRAD2,"** (/v)eiculo trancar - para trancar o seu carro");
					SendClientMessage(playerid, COR_GRAD2,"** (/v)eiculo neon - para colocar neon em seu carro");
					SendClientMessage(playerid, COR_GRAD2,"** (/v)eiculo xenon - para colocar xenon em seu carro");
                    SendClientMessage(playerid, COR_GRAD2,"** (/v)eiculo destunar - para retirar o tunning do seu carro");
					return 1;
				}
				else
				{
				    SendClientMessage(playerid,COR_GRAD2,"** Você não tem um Veiculo! **");
				    return 1;
				}
			}
			return 1;
		}
        if(strcmp(tmpzcmd, "trancar(playerid, params[])
	    {
             if(PlayerInfo[playerid][pCarKey] == 0 && PlayerInfo[playerid][pCarFixo] == 0)
			 {
			      SendClientMessage(playerid, COR_GREY, "Você não tem um Veiculo.");
				  return 1;
			 }
			 new arquivo[64];
		  	 new keycar = PlayerInfo[playerid][pCarKey];
		  	 new carfixo = PlayerInfo[playerid][pCarFixo];
	    	 if(IsPlayerConnected(playerid))
	         {
				 if(PlayerInfo[playerid][pCarKey] >= 1 && PlayerInfo[playerid][pCarFixo] >= 1)//leo a1
				 {
				    return ShowPlayerDialog(playerid, 1833, DIALOG_STYLE_MSGBOX, "Trancar/Destrancar Veiculo", "Escolha qual veiculo deseja", "VIP", "Fixo");
				 }
				 if(PlayerInfo[playerid][pCarFixo] >= 1)
				 {
				     format(arquivo, sizeof(arquivo), Pasta_CarrosFixo, carfixo);
					 if(DOF2_FileExists(arquivo))
					 {
					     if(DOF2_GetInt(arquivo, "Trancado") == 1)
					     {
	                         DOF2_SetInt(arquivo, "Trancado", 0);
	                      	 DOF2_SaveFile();
	                      	 VTrancado[carfixo] = 0;
							 gCarLock[carfixo] = 0;
							 UnLockCar(carfixo);
	                      	 format(gstring, sizeof(gstring), "~w~Veiculo Fixo~g~ Aberto");
					      	 GameTextForPlayer(playerid, gstring, 10000, 3);
					      	 return 1;
					  	 }
					  	 else
					  	 {
					         DOF2_SetInt(arquivo, "Trancado", 1);
					         DOF2_SaveFile();
					         VTrancado[carfixo] = 1;
							 gCarLock[carfixo] = 1;
							 LockCar(carfixo);
					         format(gstring, sizeof(gstring), "~w~Veiculo Fixo~r~ Fechado");
					         GameTextForPlayer(playerid, gstring, 10000, 3);
					         return 1;
					     }
					 }
					 return 1;
				 }
				 else if(PlayerInfo[playerid][pCarKey] >= 1)
				 {
		             format(arquivo, sizeof(arquivo), Pasta_CarrosVIP, keycar);
					 if(DOF2_FileExists(arquivo))
					 {
					     if(DOF2_GetInt(arquivo, "Trancado") == 1)
					     {
	                         DOF2_SetInt(arquivo, "Trancado", 0);
	                      	 DOF2_SaveFile();
	                      	 VTrancado[keycar] = 0;
							 gCarLock[keycar] = 0;
							 UnLockCar(keycar);
	                      	 format(gstring, sizeof(gstring), "~w~Veiculo Vip~g~ Aberto");
					      	 GameTextForPlayer(playerid, gstring, 10000, 3);
					      	 return 1;
					  	 }
					  	 else
					  	 {
					         DOF2_SetInt(arquivo, "Trancado", 1);
					         DOF2_SaveFile();
					         VTrancado[keycar] = 1;
							 gCarLock[keycar] = 1;
							 LockCar(keycar);
					         format(gstring, sizeof(gstring), "~w~Veiculo Vip~r~ Fechado");
					         GameTextForPlayer(playerid, gstring, 10000, 3);
					         return 1;
					     }
					 }
				 }
			 }
			 return 1;
		}
		if(strcmp(tmpzcmd, "destunar(playerid, params[])
	    {
             if(PlayerInfo[playerid][pCarKey] == 0)
			 {
			      SendClientMessage(playerid, COR_GREY, "Você não tem um Veiculo.");
				  return 1;
			 }
			 new arquivo[64];
			 new carid;
			 if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarKey])
			 {
			 	carid = PlayerInfo[playerid][pCarKey];
			 	format(arquivo, sizeof(arquivo), Pasta_CarrosVIP, carid);
				if(DOF2_FileExists(arquivo))
				{
				     if(!strcmp(DOF2_GetString(arquivo, "Dono"), PlayerName(playerid)))
					 {
				         if(IsPlayerInVehicle(playerid,carid))
				 	     {
		                     new Float:carropos[3];
		                     new Float:Cangulo;
		                     GetVehiclePos(carid, carropos[0],carropos[1],carropos[2]);
		                  	 GetVehicleZAngle(carid, Cangulo);
					      	 CarrosTunados[carid][Tunamento1] = 0;
		                  	 CarrosTunados[carid][Tunamento2] = 0;
		                  	 CarrosTunados[carid][Tunamento3] = 0;
		                  	 CarrosTunados[carid][Tunamento4] = 0;
		                  	 CarrosTunados[carid][Tunamento5] = 0;
		                  	 CarrosTunados[carid][Tunamento6] = 0;
			                 CarrosTunados[carid][Tunamento7] = 0;
			                 CarrosTunados[carid][Tunamento8] = 0;
			                 CarrosTunados[carid][Tunamento9] = 0;
			                 CarrosTunados[carid][Tunamento10] = 0;
			                 CarrosTunados[carid][Tunamento11] = 0;
			                 CarrosTunados[carid][Tunamento12] = 0;
			                 CarrosTunados[carid][Tunamento13] = 0;
			                 CarrosTunados[carid][Tunamento14] = 0;
			                 CarrosTunados[carid][Tunamento15] = 0;
			                 CarrosTunados[carid][Tunamento16] = 0;
			                 CarrosTunados[carid][Tunamento17] = 0;
			                 CarrosTunados[carid][Pintura] = 0;
			                 CarrosTunados[carid][COR1] = 0;
			                 CarrosTunados[carid][COR2] = 0;
			                 SetVehicleToRespawn(carid);
			                 SetVehiclePos(PlayerInfo[playerid][pCarKey], carropos[0],carropos[1],carropos[2]);
			                 SetVehicleZAngle(PlayerInfo[playerid][pCarKey], Cangulo);
			                 PutPlayerInVehicle(playerid, PlayerInfo[playerid][pCarKey], 0);
			             }
			         }
				 }
			 }
			 else if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarFixo])
			 {
			 	carid = PlayerInfo[playerid][pCarFixo];
			 	format(arquivo, sizeof(arquivo), Pasta_CarrosFixo, carid);
				if(DOF2_FileExists(arquivo))
				{
				     if(!strcmp(DOF2_GetString(arquivo, "Dono"), PlayerName(playerid)))
					 {
				         if(IsPlayerInVehicle(playerid,carid))
				 	     {
		                     new Float:carropos[3];
		                     new Float:Cangulo;
		                     GetVehiclePos(carid, carropos[0],carropos[1],carropos[2]);
		                  	 GetVehicleZAngle(carid, Cangulo);
					      	 CarrosTunados[carid][Tunamento1] = 0;
		                  	 CarrosTunados[carid][Tunamento2] = 0;
		                  	 CarrosTunados[carid][Tunamento3] = 0;
		                  	 CarrosTunados[carid][Tunamento4] = 0;
		                  	 CarrosTunados[carid][Tunamento5] = 0;
		                  	 CarrosTunados[carid][Tunamento6] = 0;
			                 CarrosTunados[carid][Tunamento7] = 0;
			                 CarrosTunados[carid][Tunamento8] = 0;
			                 CarrosTunados[carid][Tunamento9] = 0;
			                 CarrosTunados[carid][Tunamento10] = 0;
			                 CarrosTunados[carid][Tunamento11] = 0;
			                 CarrosTunados[carid][Tunamento12] = 0;
			                 CarrosTunados[carid][Tunamento13] = 0;
			                 CarrosTunados[carid][Tunamento14] = 0;
			                 CarrosTunados[carid][Tunamento15] = 0;
			                 CarrosTunados[carid][Tunamento16] = 0;
			                 CarrosTunados[carid][Tunamento17] = 0;
			                 CarrosTunados[carid][Pintura] = 0;
			                 CarrosTunados[carid][COR1] = 0;
			                 CarrosTunados[carid][COR2] = 0;
			                 SetVehicleToRespawn(carid);
			                 SetVehiclePos(PlayerInfo[playerid][pCarFixo], carropos[0],carropos[1],carropos[2]);
			                 SetVehicleZAngle(PlayerInfo[playerid][pCarFixo], Cangulo);
			                 PutPlayerInVehicle(playerid, PlayerInfo[playerid][pCarFixo], 0);
			             }
			         }
				 }
			 }
			 return 1;
		}
		if(strcmp(tmpzcmd, "estacionar(playerid, params[])
	    {
			    new borse = PlayerInfo[playerid][pPHousekey];
			    if(CarroEstacionar[playerid] == 0)
			    {
			        if(borse != 999)
			        {
					    if (!PlayerToPoint(100, playerid,HouseInfo[borse][hEntrancex], HouseInfo[borse][hEntrancey], HouseInfo[borse][hEntrancez]))
					    {
					        SendClientMessage(playerid, COR_GREY, "Esteja na sua casa ou hq para estacionar, se não conseguir, procure um admin acima do nível 3!");
	                    	return 1;
					    }
				    }
				    else
				    {
				        SendClientMessage(playerid, COR_GREY, "Para mudar a localização do seu carro, fale com um admin master!");
	                    return 1;
				    }
			    }
			    new arquivo[64];
		    	new Float:x,Float:y,Float:z;
				new Float:a;
				new carid;
				new getcarid;
				carid = GetPlayerVehicleID(playerid);
				if(IsPlayerInVehicle(playerid,carid))
				{
					if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarKey])
					{
						carid = PlayerInfo[playerid][pCarKey];
					    getcarid = GetPlayerVehicleID(playerid);
						GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
						GetVehiclePos(carid, x, y, z);
						GetVehicleZAngle(carid, a);
	                    if(PlayerInfo[playerid][pCarKey] == 0)
						{
						    SendClientMessage(playerid, COR_GREY, "Você não tem um Veiculo!");
						    return 1;
						}
						if(GetPlayerState(playerid) != 2)
						{
						   SendClientMessage(playerid, COR_AMARELO, "Você precisa ser o motorista do veículo!");
						   return 1;
						}
	                	if(getcarid == carid)
		 				{
		 				    format(arquivo, sizeof(arquivo), Pasta_CarrosVIP, carid);
						    if(DOF2_FileExists(arquivo))
						    {
						        if(!strcmp(DOF2_GetString(arquivo, "Dono"), PlayerName(playerid)))
							    {
									DOF2_SetFloat(arquivo, "PosX", x);
									DOF2_SetFloat(arquivo, "PosY", y);
									DOF2_SetFloat(arquivo, "PosZ", z);
									DOF2_SetFloat(arquivo, "Angulo", a);
									DOF2_SaveFile();
									GameTextForPlayer(playerid, "~n~ VEICULO ESTACIONADO~n~ELE IRA NASCER AQUI. ~n~", 5000, 3);
									SendClientMessage(playerid, COR_VERMELHO, "Lembre-se,você tem que estacionar em casa ou na sua hq(caso contrário levará aviso)!");
									if(CarroEstacionar[playerid] == 0)
									{
									    SendClientMessage(playerid, COR_VERMELHO, "Você estacionou por conta própria, seu veículo tem obrigação de estar dentro de uma vaga!");
									    SendClientMessage(playerid, COR_VERMELHO, "Se o seu veículo for visto estacionado em frente a portões / entradas, você levará aviso!");
	                                    format(gstring, 128, "[ADMAVISO] Jogador %s[%d] estacionou o veiculo vip por conta própria, fique de olho.",PlayerName(playerid),playerid);
			 							SendMessageToOthersAdmins(playerid, COR_AMARELO, gstring);
									}
			                        SetVehicleToRespawn(carid);
			                        SetVehicleZAngle(carid, a);
									TogglePlayerControllable(playerid, 1);
		 							CarroEstacionar[playerid] = 0;
								}
							}
							return 1;
	   					}
					}
					else if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarFixo])
			 		{
			 		    carid = PlayerInfo[playerid][pCarFixo];
					    getcarid = GetPlayerVehicleID(playerid);
						GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
						GetVehiclePos(carid, x, y, z);
						GetVehicleZAngle(carid, a);
	                    if(PlayerInfo[playerid][pCarFixo] == 0)
						{
						    SendClientMessage(playerid, COR_GREY, "Você não tem um Veiculo!");
						    return 1;
						}
						if(GetPlayerState(playerid) != 2)
						{
						   SendClientMessage(playerid, COR_AMARELO, "Você precisa ser o motorista do veículo!");
						   return 1;
						}
	                	if(getcarid == carid)
		 				{
						 	format(arquivo, sizeof(arquivo), Pasta_CarrosFixo, carid);
							if(DOF2_FileExists(arquivo))
							{
							     if(!strcmp(DOF2_GetString(arquivo, "Dono"), PlayerName(playerid)))
								 {
									DOF2_SetFloat(arquivo, "PosX", x);
									DOF2_SetFloat(arquivo, "PosY", y);
									DOF2_SetFloat(arquivo, "PosZ", z);
									DOF2_SetFloat(arquivo, "Angulo", a);
									DOF2_SaveFile();
									GameTextForPlayer(playerid, "~n~ VEICULO ESTACIONADO~n~ELE IRA NASCER AQUI. ~n~", 5000, 3);
									SendClientMessage(playerid, COR_VERMELHO, "Lembre-se,você tem que estacionar em casa ou na sua hq(caso contrário levará aviso)!");
									if(CarroEstacionar[playerid] == 0)
									{
									    SendClientMessage(playerid, COR_VERMELHO, "Você estacionou por conta própria, seu veículo tem obrigação de estar dentro de uma vaga!");
									    SendClientMessage(playerid, COR_VERMELHO, "Se o seu veículo for visto estacionado em frente a portões / entradas, você levará aviso!");
	                                    format(gstring, 128, "[ADMAVISO] Jogador %s[%d] estacionou o veiculo fixo por conta própria, fique de olho.",PlayerName(playerid),playerid);
			 							SendMessageToOthersAdmins(playerid, COR_AMARELO, gstring);
									}
			                        DestroyVehicle(carid);
									CreateVehicle(DOF2_GetInt(arquivo, "ModeloCarro"),DOF2_GetFloat(arquivo, "PosX"),DOF2_GetFloat(arquivo, "PosY"),DOF2_GetFloat(arquivo, "PosZ")+1.0,DOF2_GetFloat(arquivo, "Angulo"),DOF2_GetInt(arquivo, "cor1"),DOF2_GetInt(arquivo, "cor2"),-1);
									TogglePlayerControllable(playerid, 1);
		 							CarroEstacionar[playerid] = 0;
								}
							}
							return 1;
	   					}
			 		}
			 		else
			 		{
			 		    SendClientMessage(playerid, COR_GREY, "Esse não é seu Carro VIP/FIXO.");
				     	return 1;
			 		}
				}
		        return 1;
	    }
	    if(strcmp(tmpzcmd, "neon(playerid, params[])
	    {
			new carid = GetPlayerVehicleID(playerid);
			new modelo = GetVehicleModel(carid);
			if(PlayerInfo[playerid][pCarKey] == 0)
			{
			     SendClientMessage(playerid, COR_GREY, "Você não tem um Veiculo!");
			     return 1;
			}
			if(modelo == 522 || modelo == 509 || modelo == 452 || modelo == 447 || modelo == 511
			|| modelo == 462 || modelo == 481 || modelo == 446 || modelo == 469 || modelo == 464
			|| modelo == 521 || modelo == 510 || modelo == 454 || modelo == 488 || modelo == 519
			|| modelo == 461 || modelo == 539 || modelo == 548 || modelo == 520 || modelo == 460
			|| modelo == 463 || modelo == 472 || modelo == 425 || modelo ==  476
			|| modelo == 581 || modelo == 473 || modelo == 417 || modelo == 593
			|| modelo == 448 || modelo == 493 || modelo == 487 || modelo == 553
			|| modelo == 586 || modelo ==  595 || modelo == 497|| modelo == 513
			|| modelo == 523 || modelo == 484 || modelo == 563 || modelo == 512
			|| modelo == 468 || modelo == 430 || modelo == 501 || modelo == 577
			|| modelo == 471 || modelo == 453 || modelo == 465 || modelo == 592)
			{
			     SendClientMessage(playerid, COR_GRAD2, "Modelo proibido");
			     return 1;
			}
           	new arquivo[64];
			format(arquivo, sizeof(arquivo), Pasta_CarrosVIP, carid);
			new arquivo2[64];
			format(arquivo2, sizeof(arquivo2), Pasta_CarrosFixo, carid);
			if(DOF2_FileExists(arquivo) || DOF2_FileExists(arquivo2))
			{
			    if(!strcmp(DOF2_GetString(arquivo, "Dono"), PlayerName(playerid)) || !strcmp(DOF2_GetString(arquivo2, "Dono"), PlayerName(playerid)))
				{
           			if(IsPlayerInVehicle(playerid,carid))
					{
                 		ShowPlayerDialog(playerid,106,DIALOG_STYLE_LIST,"Escolha a Cor do Neon","Azul\nVermelho\nVerde\nBranco\nRosa\nAmarelo\nRemover Tudo","Colocar","Cancelar");
                 	}
                }
			}
		    return 1;
	    }
	    if(strcmp(tmpzcmd, "xenon(playerid, params[])
	    {
			new carid = GetPlayerVehicleID(playerid);
			new modelo = GetVehicleModel(carid);
			if(PlayerInfo[playerid][pCarKey] == 0)
			{
			     SendClientMessage(playerid, COR_GREY, "Você não tem um Veiculo!");
			     return 1;
			}
			if(modelo == 522 || modelo == 509 || modelo == 452 || modelo == 447 || modelo == 511
			|| modelo == 462 || modelo == 481 || modelo == 446 || modelo == 469 || modelo == 464
			|| modelo == 521 || modelo == 510 || modelo == 454 || modelo == 488 || modelo == 519
			|| modelo == 461 || modelo == 539 || modelo == 548 || modelo == 520 || modelo == 460
			|| modelo == 463 || modelo == 472 || modelo == 425 || modelo ==  476
			|| modelo == 581 || modelo == 473 || modelo == 417 || modelo == 593
			|| modelo == 448 || modelo == 493 || modelo == 487 || modelo == 553
			|| modelo == 586 || modelo ==  595 || modelo == 497|| modelo == 513
			|| modelo == 523 || modelo == 484 || modelo == 563 || modelo == 512
			|| modelo == 468 || modelo == 430 || modelo == 501 || modelo == 577
			|| modelo == 471 || modelo == 453 || modelo == 465 || modelo == 592)
			{
			     SendClientMessage(playerid, COR_GRAD2, "Modelo proibido");
			     return 1;
			}
			new arquivo[64];
			format(arquivo, sizeof(arquivo), Pasta_CarrosVIP, carid);
			new arquivo2[64];
			format(arquivo2, sizeof(arquivo2), Pasta_CarrosFixo, carid);
			if(DOF2_FileExists(arquivo) || DOF2_FileExists(arquivo2))
			{
			    if(!strcmp(DOF2_GetString(arquivo, "Dono"), PlayerName(playerid)) || !strcmp(DOF2_GetString(arquivo2, "Dono"), PlayerName(playerid)))
				{
           			if(IsPlayerInVehicle(playerid,carid))
					{
                 	    if(luz[playerid] == 0)
                 	    {
					        SendClientMessage(playerid, COR_GRAD1, "Você precisa ligar o farol do veículo para instalar o xenon !");
					        return 1;
                 	    }
                  	    if(bites[playerid][xenonazulb] == 0 && bites[playerid][xenonrojob] == 0 && bites[playerid][xenonverdeb] == 0)
                 	    {
                            ShowPlayerDialog(playerid,165,DIALOG_STYLE_LIST,"Escolha a Cor do Xenon","Azul\nVerde\nVermelho","Colocar","Cancelar");
                 	    }
	                    else if(bites[playerid][xenonazulb] == 1)
		                {
		                    DestroyDynamicObject(xenonazul1[playerid]);
		                    DestroyDynamicObject(xenonazul2[playerid]);
			                DestroyDynamicObject(xenonazul3[playerid]);
			                DestroyDynamicObject(xenonazul4[playerid]);
			                ///////////////////////////////////////////////borrar variables
			                DeletePVar(playerid,xenonazul1[playerid]);
			                DeletePVar(playerid,xenonazul2[playerid]);
			                DeletePVar(playerid,xenonazul3[playerid]);
			                DeletePVar(playerid,xenonazul4[playerid]);
			                ////////////////////////////////////////////////////////////////
			                bites[playerid][xenonazulb] = 0;
			                SendClientMessage(playerid, COR_LIGHTBLUE, "Você retirou o xenon do seu veículo !");
		                    return 1;
		                }
	                    else if(bites[playerid][xenonverdeb] == 1)
	                    {
		                    DestroyDynamicObject(xenonverde1[playerid]);
		                    DestroyDynamicObject(xenonverde2[playerid]);
		                    DestroyDynamicObject(xenonverde3[playerid]);
		                    DestroyDynamicObject(xenonverde4[playerid]);
		                    ///////////////////////////////////////////////borrar variables
		                    DeletePVar(playerid,xenonverde1[playerid]);
		                    DeletePVar(playerid,xenonverde2[playerid]);
		                    DeletePVar(playerid,xenonverde3[playerid]);
		                    DeletePVar(playerid,xenonverde4[playerid]);
		                    ////////////////////////////////////////////////////////////////
		                    bites[playerid][xenonverdeb] = 0;
		                    SendClientMessage(playerid, COR_LIGHTBLUE, "Você retirou o xenon do seu veículo !");
	                        return 1;
		                }
	                    else if(bites[playerid][xenonrojob] == 1)
	                    {
		                    DestroyDynamicObject(xenonrojo1[playerid]);
		                    DestroyDynamicObject(xenonrojo2[playerid]);
		                    DestroyDynamicObject(xenonrojo3[playerid]);
		                    DestroyDynamicObject(xenonrojo4[playerid]);
		                    ///////////////////////////////////////////////borrar variables
		                    DeletePVar(playerid,xenonrojo1[playerid]);
		                    DeletePVar(playerid,xenonrojo2[playerid]);
		                    DeletePVar(playerid,xenonrojo3[playerid]);
		                    DeletePVar(playerid,xenonrojo4[playerid]);
		                    ////////////////////////////////////////////////////////////////
		                    bites[playerid][xenonrojob] = 0;
		                    SendClientMessage(playerid, COR_LIGHTBLUE, "Você retirou o xenon do seu veículo !");
	                        return 1;
	                    }
	                }
				}
			}
		    return 1;
	    }
	    if(strcmp(tmpzcmd, "modelo(playerid, params[])
	    {
            if(PlayerInfo[playerid][pCarKey] == 0 && PlayerInfo[playerid][pCarFixo] == 0)
			{
			     SendClientMessage(playerid, COR_GREY, "Você não tem um Veiculo!");
			     return 1;
			}
			if(GetPlayerMoney(playerid) < 1000)
			{
			    return SendClientMessage(playerid, COR_AMARELO, "Você não tem grana o suficiente para isso!");
			}
			if(GetPlayerState(playerid) != 2)
			{
				return SendClientMessage(playerid, COR_AMARELO, "Você precisa ser o motorista do veículo!");
			}
			if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarKey])
			{
				ShowModelSelectionMenu(playerid, carrosviplist, "Selecione o Modelo");
			}
			else if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarFixo])
			{
				ShowModelSelectionMenu(playerid, carrosviplist, "Selecione o Modelo");
			}
	    }
		if(strcmp(tmpzcmd, "cor(playerid, params[])
	    {
			if(PlayerInfo[playerid][pCarKey] == 0)
			{
			    SendClientMessage(playerid, COR_GREY, "Você não tem um Veiculo  Vip!");
			    return 1;
			}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
			    SendClientMessage(playerid, COR_GRAD2, "USE: /veiculo cor [cor 1] [cor 2]");
			    return 1;
			}
			new carid;
			new getcarid;
			new colorv1;
			colorv1 = strval(tmpzcmd);
			if(colorv1 < 0 || colorv1 > 186) { SendClientMessage(playerid, COR_GREY, "Numero de cores nao pode ser inferior a 0 ou acima de 186 !"); return 1; }
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /veiculo cor [cor 1] [cor 2]");
				return 1;
			}
			new arquivo[64];
			new colorv2;
			colorv2 = strval(tmpzcmd);
			if(colorv2 < 0 || colorv2 > 186) { SendClientMessage(playerid, COR_GREY, "Numero de cores nao pode ser inferior a 0 ou acima de 186 !"); return 1; }
            if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarKey])
			{
				carid = PlayerInfo[playerid][pCarKey];
	            format(arquivo, sizeof(arquivo), Pasta_CarrosVIP, carid);
				if(DOF2_FileExists(arquivo))
				{
				    if(!strcmp(DOF2_GetString(arquivo, "Dono"), PlayerName(playerid)))
					{
	           			if(IsPlayerInVehicle(playerid,carid))
						{
							getcarid = GetPlayerVehicleID(playerid);
						    if(getcarid == carid)
			                {
							     DOF2_SetInt(arquivo, "cor1", colorv1);
							     DOF2_SetInt(arquivo, "cor2", colorv2);
							     DOF2_SaveFile();
			                     format(gstring, sizeof(gstring), "| Cor do seu Carro VIP Mudado! |~n~-R$300.");
			                     GameTextForPlayer(playerid, gstring, 10000, 3);
			                     ChangeVehicleColor(carid,colorv1,colorv2);
			                     TogglePlayerControllable(playerid, 1);
			                     return 1;
			                }
							return 1;
						}
					}
				}
			}
			else if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarFixo])
			{
				carid = PlayerInfo[playerid][pCarFixo];
	            format(arquivo, sizeof(arquivo), Pasta_CarrosFixo, carid);
				if(DOF2_FileExists(arquivo))
				{
				    if(!strcmp(DOF2_GetString(arquivo, "Dono"), PlayerName(playerid)))
					{
	           			if(IsPlayerInVehicle(playerid,carid))
						{
							getcarid = GetPlayerVehicleID(playerid);
						    if(getcarid == carid)
			                {
							     DOF2_SetInt(arquivo, "cor1", colorv1);
							     DOF2_SetInt(arquivo, "cor2", colorv2);
							     DOF2_SaveFile();
			                     format(gstring, sizeof(gstring), "| Cor do seu Carro Fixo Mudado! |~n~-R$300.");
			                     GameTextForPlayer(playerid, gstring, 10000, 3);
			                     ChangeVehicleColor(carid,colorv1,colorv2);
			                     TogglePlayerControllable(playerid, 1);
			                     return 1;
			                }
							return 1;
						}
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "Esse não é seu Carro VIP.");
				return 1;
			}
			return 1;
 	    }
 	    if(strcmp(tmpzcmd, "localizar(playerid, params[])
	    {
	         if(PlayerInfo[playerid][pCarKey] == 0 && PlayerInfo[playerid][pCarFixo] == 0)
    	     {
	   	 		 SendClientMessage(playerid, COR_LIGHTRED, "Você não possui um carro !");
	   			 return 1;
    	     }
	         if(PlayerInfo[playerid][pCarKey] >= 1 && PlayerInfo[playerid][pCarFixo] >= 1)//leo 1
		     {
			    return ShowPlayerDialog(playerid, 1835, DIALOG_STYLE_MSGBOX, "Localizar Veiculo", "Escolha qual veiculo deseja", "VIP", "Fixo");
			 }
			 else
			 {
				 new Float:x,Float:y,Float:z;
				 new Veiculoo = PlayerInfo[playerid][pCarKey];
				 new VeiculoFixo = PlayerInfo[playerid][pCarFixo];
				 if(PlayerInfo[playerid][pCarFixo] >= 1)
				 {
			    	 GetVehiclePos(VeiculoFixo, x, y, z);
					 SetPlayerCheckpoint(playerid, x,y,z, 6);
					 GameTextForPlayer(playerid, "~r~mapa do carro fixo marcado!", 5000, 1);
					 return 1;
				 }
				 else if(PlayerInfo[playerid][pCarKey] >= 1)
				 {
				     GetVehiclePos(Veiculoo, x, y, z);
					 SetPlayerCheckpoint(playerid, x,y,z, 6);
					 GameTextForPlayer(playerid, "~r~mapa do carro vip marcado!", 5000, 1);
					 return 1;
			     }
		     }
 	    }
 	    return 1;
    }
	CMD:dominar(playerid, params[])// || CMD:do(playerid, params[])
	{
		if(IsPlayerInAnyVehicle(playerid) || GetPlayerSpecialAction(playerid) == 2)
		{
			SendClientMessage(playerid, COR_GRAD5, "Você não pode usar esse comando dentro de um veículo/jetpack.");
			return 1;
		}
		if(GetTickCount() - TempoDominar[playerid] < 5000)
		{
			SendClientMessage(playerid, COR_GREY, "Você só pode usar este comando a cada 5 segundos !");
			return 1;
		}
		/*
		if(MenuTR[playerid] == 0)
		{
			SendClientMessage(playerid, COR_GRAD5, "Você não está no menu territorial.");
			return 1;
		}
		*/
		if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
		{
            if(IsPlayerInMata(playerid))
			{
			    if(Dominando[playerid] == 1)
			    {
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
			    }
			    if(GuerranaMata == 1)
			    {
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
			    }
			    TempoDominar[playerid] = GetTickCount();
				GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e o Exército estão dominando a Mata!",PlayerName);
				          SendClientMessage(i, COR_EXE, gstring);
				     }
				}
				SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
				SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZMata,COR_EXE);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoMata[playerid] = 1;
                GuerranaMata = 1;
 				TempoGuerraMata = SetTimerEx("GuerraMata", 60000, 0, "i", playerid);
		        return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD3, "Você não está em nenhum território!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
		{
            if(IsPlayerInMata(playerid))
			{
			    if(Dominando[playerid] == 1)
			    {
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
			    }
			    if(GuerranaMata == 1)
			    {
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
			    }
			    TempoDominar[playerid] = GetTickCount();
				GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[playerid][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e a Taliban estão dominando a Mata!",PlayerName);
				          SendClientMessage(i, COR_TAL, gstring);
				     }
				}
				SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
				SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZMata,COR_TAL);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoMata[playerid] = 1;
                GuerranaMata = 1;
 				TempoGuerraMata = SetTimerEx("GuerraMata", 60000, 0, "i", playerid);
		        return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD3, "Você não está em nenhum território!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
		{
            if(IsPlayerInMata(playerid))
			{
			    if(Dominando[playerid] == 1)
			    {
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
			    }
			    if(GuerranaMata == 1)
			    {
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
			    }
			    TempoDominar[playerid] = GetTickCount();
				GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e a Al'qaeda estão dominando a Mata!",PlayerName);
				          SendClientMessage(i, COR_AL, gstring);
				     }
				}
				SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
				SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZMata,COR_AL);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoMata[playerid] = 1;
                GuerranaMata = 1;
 				TempoGuerraMata = SetTimerEx("GuerraMata", 60000, 0, "i", playerid);
		        return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD3, "Você não está em nenhum território!");
			}
			return 1;
	    }
	    if(PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)//Máfia Cosa Nostra
		{
			if(IsPlayerInCasarao(playerid))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		if(GuerranoCasarao == 1)
	    		{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e a Máfia CN estão dominando o Casarão!",PlayerName);
				          SendClientMessage(i, COR_COSA, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZCasarao,COR_COSA);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoCasarao[playerid] = 1;
                GuerranoCasarao = 1;
        		TempoGuerraCasarao = SetTimerEx("GuerraCasarao", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInEstacao(playerid))
			{
			    if(Dominando[playerid] == 1)
			    {
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
			    }
			    if(GuerranaEstacao == 1)
			    {
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
			    }
			    TempoDominar[playerid] = GetTickCount();
				GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e a Máfia CN estão dominando a Estação!",PlayerName);
				          SendClientMessage(i, COR_COSA, gstring);
				     }
				}
				SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
				SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZEstacao,COR_COSA);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoEstacao[playerid] = 1;
                GuerranaEstacao = 1;
 				TempoGuerraEstacao = SetTimerEx("GuerraEstacao", 60000, 0, "i", playerid);
		        return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD3, "Você não está em nenhum território!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20) //Máfia Yakuza
		{
			if(IsPlayerInCasarao(playerid))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		if(GuerranoCasarao == 1)
	    		{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e a Máfia Yakuza estão dominando o Casarão!",PlayerName);
				          SendClientMessage(i, COR_YAK, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZCasarao,COR_YAK);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoCasarao[playerid] = 1;
                GuerranoCasarao = 1;
        		TempoGuerraCasarao = SetTimerEx("GuerraCasarao", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInEstacao(playerid))
			{
			    if(Dominando[playerid] == 1)
			    {
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
			    }
			    if(GuerranaEstacao == 1)
			    {
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
			    }
			    TempoDominar[playerid] = GetTickCount();
				GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e a Máfia Yakuza estão dominando a Estação!",PlayerName);
				          SendClientMessage(i, COR_YAK, gstring);
				     }
				}
				SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
				SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZEstacao,COR_YAK);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoEstacao[playerid] = 1;
                GuerranaEstacao = 1;
 				TempoGuerraEstacao = SetTimerEx("GuerraEstacao", 60000, 0, "i", playerid);
		        return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD3, "Você não está em nenhum território!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25) //Policia Federal
		{
			if(IsPlayerInCasarao(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
   					SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
   					TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		if(GuerranoCasarao == 1)
	    		{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e a Policia Federal estão dominando o Casarão!",PlayerName);
				          SendClientMessage(i, COR_PF, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZCasarao,COR_PF);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoCasarao[playerid] = 1;
                GuerranoCasarao = 1;
        		TempoGuerraCasarao = SetTimerEx("GuerraCasarao", 60000, 0, "i", playerid);
 				return 1;
			}
			if(IsPlayerInEstacao(playerid))
			{
			    if(Dominando[playerid] == 1)
			    {
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
			    }
			    if(GuerranaEstacao == 1)
			    {
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
			    }
			    TempoDominar[playerid] = GetTickCount();
				GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e a Policia Federal estão dominando a Estação!",PlayerName);
				          SendClientMessage(i, COR_PF, gstring);
				     }
				}
				SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
				SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZEstacao,COR_PF);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoEstacao[playerid] = 1;
                GuerranaEstacao = 1;
 				TempoGuerraEstacao = SetTimerEx("GuerraEstacao", 60000, 0, "i", playerid);
		        return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD3, "Você não está em nenhum território!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
		{
            if(IsPlayerInMotel(playerid))
			{
			    if(Dominando[playerid] == 1)
			    {
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
			    }
			    if(GuerranoMotel == 1)
			    {
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
			    }
			    TempoDominar[playerid] = GetTickCount();
				GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e os Sons estão dominando o Motel Abandonado!",PlayerName);
				          SendClientMessage(i, COR_SONS, gstring);
				     }
				}
				SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
				SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZMotel,COR_SONS);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoMotelA[playerid] = 1;
                GuerranoMotel = 1;
 				TempoGuerraMotel = SetTimerEx("GuerraMotel", 60000, 0, "i", playerid);
		        return 1;
            }
			else
			{
				SendClientMessage(playerid, COR_GRAD3, "Você não está em nenhum território!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)
		{
            if(IsPlayerInMotel(playerid))
			{
			    if(Dominando[playerid] == 1)
			    {
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
			    }
			    if(GuerranoMotel == 1)
			    {
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
			    }
			    TempoDominar[playerid] = GetTickCount();
				GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e os Mayans estão dominando o Motel Abandonado!",PlayerName);
				          SendClientMessage(i, COR_MAYANS, gstring);
				     }
				}
				SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
				SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZMotel,COR_MAYANS);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoMotelA[playerid] = 1;
                GuerranoMotel = 1;
 				TempoGuerraMotel = SetTimerEx("GuerraMotel", 60000, 0, "i", playerid);
		        return 1;
            }
			else
			{
				SendClientMessage(playerid, COR_GRAD3, "Você não está em nenhum território!");
			}
			return 1;
		}
        if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
		{
            if(IsPlayerInMotel(playerid))
			{
			    if(Dominando[playerid] == 1)
			    {
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
			    }
			    if(GuerranoMotel == 1)
			    {
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
			    }
			    TempoDominar[playerid] = GetTickCount();
				GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e a Rota estão dominando o Motel Abandonado!",PlayerName);
				          SendClientMessage(i, COR_ROTA, gstring);
				     }
				}
				SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
				SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZMotel,COR_ROTA);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoMotelA[playerid] = 1;
                GuerranoMotel = 1;
 				TempoGuerraMotel = SetTimerEx("GuerraMotel", 60000, 0, "i", playerid);
		        return 1;
            }
			if(IsPlayerInPark(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
   					SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
   					TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		if(GuerranoPark == 1)
	    		{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e a Rota estão dominando a Parque Gleen!",PlayerName);
				          SendClientMessage(i, COR_ROTA, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZPark,COR_ROTA);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
        		TempoGuerraPark = SetTimerEx("GuerraInd", 60000, 0, "i", playerid);
 				return 1;
 			}
			else
			{
				SendClientMessage(playerid, COR_GRAD3, "Você não está em nenhum território!");
			}
			return 1;
		}
 		if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)// PM
		{
		    if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
	   			{
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
		   			return 1;
    			}
    			if(GuerranaComplexo == 1)
    			{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
    			}
    			TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e a Policia Militar estão dominando a Favela!",PlayerName);
				          SendClientMessage(i, COR_PM, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD3, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZFavela,COR_PM);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoComplexo[playerid] = 1;
                GuerranaComplexo = 1;
       			TempoGuerraComplexo = SetTimerEx("GuerraComplexo", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
    			}
    			TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e a Policia Militar estão dominando a Pista de Skate!",PlayerName);
				          SendClientMessage(i, COR_PM, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD3, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZSkate,COR_PM);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInPark(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
   					SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
   					TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		if(GuerranoPark == 1)
	    		{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e a Policia Militar estão dominando a Parque Gleen!",PlayerName);
				          SendClientMessage(i, COR_PM, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD3, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZPark,COR_PM);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
        		TempoGuerraPark = SetTimerEx("GuerraInd", 60000, 0, "i", playerid);
 				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD3, "Você não está em nenhum território!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)// PC
		{
		    if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
	   			{
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
		   			return 1;
    			}
    			if(GuerranaComplexo == 1)
    			{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
    			}
    			TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e a Policia Civil estão dominando a Favela!",PlayerName);
				          SendClientMessage(i, COR_PC, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZFavela,COR_PC);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoComplexo[playerid] = 1;
                GuerranaComplexo = 1;
       			TempoGuerraComplexo = SetTimerEx("GuerraComplexo", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
    			}
    			TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e a Policia Civil estão dominando a Pista de Skate!",PlayerName);
				          SendClientMessage(i, COR_PC, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZSkate,COR_PC);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInPark(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
   					SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
   					TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		if(GuerranoPark == 1)
	    		{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e a Policia Civil estão dominando a Parque Gleen!",PlayerName);
				          SendClientMessage(i, COR_PC, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZPark,COR_PC);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
        		TempoGuerraPark = SetTimerEx("GuerraInd", 60000, 0, "i", playerid);
 				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD3, "Você não está em nenhum território!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)// BOPE
		{
		    if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
	   			{
	   				SendClientMessage(playerid, COR_BOPE, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
	   			}
	   			if(GuerranaComplexo == 1)
	   			{
	  				SendClientMessage(playerid, COR_BOPE, "Já está tendo uma guerra nesse territorio.");
	  				TempoDominar[playerid] = GetTickCount();
	    			return 1;
	   			}
	   			TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e a B.O.P.E estão dominando a Favela!",PlayerName);
				          SendClientMessage(i, COR_BOPE, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
    		    GangZoneFlashForAll(GZFavela,COR_BOPE);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoComplexo[playerid] = 1;
                GuerranaComplexo = 1;
       			TempoGuerraComplexo = SetTimerEx("GuerraComplexo", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
	   			{
	  				SendClientMessage(playerid, COR_BOPE, "Você ja está dominando um territorio.");
	  				TempoDominar[playerid] = GetTickCount();
	   				return 1;
	   			}
	   			if(GuerranoSkate == 1)
	   			{
	   				SendClientMessage(playerid, COR_BOPE, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
	   			}
	   			TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e a B.O.P.E estão dominando a Pista de Skate!",PlayerName);
				          SendClientMessage(i, COR_BOPE, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZSkate,COR_BOPE);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
    			TempoGuerraSkate = SetTimerEx("GuerraSkate", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInPark(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
   					SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
   					TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		if(GuerranoPark == 1)
	    		{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e a B.O.P.E estão dominando a Parque Gleen!",PlayerName);
				          SendClientMessage(i, COR_BOPE, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZPark,COR_BOPE);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
        		TempoGuerraPark = SetTimerEx("GuerraInd", 60000, 0, "i", playerid);
 				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_BOPE, "Você não está em nenhum território!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)// Los Aztecas
		{
		    if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
    			}
    			if(GuerranaComplexo == 1)
    			{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
    			}
    			TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e os Los Aztecas estão dominando a Favela!",PlayerName);
				          SendClientMessage(i, TEAM_AZTECAS_COR, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZFavela,TEAM_AZTECAS_COR);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoComplexo[playerid] = 1;
                GuerranaComplexo = 1;
       			TempoGuerraComplexo = SetTimerEx("GuerraComplexo", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
    			}
    			TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e os Los Aztecas estão dominando a Pista de Skate!",PlayerName);
				          SendClientMessage(i, TEAM_AZTECAS_COR, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
    	        GangZoneFlashForAll(GZSkate,TEAM_AZTECAS_COR);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInPark(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
   					SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
   					TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		if(GuerranoPark == 1)
	    		{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e os Los Aztecas estão dominando a Parque Gleen!",PlayerName);
				          SendClientMessage(i, TEAM_AZTECAS_COR, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZPark,TEAM_AZTECAS_COR);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
        		TempoGuerraPark = SetTimerEx("GuerraInd", 60000, 0, "i", playerid);
 				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD3, "Você não está em nenhum território!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)// CV
		{
		    if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		if(GuerranaComplexo == 1)
	    		{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e o Comando Vermelho estão dominando a Favela!",PlayerName);
				          SendClientMessage(i, COR_CV, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZFavela,0xF60000AA);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoComplexo[playerid] = 1;
                GuerranaComplexo = 1;
        		TempoGuerraComplexo = SetTimerEx("GuerraComplexo", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInPark(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
   					SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
   					TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		if(GuerranoPark == 1)
	    		{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e o Comando Vermelho estão dominando a Parque Gleen!",PlayerName);
				          SendClientMessage(i, COR_CV, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZPark,COR_CV);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
        		TempoGuerraPark = SetTimerEx("GuerraInd", 60000, 0, "i", playerid);
 				return 1;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
    			}
    			TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e o Comando Vermelho estão dominando a Pista de Skate!",PlayerName);
				          SendClientMessage(i, COR_CV, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZSkate,0xF60000AA);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 60000, 0, "i", playerid);
				return 1;
		    }
			else
			{
				SendClientMessage(playerid, COR_GRAD3, "Você não está em nenhum território!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)// PCC
		{
		    if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
    			}
    			if(GuerranaComplexo == 1)
    			{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
	   			}
	   			TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e o Primeiro Comando da Capital estão dominando a Favela!",PlayerName);
				          SendClientMessage(i, COR_PCC, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZFavela,COR_PCC);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoComplexo[playerid] = 1;
                GuerranaComplexo = 1;
       			TempoGuerraComplexo = SetTimerEx("GuerraComplexo", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
   					SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
   					TempoDominar[playerid] = GetTickCount();
	    			return 1;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
    			}
    			TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e o Primeiro Comando da Capital estão dominando a Pista de Skate!",PlayerName);
				          SendClientMessage(i, COR_PCC, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZSkate,COR_PCC);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 60000, 0, "i", playerid);
				return 1;
            }
			if(IsPlayerInPark(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
   					SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
   					TempoDominar[playerid] = GetTickCount();
	    			return 1;
    			}
    			if(GuerranoPark == 1)
    			{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
    			}
    			TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e o Primeiro Comando da Capital estão dominando a Parque Gleen!",PlayerName);
				          SendClientMessage(i, COR_PCC, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZPark,COR_PCC);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
   				TempoGuerraPark = SetTimerEx("GuerraInd", 60000, 0, "i", playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD3, "Você não está em nenhum território!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)// Groove Street
		{
		    if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
	   			}
	   			if(GuerranaComplexo == 1)
	   			{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
	   			}
	   			TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e a Groove Street estão dominando a Favela!",PlayerName);
				          SendClientMessage(i, TEAM_GROOVE_COR, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZFavela,TEAM_GROOVE_COR);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoComplexo[playerid] = 1;
                GuerranaComplexo = 1;
       			TempoGuerraComplexo = SetTimerEx("GuerraComplexo", 60000, 0, "i", playerid);
				return 1;
			}
			else if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
    			}
    			TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e a Groove Street estão dominando a Pista de Skate!",PlayerName);
				          SendClientMessage(i, TEAM_GROOVE_COR, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZSkate,TEAM_GROOVE_COR);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 60000, 0, "i", playerid);
				return 1;
			}
			else if(IsPlayerInPark(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
   					SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
   					TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		if(GuerranoPark == 1)
	    		{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e a Groove Street estão dominando a Parque Gleen!",PlayerName);
				          SendClientMessage(i, TEAM_GROOVE_COR, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZPark,TEAM_GROOVE_COR);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
        		TempoGuerraPark = SetTimerEx("GuerraInd", 60000, 0, "i", playerid);
 				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD3, "Você não está em nenhum território!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)// Ballas
		{
			if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		if(GuerranaComplexo == 1)
	    		{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e os Ballas estão dominando a Favela!",PlayerName);
				          SendClientMessage(i, TEAM_BALLAS_COR, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZFavela,TEAM_BALLAS_COR);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoComplexo[playerid] = 1;
                GuerranaComplexo = 1;
        		TempoGuerraComplexo = SetTimerEx("GuerraComplexo", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInPark(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
   					SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
   					TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		if(GuerranoPark == 1)
	    		{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e os Ballas estão dominando a Parque Gleen!",PlayerName);
				          SendClientMessage(i, TEAM_BALLAS_COR, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZPark,TEAM_BALLAS_COR);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
        		TempoGuerraPark = SetTimerEx("GuerraInd", 60000, 0, "i", playerid);
 				return 1;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
    			}
    			TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e os Ballas estão dominando a Pista de Skate!",PlayerName);
				          SendClientMessage(i, TEAM_BALLAS_COR, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZSkate,TEAM_BALLAS_COR);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 60000, 0, "i", playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD3, "Você não está em nenhum território!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)// Los Vagos
		{
            if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
    			}
    			if(GuerranaComplexo == 1)
    			{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
    			}
    			TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e os Vagos estão dominando a Favela!",PlayerName);
				          SendClientMessage(i, COR_VAGOS, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZFavela,COR_VAGOS);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoComplexo[playerid] = 1;
                GuerranaComplexo = 1;
       			TempoGuerraComplexo = SetTimerEx("GuerraComplexo", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInPark(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
   					SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
   					TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		if(GuerranoPark == 1)
	    		{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
	    		}
	    		TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e os Vagos estão dominando a Parque Gleen!",PlayerName);
				          SendClientMessage(i, COR_VAGOS, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZPark,COR_VAGOS);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
        		TempoGuerraPark = SetTimerEx("GuerraInd", 60000, 0, "i", playerid);
 				return 1;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COR_GRAD5, "Você ja está dominando um territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	   				TempoDominar[playerid] = GetTickCount();
	    			return 1;
    			}
    			TempoDominar[playerid] = GetTickCount();
			    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
				for(new i = 0;  i < MAX_PLAYERS; ++i)
			    {
				     if(PlayerInfo[i][pChatTerritorio] == 0)
				     {
                          format(gstring, sizeof(gstring), "[Territórios]: %s e os Vagos estão dominando a Pista de Skate!",PlayerName);
				          SendClientMessage(i, COR_VAGOS, gstring);
				     }
				}
			    SendClientMessage(playerid, COR_GRAD3, "Fique atento, seus inimigos foram avisados e irão aparecer a qualquer momento.");
			    SendClientMessage(playerid, COR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZSkate,COR_VAGOS);
                Dominando[playerid] = 1;
                MenuTR[playerid] = 0;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 60000, 0, "i", playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD3, "Você não está em nenhum território!");
			}
			return 1;
		}
		return 1;
	}
	CMD:deslogartodos(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1341)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				     SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				     return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				for(new i = 0; i < MAX_PLAYERS; ++i)
				{
					if(IsPlayerConnected(i))
					{
						OnPlayerUpdate(i);
						gPlayerLogged[i] = 0;
						format(gstring, sizeof(gstring), "ADMIN CMD: %s Deslogou Todos os Players",sendername);
						SendClientMessage(i, COR_LIGHTRED, gstring);
						Kick(i);
					}
				}
				SendClientMessage(playerid, COR_GRAD1, " Todos os players deslogados.");
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Voce não está autorizado a usar o comando!");
			}
		}
		return 1;
	}
    CMD:kick(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /kick [Id Do Jogador] [motivo]");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				if(PlayerInfo[giveplayeridzcmd][pAdmin] > 1340)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não pode kickar um Admin Dono/Scripter,VOCÊ É UM MERDA HUAHUAHUA!");
					return 1;
				}
				if(IsPlayerConnected(giveplayeridzcmd))
				{
				    if(giveplayeridzcmd != INVALID_PLAYER_ID)
				    {
                        if(PlayerInfo[giveplayeridzcmd][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
						{
							if(giveplayeridzcmd != playerid)
							{
							     format(gstring, sizeof(gstring), "ID [%d] Não está Online.", giveplayeridzcmd);
							     SendClientMessage(playerid, COR_GRAD1, gstring);
							     return 1;
							}
						}
         				GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
						{
							idxzcmd++;
						}
						new offset = idxzcmd;
						new result[64];
						while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
						{
							result[idxzcmd - offset] = cmdtext[idxzcmd];
							idxzcmd++;
						}
						result[idxzcmd - offset] = EOS;
                        if(!strlen(result))
						{
							SendClientMessage(playerid, COR_GRAD2, "USE: /kick [Id Do Jogador] [motivo]");
							return 1;
						}
						getdate(year, month, day);
						format(gstring, sizeof(gstring), "ADMIN CMD: %s Foi Kickado by %s, Motivo: %s", giveplayerzcm, sendername, (result));
						SendClientMessageToAll(COR_LIGHTRED, gstring);
						KickLog(gstring);
						Kick(giveplayeridzcmd);
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Esse não é um jogador ativo.");
			}
		}
		return 1;
	}
	CMD:avisados(playerid, params[])
	{
         if(IsPlayerConnected(playerid))
	     {
              new nome[24];
              GetPlayerName(playerid, nome, sizeof nome);
   		      if(PlayerInfo[playerid][pAdmin] < 1)
	   	      {
				   SendClientMessage(playerid, COR_GRAD2, "Você não é um Admin !");
			       return 1;
	          }
              SendClientMessage(playerid, COR_VERDE, "Avisados Online:");
			  for(new i = 0; i < MAX_PLAYERS; ++i)
		      {
			       if(IsPlayerConnected(i))
		    	   {
		    	        if(PlayerInfo[i][pAvisos] > 0)
		    	        {
						     GetPlayerName(i, sendername, sizeof(sendername));
						     format(gstring, 256, "Player: %s, com [%d] aviso(s). ", sendername, PlayerInfo[i][pAvisos]);
						     SendClientMessage(playerid, COR_BRANCO, gstring);
            	        }
             	   }
		      }
	     }
     	 return 1;
	}
	CMD:aviso(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /aviso [id] [motivo]");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				if(PlayerInfo[giveplayeridzcmd][pAdmin] >= 1  && PlayerInfo[giveplayeridzcmd][pAdmin] != 1342)
                {
                     format(gstring, sizeof(gstring), "ID[%d] está off-line.", giveplayeridzcmd);
			         SendClientMessage(playerid, COR_GRAD1, gstring);
			         return 1;
                }
			    if(IsPlayerConnected(giveplayeridzcmd))
			    {
			        if(giveplayeridzcmd != INVALID_PLAYER_ID)
                    {
					    GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
						{
							idxzcmd++;
						}
						new offset = idxzcmd;
						new result[64];
						while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
						{
							result[idxzcmd - offset] = cmdtext[idxzcmd];
							idxzcmd++;
						}
						result[idxzcmd - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COR_GRAD2, "USE: /aviso [id] [motivo]");
							return 1;
						}
						PlayerInfo[giveplayeridzcmd][pAvisos] += 1;
						if(PlayerInfo[giveplayeridzcmd][pAvisos] >= 3)
						{
							getdate(year, month, day);
							pban[playerid] += 1;
							if(pban[playerid] >= 3 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
							{
						         BanBPL(playerid, "Baniu mais de 3", "Automatico");
						    	 return 1;
							}
							format(gstring, sizeof(gstring), "ADMIN CMD: %s foi banido por %s(3º Aviso), Motivo: %s (%d-%d-%d)", giveplayerzcm, sendername, (result),day,month,year);
							BanTempLog(gstring);
							format(gstring, sizeof(gstring), "ADMIN CMD: %s foi banido por %s(3º Aviso), Motivo: %s", giveplayerzcm, sendername, (result));
							SendClientMessageToAll(COR_LIGHTRED, gstring);
							getdate(Ano, Mes, Dia);
							PlayerInfo[giveplayeridzcmd][pDiaBanTemp] = Dia;
							if(Mes == 11)
							{
								PlayerInfo[giveplayeridzcmd][pMesBanTemp] = 1;
								PlayerInfo[giveplayeridzcmd][pAnoBanTemp] = Ano+1;
							}
							else if(Mes == 12)
							{
								PlayerInfo[giveplayeridzcmd][pMesBanTemp] = 2;
								PlayerInfo[giveplayeridzcmd][pAnoBanTemp] = Ano+1;
							}
							else if(Mes <= 10)
							{
							    PlayerInfo[giveplayeridzcmd][pMesBanTemp] = Mes+2;
							    PlayerInfo[giveplayeridzcmd][pAnoBanTemp] = Ano;
							}
							OnPlayerSave(giveplayeridzcmd);
							PlayerInfo[playerid][pAvisos] = 0;
							BanTemp(giveplayeridzcmd, "Terceiro aviso", PlayerName(playerid));
							return 1;
						}
						format(gstring, sizeof(gstring), "Admin %s avisou %s, Motivo: %s", sendername,giveplayerzcm, (result));
						SendClientMessageToAll(COR_LIGHTRED, gstring);
						format(gstring, sizeof(gstring), "Você foi avisado por %s, Motivo: %s",sendername, (result));
						SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
						return 1;
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Esse não é um jogador ativo.");
			}
		}
		return 1;
	}
	CMD:camera(playerid, params[])
	{
	     if(IsPlayerConnected(playerid))
	     {
             if(!IsACop(playerid) && GetPlayerOrg(playerid) != 7)
             {
                  SendClientMessage(playerid, COR_GREY, "Você não faz parte de uma Organização do Governo !");
			      return 1;
             }
             if(PlayerToPoint(1.0,playerid,212.9571,1819.8724,6.4216) || PlayerToPoint(1.0,playerid,213.8944,1827.4010,6.4141) || PlayerToPoint(1.0,playerid,222.1989,109.1999,1010.2188) || PlayerToPoint(1.0,playerid,222.1989,109.1999,1010.2188) || PlayerToPoint(1.0,playerid,628.6711,-574.1470,17.0322) || PlayerToPoint(1.0,playerid,218.2346,187.0414,1003.0313)
		     || PlayerToPoint(1.0,playerid,216.1642,187.0437,1003.0313) || PlayerToPoint(1.0,playerid,1710.8319,-1643.8937,27.2037) || PlayerToPoint(1.0,playerid,1710.8319,-1643.8937,27.2037) || PlayerToPoint(1.0,playerid,-1348.0712,491.0310,11.1953) || PlayerToPoint(1.0,playerid,364.2584,152.2167,1025.7964)
		     || PlayerToPoint(1.0,playerid,362.0798,152.1332,1025.7891) || PlayerToPoint(1.0,playerid,323.9517,308.0896,999.1484) || PlayerToPoint(1.0,playerid,2497.8433,2367.1025,4.2179))
		     {
                  if(PlayerToPoint(1.0,playerid,323.9517,308.0896,999.1484) && GetPlayerOrg(playerid) == 25)
	   	          {
		               return 1;
	   	          }
	   	          TogglePlayerControllable(playerid, 0);
   	              ShowMenuForPlayer(Camera, playerid);
	   	     }
	   	     else
	   	     {
                  SendClientMessage(playerid, COR_GREY, "Você não está na sala de câmeras !");
		          return 1;
	   	     }
		 }
		 return 1;
	}
	CMD:disfarcepc(playerid, params[])
	{
		    if(PlayerToPoint(2.0,playerid,231.7894,184.7813,1003.0313) || PlayerToPoint(2.0,playerid,2498.1572,2384.1978,4.2109))
			{
		         if(GetPlayerOrg(playerid) != 17)
	             {
                      SendClientMessage(playerid, COR_GRAD1, "Você não é da Policia Civil !");
	                  return 1;
	             }
	             if(OnDuty[playerid] == 0)
	             {
                      SendClientMessage(playerid,COR_GRAD1,"Você não Bateu o Cartão !");
		              return 1;
	             }
		         TogglePlayerControllable(playerid, 0);
    	         ShowPlayerDialog(playerid, 21,DIALOG_STYLE_LIST,"Disfarces Policia Civil","Homem 1(1)\nHomem 2(7)\nHomem 3(14)\nHomem 4(16)\nHomem 5(26)\nHomem 6(27)\nHomem 7(37)\nHomem 8(58)\nHomem 9(292)\nHomem 10(297)\nHomem 11(258)\nHomem 12(259)\nHomem 13(234)\nHomem 14(67)\nHomem 15(66)\nHomem 16(180)\nHomem 17(62)\nHomem 18(96)\nHomem 19(2)\nHomem 20(6)\nHomem 21(119)\nHomem 22(289)\nMulher 1(11)\nMulher 2(12)\nMulher 3(31)\nMulher 4(38)\nMulher 5(61)\nMulher 6(56)","Confirmar","Cancelar");
		         EmDialog[playerid] = 1;
		    }
		    else
		    {
                 SendClientMessage(playerid,COR_GRAD1,"Você não está na hq pc!");
		         return 1;
		    }
	}
	CMD:dpc(playerid, params[])
	{
         if(IsPlayerConnected(playerid))
         {
			  new vid = GetPlayerVehicleID(playerid);
	          if(IsPlayerInVehicle(playerid, vid))
	          {
	                SendClientMessage(playerid, COR_VERDE, "Você não pode usar este comando agora!");
	                return 1;
	          }
			  if(PlayerInfo[playerid][pLider] == 17 || PlayerInfo[playerid][pMembro] == 17)
			  {
			       if(PlayerInfo[playerid][pCargo] == 1) { SetPlayerSkin(playerid, 59); PlayerInfo[playerid][pSkin] = 59; }
                   if(PlayerInfo[playerid][pCargo] == 2) { SetPlayerSkin(playerid, 59); PlayerInfo[playerid][pSkin] = 59; }
                   if(PlayerInfo[playerid][pCargo] == 3) { SetPlayerSkin(playerid, 124); PlayerInfo[playerid][pSkin] = 124; }
                   if(PlayerInfo[playerid][pCargo] == 4) { SetPlayerSkin(playerid, 299); PlayerInfo[playerid][pSkin] = 299; }
                   if(PlayerInfo[playerid][pCargo] == 5) { SetPlayerSkin(playerid, 240); PlayerInfo[playerid][pSkin] = 240; }
                   if(PlayerInfo[playerid][pCargo] == 6) { SetPlayerSkin(playerid, 186); PlayerInfo[playerid][pSkin] = 186; }
                   if(PlayerInfo[playerid][pSex] == 2) { SetPlayerSkin(playerid, 141); PlayerInfo[playerid][pSkin] = 141; }
			       SetPlayerToTeamColor(playerid);
			       SendClientMessage(playerid, COR_GRAD1, "Você retirou o seu disfarce!");
			  }
			  else
			  {
				   SendClientMessage(playerid, COR_GRAD1, "Você não é da Policia Civil!");
				   return 1;
			  }
		 }
		 return 1;
	}
	CMD:pesquisa(playerid, params[])
	{
        new vehicleid = GetPlayerVehicleID(playerid);
        if(IsPlayerInVehicle(playerid, vehicleid))
		{
		    new modeloo = GetVehicleModel(vehicleid);
		    if(modeloo != 478)
            {
               SendClientMessage(playerid, COR_GRAD1,"Para iniciar a pesquisa, você precisa estar no veículo de pesquisas !");
               return 1;
            }
            if(GetTickCount() - TempoPesquisa[playerid] < 360000)
    	    {
		         SendClientMessage(playerid,COR_GRAD1,"Você já fez uma pesquisa, aguarde 6 minutos ou faça trabalhos na fazenda !");
		         return 1;
		    }
            if(PlayerInfo[playerid][pEmprego] != 10)
            {
                SendClientMessage(playerid, COR_GRAD1,"Você não é um fazendeiro !");
				return 1;
            }
            pesquisando[playerid] = 1;
            SetPlayerCheckpoint(playerid, -334.8652,-1029.9807,59.1528, 8.0);
            SendClientMessage(playerid, COR_BRANCO, "Siga os pontos vermelhos no mapa para receber a sua recompensa.");
            TempoPesquisa[playerid] = GetTickCount();
        }
	    else
	    {
			SendClientMessage(playerid, COR_GRAD1,"Para iniciar a pesquisa, você precisa estar no veículo de pesquisas !");
			return 1;
		}
		return 1;
	}
	CMD:ajudamaconha(playerid, params[])
	{

		if(IsPlayerConnected(playerid))
		{
			SendClientMessage(playerid, COR_BRANCO, "Comando: /plantarmaconha - Plantar Maconha");
			SendClientMessage(playerid, COR_BRANCO, "Comando: /colhermaconha - Colher Maconha");
			SendClientMessage(playerid, COR_BRANCO, "Comando: /farejar - Frejar maconha (COP)");
			SendClientMessage(playerid, COR_BRANCO, "Comando: /queimarmaconha - Para destruir a maconha");
			SendClientMessage(playerid, COR_BRANCO, "Comando: /maconhas - Ver suas maconhas");
		}
		return 1;
	}
	CMD:plantarmaconha(playerid, params[])
	{
		if(PlayerInfo[playerid][pSementes] < 1)
			return SendClientMessage(playerid, 0xF6F600FF, "Você não possui sementes de maconha para plantar");

		if(GetPlayerInterior(playerid) > 0 || IsPlayerInAnyVehicle(playerid))
			return SendClientMessage(playerid, 0xF6F600FF, "Você não pode plantar maconha agora!");

		if(GetPlayerSpeedEx(playerid) > 1)
			return SendClientMessage(playerid, 0xF6F600FF, "Você precisa estar parado para plantar a semente");

		if(CountPlantacao(playerid) >= 10)
			return SendClientMessage(playerid, 0xF6F600FF, "Você pode plantar no máximo 10 sementes");

		if(PlantandoMaconha[playerid] == true)
			return SendClientMessage(playerid, 0xF6F600FF, "Você já está plantando ou colhendo uma semente");


		for(new mac = 0; mac < MAX_MACONHA; mac++)
	    {
	        if(MaconhaInfo[mac][PodeUsar] == false && IsPlayerInRangeOfPoint(playerid, 5.0, MaconhaInfo[mac][mX],MaconhaInfo[mac][mY],MaconhaInfo[mac][mZ]))
			{
			    SendClientMessage(playerid, COR_GRAD1, "Ja existe uma plantação de maconha muito proximo a este local");
			    return true;
			}
		}

		new slt = CheckSlot();

		if(slt == -1)
			return SendClientMessage(playerid, -1, "Ja plantaram muitas sementes no servidor.");

		ApplyAnimation(playerid,"BOMBER","BOM_Plant_Loop",2.0,1,0,0,0,0);
	    SetTimerEx("AnimatioN", 500, false, "i", playerid);
		SetTimerEx("PlantarMaconhas", 17000, false, "id", playerid, slt);
		PlantandoMaconha[playerid] = true;
		showBalao(playerid, "Voce esta plantando uma semente aqui.", 5000);
	    SendClientMessage(playerid, COR_GRAD1, "Você esta plantando uma semente de maconha, aguarde . . .");
		return true;
	}
	CMD:colhermaconha(playerid, params[])
	{
	    if(PlantandoMaconha[playerid] == true)
			return SendClientMessage(playerid, 0xF6F600FF, "Você já está plantando ou colhendo uma semente");

		new perto = 0;

		for(new mac = 0; mac < MAX_MACONHA; mac++)
	    {
	        if(MaconhaInfo[mac][PodeUsar] == false && IsPlayerInRangeOfPoint(playerid, 2, MaconhaInfo[mac][mX],MaconhaInfo[mac][mY],MaconhaInfo[mac][mZ]))
			{
			    perto = 1;
			    if(strcmp(MaconhaInfo[mac][Dono], PlayerName(playerid), true) == 0)
			    {
				    ApplyAnimation(playerid,"BOMBER","BOM_Plant_Loop",2.0,1,0,0,0,0);
				    SetTimerEx("AnimatioN", 100, false, "i", playerid);
					SetTimerEx("MaconhaColher", 17000, false, "id", playerid, mac);
					PlantandoMaconha[playerid] = true;

					showBalao(playerid, "Voce esta colhendo esta plantacao", 5000);

	                SendClientMessage(playerid, COR_GRAD1, "Você esta colhendo esta plantação de maconha, aguarde . . .");
					return true;
				}
				else return SendClientMessage(playerid, -1, "Você não é o dono dessa plantação de maconha");
			}
		}

		if(perto == 0)return SendClientMessage(playerid, -1, "Você não está perto de nenhuma plantação de maconha.");
		return true;
	}
	CMD:farejar(playerid, params[])
	{
		if(IsACop(playerid))
		{
		    switch(random(6))
		    {
		        case 1, 2, 3:
				    if(PertoMaconha(playerid))
				    {
				        format(gstring, sizeof gstring, "Cão Farejador: Seu cão farejou possíveis %d plantações de maconha, num raio de 200 metros!", PertoMaconha(playerid));
						SendClientMessage(playerid, COR_AMARELO, gstring);
					}
					else
					{
					    SendClientMessage(playerid, COR_AMARELO, "Cão farejador: Seu cão não farejou nenhuma plantação em um raio de 200 metros!");
					}
				default:
			    	SendClientMessage(playerid, COR_AMARELO, "Seu cão não conseguiu farejar uma plantação de maconha, tente novamente!");
			}
		}
		return 1;
	}
	CMD:queimarmaconha(playerid, params[])
	{
		if(IsACop(playerid))
		{
			new perto = 0;

			for(new mac = 0; mac < MAX_MACONHA; mac++)
		    {
		        if(MaconhaInfo[mac][PodeUsar] == false && IsPlayerInRangeOfPoint(playerid, 2, MaconhaInfo[mac][mX],MaconhaInfo[mac][mY],MaconhaInfo[mac][mZ]))
				{
				    perto = 1;
		  			ApplyAnimation(playerid,"BOMBER","BOM_Plant_Loop",2.0,1,0,0,0,0);
			    	SetTimerEx("AnimatioN", 100, false, "i", playerid);
					SetTimerEx("MaconhaQueimar", 17000, false, "id", playerid, mac);
					PlantandoMaconha[playerid] = true;
		   			SendClientMessage(playerid, COR_GRAD1, "Você esta queimando esta plantação. aguarde...");
					return true;
				}
			}

			if(perto == 0)return SendClientMessage(playerid, -1, "Você não está perto de nenhuma plantação de maconha.");
		}
		return true;
	}
	CMD:updatemaconha(playerid, params[])
	{
		if(PlayerInfo[playerid][pAdmin] < 1337)
			return SendClientMessage(playerid,COR_LIGHTRED, "Voce nao pode usar este comando.");

		UpdateDrogas();

		SendClientMessage(playerid,COR_AMARELO, "Voce atualizou as plantações de maconha.");
		return true;
	}
	CMD:maconhas(playerid, params[])
	{
		if(CountPlantacao(playerid) < 1)
			return SendClientMessage(playerid, 0xF6F600FF, "Você não plantou nenhuma semente");

		new localmac = 0;
		MEGAString[0] = EOS;
		for(new maconhaid=0;maconhaid < MAX_MACONHA; maconhaid++)
		{
		    if(!MaconhaInfo[maconhaid][PodeUsar] && strcmp(MaconhaInfo[maconhaid][Dono], PlayerName(playerid), true)==0)
			{
			    localmac++;
			    LocalizeMaconha[localmac][playerid] = maconhaid;

				if(MaconhaInfo[maconhaid][Crescida] >= Max_Crescida)
				{
			    	format(gstring, sizeof gstring, "Plantação %d: {00BC00}(Pronta) Gramas: [%d]\n",maconhaid+1,MaconhaInfo[maconhaid][GramasProntas]);
			    	strcat(MEGAString,gstring);
				}
				else
				{
			    	format(gstring, sizeof gstring, "Plantação %d: {00BC00}Crescendo:[%d/%d] Gramas:[%d]\n",maconhaid+1, MaconhaInfo[maconhaid][Crescida], Max_Crescida, MaconhaInfo[maconhaid][GramasProntas]);
			    	strcat(MEGAString,gstring);
				}
			}
		}

		ShowPlayerDialog(playerid, 1478, DIALOG_STYLE_LIST, "Menu maconha", MEGAString, "Localizar", "Sair");
		return true;
	}
    CMD:plantar(playerid, params[])
	{
        new vehicleid = GetPlayerVehicleID(playerid);
        if(IsPlayerInVehicle(playerid, vehicleid))
		{
		    new modeloo = GetVehicleModel(vehicleid);
		    if(PlayerInfo[playerid][pEmprego] != 10)
            {
                SendClientMessage(playerid, COR_GRAD1,"Você não é um fazendeiro !");
				return 1;
            }
		    if(modeloo != 531)
            {
               SendClientMessage(playerid, COR_GRAD1, "Para plantar uma semente, você deve estar em um trator !");
               return 1;
            }
            if(GetTickCount() - TempoPlantar[playerid] < 6000)
            {
	           SendClientMessage(playerid, COR_GREY, "Você já plantou uma semente, aguarde 6 segundos para plantar, não plante as perto umas das outras !");
	           return 1;
	        }
	        if(!PlayerToPoint(60.0, playerid,-206.3168,11.2350,3.1172))
            {
			    SendClientMessage(playerid, COR_GREY, "Você precisa estar na plantação para plantar uma semente !");
			    return 1;
			}
            if(Sementes[playerid] < 1)
            {
			   SendClientMessage(playerid, COR_GRAD1, "Você não possui sementes !");
			   return 1;
            }
            if(Sementes[playerid] == 5)
            {
				Sementes[playerid] -= 1;
				PegaSemente[playerid] = 5;
				PegaPlanta[playerid] = 0;
                GetPlayerPos(playerid, plantax1[playerid], plantay1[playerid], plantaz1[playerid]);
                Planta1[playerid] = CreateDynamicPickup(872, 1, plantax1[playerid], plantay1[playerid], plantaz1[playerid]);
                format(gstring, sizeof(gstring), "Você plantou uma semente, ainda lhe restam [%d](Dica: Plante as em linha reta, fica facil para colher).",Sementes[playerid]);
                SendClientMessage(playerid, COR_BRANCO, gstring);
                TempoPlantar[playerid] = GetTickCount();
            }
            else if(Sementes[playerid] == 4)
            {
				Sementes[playerid] -= 1;
				PegaPlanta[playerid] -= 1;
                GetPlayerPos(playerid, plantax2[playerid], plantay2[playerid], plantaz2[playerid]);
                Planta2[playerid] = CreateDynamicPickup(872, 1, plantax2[playerid], plantay2[playerid], plantaz2[playerid]);
                format(gstring, sizeof(gstring), "Você plantou uma semente, ainda lhe restam [%d](Dica: Plante as em linha reta, fica facil para colher).",Sementes[playerid]);
                SendClientMessage(playerid, COR_BRANCO, gstring);
                TempoPlantar[playerid] = GetTickCount();
            }
            else if(Sementes[playerid] == 3)
            {
				Sementes[playerid] -= 1;
				PegaPlanta[playerid] -= 1;
                GetPlayerPos(playerid, plantax3[playerid], plantay3[playerid], plantaz3[playerid]);
                Planta3[playerid] = CreateDynamicPickup(872, 1, plantax3[playerid], plantay3[playerid], plantaz3[playerid]);
                format(gstring, sizeof(gstring), "Você plantou uma semente, ainda lhe restam [%d](Dica: Plante as em linha reta, fica facil para colher).",Sementes[playerid]);
                SendClientMessage(playerid, COR_BRANCO, gstring);
                TempoPlantar[playerid] = GetTickCount();
            }
            else if(Sementes[playerid] == 2)
            {
				Sementes[playerid] -= 1;
				PegaPlanta[playerid] -= 1;
                GetPlayerPos(playerid, plantax4[playerid], plantay4[playerid], plantaz4[playerid]);
                Planta4[playerid] = CreateDynamicPickup(872, 1, plantax4[playerid], plantay4[playerid], plantaz4[playerid]);
                format(gstring, sizeof(gstring), "Você plantou uma semente, ainda lhe restam [%d](Dica: Plante as em linha reta, fica facil para colher).",Sementes[playerid]);
                SendClientMessage(playerid, COR_BRANCO, gstring);
                TempoPlantar[playerid] = GetTickCount();
            }
            else if(Sementes[playerid] == 1)
            {
				Sementes[playerid] = 0;
				PegaPlanta[playerid] -= 1;
                GetPlayerPos(playerid, plantax5[playerid], plantay5[playerid], plantaz5[playerid]);
                SetPlayerCheckpoint(playerid, -155.5231,-34.9998,3.1172, 8.0);
                Planta5[playerid] = CreateDynamicPickup(872, 1, plantax5[playerid], plantay5[playerid], plantaz5[playerid]);
                SendClientMessage(playerid, COR_GREY, "Você terminou de plantar as 5 sementes, pegue o veículo de colheita e passe em cima das plantas(devagar) !");
				SetVehicleToRespawn(vehicleid);
                RemovePlayerAttachedObject(playerid,0);
                TempoPlantar[playerid] = GetTickCount();
            }
            colheitapickup[playerid] = SetTimerEx("PickupFazendeiro", 1000, 1, "i", playerid);
        }
	    else
	    {
			SendClientMessage(playerid, COR_GRAD1, "Para plantar uma semente, você deve estar em um trator !");
			return 1;
		}
		return 1;
	}
	CMD:mcadaver(playerid, params[])
    {
       if(IsPlayerConnected(playerid))
       {
         new vid = GetPlayerVehicleID(playerid);
         if (PlayerInfo[playerid][pEmprego] == 11)
         {
                if(!PlayerToPoint(80.0, playerid, 2225.1819,2538.0205,11.0222))
		        {
				   SendClientMessage(playerid, COR_GRAD1, "Para marcar um cadáver,você deve estar em sua HQ!");
				   SendClientMessage(playerid, COR_GRAD1, "Não se lembra a onde fica ? digite /gps - Empregos - Coveiros!");
				   return 1;
				}
 		        if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER && !CoveiroCarros(vid))
 		        {
				   SendClientMessage(playerid, COR_LIGHTRED, "Você não está em um carro do cemitério !");
				   return true;
  	            }
                if(Mcarga[playerid] == 1)
                {
                  SendClientMessage(playerid, COR_GRAD1, "Você já tem um cadáver no mapa vá busca-lo !");
                  return 1;
                }
                if(Mcarga2[playerid] == 1)
                {
                  SendClientMessage(playerid, COR_GRAD1, "Você já tem um cadáver no mapa vá busca-lo !");
                  return 1;
                }
                new rand;
                format(gstring, sizeof(gstring), "%s marcou um cadáver para pegar!", PlayerName(playerid));
                SendEmpregoMessage(11, 0xFFEC8BFF, gstring);
                SendClientMessage(playerid, COR_GRAD1, "Você marcou um cadáver no mapa, busque ele e traga até sua HQ !");
                rand = random(sizeof(gMcadaver));
			    SetPlayerCheckpoint(playerid, gMcadaver[rand][0], gMcadaver[rand][1], gMcadaver[rand][2], 2);
                mcadaver[playerid] = CreateDynamicPickup(3092,23, gMcadaver[rand][0], gMcadaver[rand][1], gMcadaver[rand][2]);
                Mcadaver[playerid] = 1;
                pmcadaver[playerid] = 1;
                tempocmdemprego = SetTimerEx("TempoCmdEmprego", 240000, 0, "i", playerid);
         }
         else
         {
            SendClientMessage(playerid, COR_GRAD1, "VOcê não é um caminhoneiro !");
            return 1;
         }
       }
       return 1;
    }
    CMD:ecadaver(playerid, params[])
	{
      if(PlayerInfo[playerid][pEmprego] == 11)
      {
            if(PlayerToPoint(80.0, playerid, 2225.1819,2538.0205,11.0222))
		    {
                if(Mcadaver2[playerid] == 0)
                {
                  SendClientMessage(playerid, COR_GRAD1, "Você não tem um cadáver, use /mcadaver e busque um !");
                  return 1;
                }
                format(gstring, sizeof(gstring), "%s entregou um cadáver!", PlayerName(playerid));
                SendEmpregoMessage(6, 0xFFEC8BFF, gstring);
                format(gstring, sizeof(gstring), "Você entregou um cadáver e [R$750] foram adicionados em seu salário !");
                SendClientMessage(playerid, COR_GRAD1, gstring);
                SendClientMessage(playerid, COR_GRAD1, "Você já pode entregar outro cadáver !");
                PlayerInfo[playerid][pSalario] += 750;
                RemovePlayerAttachedObject(playerid,0);
                DisablePlayerCheckpoint(playerid);
                Mcadaver2[playerid] = 0;
                return true;
	        }
	  }
	  return 1;
 	}
    CMD:mjornal(playerid, params[])
    {
       if(IsPlayerConnected(playerid))
       {
         new vid = GetPlayerVehicleID(playerid);
         if (PlayerInfo[playerid][pEmprego] == 12)
         {
                if(!PlayerToPoint(80.0, playerid, 1441.7911,2360.0532,10.8203))
		        {
				   SendClientMessage(playerid, COR_GRAD1, "Para marcar um jornal,você deve estar em sua HQ!");
				   SendClientMessage(playerid, COR_GRAD1, "Não se lembra a onde fica ? digite /gps - Empregos - Carteiros!");
				   return 1;
				}
 		        if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER && !CarteiroCarros(vid))
 		        {
				   SendClientMessage(playerid, COR_LIGHTRED, "Você não está em um carro de carteiro !");
				   return true;
  	            }
                if(Mjornal[playerid] == 1)
                {
                  SendClientMessage(playerid, COR_GRAD1, "Você já tem um jornal no mapa vá busca-lo !");
                  return 1;
                }
                if(Mjornal2[playerid] == 1)
                {
                  SendClientMessage(playerid, COR_GRAD1, "Você já tem um jornal no mapa vá busca-lo !");
                  return 1;
                }
                new rand;
                format(gstring, sizeof(gstring), "%s marcou uma casa para entregar o jornal!", PlayerName(playerid));
                SendEmpregoMessage(12, 0xFFEC8BFF, gstring);
                SendClientMessage(playerid, COR_GRAD1, "Você marcou uma casa no mapa, entregue o seu jornal lá !");
                rand = random(sizeof(gMjornal));
			    SetPlayerCheckpoint(playerid, gMjornal[rand][0], gMjornal[rand][1], gMjornal[rand][2], 2);
                mjornal[playerid] = CreateDynamicPickup(2855,23, gMjornal[rand][0], gMjornal[rand][1], gMjornal[rand][2]);
                Mjornal[playerid] = 1;
                pmjornal[playerid] = 1;
                SetPlayerAttachedObject(playerid, 0, 3026, 1, 0.000000, -0.313611, 0.021003, 0.445490, 86.754409, 355.370239, 0.926815, 1.000000, 1.000000);
                tempocmdemprego = SetTimerEx("TempoCmdEmprego", 240000, 0, "i", playerid);
         }
         else
         {
            SendClientMessage(playerid, COR_GRAD1, "VOcê não é um jornaleiro !");
            return 1;
         }
       }
       return 1;
    }
    CMD:ejornal(playerid, params[])
	{
      if(PlayerInfo[playerid][pEmprego] == 12)
      {
            if(PlayerToPoint(80.0, playerid, 1441.7911,2360.0532,10.8203))
		    {
                if(Mjornal2[playerid] == 0)
                {
                  SendClientMessage(playerid, COR_GRAD1, "Você não tem um cadáver, use /mcadaver e busque um !");
                  return 1;
                }
                format(gstring, sizeof(gstring), "%s entregou um jornal!", PlayerName(playerid));
                SendEmpregoMessage(12, 0xFFEC8BFF, gstring);
                format(gstring, sizeof(gstring), "Você entregou um jornal e [R$750] foram adicionados em seu salário !");
                SendClientMessage(playerid, COR_GRAD1, gstring);
                SendClientMessage(playerid, COR_GRAD1, "Você já pode entregar outro jornal !");
                PlayerInfo[playerid][pSalario] += 750;
                RemovePlayerAttachedObject(playerid,0);
                DisablePlayerCheckpoint(playerid);
                Mjornal2[playerid] = 0;
                return true;
	        }
	  }
	  return 1;
 	}
	CMD:mcarga(playerid, params[])
    {
       if(IsPlayerConnected(playerid))
       {
         new vid = GetPlayerVehicleID(playerid);
         if (PlayerInfo[playerid][pEmprego] == 6)
         {
                if(!PlayerToPoint(80.0, playerid, -1871.7448,-1654.6682,22.4709))
		        {
				   SendClientMessage(playerid, COR_GRAD1, "Para marcar uma carga,você deve estar em sua HQ!");
				   SendClientMessage(playerid, COR_GRAD1, "Não se lembra a onde fica ? digite /gps - Empregos - Caminhoneiros!");
				   return 1;
				}
 		        if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER && !CaimnhoneiroCarros(vid))
 		        {
				   SendClientMessage(playerid, COR_LIGHTRED, "Você não está em um caminhão !");
				   return true;
  	            }
                if(Mcarga[playerid] == 1)
                {
                  SendClientMessage(playerid, COR_GRAD1, "Você já tem uma carga no mapa vá busca-la !");
                  return 1;
                }
                if(Mcarga2[playerid] == 1)
                {
                  SendClientMessage(playerid, COR_GRAD1, "Você já tem uma carga no mapa vá busca-la !");
                  return 1;
                }
                new rand;
                format(gstring, sizeof(gstring), "%s marcou uma carga para pegar!", PlayerName(playerid));
                SendEmpregoMessage(6, 0xFFEC8BFF, gstring);
                SendClientMessage(playerid, COR_GRAD1, "Você marcou uma carga no mapa, busque ela e traga até sua HQ !");
                rand = random(sizeof(gMcarga)); //3092
			    SetPlayerCheckpoint(playerid, gMcarga[rand][0], gMcarga[rand][1], gMcarga[rand][2], 6); // Warp the player
                mcarga[playerid] = CreateDynamicPickup(1271, 23, gMcarga[rand][0], gMcarga[rand][1], gMcarga[rand][2]);
                Mcarga[playerid] = 1;
                pmcarga[playerid] = 1;
                tempocmdemprego = SetTimerEx("TempoCmdEmprego", 240000, 0, "i", playerid);
         }
         else
         {
            SendClientMessage(playerid, COR_GRAD1, "Você não é um caminhoneiro !");
            return 1;
         }
       }
       return 1;
    }
	CMD:ecarga(playerid, params[])
	{
      if(PlayerInfo[playerid][pEmprego] == 6)
      {
            if(PlayerToPoint(80.0, playerid, -1871.7448,-1654.6682,22.4709))
		    {
                if(Mcarga2[playerid] == 0)
                {
                  SendClientMessage(playerid, COR_GRAD1, "Você não tem uma carga, use /mcarga e busque uma !");
                  return 1;
                }
                format(gstring, sizeof(gstring), "%s entregou uma carga!", PlayerName(playerid));
                SendEmpregoMessage(6, 0xFFEC8BFF, gstring);
                format(gstring, sizeof(gstring), "Você entregou uma carga e [R$950] foram adicionados em seu salário !");
                SendClientMessage(playerid, COR_GRAD1, gstring);
                SendClientMessage(playerid, COR_GRAD1, "Você já pode entregar outra carga !");
                PlayerInfo[playerid][pSalario] += 950;
                RemovePlayerAttachedObject(playerid,0);
                DisablePlayerCheckpoint(playerid);
                Mcarga2[playerid] = 0;
                return true;
	        }
	  }
	  return 1;
 	}
	CMD:mlixo(playerid, params[])
    {
       if(IsPlayerConnected(playerid))
       {
            if (PlayerInfo[playerid][pEmprego] == 8)
            {
                if(!PlayerToPoint(80.0, playerid, 2202.9292,-1971.4089,13.5572) && !PlayerToPoint(80.0, playerid, 2202.9536,-1981.9543,13.5515) && !PlayerToPoint(80.0, playerid, 2193.7070,-1999.6227,13.5469) && !PlayerToPoint(80.0, playerid, 2161.2625,-1987.3088,14.2694) && !PlayerToPoint(80.0, playerid, 2166.5229,-1971.7751,13.5541)
				&& !PlayerToPoint(60.0, playerid, -2752.4666,90.7031,7.0313) && !PlayerToPoint(60.0, playerid, -2737.6907,93.2707,4.4333) && !PlayerToPoint(60.0, playerid, -2738.3879,115.5734,4.4962) && !PlayerToPoint(60.0, playerid, -2735.8149,133.7296,4.2641) && !PlayerToPoint(60.0, playerid, -2752.5149,129.2021,7.0313))
		        {
				   SendClientMessage(playerid, COR_GRAD1, "Para marcar um lixo, você deve estar em sua HQ!");
				   SendClientMessage(playerid, COR_GRAD1, "Não se lembra a onde fica ? digite /gps - Empregos - Lixeiros!");
				   return 1;
				}
 		        if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
 		        {
				   SendClientMessage(playerid, COR_LIGHTRED, "Você não está em um caminhão !");
				   return true;
  	            }
                if(Mlixo[playerid] == 1)
                {
                  SendClientMessage(playerid, COR_GRAD1, "Você já tem um lixo no mapa vá busca-la !");
                  return 1;
                }
                if(Mlixo2[playerid] == 1)
                {
                  SendClientMessage(playerid, COR_GRAD1, "Você já tem um lixo no mapa vá busca-la !");
                  return 1;
                }
                new rand;
                format(gstring, sizeof(gstring), "%s marcou um lixo para pegar!", PlayerName(playerid));
                SendEmpregoMessage(8, 0xFFEC8BFF, gstring);
                SendClientMessage(playerid, COR_GRAD1, "Você marcou um lixo no mapa, busque ela e traga até sua HQ !");
                rand = random(sizeof(gMlixo));
                SBizzInfo[13][sbTill] += 700;
		        ExtortionSBiz(13, 700);
		     	// CreateDynamicObject(1265, 1950.6636, -1939.75450, 13.54690,-0.8,0.0,0.0);
                Mlixo[playerid] = 1;
                pmlixo[playerid] = 1;
				tempocmdemprego = SetTimerEx("TempoCmdEmprego", 240000, 0, "i", playerid);
                SetPlayerCheckpoint(playerid, gMlixo[rand][0], gMlixo[rand][1], gMlixo[rand][2], 6); // Warp the player
			 	mlixo[playerid] = CreateDynamicPickup(1265,23, gMlixo[rand][0], gMlixo[rand][1], gMlixo[rand][2]);
            }
            else
            {
                 SendClientMessage(playerid, COR_GRAD1, "Você não é um lixeiro !");
                 return 1;
            }
       }
       return 1;
	}
	CMD:elixo(playerid, params[])
    {
        for(new i=0; i<MAX_PLAYERS; ++i)
        {
          if(PlayerInfo[playerid][pEmprego] >= 8)
          {
                if(!PlayerToPoint(80.0, playerid, 2202.9292,-1971.4089,13.5572) && !PlayerToPoint(80.0, playerid, 2202.9536,-1981.9543,13.5515) && !PlayerToPoint(80.0, playerid, 2193.7070,-1999.6227,13.5469) && !PlayerToPoint(80.0, playerid, 2161.2625,-1987.3088,14.2694) && !PlayerToPoint(80.0, playerid, 2166.5229,-1971.7751,13.5541)
				&& !PlayerToPoint(60.0, playerid, -2752.4666,90.7031,7.0313) && !PlayerToPoint(60.0, playerid, -2737.6907,93.2707,4.4333) && !PlayerToPoint(60.0, playerid, -2738.3879,115.5734,4.4962) && !PlayerToPoint(60.0, playerid, -2735.8149,133.7296,4.2641) && !PlayerToPoint(60.0, playerid, -2752.5149,129.2021,7.0313))
		        {
				   SendClientMessage(playerid, COR_GRAD1, "Você não está no lixão !");
				   SendClientMessage(playerid, COR_GRAD1, "Não se lembra a onde fica ? digite /gps - Empregos - Lixeiros!");
				   return 1;
				}
                if(Mlixo2[playerid] == 0)
                {
                  SendClientMessage(playerid, COR_GRAD1, "Você não está com um lixo, digite /mlixo para marcar um e vá pega-lo!");
                  return 1;
                }
                format(gstring, sizeof(gstring), "%s entregou um lixo!", PlayerName(playerid));
                SendEmpregoMessage(8, 0xFFEC8BFF, gstring);
                format(gstring, sizeof(gstring), "Você entregou uma carga e [R$700] foram adicionados em seu salário !");
                SendClientMessage(playerid, COR_GRAD1, gstring);
                SendClientMessage(playerid, COR_GRAD1, "Você já pode entregar outro lixo !");
                PlayerInfo[playerid][pSalario] += 700;
                DisablePlayerCheckpoint(playerid);
                Mlixo2[playerid] = 0;
                RemovePlayerAttachedObject(playerid, 0);
                return true;

          }
	    }
	    return 1;
	}
	CMD:roubarcarro(playerid, params[])
	{
         if(PlayerInfo[playerid][pEmprego] == 9)
         {
			  new vid = GetPlayerVehicleID(playerid);
   			  if(GetTickCount() - TempoRoubarCarro[playerid] < 180000)
 	          {
	  		       SendClientMessage(playerid,COR_GRAD1,"Você já roubou um carro, espere o tempo necessário para roubar novamente(5 minutos) !");
     			   return 1;
	          }
			  if(CivisCarros(vid))
			  {
                   SendClientMessage(playerid, COR_LIGHTRED, "Você não pode roubar este tipo de veículo!");
                   RemovePlayerFromVehicleEx(playerid);
			       return 1;
			  }
			  if(AluguelCarros1(vid))
			  {
                   SendClientMessage(playerid, COR_LIGHTRED, "Você não pode roubar este tipo de veículo!");
                   RemovePlayerFromVehicleEx(playerid);
			       return 1;
			  }
			  if(AluguelCarros2(vid))
			  {
                   SendClientMessage(playerid, COR_LIGHTRED, "Você não pode roubar este tipo de veículo!");
                   RemovePlayerFromVehicleEx(playerid);
			       return 1;
			  }
			  if(AluguelCarros3(vid))
			  {
                   SendClientMessage(playerid, COR_LIGHTRED, "Você não pode roubar este tipo de veículo!");
                   RemovePlayerFromVehicleEx(playerid);
			       return 1;
			  }
			  if(AluguelCarros4(vid))
			  {
                   SendClientMessage(playerid, COR_LIGHTRED, "Você não pode roubar este tipo de veículo!");
                   RemovePlayerFromVehicleEx(playerid);
			       return 1;
			  }
			  if(AeroAluguel(vid))
			  {
                   SendClientMessage(playerid, COR_LIGHTRED, "Você não pode roubar este tipo de veículo!");
                   RemovePlayerFromVehicleEx(playerid);
			       return 1;
			  }
			  if(BarcosAluguel(vid))
			  {
                   SendClientMessage(playerid, COR_LIGHTRED, "Você não pode roubar este tipo de veículo!");
                   RemovePlayerFromVehicleEx(playerid);
			       return 1;
			  }
			  if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
			  {
                   SendClientMessage(playerid, COR_LIGHTRED, "Você precisa estar dirigindo de um veículo para roubá-lo!");
			       return 1;
			  }
			  if(IsABarco(vid) && IsAAviao(vid))
			  {
                   SendClientMessage(playerid, COR_GRAD1, "Você pode roubar este tipo de veículo!");
			       return 1;
			  }
  			  else
  			  {
       			   SendClientMessage(playerid, COR_LIGHTRED, "Você roubou este carro, leve ele até o ponto vermelho no mapa!");
    			   SetPlayerCriminal(playerid,255, "Roubo de Veiculo");
    			   GameTextForPlayer(playerid,"~w~vender carro~n~~r~ Largue o carro no esconderijo", 5000, 1);
  		           SetPlayerCheckpoint(playerid, 2749.9712,-2226.4041,16.1875, 6.0);
  		           TempoRoubarCarro[playerid] = GetTickCount();
	  		       rouboucarro[playerid] = 1;
       		  }

         }
         else
         {
			  SendClientMessage(playerid, COR_LIGHTRED, "Você não é um ladrão de carros!");
			  return 1;
         }
	}
	CMD:servicos(playerid, params[])
	{
		if(IsPlayerConnected(playerid))
	    {
	        if(!IsACop(playerid) && GetPlayerOrg(playerid) != 10 && GetPlayerOrg(playerid) != 4 && GetPlayerOrg(playerid) != 14 && PlayerInfo[playerid][pEmprego] != 4)
			{
			    SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar este comando !");
			    return 1;
            }
			SendClientMessage(playerid, COR_VERDE, "Serviços Disponíveis(use /pservico para aceitar um serviço):");
			for(new i = 0; i < MAX_PLAYERS; ++i)
			{
				if(IsPlayerConnected(i))
				{
				    new local[MAX_ZONE_NAME];
				    new celular = PlayerInfo[i][pPnumber];
			 	    GetPlayer2DZone(giveplayeridzcmd, local, MAX_ZONE_NAME);
				    if(GetPlayerOrg(playerid) == 4)
				    {
				        if(MedicCall == i)
				        {
                            if(IsPlayerInSF(MedicCall))
					        {
						        GetPlayerName(i, sendername, sizeof(sendername));
						        format(gstring, 128, "%s: ID[%d] Cel[%d] Local[%s] Cidade[San Fierro]", sendername,i,celular,local);
                                SendClientMessage(playerid,GetPlayerColor(i),gstring);
                            }
                            else if(IsPlayerInLS(MedicCall))
					        {
						        GetPlayerName(i, sendername, sizeof(sendername));
						        format(gstring, 128, "%s: ID[%d] Cel[%d] Local[%s] Cidade[Los Santos]", sendername,i,celular,local);
                                SendClientMessage(playerid,GetPlayerColor(i),gstring);
		                    }
	                        else if(IsPlayerInLV(MedicCall))
		                    {
                                GetPlayerName(i, sendername, sizeof(sendername));
				                format(gstring, 128, "%s: ID[%d] Cel[%d] Local[%s] Cidade[Las Venturas]", sendername,i,celular,local);
                                SendClientMessage(playerid,GetPlayerColor(i),gstring);
                            }
                            else if(IsPlayerInLSSF(MedicCall))
		                    {
                                GetPlayerName(i, sendername, sizeof(sendername));
				                format(gstring, 128, "%s: ID[%d] Cel[%d] Local[%s] Cidade[LS/SF]", sendername,i,celular,local);
                                SendClientMessage(playerid,GetPlayerColor(i),gstring);
                            }
                            else if(IsPlayerInLSLV(MedicCall))
		                    {
                                GetPlayerName(i, sendername, sizeof(sendername));
				                format(gstring, 128, "%s: ID[%d] Cel[%d] Local[%s] Cidade[LS/LV]", sendername,i,celular,local);
                                SendClientMessage(playerid,GetPlayerColor(i),gstring);
                            }
                            else if(IsPlayerInSFLV(MedicCall))
		                    {
                                GetPlayerName(i, sendername, sizeof(sendername));
				                format(gstring, 128, "%s: ID[%d] Cel[%d] Local[%s] Cidade[SF/LV]", sendername,i,celular,local);
                                SendClientMessage(playerid,GetPlayerColor(i),gstring);
                            }
					    }
					}
				    if(GetPlayerOrg(playerid) == 10)
				    {
				        if(TaxiCall == i)
				        {
                            if(IsPlayerInSF(TaxiCall))
					        {
						        GetPlayerName(i, sendername, sizeof(sendername));
						        format(gstring, 128, "%s: ID[%d] Cel[%d] Local[%s] Cidade[San Fierro]", sendername,i,celular,local);
                                SendClientMessage(playerid,GetPlayerColor(i),gstring);
                            }
                            else if(IsPlayerInLS(TaxiCall))
					        {
						        GetPlayerName(i, sendername, sizeof(sendername));
						        format(gstring, 128, "%s: ID[%d] Cel[%d] Local[%s] Cidade[Los Santos]", sendername,i,celular,local);
                                SendClientMessage(playerid,GetPlayerColor(i),gstring);
		                    }
	                        else if(IsPlayerInLV(TaxiCall))
		                    {
                                GetPlayerName(i, sendername, sizeof(sendername));
				                format(gstring, 128, "%s: ID[%d] Cel[%d] Local[%s] Cidade[Las Venturas]", sendername,i,celular,local);
                                SendClientMessage(playerid,GetPlayerColor(i),gstring);
                            }
                            else if(IsPlayerInLSSF(TaxiCall))
		                    {
                                GetPlayerName(i, sendername, sizeof(sendername));
				                format(gstring, 128, "%s: ID[%d] Cel[%d] Local[%s] Cidade[LS/SF]", sendername,i,celular,local);
                                SendClientMessage(playerid,GetPlayerColor(i),gstring);
                            }
                            else if(IsPlayerInLSLV(TaxiCall))
		                    {
                                GetPlayerName(i, sendername, sizeof(sendername));
				                format(gstring, 128, "%s: ID[%d] Cel[%d] Local[%s] Cidade[LS/LV]", sendername,i,celular,local);
                                SendClientMessage(playerid,GetPlayerColor(i),gstring);
                            }
                            else if(IsPlayerInSFLV(TaxiCall))
		                    {
                                GetPlayerName(i, sendername, sizeof(sendername));
				                format(gstring, 128, "%s: ID[%d] Cel[%d] Local[%s] Cidade[SF/LV]", sendername,i,celular,local);
                                SendClientMessage(playerid,GetPlayerColor(i),gstring);
                            }
					    }
					}
					if(GetPlayerOrg(playerid) == 14)
				    {
					    if(MechanicCall == i)
				        {
						    if(IsPlayerInSF(MechanicCall))
					        {
						        GetPlayerName(i, sendername, sizeof(sendername));
						        format(gstring, 128, "%s: ID[%d] Cel[%d] Local[%s] Cidade[San Fierro]", sendername,i,celular,local);
                                SendClientMessage(playerid,GetPlayerColor(i),gstring);
                            }
                            else if(IsPlayerInLS(MechanicCall))
					        {
						        GetPlayerName(i, sendername, sizeof(sendername));
						        format(gstring, 128, "%s: ID[%d] Cel[%d] Local[%s] Cidade[Los Santos]", sendername,i,celular,local);
                                SendClientMessage(playerid,GetPlayerColor(i),gstring);
		                    }
	                        else if(IsPlayerInLV(MechanicCall))
		                    {
                                GetPlayerName(i, sendername, sizeof(sendername));
				                format(gstring, 128, "%s: ID[%d] Cel[%d] Local[%s] Cidade[Las Venturas]", sendername,i,celular,local);
                                SendClientMessage(playerid,GetPlayerColor(i),gstring);
                            }
                            else if(IsPlayerInLSSF(MechanicCall))
		                    {
                                GetPlayerName(i, sendername, sizeof(sendername));
				                format(gstring, 128, "%s: ID[%d] Cel[%d] Local[%s] Cidade[LS/SF]", sendername,i,celular,local);
                                SendClientMessage(playerid,GetPlayerColor(i),gstring);
                            }
                            else if(IsPlayerInLSLV(MechanicCall))
		                    {
                                GetPlayerName(i, sendername, sizeof(sendername));
				                format(gstring, 128, "%s: ID[%d] Cel[%d] Local[%s] Cidade[LS/LV]", sendername,i,celular,local);
                                SendClientMessage(playerid,GetPlayerColor(i),gstring);
                            }
                            else if(IsPlayerInSFLV(MechanicCall))
		                    {
                                GetPlayerName(i, sendername, sizeof(sendername));
				                format(gstring, 128, "%s: ID[%d] Cel[%d] Local[%s] Cidade[SF/LV]", sendername,i,celular,local);
                                SendClientMessage(playerid,GetPlayerColor(i),gstring);
                            }
				       }
				    }
					if (IsACop(playerid))
                    {
					    if(CopsrondaCall == i)
				        {
					        if(IsPlayerInSF(CopsrondaCall))
					        {
						        GetPlayerName(i, sendername, sizeof(sendername));
						        format(gstring, 128, "%s: ID[%d] Cel[%d] Local[%s] Cidade[San Fierro]", sendername,i,celular,local);
                                SendClientMessage(playerid,GetPlayerColor(i),gstring);
                            }
                            else if(IsPlayerInLS(CopsrondaCall))
					        {
						        GetPlayerName(i, sendername, sizeof(sendername));
						        format(gstring, 128, "%s: ID[%d] Cel[%d] Local[%s] Cidade[Los Santos]", sendername,i,celular,local);
                                SendClientMessage(playerid,GetPlayerColor(i),gstring);
		                    }
	                        else if(IsPlayerInLV(CopsrondaCall))
		                    {
                                GetPlayerName(i, sendername, sizeof(sendername));
				                format(gstring, 128, "%s: ID[%d] Cel[%d] Local[%s] Cidade[Las Venturas]", sendername,i,celular,local);
                                SendClientMessage(playerid,GetPlayerColor(i),gstring);
                            }
                            else if(IsPlayerInLSSF(CopsrondaCall))
		                    {
                                GetPlayerName(i, sendername, sizeof(sendername));
				                format(gstring, 128, "%s: ID[%d] Cel[%d] Local[%s] Cidade[LS/SF]", sendername,i,celular,local);
                                SendClientMessage(playerid,GetPlayerColor(i),gstring);
                            }
                            else if(IsPlayerInLSLV(CopsrondaCall))
		                    {
                                GetPlayerName(i, sendername, sizeof(sendername));
				                format(gstring, 128, "%s: ID[%d] Cel[%d] Local[%s] Cidade[LS/LV]", sendername,i,celular,local);
                                SendClientMessage(playerid,GetPlayerColor(i),gstring);
                            }
                            else if(IsPlayerInSFLV(CopsrondaCall))
		                    {
                                GetPlayerName(i, sendername, sizeof(sendername));
				                format(gstring, 128, "%s: ID[%d] Cel[%d] Local[%s] Cidade[SF/LV]", sendername,i,celular,local);
                                SendClientMessage(playerid,GetPlayerColor(i),gstring);
                            }
                        }
			        }
 	            }
		    }
		}
		return 1;
  	}
	CMD:pservico(playerid, params[])
    {
        if(IsPlayerConnected(playerid))
        {
		    tmpzcmd = strtok(cmdtext, idxzcmd);
		    giveplayeridzcmd = ReturnUser(tmpzcmd);
            if(!strlen(tmpzcmd))
		    {
  			    SendClientMessage(playerid, COR_GRAD2, "USE: /pservico [id]");
		        return 1;
		    }
            if(GetPlayerOrg(playerid) == 10)
            {
	            if(TaxiCall < 999)
	            {
					if(PediuServico[TaxiCall] == 0)
					{
					   SendClientMessage(playerid, COR_GRAD1, "* O Player não solicitou nenhum servico !");
					   return 1;
					}
	                if(IsPlayerConnected(TaxiCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(TaxiCall, giveplayerzcm, sizeof(giveplayerzcm));
	                	format(gstring, sizeof(gstring), "* Voce aceitou a chamada do(a) %s, A marca estará visível até você chegar.",giveplayerzcm);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
                        format(gstring, sizeof(gstring), "[Taxista]: %s[%d] aceitou o seu pedido, aguarde no local solicitado, seja RPG !",sendername,playerid);
						SendClientMessage(TaxiCall, COR_LIGHTRED, gstring);
						format(gstring, sizeof(gstring), "Taxista: [%s] aceitou o pedido do cliente [%s] !", PlayerName(playerid), giveplayerzcm);
			            SendFamilyMessage(10,0x6666ccFF,gstring);
						GameTextForPlayer(playerid, "~p~SIGA O CHECKPOINT", 5000, 1);
						new Float:X,Float:Y,Float:Z;
					    GetPlayerPos(TaxiCall, X,Y,Z);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
						TaxiCallTime[playerid] = 1;
						TaxiAccepted[playerid] = TaxiCall;
						PediuServico[TaxiCall] = 0;
						TaxiCall = 999;
						return 1;
                    }
	                else
	                {
	                   SendClientMessage(playerid, COR_GREY, "Não tem nenhuma chamada de taxi no momento !");
			    	   return 1;
    	            }
    	        }
    	    }
            if(GetPlayerOrg(playerid) == 4)
            {
	            if(MedicCall < 999)
	            {
					if(PediuServicoMed[MedicCall] == 0)
					{
					   SendClientMessage(playerid, COR_GRAD1, "* Este Jogador não está conectado !");
					   return 1;
					}
	                if(IsPlayerConnected(MedicCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(MedicCall, giveplayerzcm, sizeof(giveplayerzcm));
	                	format(gstring, sizeof(gstring), "* Voce aceitou a chamada do(a) %s, A marca estará visível até você chegar.",giveplayerzcm);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
                        format(gstring, sizeof(gstring), "[Médico]: %s[%d] aceitou o seu pedido, aguarde no local solicitado, seja RPG !",sendername,playerid);
						SendClientMessage(MedicCall, COR_LIGHTRED, gstring);
						format(gstring, sizeof(gstring), "Médico: [%s] aceitou o pedido do paciente [%s] !", PlayerName(playerid), giveplayerzcm);
			            SendFamilyMessage(4,0x6666ccFF,gstring);
						GameTextForPlayer(playerid, "~p~SIGA O CHECKPOINT", 5000, 1);
						new Float:X,Float:Y,Float:Z;
					    GetPlayerPos(MedicCall, X,Y,Z);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
						MedicCallTime[playerid] = 1;
						MedicAccepted[playerid] = MedicCall;
						PediuServicoMed[MedicCall] = 0;
						MedicCall = 999;
						return 1;
                    }
	                else
	                {
	                   SendClientMessage(playerid, COR_GREY, "* Este Jogador não está conectado !");
			    	   return 1;
    	            }
    	        }
    	    }
            if(GetPlayerOrg(playerid) == 14)
            {
	            if(MechanicCall < 999)
	            {
					if(PediuServicoMec[MechanicCall] == 0)
					{
					   SendClientMessage(playerid, COR_GRAD1, "* Este Jogador não está conectado !");
					   return 1;
					}
	                if(IsPlayerConnected(MechanicCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(MechanicCall, giveplayerzcm, sizeof(giveplayerzcm));
	                	format(gstring, sizeof(gstring), "* Voce aceitou a chamada do(a) %s, A marca estará visível até você chegar.",giveplayerzcm);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
                        format(gstring, sizeof(gstring), "[Mecânico]: %s[%d] aceitou o seu pedido, aguarde no local solicitado, seja RPG !",sendername,playerid);
						SendClientMessage(MechanicCall, COR_LIGHTRED, gstring);
						format(gstring, sizeof(gstring), "Mecânico: [%s] aceitou o pedido do cliente [%s] !", PlayerName(playerid), giveplayerzcm);
			            SendFamilyMessage(24,0x6666ccFF,gstring);
						GameTextForPlayer(playerid, "~p~SIGA O CHECKPOINT", 5000, 1);
						new Float:X,Float:Y,Float:Z;
					    GetPlayerPos(MechanicCall, X,Y,Z);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
						MechanicCallTime[playerid] = 1;
						MechanicAccepted[playerid] = MechanicCall;
						PediuServicoMec[MedicCall] = 0;
						MechanicCall = 999;
						return 1;
                    }
	                else
	                {
	                   SendClientMessage(playerid, COR_GREY, "* Este Jogador não está conectado !");
			    	   return 1;
    	            }
    	        }
    	    }
            if(IsACop(playerid))
            {
	            if(MechanicCall < 999)
	            {
					if(PediuServicoCop[CopsrondaCall] == 0)
					{
					   SendClientMessage(playerid, COR_GRAD1, "* Este Jogador não está conectado !");
					   return 1;
					}
	                if(IsPlayerConnected(CopsrondaCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(CopsrondaCall, giveplayerzcm, sizeof(giveplayerzcm));
	                	format(gstring, sizeof(gstring), "* Voce aceitou a chamada do(a) %s, A marca estará visível até você chegar.",giveplayerzcm);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
                        format(gstring, sizeof(gstring), "[Policial]: %s[%d] aceitou o seu pedido, aguarde no local solicitado, seja RPG !",sendername,playerid);
						SendClientMessage(CopsrondaCall, COR_LIGHTRED, gstring);
						format(gstring, sizeof(gstring), "Oficial: [%s] aceitou o pedido do cliente [%s] !", PlayerName(playerid), giveplayerzcm);
			            SendFamilyMessage(1,0x6666ccFF,gstring);
		 	            SendFamilyMessage(2,0x6666ccFF,gstring);
			            SendFamilyMessage(3,0x6666ccFF,gstring);
			            SendFamilyMessage(7,0x6666ccFF,gstring);
			            SendFamilyMessage(11,0x6666ccFF,gstring);
			            SendFamilyMessage(16,0x6666ccFF,gstring);
			            SendFamilyMessage(23,0x6666ccFF,gstring);
			            SendFamilyMessage(25,0x6666ccFF,gstring);
						GameTextForPlayer(playerid, "~p~SIGA O CHECKPOINT", 5000, 1);
						new Float:X,Float:Y,Float:Z;
					    GetPlayerPos(CopsrondaCall, X,Y,Z);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
						CopsrondaCallTime[playerid] = 1;
						CopsrondaAccepted[playerid] = CopsrondaCall;
						PediuServicoCop[CopsrondaCall] = 0;
						CopsrondaCall = 999;
						return 1;
                    }
	                else
	                {
	                   SendClientMessage(playerid, COR_GREY, "* Este Jogador não está conectado !");
			    	   return 1;
    	            }
    	        }
    	    }
	    }
	    return 1;
    }
	CMD:tesouro(playerid, params[])
    {
          if(IsPlayerConnected(playerid))
          {
               if (PlayerInfo[playerid][pAdmin] >= 4)
               {
                    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
                    {
                         SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
                         return 1;
                    }
                    if(GetPlayerInterior(playerid) > 0)
                    {
                         SendClientMessage(playerid,COR_GRAD5,"Você não pode usar este comando em interiores !");
                         return 1;
                    }
                    GetPlayerPos(playerid, tesourox,tesouroy,tesouroz);
                    tesouro = CreateDynamicPickup(1550,23,tesourox,tesouroy,tesouroz);
                    for(new i = 0; i < MAX_PLAYERS; ++i)
                    {
                         if(IsPlayerConnected(i) == 1)
                         {
                              EventoTesouro[i] = 1;
                              format(gstring, sizeof(gstring), "~r~evento tesouro iniciado !");
                              GameTextForPlayer(i, gstring, 2500, 3);
                         }
                    }
                    if(EventoTesouro[playerid] == 1)
                    {
                         format(gstring, sizeof(gstring), "[Evento Tesouro]: Admin: %s colocou um tesouro pelo BPL, quem achá-lo irá receber dinheiro e respeito !", PlayerName(playerid));
                         SendClientMessageToAll(COR_LIGHTBLUE, gstring);
                         return 1;
                    }
               }
               else
               {
                    SendClientMessage(playerid, COR_GRAD1, "Você não esta autorizado a usar este comando!");
               }
          }
          return 0;
    }
	CMD:escada(playerid, params[])
    {
       if(IsPlayerConnected(playerid))
       {
           if (GetPlayerOrg(playerid) == 4)
           {
                if(GetPlayerInterior(playerid) > 0)
                {
                    SendClientMessage(playerid,COR_GRAD5,"Você não pode usar este comando em interiores !");
                    return 1;
                }
                if(EscadaP[playerid] == 1)
                {
				   SendClientMessage(playerid, COR_GRAD1, "Você já pois uma escada, retire para colocar outra !");
				   return 1;
                }
                new Float:X, Float:Y, Float:Z, Float:A;
	 	        GetPlayerPos(playerid, X, Y, Z);
		        GetPlayerFacingAngle(playerid, A);
	            Escada[playerid] = CreateDynamicObject(8572, X, Y, Z, 0.0, 0.0, A+180);
		        SetPlayerPos(playerid, X, Y, Z+4);
                format(gstring, sizeof(gstring), "* Médico: %s colou uma escada !", PlayerName(playerid));
                SendClientMessageToAll(COR_VERMELHO, gstring);
                EscadaP[playerid] = 1;

           }
           else
           {
              SendClientMessage(playerid, COR_GRAD1, "Você não é um Médico !");
              return 1;
           }
       }
       return 1;
    }
	CMD:rec(playerid, params[])
    {
       if(IsPlayerConnected(playerid))
       {
           if (GetPlayerOrg(playerid) == 4)
           {
                if(GetPlayerInterior(playerid) > 0)
                {
                    SendClientMessage(playerid,COR_GRAD5,"Você não pode usar este comando em interiores !");
                    return 1;
                }
                if(EscadaP[playerid] == 0)
                {
				   SendClientMessage(playerid, COR_GRAD1, "Você não tem uma escada");
				   return 1;
                }
                DestroyDynamicObject(Escada[playerid]);
                SendClientMessage(playerid, COR_VERMELHO, "Você removeu sua escada !");
                EscadaP[playerid] = 0;

           }
           else
           {
              SendClientMessage(playerid, COR_GRAD1, "Você não é um Médico !");
              return 1;
           }
       }
       return 1;
    }
    CMD:caixinhap(playerid, params[])
 	{
 	    if(IsPlayerConnected(playerid))
	 	{
	 	    if(PlayerInfo[playerid][pAdmin] >= 1340)
	 	    {
		 	    tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd))
				{
					SendClientMessage(playerid, COR_GRAD5, "USE: /caixinhap [quantidade de players]");
					return 1;
				}
				new players;
				players = strval(tmpzcmd);
				PlayersCaixinha = players;
	  	        format(gstring, sizeof(gstring), "Admin : %s setou a quantidade de players da caixinha para [%d] !", PlayerName(playerid), players);
	            ABroadCast(COR_AMARELO,gstring,1);
            }
            else
            {
                SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar esse comando !");
				return 1;
            }
	 	}
		return 1;
	}
	CMD:reloadbans(playerid, params[])
	{
		 if(PlayerInfo[playerid][pAdmin] >= 1342)
		 {
              SendRconCommand("reloadbans");
              SendClientMessage(playerid, COR_GRAD1, "Você recarregou todos os banimentos do servidor !");
         }
         return 1;
    }
	CMD:reloadlogs(playerid, params[])
	{
		 if(PlayerInfo[playerid][pAdmin] >= 1342)
		 {
              SendRconCommand("reloadlog");
              SendClientMessage(playerid, COR_GRAD1, "Você recarregou todos os logs do servidor !");
         }
         return 1;
 	}
 	CMD:senha(playerid, params[])
	{
		if(PlayerInfo[playerid][pAdmin] >= 1342)
		{
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD5, "USE: /senha [password]");
				return 1;
			}
			new senha;
			senha = strval(tmpzcmd);
			format(gstring, sizeof(gstring), "password %d", senha);
			SendRconCommand(gstring);
			format(gstring, sizeof(gstring), "ADMIN CMD: %s Colocou Senha no Servidor[%d] !",PlayerName(playerid),senha);
			ABroadCast(COR_LIGHTRED,gstring,1);
		}
		else
		{
	  		SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar esse comando !");
			return 1;
	 	}
		return 1;
	}
	CMD:banirserial(playerid, params[])
	{
		new targetid;
  		new playernamexD[MAX_PLAYER_NAME],targetname[MAX_PLAYER_NAME];
        GetPlayerName(playerid,playernamexD,sizeof(playernamexD));
        GetPlayerName(targetid,targetname,sizeof(targetname));
        if(PlayerInfo[playerid][pAdmin] < 1341 )
		{
			return SendClientMessage(playerid,0xC20000FF,"Você não está autorizado a usar este comando !");
		}

		tmpzcmd = strtok(cmdtext, idxzcmd);
		targetid = ReturnUser(tmpzcmd);

		if(!strlen(tmpzcmd))
		{
			return SendClientMessage(playerid, COR_GRAD5, "USE: /banirserial [ ID ]");
		}
        if(!IsPlayerConnected(targetid))
		{
			return SendClientMessage(playerid,0xC20000FF,"Você não está autorizado a usar este comando.");
		}
		if(strcmp(PlayerName(targetid),"Dudu_Insane(playerid, params[]) )
		{
			SendClientMessage(playerid, COR_GRAD1, "Você não pode banir o serial do Dudu_Insane, ele bani você !");
			format(gstring, sizeof(gstring), "/kick %d AUTOMATICO, [Tentou Banir o Serial].", playerid);
			OnPlayerCommandText(giveplayeridzcmd, gstring);
			return 1;
		}
        new serialini[512];
        format(serialini,sizeof(serialini),"Banido Serial/%s.cfg", GetPlayerSerial(targetid));
        if(!DOF2_FileExists(serialini))
        {
            DOF2_CreateFile(serialini);
            DOF2_SetString(serialini, "Nick", PlayerName(targetid));
	        DOF2_SetInt(serialini, "Banido", 1);
	        DOF2_SaveFile();
        }
       	format(gstring, sizeof(gstring), "AvisoAdmin: %s baniu o serial do jogador %s.",PlayerName(playerid),PlayerName(targetid));
	    ABroadCast(COR_AMARELO,gstring,1);
	    BanLog(gstring);
        return 1;
	}
	CMD:desbanirserial(playerid, params[])
	{
        if(PlayerInfo[playerid][pAdmin] < 1342)
		{
			return SendClientMessage(playerid,0xC20000FF,"Você não está autorizado a usar este comando !");
		}
		new serialbanido[512];
		serialbanido = strtok(cmdtext, idxzcmd);
		if(!strlen(serialbanido))
		{
			return SendClientMessage(playerid, COR_GRAD5, "USE: /desbanirserial [ Nome ]");
		}
        new serialini[512];
		new NomeDoViado[MAX_PLAYER_NAME];
        format(serialini,sizeof(serialini),"Banido Serial/%s.cfg",serialbanido);
        strmid(NomeDoViado, DOF2_GetString(serialini,"Nick"), 0, strlen(DOF2_GetString(serialini,"Nick")), 255);
        if(DOF2_FileExists(serialini))
        {
	        DOF2_RemoveFile(serialini);
	        printf("chegou niin");
        }
        else if(!DOF2_FileExists(serialini))
        {
            SendClientMessage(playerid, COR_GRAD5, "Serial inválido!");
            return 1;
        }
       	format(gstring, sizeof(gstring), "AvisoAdmin: %s desbaniu o serial do jogador %s.",PlayerName(playerid),NomeDoViado);
	    ABroadCast(COR_AMARELO,gstring,1);
	    BanLog(gstring);
        return 1;
	}
	CMD:banir(playerid, params[])// || CMD:ban(playerid, params[])
    {
    	if(IsPlayerConnected(playerid))
    	{
    		new dias, mes, ano;
      		tmpzcmd = strtok(cmdtext, idxzcmd);
    		tmpzcmd2 = strtok(cmdtext, idxzcmd);
    		tmpzcmd3 = strtok(cmdtext, idxzcmd);
    		tmpzcmd4 = strtok(cmdtext, idxzcmd);
            if(!strlen(tmpzcmd))
    		{
    			SendClientMessage(playerid, COR_GRAD2, "USE: /banir [ID] [Dia] [Mes] [Ano] [Motivo]");
    			return 1;
    		}
    		giveplayeridzcmd = ReturnUser(tmpzcmd);
    		dias = strval(tmpzcmd2);
    		mes = strval(tmpzcmd3);
    		ano = strval(tmpzcmd4);
    		if(PlayerInfo[playerid][pAdmin] >= 2)
    		{
    		    if(giveplayeridzcmd != INVALID_PLAYER_ID)
                {
			    	if(PlayerInfo[giveplayeridzcmd][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
					{
                    	if(giveplayeridzcmd != playerid)
						{
						    format(gstring, sizeof(gstring), "ID [%d] Não está Online.", giveplayeridzcmd);
						    SendClientMessage(playerid, COR_GRAD1, gstring);
						    return 1;
						}
					}
	                if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
	    			{
	    				SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
	    				return 1;
	    			}
	    			if(strcmp(PlayerName(giveplayeridzcmd),"Dudu_Insane(playerid, params[]) )
					{
						SendClientMessage(playerid, COR_GRAD1, "Você não pode banir o Dudu_Insane, ele bani você !");
						format(gstring, sizeof(gstring), "/kick %d AUTOMATICO [Tentou banir Dudu_Insane].", playerid);
						OnPlayerCommandText(playerid, gstring);
						return 1;
					}
	                new arquivo[64];
	                format(arquivo, sizeof(arquivo), Pasta_Contas, PlayerName(giveplayeridzcmd));
	                GetPlayerName(playerid, sendername, sizeof(sendername));
					new length = strlen(cmdtext);
					while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
					{
						idxzcmd++;
					}
					new offset = idxzcmd;
					new result[64];
					while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
					{
						result[idxzcmd - offset] = cmdtext[idxzcmd];
						idxzcmd++;
					}
					result[idxzcmd - offset] = EOS;
	                if(!strlen(result))
					{
						SendClientMessage(playerid, COR_GRAD2, "USE: /banir [ID] [Dia] [Mes] [Ano] [Motivo]");
						return 1;
					}
	                if(!DOF2_FileExists(arquivo))
	                {
	                    SendClientMessage(playerid, COR_GRAD1, "Conta Inexistente!");
	                    return true;
	                }
	                if(pban[playerid] >= 3 && PlayerInfo[playerid][pAdmin] < 1339)
					{
						BanBPL(playerid, "Baniu mais de 3", "Automatico");
					    return 1;
					}
	                if(dias == 0 && mes == 0 && ano == 0)
	                {
		                getdate(year, month, day);
						pban[playerid] += 1;
						format(gstring, sizeof(gstring), "ADMIN CMD: %s foi banido permanentemente por %s, Motivo[%s]", PlayerName(giveplayeridzcmd), sendername, (result),day,month,year);
		                BanLog(gstring);
					    format(gstring, sizeof(gstring), "ADMIN CMD: %s foi banido permanentemente por %s, Motivo[%s]", PlayerName(giveplayeridzcmd), sendername, (result));
						SendClientMessageToAll(COR_LIGHTRED, gstring);
						printf("ADMIN CMD: %s foi banido permanentemente por %s, Motivo: %s", PlayerName(giveplayeridzcmd), sendername, (result));
						SendClientMessage(giveplayeridzcmd, COR_AMARELO, "|________________Instruções para Revisão de Ban________________|");
						SendClientMessage(giveplayeridzcmd, COR_AL, "Tire uma SS da tela apertando F8 imediatamente após ser banido");
						SendClientMessage(giveplayeridzcmd, COR_AL, "E acesse o nosso forum: forum.brasilperfectlife.com");
						SendClientMessage(giveplayeridzcmd, COR_LIGHTRED, "Atenção: Você só será desbanido se for inocente !");
					    PlayerInfo[giveplayeridzcmd][pDiaBanTemp] = dias;
						PlayerInfo[giveplayeridzcmd][pMesBanTemp] = mes;
						PlayerInfo[giveplayeridzcmd][pAnoBanTemp] = ano;
						OnPlayerSave(giveplayeridzcmd);
						BanBPL(giveplayeridzcmd, result, sendername);
	           		}
	           		else if(dias > 0 && mes > 0 && ano > 0)
	           		{
	           		    getdate(year, month, day);
						pban[playerid] += 1;
						format(gstring, sizeof(gstring), "ADMIN CMD: %s foi banido temporariamente por %s, Motivo[%s], Desban[%d/%d/%d]", PlayerName(giveplayeridzcmd), sendername, (result), dias, mes, ano);
		                BanTempLog(gstring);
					    format(gstring, sizeof(gstring), "ADMIN CMD: %s foi banido temporariamente por %s, Motivo[%s], Desban[%d/%d/%d]", PlayerName(giveplayeridzcmd), sendername, (result), dias, mes, ano);
						SendClientMessageToAll(COR_LIGHTRED, gstring);
						printf("ADMIN CMD: %s foi banido temporariamente por %s, Motivo[%s] Desban[%d/%d/%d]", PlayerName(giveplayeridzcmd), sendername, (result), dias, mes, ano);
						SendClientMessage(giveplayeridzcmd, COR_AMARELO, "|________________Instruções para Revisão de Ban________________|");
						SendClientMessage(giveplayeridzcmd, COR_AL, "Tire uma SS da tela apertando F8 imediatamente após ser banido");
					    SendClientMessage(giveplayeridzcmd, COR_AL, "E acesse o nosso forum: forum.brasilperfectlife.com");
						SendClientMessage(giveplayeridzcmd, COR_LIGHTRED, "Atenção: Você só será desbanido se for inocente !");
						PlayerInfo[giveplayeridzcmd][pDiaBanTemp] = dias;
						PlayerInfo[giveplayeridzcmd][pMesBanTemp] = mes;
						PlayerInfo[giveplayeridzcmd][pAnoBanTemp] = ano;
						OnPlayerSave(giveplayeridzcmd);
						BanTemp(giveplayeridzcmd, result, PlayerName(playerid));
	           		}
	                return 1;
	            }
            }
            else
    		{
    		    SendClientMessage(playerid, COR_GRAD1, "ID [0] Não está Online.");
				return 1;
    		}
    	}
    	return 1;
	}
	CMD:congelar(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /congelar [id]");
				return 1;
			}
            new playa;
			playa = ReturnUser(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						if(PlayerInfo[giveplayeridzcmd][pAdmin] >= 1340)
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não pode congelar um Admin Dono !");
							return 1;
						}
						if(strcmp(PlayerName(playa),"Dudu_Insane(playerid, params[]) && playerid != giveplayeridzcmd)
						{
								SendClientMessage(playerid, COR_GRAD1, "Você não pode ver Dudu_Insane, KJKJKJKJKJKJ !");
								return 1;
						}
				        GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(gstring, sizeof(gstring), "ADMIN CMD: %s Congelou %s",sendername,  giveplayerzcm);
						printf("%s",gstring);
						TogglePlayerControllable(playa, 0)
						format(gstring, sizeof(gstring), "ADMIN CMD: %s Foi congelado por %s",giveplayerzcm ,sendername);
						ABroadCast(COR_LIGHTRED,gstring,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
	CMD:descongelar(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /descongelar [id]");
				return 1;
			}
            new playa;
			playa = ReturnUser(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            PlayerMutado[playa] = 0;
			    	    GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						TogglePlayerControllable(playa, 1);
						format(gstring, sizeof(gstring), "ADMIN CMD: %s Descongelou %s",sendername,  giveplayerzcm);
						printf("%s",gstring);
						format(gstring, sizeof(gstring), "ADMIN CMD: %s Foi descongelado por %s",giveplayerzcm ,sendername);
						ABroadCast(COR_LIGHTRED,gstring,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
	CMD:desbugarcam(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
    			CameraInfo[cameraman] = INVALID_PLAYER_ID;
				ABroadCast(COR_AMARELO,"AdmCmd: Camera-man Desbugado!", 1);
				return 1;
			}
		}
	}
	CMD:desbugar(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /desbugar [playerid]");
				return 1;
			}
            new playa;
			playa = ReturnUser(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						desbugando[playa] = 1;
			            PlayerMutado[playa] = 0;
			    	    GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						TogglePlayerControllable(playa, 1);
						SetPlayerVirtualWorld(playerid,0);
						MedicBill[playa] = 0;
			            NeedMedicTime[playa] = 0;
			            SetCameraBehindPlayer(playa);
		                sincronizando[playa] = 1;
                        virt[playa] = GetPlayerVirtualWorld(playa);
                    	interior[playa] = GetPlayerInterior(playa);
                    	skinneg[playa] = GetPlayerSkin(playa);
                    	GetPlayerArmour(playa,APP[playa]);
                     	GetPlayerHealth(playa,PlayerHPP[playa]);
                     	GetPlayerFacingAngle(playa,FaceAngle[playa]);
                      	GetPlayerPos(playa,xx[playa],yy[playa],zz[playa]);
                     	GetPlayerWeaponData(playa,1,gunsinc[1][playa],ammoo[1][playa]);
                     	GetPlayerWeaponData(playa,2,gunsinc[2][playa],ammoo[2][playa]);
                    	GetPlayerWeaponData(playa,3,gunsinc[3][playa],ammoo[3][playa]);
                     	GetPlayerWeaponData(playa,4,gunsinc[4][playa],ammoo[4][playa]);
                     	GetPlayerWeaponData(playa,5,gunsinc[5][playa],ammoo[5][playa]);
                    	GetPlayerWeaponData(playa,6,gunsinc[6][playa],ammoo[6][playa]);
                    	GetPlayerWeaponData(playa,7,gunsinc[7][playa],ammoo[7][playa]);
                     	GetPlayerWeaponData(playa,8,gunsinc[8][playa],ammoo[8][playa]);
                    	GetPlayerWeaponData(playa,9,gunsinc[9][playa],ammoo[9][playa]);
                     	GetPlayerWeaponData(playa,10,gunsinc[10][playa],ammoo[10][playa]);
                    	GetPlayerWeaponData(playa,11,gunsinc[11][playa],ammoo[11][playa]);
                      	GetPlayerWeaponData(playa,12,gunsinc[12][playa],ammoo[12][playa]);
                      	SpawnPlayer(playa);
                      	TempoSinc = SetTimerEx("Sincronizar", 500, 0, "i", playa);
	                    if(IsPlayerInAnyVehicle(playa))
                     	{
                    		vehicledd[playa] = 1;
                     		VehicleIDD[playa] = GetPlayerVehicleID(playa);
                     	}
						format(gstring, sizeof(gstring), "ADMIN CMD: %s Desbugou %s",sendername,  giveplayerzcm);
						printf("%s",gstring);
						format(gstring, sizeof(gstring), "ADMIN CMD: %s Foi desbugado por %s",giveplayerzcm ,sendername);
						ABroadCast(COR_LIGHTRED, gstring, 1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
	CMD:setemprego(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /setemprego [playerid/ParteDoNome] [empregoid)]");
				return 1;
			}
			new para1;
			new jobid;
			para1 = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			jobid = strval(tmpzcmd);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pEmprego] = jobid;
						SendClientMessage(playerid, COR_GRAD1, "Emprego setado com sucesso !");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar esse comando!");
			}
		}
		return 1;
	}
	CMD:sumirfc(playerid, params[])
	{
	    if (PlayerInfo[playerid][pAdmin] >= 1342)
		{
            for(new car; car != MAX_VEHICLES; ++car)
			{
				new Float:Distancia = GetVehicleDistanceFromPoint(car, 1.5343,-0.8107,3.1172); // Essa Função é a Mais Importante, Veja Sobre ela no final do code.
				if(Distancia <= 20)
				{
		  			ForPlayers(viado)
			    	{
			    		if(!IsPlayerInVehicle(viado, car))
				    	{
							SetVehicleVirtualWorld(car, 1);
						}
					}
				}
			}
			SendClientMessage(playerid,COR_GREY,"* Você sumiu com todos carros VIP's/Fixos da fazenda !");
			return 1;
		}
		return 1;
	}
	CMD:carregarfiles(playerid, params[])
	{
	    if (PlayerInfo[playerid][pAdmin] >= 1342)
		{
			printf("");
			printf("[BPL]: %d Casas Carregadas", LoadCasas());
			printf("[BPL]: %d Empresas Carregadas", CarregarEmpresas()+CarregarSEmpresas());
			LoadOrgs();
			LoadFamilias();
			CarregarPlantacao();
			new contarcarrosvip = 0;
		 	for(new x = 990; x != 1080; ++x)
			{
		      		x = AddStaticVehicleEx(560, 268.6729, 2888.4353, 11.3289, 0.0, 1, 1, -1);
					DOF2_SaveFile();
					SetVehicleVirtualWorld(x, 20);
					VTrancado[x] = 1;
					gCarLock[x] = 1;
					LockCar(x);
					Gas[x] = 100;
					SetVehicleNumberPlate(x, "{000000}CARRO VIP");
					CarrosFixados(x);
					PlacaCarros(x);
					contarcarrosvip++;
		 	}
		 	printf("[BPL]: %d Carros VIPs Carregados",contarcarrosvip);
		 	new contarcarrosfixo = 0;
		 	for(new x = 1080; x != 1150; ++x)
			{
		            x = AddStaticVehicleEx(560, 268.6729, 2888.4353, 11.3289, 0.0, 1, 1, -1);
					DOF2_SaveFile();
					SetVehicleVirtualWorld(x, 21);
					VTrancado[x] = 1;
					gCarLock[x] = 1;
					LockCar(x);
					Gas[x] = 100;
					SetVehicleNumberPlate(x, "{000000}CARRO FIXO");
					CarrosFixados(x);
					PlacaCarros(x);
					contarcarrosfixo++;
			}
			printf("[BPL]: %d Carros Fixos Carregados",contarcarrosfixo);
			printf("[BPL]: %d Carros Criados", TOTAL_CARROS);
			printf("[BPL]: %d Máximo de Jogadores", MAX_PLAYERS-1);
			print("[BPL]: Informações das organizações foram carregadas.");
			return 1;
		}
	}
	CMD:savefiles(playerid, params[])
	{
	    if (PlayerInfo[playerid][pAdmin] >= 1342)
		{
			Atualizar3Dtexts();
			SaveGays();
			SalvarAdmins();
			for(new i = 0; i < MAX_PLAYERS; ++i)
    	    {
			     OnPlayerSave(i);
			}
			SendClientMessage(playerid,COR_GREY,"* Você salvou os arquivos do servidor !");
			return 1;
		}
		return 1;
	}
	CMD:gmx(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
   			new gmx[100];
         	if(PlayerInfo[playerid][pAdmin] >= 1337)
			{
			    if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342) { return SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)"); }
				for(new i = 0; i < MAX_PLAYERS; ++i)
				{
	    			if(IsPlayerConnected(i))
	    			{
					   OnPlayerSave(i);
					   EventoAcontecendo = 0;
					   PlayerInfo[i][pTiroteio] = 0;
        	        }
					getdate(year, month, day);
					gettime(hour, minute);
		    		GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
		    		format(gmx,sizeof(gmx),"Admin: %s Reiniciou o Servidor!", PlayerName);
		            SendClientMessage(i, COR_AMARELO, gmx);
		            StopAudioStreamForPlayer(i);
				}
				GameModeExitFunc();
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não tem autorização para usar este comando !");
			}
			GmxLog(gmx);
		}
		return 1;
	}
	CMD:infoorgvip(playerid, params[])
	{
        if(IsPlayerConnected(playerid))
	    {
			//SendClientMessage(playerid, 0xb6b7b9ff, "___________ Info OrgVip ___________");
			new arquivo[64];
			new InfoORGVIP[4000];
			InfoORGVIP[0] = EOS;
			for(new o = 1; o < MAX_ORGS; o++)
			{
				format(arquivo, sizeof(arquivo), "ORG VIPS/Org%d.ini",o);
				new tipo[25];
				if(DOF2_GetInt(arquivo, "Tipo") == 1)
				{
					tipo = "Bronze";
				}
				else if(DOF2_GetInt(arquivo, "Tipo") == 2)
				{
					tipo = "Prata";
				}
				else if(DOF2_GetInt(arquivo, "Tipo") == 3)
				{
					tipo = "Ouro";
				}
				if(DOF2_FileExists(arquivo))
				{
					if(DOF2_GetInt(arquivo, "Tipo") >= 1)
					{
						format(gstring, 256, "%s: Dias[%d] Tipo[%s]\n",getOrgName2(o), DOF2_GetInt(arquivo, "Dias"), tipo);
						strcat(InfoORGVIP, gstring);
					}
				}
			}
			ShowPlayerDialog(playerid, 10201, DIALOG_STYLE_MSGBOX, "Info OrgVip", InfoORGVIP, "Fechar", "");
		}
		return 1;
	}
	CMD:admins(playerid, params[])
	{
		new i, str[126], strDialog[4000], Cont = 0, Nome[MAX_PLAYER_NAME];
		format(str, sizeof(str), "Nome\tStatus\tAvaliações\n");
		strcat(strDialog, str);
		for ( i = 0; i < MAX_PLAYERS; ++i)
		{
			if(IsPlayerConnected(i) == 1 && PlayerInfo[i][pAdmin] > 0 && PlayerInfo[i][pAdmin] < 1340)
			{
				new lolz[25];
				if(PlayerInfo[i][pAdmin] == 1)lolz = "Sub Moderador";
				if(PlayerInfo[i][pAdmin] == 2)lolz = "Admin Moderador";
				if(PlayerInfo[i][pAdmin] == 3)lolz = "Admin Auxiliar";
				if(PlayerInfo[i][pAdmin] == 4)lolz = "Sub Master";
				if(PlayerInfo[i][pAdmin] == 1337)lolz = "Master";
				if(PlayerInfo[i][pAdmin] == 1338)lolz = "Admin Sub-Gerente";
				if(PlayerInfo[i][pAdmin] == 1339)lolz = "Admin Gerente";
				GetPlayerName(i, Nome, MAX_PLAYER_NAME);
				new sub1 = PlayerInfo[i][pAFinal];
				new sub2 = PlayerInfo[i][pAvaliacoes];
				new conta = sub1 / sub2;
				if(admhide[i] == 0)
				{
					if(AdminTrabalhando[i] == 1 && EstaAFK[i] == 0)
					{

                        format (str, sizeof str, "%s[%s]\t{00d900}Trabalhando\t{FFFFFF}%2d.0\n", Nome, lolz,conta);
      					Cont++;
					}
					else if(PlayerInfo[i][pAvaliacoes] == 0 || PlayerInfo[i][pAFinal] == 0)
					{
					    format (str, sizeof str, "%s[%s]\t{00d900}Trabalhando\t{FFFFFF}0.0\n", Nome, lolz);
      					Cont++;
					}
					else
					{
						new taafk[25];
						if(EstaAFK[i] == 1) taafk = "{696969}Ausente";
						if(EstaAFK[i] == 0) taafk = "Jogando";
						format (str, sizeof str, "%s[%s]\t%s\t%d.0\n", Nome, lolz,taafk,conta);
      					Cont++;
					}
				}
				strcat(strDialog, str);
			}
		}
		new titulo[35];
		format(titulo, sizeof(titulo), "Administradores Online {00d900}%d",Cont);
		if (Cont == 0)
		{

			ShowPlayerDialog(playerid, 259+3, DIALOG_STYLE_TABLIST_HEADERS, "Administradores","{f60000}Nenhum admin online\n\n{FFFFFF}Caso veje alguém com cheats, tire um\n print e poste em nossa comunidade.\n Obs: Podem haver administradores invisiveis.","OK", "");
		}
		else
		{

			ShowPlayerDialog(playerid, 9997, DIALOG_STYLE_TABLIST_HEADERS, titulo, strDialog, "Particular", "Cancelar");
		}
		return 1;
	}
	CMD:trabalhar(playerid, params[])// || CMD:tb(playerid, params[])
    {
           if(PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] <= 1342)
           {
               if(AdminTrabalhando[playerid] > 0)
               {
                   AdminTrabalhando[playerid] = 0;
                   GetPlayerName(playerid,sendername,sizeof(sendername));
                   format(gstring, 128, "Admin: %s ID(%d) está Jogando.",sendername, playerid);
                   SendClientMessageToAll(COR_DBLUE, gstring);
                   SetPlayerToTeamColor(playerid);
                   ResetPlayerWeaponsEx(playerid);
                   SetPlayerHealth(playerid, 100);
                   SetPlayerSkin(playerid,skinadm[playerid]);
               }
               else
               {
                    AdminTrabalhando[playerid] = 1;
                    GetPlayerName(playerid,sendername,sizeof(sendername));
                    format(gstring, 128, "Admin: %s ID(%d) está Trabalhando.",sendername, playerid);
                    SendClientMessageToAll(COR_DBLUE, gstring);
                    SetPlayerToTeamColor(playerid);
                    skinadm[playerid] = GetPlayerSkin(playerid);
                    SetPlayerSkin(playerid,217);
         		    SetPlayerArmour(playerid, 100);
            		SetPlayerHealth(playerid, 100);
                    if(PlayerInfo[playerid][pSex] == 2) { SetPlayerSkin(playerid, 211); }
			   }
           }
           return 1;
	}
	CMD:sublideres(playerid, params[])
	{
		new i, str[126], strDialog[4000], Cont = 0;
		format(str, sizeof(str), "Nome\tORG\tCelular\n");
		strcat(strDialog, str);
		for ( i = 0; i < MAX_PLAYERS; ++i)
		{
		    new celular = PlayerInfo[i][pPnumber];
			if(IsPlayerConnected(i) == 1 && PlayerInfo[i][pMembro] > 0 && PlayerInfo[i][pCargo] == 5)
			{
				format (str, sizeof str, "{FFFFFF}%s[%d]\t%s%s\t{00d900}%d\t\n", PlayerName(i), i, GetCorORG(GetPlayerOrg(i)), NomeORG(i), celular);
	    		Cont++;
				strcat(strDialog, str);
			}
		}
		new titulo[35];
		format(titulo, sizeof(titulo), "Sub-Lideres Online {00d900}%d",Cont);
		if (Cont == 0)
		{
			ShowPlayerDialog(playerid, 259+6, DIALOG_STYLE_TABLIST_HEADERS, "Sub-Lideres Onlines","{f60000}Nenhum sub-lider online","OK", "");
		}
		else
		{
			ShowPlayerDialog(playerid, 9992, DIALOG_STYLE_TABLIST_HEADERS, titulo, strDialog, "SMS", "Cancelar");
		}
		return 1;
	}
	CMD:lideres(playerid, params[])
	{
		new i, str[126], strDialog[4000], Cont = 0;
		format(str, sizeof(str), "Nome\tORG\tCelular\n");
		strcat(strDialog, str);
		for ( i = 0; i < MAX_PLAYERS; ++i)
		{
		    new celular = PlayerInfo[i][pPnumber];
		    if(liderhide[i] == 0)
			{
				if(IsPlayerConnected(i) == 1 && PlayerInfo[i][pLider] > 0)
				{
					format (str, sizeof str, "{FFFFFF}%s[%d]\t%s%s\t{00d900}%d\t\n", PlayerName(i), i, GetCorORG(GetPlayerOrg(i)), NomeORG(i), celular);
        			Cont++;
					strcat(strDialog, str);
					PlayerDialog[Cont] = i;
				}
			}
		}
		new titulo[35];
		format(titulo, sizeof(titulo), "Lideres Online {00d900}%d",Cont);
		if (Cont == 0)
		{
			ShowPlayerDialog(playerid, 259+4, DIALOG_STYLE_TABLIST_HEADERS, "Lideres Onlines","{f60000}Nenhum lider online","OK", "");
		}
		else
		{
			ShowPlayerDialog(playerid, 9992, DIALOG_STYLE_TABLIST_HEADERS, titulo, strDialog, "SMS", "Cancelar");
		}
		return 1;
	}
	CMD:vips(playerid, params[])
	{
         if(IsPlayerConnected(playerid))
	     {
	          SendClientMessage(playerid, COR_VERDE, "Vips Online:");
			  for(new i = 0; i < MAX_PLAYERS; ++i)
			  {
	               if(IsPlayerConnected(i))
				   {
				        if(PlayerInfo[i][pAdmin] < 1340)
                        {
				             if(PlayerInfo[i][pVIP] == 1 && PlayerInfo[i][pSocio] == 0)
				             {
                                  GetPlayerName(i, sendername, sizeof(sendername));
						          format(gstring, 256, "VIP: %s[VIP Comum][%d dias]", sendername, PlayerInfo[i][pDiaVIP]);
						          SendClientMessage(playerid, COR_BRANCO, gstring);
					         }
					         else if(PlayerInfo[i][pVIP] == 2 && PlayerInfo[i][pSocio] == 0)
				             {
						          GetPlayerName(i,sendername,sizeof(sendername));
						          format(gstring,256, "VIP: %s[VIP Premium][%d dias]", sendername, PlayerInfo[i][pDiaVIP]);
						          SendClientMessage(playerid, COR_BRANCO, gstring);
                             }
                        }
                   }
              }
         }
    }
	CMD:segurancas(playerid, params[])// || CMD:seguranças(playerid, params[])
	{
        if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, 0x00FF00FF, "Segurancas Online:");
			for(new i = 0; i < MAX_PLAYERS; ++i)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pEmprego] == 3)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(gstring, 128, "%s: ID[%d] - Cel[%d] - Level[%d]", sendername,i,PlayerInfo[i][pPnumber],PlayerInfo[i][pLevel]);
						SendClientMessage(playerid, 0xBEBEBEFF, gstring);
				    }
				}
			}
		}
		return 1;
	}
	CMD:advogados(playerid, params[])
	{
        if(IsPlayerConnected(giveplayeridzcmd))
	    {
  			SendClientMessage(playerid, COR_VERDE, "Advogados Online:");
			for(new i = 0; i < MAX_PLAYERS; ++i)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pEmprego] == 2)
				    {
                        new cel = PlayerInfo[i][pPnumber];
                        new level = PlayerInfo[i][pLawSkill];
                        GetPlayerName(i,sendername,sizeof(sendername));
                        if(level >= 0 && level <= 50)
					    {
						     format(gstring, 128, "%s: ID[%d] - Cel[%d] - Hab[Um]",sendername,i,cel);
						     SendClientMessage(playerid, COR_GRAD2, gstring);
					    }
					    if(level >= 51 && level <= 100)
					    {
						     format(gstring, 128, "%s: ID[%d] - Cel[%d] - Hab[Dois]",sendername,i,cel);
						     SendClientMessage(playerid, COR_GRAD2, gstring);
					    }
					    if(level >= 101 && level <= 200)
					    {
						     format(gstring, 128, "%s: ID[%d] - Cel[%d] - Hab[Três]",sendername,i,cel);
						     SendClientMessage(playerid, COR_GRAD2, gstring);
					    }
					    if(level >= 201 && level <= 300)
					    {
						     format(gstring, 128, "%s: ID[%d] - Cel[%d] - Hab[Quatro]",sendername,i,cel);
						     SendClientMessage(playerid, COR_GRAD2, gstring);
					    }
					    if(level >= 301)
					    {
					         format(gstring, 128, "%s: ID[%d] - Cel[%d] - Hab[Cinco]",sendername,i,cel);
						     SendClientMessage(playerid, COR_GRAD2, gstring);
					    }
				    }
        		}
			}
		}
		return true;
	}
    if( strcmp( cmd, "/socios", true ) == 0 )
    {
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage( playerid, COR_VERDE, "Sócios Online:" );
            for( new i = 0; i < MAX_PLAYERS; ++i )
            {
                if(IsPlayerConnected(i))
                {
                    if(PlayerInfo[i][pAdmin] < 1340)
                    {
                        if(PlayerInfo[i][pSocio] == 1)
                        {
                            GetPlayerName(i, sendername, sizeof(sendername));
                            format(gstring, 256, "Sócio: %s[Sócio Comum][%d dias]", sendername, PlayerInfo[i][pDiaVIP]);
                            SendClientMessage(playerid, COR_BRANCO, gstring);
                        }
                        else if(PlayerInfo[i][pSocio] == 2)
                        {
                            GetPlayerName(i,sendername, sizeof(sendername));
                            format(gstring, 256, "Sócio: %s[Sócio Premium][%d dias]", sendername, PlayerInfo[i][pDiaVIP]);
                            SendClientMessage(playerid, 0xEEEE00FF, gstring);
                        }
                        else if(PlayerInfo[i][pSocio] == 3)
                        {
                            GetPlayerName(i, sendername, sizeof(sendername));
                            format(gstring, 256, "Sócio: %s[Sócio Diamante][%d dias]", sendername, PlayerInfo[i][pDiaVIP]);
                            SendClientMessage(playerid, COR_SOCIOD, gstring);
                        }
                    }
                }
            }
        }
    }
    CMD:blindarposto(playerid, params[])
    {
         new vehicleid = GetPlayerVehicleID(playerid);// modeloo = GetVehicleModel(vehicleid);
         new vid = GetPlayerVehicleID(playerid);
         new Float:vida;
         GetVehicleHealth(vehicleid, vida);
         if(WantedLevel[playerid] != 0)
	     {
		      SendClientMessage(playerid, COR_GRAD1, "Você está procurado pela polícia, não pode blindar !");
			  return 1;
         }
         if(vida < 700.0)
         {
		      SendClientMessage(playerid, 0x228B22FF, "A Lataria do seu veículo deve estar acima de 70 para poder blindar !");
		      return 1;
	     }
	     if(Vuln[vid] >= 50)
	     {
		      SendClientMessage(playerid, 0x228B22FF, "A blindagem do seu veículo deve estar abaixo da metade para poder blindar !");
		      return 1;
	     }
        // switch(modeloo)
         //{
          //    case 522, 581, 586, 521, 468, 463, 461, 462, 448: return SendClientMessage(playerid, COR_VERMELHO, "{228B22}Você não pode blindar este tipo de veículo!");
        // }
         if(PlayerToPoint(10.0,playerid,2495.9846,-1460.4069,24.0212) || PlayerToPoint(10.0,playerid,998.1703,2137.3923,10.8203))
         {
              ShowPlayerDialog(playerid, 47, DIALOG_STYLE_MSGBOX, "Blindagem de Veículos", "Você deseja blindar o seu veículo?\n\nObs: A blindagem dura até o carro explodir!\n\nPreço = R$3.000", "Blindar", "Cancelar");
	     }
	     else
	     {
		      SendClientMessage(playerid, COR_GRAD1, "Você não está na oficina de blindagem !");
		      return true;
         }
         return 1;
    }
    CMD:faq(playerid, params[])
    {
       if(IsPlayerConnected(playerid))
       {
          if(mudandodp[playerid] == 1)
          {
		       SendClientMessage(playerid, COR_GRAD1, "Você está mudando de departamento, não pode utilizar este comando!");
		       return 1;
          }
          //new Dialog[1500];
          MEGAString[0] = EOS;
		  format(gstring, sizeof(gstring), "1*Começou agora, está perdido e não sabe o que fazer?");
		  strcat(MEGAString,gstring);
 		  format(gstring, sizeof(gstring), "\n2*Como eu faço para localizar um local?");
		  strcat(MEGAString,gstring);
		  format(gstring, sizeof(gstring), "\n3*Nasceu em uma cidade, está perdido e deseja trocar?");
		  strcat(MEGAString,gstring);
		  format(gstring, sizeof(gstring), "\n4*Como eu consigo um emprego?");
		  strcat(MEGAString,gstring);
		  format(gstring, sizeof(gstring), "\n5*Como eu adquiro level?");
		  strcat(MEGAString,gstring);
		  format(gstring, sizeof(gstring), "\n6*Como eu faço para entrar em contato com outros jogadores?");
		  strcat(MEGAString,gstring);
		  format(gstring, sizeof(gstring), "\n7*Como eu adquiro minhas licenças de direção?");
		  strcat(MEGAString,gstring);
		  format(gstring, sizeof(gstring), "\n8*Como eu faço para adquirir armamento?");
		  strcat(MEGAString,gstring);
		  format(gstring, sizeof(gstring), "\n9*Como eu faço para ser um jogador VIP/Sócio?");
		  strcat(MEGAString,gstring);
		  format(gstring, sizeof(gstring), "\n10*Vim de outro server, quero jogar aqui, como edito meu /rg?");
		  strcat(MEGAString,gstring);
		  format(gstring, sizeof(gstring), "\n11*Como eu entro em alguma organização?");
		  strcat(MEGAString,gstring);
		  format(gstring, sizeof(gstring), "\n12*Entrei no meu emprego, não sei o que fazer !");
		  strcat(MEGAString,gstring);
		  format(gstring, sizeof(gstring), "\n13*Estou crashando com frequência, o que pode ser?");
		  strcat(MEGAString,gstring);
		  format(gstring, sizeof(gstring), "\n14*Estão me matando sem motivo e não sei o que fazer !");
		  strcat(MEGAString,gstring);
		  format(gstring, sizeof(gstring), "\n15*Entrei em uma família VIP, pode mudar meu nick?");
		  strcat(MEGAString,gstring);
		  format(gstring, sizeof(gstring), "\n16*Podem mudar meu nick?");
		  strcat(MEGAString,gstring);
		  format(gstring, sizeof(gstring), "\n17*Criei uma conta no fórum, quanto tempo preciso esperar?");
		  strcat(MEGAString,gstring);
		  format(gstring, sizeof(gstring), "\n18*Fiz uma doação e estou perdido, o que eu faço?");
		  strcat(MEGAString,gstring);
		  ShowPlayerDialog(playerid,132,DIALOG_STYLE_LIST, "{add8e6}FAQ BPL", MEGAString, "Confirmar", "Cancelar");
       }
       return 1;
    }
    CMD:ajuda(playerid, params[])
    {
       if(IsPlayerConnected(playerid))
       {
          if(mudandodp[playerid] == 1)
          {
		       SendClientMessage(playerid, COR_GRAD1, "Você está mudando de departamento, não pode utilizar este comando!");
		       return 1;
          }
          ShowPlayerDialog(playerid,DSFUNCAO,DIALOG_STYLE_MSGBOX,"Comandos de Ajuda", "/ajudachar - Ajuda Para seu Personagem.\n/ajudaemprego - Ajuda para seu Emprego.\n/ajudaemp - Ajuda para sua Empresa.\n/ajudacasa - Ajuda para sua Casa.\n/ajudalider - Ajuda se você for Lider.\n/ajudavip - Comandos VIP.\n/ajudasocio - Comandos Sócios.\n/relatorio - Comunicar os Admininstradores\n/animlist - Lista de Animações\n/faq - Ver Perguntas Frequentes", "Ok", "Cancelar");
       }
       return 1;
    }
	CMD:ajudachar(playerid, params[])// || CMD:comandos(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COR_LIGHTBLUE, "_______________________________~ Comandos Uteis ~_______________________________");
			SendClientMessage(playerid, COR_GRAD1,"BPL > /ajuda /rg /regras /website /relatorio /duvida /eu /faq /chatduvida");
			SendClientMessage(playerid, COR_GRAD1,"BPL > /pagar /horas /gps /beber /livrardrogas /livrarmateriais /livrardinamites /livrarcb");
			SendClientMessage(playerid, COR_GRAD1,"BPL > /assaltar /contrato /aceitar /cancelar /ejetar /servico /ne /np /mostrarCoins");
			SendClientMessage(playerid, COR_GRAD1,"BPL > /recuperar /orelhao /desligarorelhao /localizar /alugarcarro /comprarnivel /menubpl");
			SendClientMessage(playerid, COR_GRAD1,"BPL > /alugarquarto /desalugar /minhaslicencas /mostrarlicencas /animlist /guardar");
			SendClientMessage(playerid, COR_GRAD1,"BPL > /dormir /dorminhocos /menuvip (/anp)Anúncio Pronto (/anl)Anúncio Livre");
			SendClientMessage(playerid, COR_LIGHTBLUE, "________________________________________________________________________________");
		}
		return 1;
	}
	CMD:ajudaemp(playerid, params[])
	{
        if(PlayerInfo[playerid][pPbiskey] != 255)
	    {
                SendClientMessage(playerid, COR_AZTECAS, "_________________________ ~ Ajuda Empresa ~ ______________________________");
				SendClientMessage(playerid, COR_BRANCO,"Digite o comando desejado!");
				SendClientMessage(playerid, COR_GRAD3,"BPL > /ajudaempresa /entradadaempresa /extorcao /infoempresa");
				SendClientMessage(playerid, COR_GRAD4,"BPL > /chave /venderemp /depositarempresa /sacarempresa");
				SendClientMessage(playerid, COR_AZTECAS, "__________________________________________________________________________");
		}
		else
		{
			SendClientMessage(playerid, COR_GRAD1, "Você não tem uma empresa !");
			return 1;
		}
		return 1;
	}
	CMD:ajudacasa(playerid, params[])
	{
	    if(PlayerInfo[playerid][pPHousekey] != 999)
	    {
             if(mudandodp[playerid] == 1)
             {
		          SendClientMessage(playerid, COR_GRAD1, "Você está mudando de departamento, não pode utilizar este comando!");
		          return 1;
             }
             ShowPlayerDialog(playerid,DSFUNCAO,DIALOG_STYLE_MSGBOX,"Ajuda Casa", "/chave - Trancar/Abrir\n/mapacasa - Achar Casa\n/notebook - Usar Notebook\n/carrocasa - Modificar Carro da casa\n/trancar - Trancar/Abrir Carro\n/acharcarro - Achar Carro\n/neon - Colocar Neon no Carro\n/mudarcasa - Mudar Interior(R$1000)\n/alugada - Colocar Para Alugar\n/aluguel - Setar Preço do Aluguel\n/despejar - Tirar do Aluguel\n/despejartodos - Tirar Todos do Aluguel\n/cofre - Gerenciar Cofre", "Ok", "Cancelar");
		}
		else
		{
		   SendClientMessage(playerid, COR_GRAD1, "Você não tem uma casa !");
		   return 1;
	    }
	    return 1;
	}
	CMD:ajudalider(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			    if (PlayerInfo[playerid][pLider] >= 1)
			    {
					SendClientMessage(playerid, COR_AZTECAS, "______________________Lider______________________");
					SendClientMessage(playerid, COR_BRANCO,"Digite o comando desejado!");
					SendClientMessage(playerid, COR_GRAD3,"BPL > /convidar /desconvidar /demitir /promover /contaslider(Pedir Contas) /lchat(Chat Lideres)");
					SendClientMessage(playerid, COR_AZTECAS, "__________________________________________________");
                    if(PlayerInfo[playerid][pLider] == 7)
					{
						SendClientMessage(playerid, COR_GRAD3,"Governador >  /setartaxa /dartaxa (Dá algum dinheiro para os Policiais)");
					}
				}
				else
				{
				    SendClientMessage(playerid, COR_GREY, "   Você não é um Líder!");
				}
	    }
		return 1;
	}
	CMD:ajudasocio(playerid, params[])
	{
         if(IsPlayerConnected(playerid))
	     {
	          if(PlayerInfo[playerid][pSocio] >= 1)
	          {
                   ShowPlayerDialog(playerid, 322, DIALOG_STYLE_MSGBOX, "Comandos Sócios", "/so - Chat Sócios\n/jetpack - Pegar um Jetpack\n/kitsocio - Pegar Kit Socio\n/protecao - Ativar Protecao\n/laseron - Ativar Lazer\n/laseroff - Desativar Lazer\n/estepe - Utilizar Estepe Veicular\n/rtunning - RetirarMods do Carro VIP\n/ligarsom - Ligar Sistema de Som(Diamante)", "Ok", "Cancelar");
			       return 1;
	          }
		 }
		 return 1;
	}
	CMD:ajudavip(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
               if (PlayerInfo[playerid][pVIP] >= 1)
	           {
		      	   ShowPlayerDialog(playerid, 322, DIALOG_STYLE_MSGBOX, "Comandos Vips", "/v - Chat Vips\n/statuscel - Mudar Status Celular\n/doar - Doar Itens\n/veiculo - Carro VIP\nObs : /relatorio Cor Diferenciada !", "Ok", "Cancelar");
		      	   return 1;
	           }
     	}
		return 1;
    }
	CMD:ajudacelular(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
                if (PlayerInfo[playerid][pPnumber] > 0)
			    {
					SendClientMessage(playerid, COR_DBLUE, "______________________________________________________________");
					SendClientMessage(playerid, COR_BRANCO,"Digite o comando desejado para mais informações !");
					SendClientMessage(playerid, COR_GRAD3,"BPL > | /ligar - Efetuar uma Ligação.");
					SendClientMessage(playerid, COR_GRAD3,"BPL > | /sms - Enviar uma Mensagem.");
					SendClientMessage(playerid, COR_GRAD3,"BPL > | /atender - Atender uma Ligação.");
					SendClientMessage(playerid, COR_GRAD3,"BPL > | /desligar - Desligar Chamada.");
					SendClientMessage(playerid, COR_GRAD3,"BPL > | /agenda Ver o Telefone de Alguem.");
					SendClientMessage(playerid, COR_BRANCO,"BPL > | Não se esqueça de comprar créditos na 24-7!");
				}
				else
				{
					SendClientMessage(playerid, COR_GREY,"Você não tem um telefone, compre um na 24-7, USE: /gps");
				}
		}
		return 1;
	}
	CMD:ajudaaluguel(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            SendClientMessage(playerid, COR_AZTECAS, "_______________ ~ Ajuda Aluguel ~ __________________");
            SendClientMessage(playerid, COR_BRANCO,"Digite o comando desejado!");
			SendClientMessage(playerid, COR_GRAD3,"BPL >  /desalugar /entrar /sair /trancar /mapacasa");
			SendClientMessage(playerid, COR_AZTECAS, "____________________________________________________");
        }
		return 1;
	}
	CMD:ajudacasamento(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
					SendClientMessage(playerid, COR_LIGHTBLUE, "_______________________________~ Casamento BPL~_______________________________");
                    SendClientMessage(playerid, COR_LIGHTRED,"/padrinho (cada 1 tem que ter 1 padrinho!)");
				    SendClientMessage(playerid, COR_LIGHTRED,"/pediremcasamento (quem pedir tem que ter 1 casa!)");
				    SendClientMessage(playerid, COR_LIGHTBLUE,"Não sabe o local? digite /gps - Igreja");
				    SendClientMessage(playerid, COR_TAXI,"Separação, vá até o cartório e (Digite: /separacao)");
					SendClientMessage(playerid, COR_LIGHTBLUE, "_______________________________~ Casamento BPL~_______________________________");
	    }
		return 1;
	}
	CMD:ajudaemprego(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
                if(mudandodp[playerid] == 1)
                {
		             SendClientMessage(playerid, COR_GRAD1, "Você está mudando de departamento, não pode utilizar este comando!");
		             return 1;
                }
      			if(PlayerInfo[playerid][pEmprego] == 1)
				{
                    SendClientMessage(playerid,COR_GREEN, "BPL - Ajuda Emprego - Início");
		    		SendClientMessage(playerid,COR_AMARELO,"BPL > Emprego < /procurar & /procuraroff");
		    		SendClientMessage(playerid,0x8B0000FF,"|___________________________________________________________________________|");
				}
		    	if(PlayerInfo[playerid][pEmprego] == 2)
				{
                    SendClientMessage(playerid,COR_GREEN, "BPL - Ajuda Emprego - Início");
		    		ShowPlayerDialog(playerid, 5059, DIALOG_STYLE_MSGBOX, "Comandos Advogados", "/soltar [ID] [Preço]\n/echat - Chat dos Advogados\n/pp - Portão DP LS\n/presos - Ver Todos os Presos\n/gps - Head Quaerters(Todas as HQ's)\nObs: Em Toda HQ Policial tem um botão para você pegar autorização,aperte F no botão!", "Ok", "Cancelar");
		    		SendClientMessage(playerid,0x8B0000FF,"|___________________________________________________________________________|");
				}
		    	else if(PlayerInfo[playerid][pEmprego] == 3)
				{
                    SendClientMessage(playerid,COR_GREEN, "BPL - Ajuda Emprego - Início");
		    		ShowPlayerDialog(playerid,DSFUNCAO,DIALOG_STYLE_MSGBOX, "Comandos Seguranças", "/proteger [ID] [Preço] - R$1 a R$99999\n/procurar [ID] - Achar no Mapa\n/procuraroff - desabilitar o checkpoint\n/echat - Chat Seguranças\n/an - Menu de Anúncios\nObs: Se você for segurança de alguém,não engane a pessoa ou você será punido!", "Ok", "Cancelar");
		    		SendClientMessage(playerid,0x8B0000FF,"|___________________________________________________________________________|");
		    	}
		    	else if(PlayerInfo[playerid][pEmprego] == 4)
				{
                    SendClientMessage(playerid,COR_GREEN, "BPL - Ajuda Emprego - Início");
		    		SendClientMessage(playerid,COR_AMARELO,"BPL > Emprego < /corrida Iniciar/Cancelar Corrida! | /echat(Chat Motoristas)");
		    		SendClientMessage(playerid,0x8B0000FF,"|___________________________________________________________________________|");
				}
				else if(PlayerInfo[playerid][pEmprego] == 5)
				{
                    SendClientMessage(playerid,COR_GREEN, "BPL - Ajuda Emprego - Início");
					SendClientMessage(playerid,COR_AMARELO,"BPL > Emprego < /esmola /barraca(por barraca) /rbarraca(retirar barraca)");
					SendClientMessage(playerid,0x8B0000FF,"|___________________________________________________________________________|");
				}
				else if(PlayerInfo[playerid][pEmprego] == 6)
				{
                    SendClientMessage(playerid,COR_GREEN, "BPL - Ajuda Emprego - Início");
					SendClientMessage(playerid,COR_AMARELO,"BPL > Emprego < /mcarga(Marcar uma Carga)/ecarga(Entregar Uma Carga) | /echat (Chat Caminhoneiros)");
					SendClientMessage(playerid,0x8B0000FF,"|___________________________________________________________________________|");
				}
				else if(PlayerInfo[playerid][pEmprego] == 7)
				{
                    SendClientMessage(playerid,COR_GREEN, "BPL - Ajuda Emprego - Início");
					ShowPlayerDialog(playerid,DSFUNCAO,DIALOG_STYLE_MSGBOX, "Comandos Agentes Penitenciários", "/prender - Prender Procurado\n/mudarcela - Mudar Cela do Preso\n/algemar - Algema Procurado\n/esc - Acusar Detento de ESC\n/echat - Chat Agentes Penitenciários\n/m - Falar no Megafone\nObs1: Matenha um detente em cada cela para organização da penitenciária !\nObs2: Você tem regras a seguir, se não obdecer, será banido, veja no fórum !", "Ok", "Cancelar");
					SendClientMessage(playerid,0x8B0000FF,"|___________________________________________________________________________|");
				}
				else if(PlayerInfo[playerid][pEmprego] == 8)
				{
                    SendClientMessage(playerid,COR_GREEN, "BPL - Ajuda Emprego - Início");
					SendClientMessage(playerid,COR_AMARELO,"BPL > Emprego < /mlixo(Marcar uma Lixo)/elixo(Entregar Um Lixo) | /echat (Chat Lixeiros)");
					SendClientMessage(playerid,0x8B0000FF,"|___________________________________________________________________________|");
				}
				else if(PlayerInfo[playerid][pEmprego] == 9)
				{
                    SendClientMessage(playerid,COR_GREEN, "BPL - Ajuda Emprego - Início");
					SendClientMessage(playerid,0x8B0000FF,"|___________________________________________________________________________|");
					ShowPlayerDialog(playerid,DSFUNCAO,DIALOG_STYLE_MSGBOX, "Comandos Ladrões de Carros", "/roubarcarro\n/echat - Chat dos Ladrões de Carros", "Ok", "Cancelar");
				}
				else if(PlayerInfo[playerid][pEmprego] == 11)
				{
                    SendClientMessage(playerid,COR_GREEN, "BPL - Ajuda Emprego - Início");
					SendClientMessage(playerid,COR_AMARELO,"BPL > Emprego < /mcadaver(Marcar um Cadáver)/ecadaver(Entregar Um Cadáver) | /echat (Chat Coveiros)");
					SendClientMessage(playerid,0x8B0000FF,"|___________________________________________________________________________|");
				}
				else if(PlayerInfo[playerid][pEmprego] == 12)
				{
                    SendClientMessage(playerid,COR_GREEN, "BPL - Ajuda Emprego - Início");
					SendClientMessage(playerid,COR_AMARELO,"BPL > Emprego < /mjornal(Marcar um Jornal) | /echat(Chat Carteiros)");
					SendClientMessage(playerid,0x8B0000FF,"|___________________________________________________________________________|");
				}
				else if(PlayerInfo[playerid][pEmprego] == 10)
             	{
                    new Dialog[1500];
                    SendClientMessage(playerid,COR_GREEN, "BPL - Ajuda Emprego - Início");
                    SendClientMessage(playerid,COR_AMARELO,"BPL > Emprego < /echat(Chat Fazendeiros) | /pesquisa(Iniciar Pesquisa)");
	                SendClientMessage(playerid,0x8B0000FF,"|___________________________________________________________________________|");
		            format(gstring, sizeof(gstring), "Inicialmente, você deve ir no 'Menu Fazendeiros', ao chegar lá, aperte F");
		            strcat(Dialog,gstring);
 		            format(gstring, sizeof(gstring), "\nClique em 'Pegar Sementes', após pegar as sementes, entre no veículo de plantio");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\nAo entrar no veículo de plantio, digite: /plantar");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\nApós fazer 5 plantações, pegue o veículo de colheita");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\nAs plantações irão virar pacotes, após transformar pacotes");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\nVá até o 'Menu Fazendeiros' e clique em : 'Entregue a Colheita'");
		            strcat(Dialog,gstring);
		            ShowPlayerDialog(playerid,DSFUNCAO,DIALOG_STYLE_MSGBOX, "Objetivos Fazendeiros", Dialog, "OK", "Cancelar");
		        }
				if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
				{
					new Dialog[1500];
                    format(gstring, sizeof(gstring), "{FFFFFF}Comandos:");
		            strcat(Dialog,gstring);
 		            format(gstring, sizeof(gstring), "\n\n{7491f6}/r - Chat da Organização | /d - Chat do Governo | /m - Usar o Megafone | /d0 - Dominar Territórios");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/su - Colocar Suspeito Procurado | /rf - Solicitar Reforço | /ficha - Ver Ficha do Suspeito");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/prender - Prender Suspeito | /procurados - Ver Jogadores Procurados | /algemar - Algemar Suspeito");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/revistar - Revitar Suspeito | /retirar - Retirar Algo do Suspeito | /arrombar - Arrombar Alguma Casa");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/multar - Multar um Jogador | /bafoxmetro - Utilizar bafoxmetro no Suspeito | /esc - Acusar Suspeito de ESC");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/helichao - Adicionar Chão no Heli | /limpar - Limpar Ficha do Suspeito | /limparficha - Limpar 1 Crime do Suspeito");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/gov - Anunciar Algo | /cela - Efetuar Prisão no Camburão | /br - Colocar BR | /rbr - Retirar BR | /rmbr - Retirar Todas BRs");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/bq - Colocar BQ | /rbq - Retirar BQ | /rmbq - Retirar Todas BQs");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{FFFFFF}Portões:");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/pe - Estacionamento | /pg - Garagem | /pr - Recepção | /pp - Entrada Interna | /pv - Vestiário");
		            strcat(Dialog,gstring);
		            ShowPlayerDialog(playerid,DSFUNCAO,DIALOG_STYLE_MSGBOX, "Comandos Polícia Militar", Dialog, "OK", "Cancelar");
				}
				if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
				{
                    new Dialog[1500];
                    format(gstring, sizeof(gstring), "{FFFFFF}Comandos:");
		            strcat(Dialog,gstring);
 		            format(gstring, sizeof(gstring), "\n\n{7491f6}/r - Chat da Organização | /d - Chat do Governo | /m - Usar o Megafone | /d0 - Dominar Territórios");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/su - Colocar Suspeito Procurado | /rf - Solicitar Reforço | /ficha - Ver Ficha do Suspeito");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/prender - Prender Suspeito | /procurados - Ver Jogadores Procurados | /algemar - Algemar Suspeito");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/revistar - Revitar Suspeito | /retirar - Retirar Algo do Suspeito | /arrombar - Arrombar Alguma Casa");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/multar - Multar um Jogador | /bafoxmetro - Utilizar bafoxmetro no Suspeito | /esc - Acusar Suspeito de ESC");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/helichao - Adicionar Chão no Heli | /limpar - Limpar Ficha do Suspeito | /limparficha - Limpar 1 Crime do Suspeito");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/gov - Anunciar Algo | /cela - Efetuar Prisão no Camburão | /br - Colocar BR | /rbr - Retirar BR | /rmbr - Retirar Todas BRs");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/bq - Colocar BQ | /rbq - Retirar BQ | /rmbq - Retirar Todas BQs");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{FFFFFF}Portões:");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n{7491f6}/pb2 - Garagem 1 | /pb3 - Garagem 2");
		            strcat(Dialog,gstring);
		            ShowPlayerDialog(playerid,DSFUNCAO,DIALOG_STYLE_MSGBOX, "Comandos B.O.P.E - Tropa de Elite", Dialog, "OK", "Cancelar");
				}
				if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
				{
                    new Dialog[1500];
                    format(gstring, sizeof(gstring), "{FFFFFF}Comandos:");
		            strcat(Dialog,gstring);
 		            format(gstring, sizeof(gstring), "\n\n{7491f6}/r - Chat da Organização | /d - Chat do Governo | /m - Usar o Megafone | /d0 - Dominar Territórios");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/su - Colocar Suspeito Procurado | /rf - Solicitar Reforço | /ficha - Ver Ficha do Suspeito");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/prender - Prender Suspeito | /procurados - Ver Jogadores Procurados | /algemar - Algemar Suspeito");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/revistar - Revitar Suspeito | /retirar - Retirar Algo do Suspeito | /arrombar - Arrombar Alguma Casa");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/multar - Multar um Jogador | /bafoxmetro - Utilizar bafoxmetro no Suspeito | /esc - Acusar Suspeito de ESC");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/helichao - Adicionar Chão no Heli | /limpar - Limpar Ficha do Suspeito | /limparficha - Limpar 1 Crime do Suspeito");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/gov - Anunciar Algo | /cela - Efetuar Prisão no Camburão | /br - Colocar BR | /rbr - Retirar BR | /rmbr - Retirar Todas BRs");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/bq - Colocar BQ | /rbq - Retirar BQ | /rmbq - Retirar Todas BQs");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/tirarbombas - Bloquear /homembomba | /guerra - Iniciar Guerra");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{FFFFFF}Portões:");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/abrirgn - Principal | /pboxgn - Boxvilles Rebocados | /pnavio - Porta do Navio");
		            strcat(Dialog,gstring);
		            ShowPlayerDialog(playerid,DSFUNCAO,DIALOG_STYLE_MSGBOX, "Comandos Exército - Guarda Nacional", Dialog, "OK", "Cancelar");
				}
				if (PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
				{
                    new Dialog[1500];
                    format(gstring, sizeof(gstring), "/batercartao - Entrar em Servico");
		            strcat(Dialog,gstring);
 		            format(gstring, sizeof(gstring), "\n/localincendio - Localizar Incêndio");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/servicos - Ver Clientes Aguardando");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/pservico - Procurar Cliente");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/escada - Colocar uma Escada");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/cordinha - Descer de Corda do Heli");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/r - Radio ORG");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/d - Falar com Governo");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/curar [ID] [Preço] - Curar Alguem");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/mudarsexo [ID] [Preço] - Mudar Sexo de Alguem");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/equiparsamu - Pegar Equipamentos");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/gov - Anuncio Global");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/esamu - Elevador Helicópteros");
		            strcat(Dialog,gstring);
		            ShowPlayerDialog(playerid,DSFUNCAO,DIALOG_STYLE_MSGBOX, "Comandos SAMU", Dialog, "OK", "Cancelar");
				}
				if (PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
				{
					ShowPlayerDialog(playerid,DSFUNCAO,DIALOG_STYLE_MSGBOX, "Comandos Taliban", "/ga - Chat ORG\n/bqgg - Criar BQ Lixo\n/rmgg - Retirar Todos BQ Lixos\n/sequestrar - Sequestrar Alguem\n/desamarrar - Desamarrar Sequestrado\n/jaula - Enjaular Sequestrado\n/ang - Anuncio Global\n/assaltar - Assaltar Alguem\n/roubar - Roubar Locais\n/cb - Plantar Bomba\n/db - Detonar Bomba\n/trrvarma - Vender Arma\n/livrarmateriais - Se Livrar dos Materiais", "Ok", "");
				}
				if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)
				{
                    ShowPlayerDialog(playerid, DSFUNCAO, DIALOG_STYLE_MSGBOX, "Comandos Governo", "/equipargov - Pegar Equipamentos\n/r - Radio ORG\n/d - Radio Governo\n/m - Falar Megafone\n/multar - Multar\n/bafoxmetro - Teste Alcoolico\n/procurados - Procurados\n/algemar - Algemar\n/desalgemar - Desalgemar Suspeito\n/sireneon - Colocar Sirene\n/farol Farol ON/OFF\n/ppre Porta Prefeitura\n/gov - Anunciar", "Ok", "");
                }
                if (PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)
				{
					ShowPlayerDialog(playerid,DSFUNCAO,DIALOG_STYLE_MSGBOX, "Comandos Hitmans", "/laptop - Ligar LapTop\n/ga - Chat Hitmans\n/sequestrar - Sequestrar Alguem\n/desamarrar - Desamarrar Sequestrado\n/ang - Anuncio Global\n/assaltar - Assaltar Alguem\n/roubar - Roubar Locais\n/esc - Verificar Contrato de ESC\n/arrombar - Porta Das Casas\n/phit - Portão HQ", "Ok", "");
				}
				if (PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)
				{
					ShowPlayerDialog(playerid,DSFUNCAO,DIALOG_STYLE_MSGBOX, "Comandos Rede Globo", "/ga - Chat Rede Globo\n/noticias - Dar Noticias Para o BPL\n/aovivo - Falar com Alguem(AoVio)\n/preporter - Portao HQ", "Ok", "");
				}
				if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)
				{
					ShowPlayerDialog(playerid,DSFUNCAO,DIALOG_STYLE_MSGBOX, "Comandos Taxista", "/ga - CHAT ORG\n/corrida - Entrar em Serviço\n/ptaxi - Portão da HQ\n/cancelar taxi(Cancelar a Corrida)\n/ang - Anunciar Algo\n/etaxi - Elevador", "Ok", "");
				}
				if (PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25)
				{
                    new Dialog[1500];
					format(gstring, sizeof(gstring), "{FFFFFF}Comandos:");
		            strcat(Dialog,gstring);
 		            format(gstring, sizeof(gstring), "\n\n{7491f6}/r - Chat da Organização | /d - Chat do Governo | /m - Usar o Megafone | /d0 - Dominar Territórios");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/su - Colocar Suspeito Procurado | /rf - Solicitar Reforço | /ficha - Ver Ficha do Suspeito");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/prender - Prender Suspeito | /procurados - Ver Jogadores Procurados | /algemar - Algemar Suspeito");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/revistar - Revitar Suspeito | /retirar - Retirar Algo do Suspeito | /arrombar - Arrombar Alguma Casa");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/multar - Multar um Jogador | /bafoxmetro - Utilizar bafoxmetro no Suspeito | /esc - Acusar Suspeito de ESC");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/helichao - Adicionar Chão no Heli | /limpar - Limpar Ficha do Suspeito | /limparficha - Limpar 1 Crime do Suspeito");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/gov - Anunciar Algo | /cela - Efetuar Prisão no Camburão | /br - Colocar BR | /rbr - Retirar BR | /rmbr - Retirar Todas BRs");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/bq - Colocar BQ | /rbq - Retirar BQ | /rmbq - Retirar Todas BQs");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{FFFFFF}Portões:");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n{7491f6}/ppf - Portão HQ");
		            strcat(Dialog,gstring);
		            ShowPlayerDialog(playerid,DSFUNCAO,DIALOG_STYLE_MSGBOX, "Comandos Polícia Federal", Dialog, "OK", "Cancelar");
				}
				if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
                {
					ShowPlayerDialog(playerid,DSFUNCAO,DIALOG_STYLE_MSGBOX, "Comandos Al'qaeda", "/ga - Chat Org\n/sequestrar - Sequestrar Alguem\n/desamarrar - Desamarrar Alguem\n/guerra - Iniciar Guerra na Mata\n/homembomba - Se Explodir\n/carrobomba - Explodir Carro\n/ang - Anuncio Global\n/assaltar - Assaltar Alguem\n/roubar - Roubar Locais\n/cb - Plantar Bomba\n/trrvarma - Vender Arma\n/livrarmateriais - Se Livrar dos Materiais", "Ok", "");
				}
				if (PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
				{
                    new Dialog[1500];
                    format(gstring, sizeof(gstring), "{FFFFFF}Comandos:");
		            strcat(Dialog,gstring);
 		            format(gstring, sizeof(gstring), "\n\n{7491f6}/r - Chat da Organização | /d - Chat do Governo | /m - Usar o Megafone | /d0 - Dominar Territórios");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/su - Colocar Suspeito Procurado | /rf - Solicitar Reforço | /ficha - Ver Ficha do Suspeito");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/prender - Prender Suspeito | /procurados - Ver Jogadores Procurados | /algemar - Algemar Suspeito");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/revistar - Revitar Suspeito | /retirar - Retirar Algo do Suspeito | /arrombar - Arrombar Alguma Casa");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/multar - Multar um Jogador | /bafoxmetro - Utilizar bafoxmetro no Suspeito | /esc - Acusar Suspeito de ESC");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/helichao - Adicionar Chão no Heli | /limpar - Limpar Ficha do Suspeito | /limparficha - Limpar 1 Crime do Suspeito");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/gov - Anunciar Algo | /cela - Efetuar Prisão no Camburão | /br - Colocar BR | /rbr - Retirar BR | /rmbr - Retirar Todas BRs");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/bq - Colocar BQ | /rbq - Retirar BQ | /rmbq - Retirar Todas BQs");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{FFFFFF}Portões:");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/ppc - Portão HQ");
		            strcat(Dialog,gstring);
		            ShowPlayerDialog(playerid,DSFUNCAO,DIALOG_STYLE_MSGBOX, "Comandos Polícia Civil", Dialog, "OK", "Cancelar");
				}
                if (PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
				{
                    new Dialog[1500];
					format(gstring, sizeof(gstring), "{FFFFFF}Comandos:");
		            strcat(Dialog,gstring);
 		            format(gstring, sizeof(gstring), "\n\n{7491f6}/r - Chat da Organização | /d - Chat do Governo | /m - Usar o Megafone | /d0 - Dominar Territórios");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/su - Colocar Suspeito Procurado | /rf - Solicitar Reforço | /ficha - Ver Ficha do Suspeito");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/prender - Prender Suspeito | /procurados - Ver Jogadores Procurados | /algemar - Algemar Suspeito");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/revistar - Revitar Suspeito | /retirar - Retirar Algo do Suspeito | /arrombar - Arrombar Alguma Casa");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/multar - Multar um Jogador | /bafoxmetro - Utilizar bafoxmetro no Suspeito | /esc - Acusar Suspeito de ESC");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/helichao - Adicionar Chão no Heli | /limpar - Limpar Ficha do Suspeito | /limparficha - Limpar 1 Crime do Suspeito");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/gov - Anunciar Algo | /cela - Efetuar Prisão no Camburão | /br - Colocar BR | /rbr - Retirar BR | /rmbr - Retirar Todas BRs");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/bq - Colocar BQ | /rbq - Retirar BQ | /rmbq - Retirar Todas BQs");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{FFFFFF}Portões:");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/prota - Garagem Externa");
		            strcat(Dialog,gstring);
		            ShowPlayerDialog(playerid,DSFUNCAO,DIALOG_STYLE_MSGBOX, "Comandos Rota", Dialog, "OK", "Cancelar");
				}
				if (PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
				{
					new Dialog[1500];
 		            format(gstring, sizeof(gstring), "\n/batercartao - Ativar Serviço");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/servicos - Clientes Aguardando");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/pservico - Localizar Cliente");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/ga - Chat ORG");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/guinchar - Guinchar Carros");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/reparar - Reparar Carros");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/abastecercarro - Abastecer Carros");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/blindar - Blindar Carros");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/tunar - Tunar Carros");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/ang - Anunciar");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/pcr - Portão LS");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/pmec - Portão LV");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/dl - Visualizar ID Carros");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/darrespawn - Respawnar Carro");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/fixar - Salvar Carro");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/desfixar - Liberar Carro");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n/refixar - Reorganizar Carro");
		            strcat(Dialog,gstring);
		            ShowPlayerDialog(playerid,DSFUNCAO,DIALOG_STYLE_MSGBOX, "Comandos Mecanicos", Dialog, "OK", "");
			    }
			    if(PlayerInfo[playerid][pMembro] == 21|| PlayerInfo[playerid][pLider] == 21
				||PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)
				{
					ShowPlayerDialog(playerid,DSFUNCAO,DIALOG_STYLE_MSGBOX, "Comandos Mercenários","/ga  - Chat ORG\n\n/cg  - Chat Guerra/bqgg  - Criar BQ de Lixo\n/rmgg  - Retirar Todas BQ Lixo\n/sequestrar  - Sequestrar Alguem\n/desamarrar  - Desamarrar Sequestrado\n/jaula  - Enjaular Sequestrado\n /ang  - Anunciar\n/assaltar  - Assaltar Alguem\n/do  - Dominar Territorios\n/roubar  - Roubar Locais\n/mervarmas  - Vender Armas\n/mervdecod - Vender Decodificador", "Ok", "");
				}
			    if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
				{
                    new Dialog[1500];
					format(gstring, sizeof(gstring), "{FFFFFF}Comandos:");
		            strcat(Dialog,gstring);
 		            format(gstring, sizeof(gstring), "\n\n{7491f6}/r - Chat da Organização | /d - Chat do Governo | /m - Usar o Megafone | /do - Dominar Territórios");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/su - Colocar Suspeito Procurado | /rf - Solicitar Reforço | /ficha - Ver Ficha do Suspeito");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/prender - Prender Suspeito | /procurados - Ver Jogadores Procurados | /algemar - Algemar Suspeito");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/revistar - Revitar Suspeito | /retirar - Retirar Algo do Suspeito | /arrombar - Arrombar Alguma Casa");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/multar - Multar um Jogador | /bafoxmetro - Utilizar bafoxmetro no Suspeito | /esc - Acusar Suspeito de ESC");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/helichao - Adicionar Chão no Heli | /limpar - Limpar Ficha do Suspeito | /limparficha - Limpar 1 Crime do Suspeito");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/gov - Anunciar Algo | /cela - Efetuar Prisão no Camburão | /br - Colocar BR | /rbr - Retirar BR | /rmbr - Retirar Todas BRs");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/bq - Colocar BQ | /rbq - Retirar BQ | /rmbq - Retirar Todas BQs");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{FFFFFF}Portões:");
		            strcat(Dialog,gstring);
		            format(gstring, sizeof(gstring), "\n\n{7491f6}/pgate - Estacionamento");
		            strcat(Dialog,gstring);
		            ShowPlayerDialog(playerid,DSFUNCAO,DIALOG_STYLE_MSGBOX, "Comandos GATE", Dialog, "OK", "Cancelar");
				}
			    if (PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)
				{
					ShowPlayerDialog(playerid,DSFUNCAO,DIALOG_STYLE_MSGBOX, "Comandos Assassins", "/laptop - Ligar LapTop\n/ga - Chat Assassins\n/sequestrar - Sequestrar Alguem\n/desamarrar - Desamarrar Sequestrado\n/ang - Anuncio Global\n/assaltar - Assaltar Alguem\n/roubar - Roubar Locais\n/esc - Verificar Contrato de ESC\n/arrombar - Porta Das Casas\n/passs - Portão HQ", "Ok", "");
				}
				if (PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22 || PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)
				{
					ShowPlayerDialog(playerid,DSFUNCAO,DIALOG_STYLE_MSGBOX, "Comandos Mafiosos", "/ga - Chat Mafia\n/bqgg - Criar BQ de Lixo\n/mafia\n/mafiavarma - Vender Armas\n/mafiavkit - Vender Kits\n/mafiavdinamite - Vender Dinamite\n/sequestrar - Sequestrar Alguem\n/desamarrar - Desamarrar Alguem\n/ang - Anuncio Global\n/assaltar - Assaltar Alguem\n/do - Dominar Territorios\n/roubar - Roubar Locais\n/equiparm - Pegar Equipamentos\n/esconder materiais\n/pegar smateriais", "Ok", "");
				}
			    if(IsAGangster(playerid) && GetPlayerOrg(playerid) != 8 && GetPlayerOrg(playerid) != 26 && GetPlayerOrg(playerid) != 20 && GetPlayerOrg(playerid) != 22 && GetPlayerOrg(playerid) != 6 && GetPlayerOrg(playerid) != 30 && GetPlayerOrg(playerid) != 16 && GetPlayerOrg(playerid) != 21 && GetPlayerOrg(playerid) != 24)
				{
					ShowPlayerDialog(playerid,DSFUNCAO,DIALOG_STYLE_MSGBOX, "Comandos Gangster", "/ga - Chat Gang\n/bqgg - Criar BQ de Lixo\n/rbqgg - Retirar BQ de Lixo\n/rmgg - Retirar Todos BQ  Lixo\n/sequestrar - Sequestrar Alguem\n/desamarrar - Desamarrar Sequestrado\n/jaular - Enjaular Sequestrado\n/ang - Anunciar\n/assaltar - Assaltar Alguem\n/do - Dominar Territorios\n/roubar - Roubar Locais\n/sdrogas - Ver Sistema de Drogas", "Ok", "");
				}
		}
		return 1;
	}
	CMD:forum(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            SendClientMessage(playerid, COR_DBLUE,".::WebSite Brasil Perfect Life::.");
		    SendClientMessage(playerid, COR_AMARELO,"forum.brasilperfectlife.com");
		    SendClientMessage(playerid, COR_DBLUE,"|_______===================_______|");
		}
		return 1;
	}
	CMD:galao(playerid, params[])
    {
        if(Galao[playerid] == 1)
        {
		    if(!IsPlayerInAnyVehicle(playerid))
    	    {
	   			SendClientMessage(playerid, COR_GREY, "Voce não está em um veículo !");
	   			return 1;
    	    }
    	    new vehicle = GetPlayerVehicleID(playerid);
			if(Gas[vehicle] > 70)
    		{
	   			SendClientMessage(playerid, COR_LIGHTBLUE, "Você possui + de 70 por cento de gasolina, ainda não pode usar o galão !");
	   			return 1;
		    }
		    Gas[vehicle] += 30;
	        GetPlayerName(playerid,PlayerName,sizeof(PlayerName));
            Galao[playerid] = 0;
            SendClientMessage(playerid, COR_GRAD1, "Você usou o seu galão de gasolina,encheu + 30 por cento de gasolina!");
		}
		else
		{
		    SendClientMessage(playerid, COR_GRAD1, "Voce não tem um galão.");
		}
		return 1;
    }
    CMD:autorizacao(playerid, params[])
    {
        if(PlayerInfo[playerid][pEmprego] == 2)
		{
			if(LicencaAdvogado[playerid] == 5)
			{
                SendClientMessage(playerid, COR_BRANCO, "Voce já tem 5 autorizações!");
				return 1;
			}
            if(PlayerInfo[playerid][pLawSkill] >= 201)
            {
                SendClientMessage(playerid, COR_GRAD1, "Você é advogado nivel 5, não precisa de autorização!");
                return 1;
            }
            new name[MAX_PLAYER_NAME];
            GetPlayerName(playerid, name, sizeof(name));
            if(PlayerToPoint(5.0,playerid,1654.6290,-1394.4536,13.5469))
            {
                if(playerid != INVALID_PLAYER_ID)
                {
                    GivePlayerMoneyEx(playerid, -200);
                    LicencaAdvogado[playerid] += 1;
                    format(gstring, sizeof(gstring), "* Advogado: %s  comprou uma licença para liberar um preso por R$200.",PlayerName(playerid));
                    ProxDetector(30.0, playerid, gstring, COR_AZTECAS,COR_AZTECAS,COR_AZTECAS,COR_AZTECAS,COR_AZTECAS);
                    format(gstring, sizeof(gstring), "Você pegou + uma licença para soltar um presos, você tem agora: [%d/5] licenças.", LicencaAdvogado[playerid]);
                    SendClientMessage(playerid, COR_GRAD1, gstring);
                }
            }
        }
        else
        {
            SendClientMessage(playerid, COR_GREY, "Você não é um Advogado");
        }
        return 1;
    }
	CMD:regras(playerid, params[])// || CMD:regras(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
		    SendClientMessage(playerid, COR_LIGHTRED,"Proibido ANT-RPG ( Exemplo: relogar para não ser preso ) [ Punição: Advertência e Carandiru ] ");
		    SendClientMessage(playerid, COR_LIGHTRED,"Proibido Abuso de qualquer bug [ Punição: Advertência ] [ Insistência: BAN ]");
            SendClientMessage(playerid, COR_LIGHTRED,"Proibido Uso De Joypad [ Puniçao:Advertencia ] [ Insistencia:BAN ]");
            SendClientMessage(playerid, COR_LIGHTRED,"Proibido Divulgar servidores e mencionar [Punição: BAN]");
            SendClientMessage(playerid, COR_LIGHTRED,"Proibido SPAM [ Punição: mute] [ Insistência: Advertência ]");
            SendClientMessage(playerid, COR_LIGHTRED,"Proibido DM e DB [ Punição: Carandiru ] [Insistência: Advertência ]");
            SendClientMessage(playerid, COR_LIGHTRED,"Proibido Ofensas e Provocação [ Punição: Mute ] [ Insistência: Advertência e Carandiru ]");
            SendClientMessage(playerid, COR_LIGHTRED,"Proibido divulgar servidores e mencionar [ Punição: BAN ]");
            SendClientMessage(playerid, COR_LIGHTRED,"Proibido Cheats/Mods que causam vantagens sobre os jogadores [ Punição: BAN ]");
            SendClientMessage(playerid, COR_LIGHTRED,"Obs: Leia As Regras do forum, http://forum.brasilperfectlife.com!");
	    }
	    return 1;
    }
//----------------------------------{PORTA RECEPÇAO PM]--------------------------------------------
	CMD:pr(playerid, params[])
	{
		if(PlayerToPoint(1.0,playerid,250.0553,64.8223,1003.6406) || PlayerToPoint(1.0,playerid,251.2573,64.7707,1003.6406))
		{
			if(IsACop(playerid))
			{
			     MoveDynamicObject(PortaoPM1, 250.60001, 62.6, 1002.59998,3);
			     SetTimer("fecharpm1", 4000, false);
			     SendClientMessage(playerid, COR_GREY, "Você abriu a porta da recepção");
			}
			else
			{
				 SendClientMessage(playerid, COR_GRAY, "Você não tem o código deste portão !");
				 return 1;
			}
	  	}
  		return 1;
	}
//----------------------------------{PORTA RECEPÇAO PM]----------------------------------------
	CMD:pm1(playerid, params[])
    {
		if(PlayerToPoint(1.0,playerid,248.9503,71.9772,1003.6406) || PlayerToPoint(1.0,playerid,245.2494,73.6320,1003.6406))
		{
	         if(!IsACop(playerid) && PlayerInfo[playerid][pEmprego] != 2)
			 {
                 SendClientMessage(playerid, COR_GREY, "Você não tem o código deste portão !");
				 return 1;
			 }
		     MoveDynamicObject(PortaoPM2, 244.10001, 72.6, 1002.59998,3);
	         SetTimer("fecharpm2", 4000, false);
		     if(PlayerToPoint(1.0,playerid,248.9503,71.9772,1003.6406))
		     {
                SendClientMessage(playerid, COR_GREY, "Você abriu o portão principal do hq policia militar!");
			 }
			 if(PlayerToPoint(1.0,playerid,245.2494,73.6320,1003.6406))
			 {
                SendClientMessage(playerid, COR_GREY, "Portão Interno DP Aberto !");
             }
        }
	    return 1;
	}
//----------------------------------{PORTA PRESOS PM}----------------------------------------
	CMD:pp(playerid, params[])
	{
		if(PlayerToPoint(1.0,playerid,245.2419,77.9415,1003.6406) || PlayerToPoint(1.0,playerid,241.0467,77.3048,1005.0391))
		{
			if(IsACop(playerid))
			{
			    MoveDynamicObject(PortaoPM3, 244.7, 73.5, 1002.79999,3);
			    SetTimer("fecharpm3", 4000, false);
			    SendClientMessage(playerid, COR_GREY, "Você abriu o portão das prisões solitárias da policia militar!");
			}
			else
			{
				 SendClientMessage(playerid, COR_VERMELHO, "*** Você não está perto do portão ou não é um Oficial ***");
				 return 1;
			}
  		}
  		return 1;
	}
//----------------------------------{PORTA VESTIARIO PM}----------------------------------------
	CMD:pv(playerid, params[])
	{
		if(PlayerToPoint(1.0,playerid,247.5320,77.5835,1003.6406) || PlayerToPoint(1.0,playerid,248.7565,74.0306,1003.6406))
		{
			if(IsACop(playerid))
			{
			     MoveDynamicObject(PortaoPM4, 248.10001, 78.1, 1002.59998,3);
			     SetTimer("fecharpm4", 4000, false);
			     SendClientMessage(playerid, COR_GREY, "Você abriu a porta do vestiário!");
			}
			else
			{
                 SendClientMessage(playerid, COR_GREY, "Você não tem o código deste portão !");
				 return 1;
			}
  		}
  		return 1;
	}
//----------------------------------{PORTA GARAGEM PM}----------------------------------------
    CMD:pe(playerid, params[])
	{
		if(IsACop(playerid))
		{
		     if(PlayerToPoint(15.0, playerid, 1546.0000000,-1627.6000000,15.2000000))
		     {
			      MoveDynamicObject(portagaragem, 1546.0000000,-1627.6000000,9.4000000,3);
			      SetTimer("fechargaragem", 4200, false);
			 }
		}
	  	return 1;
	}
//----------------------------------{PORTA GARAGEM INTERNA PM}----------------------------------------
	CMD:pg(playerid, params[])
	{
		if(IsACop(playerid))
		{
		     if(PlayerToPoint(15.0, playerid, 1588.555786, -1637.811157, 15.911808))
		     {
			      MoveDynamicObject( pmgaragem, 1588.195,-1637.969, 20.086790,3);
			      SetTimer("fechargaragempm", 5000, false);
			 }
		}
	  	return 1;
	}
//----------------------------------{Portao PF}----------------------------------------
	CMD:ppf(playerid, params[])
	{
		if(IsACop(playerid))
		{
		     if(PlayerToPoint(15.0, playerid, -489.3666,-563.4833,25.2749))
		     {
			      MoveDynamicObject(portaopf, -511.39999389648, -559, 24.299999237061,3);
			      SetTimer("fecharpf", 5000, false);
			 }
		}
	  	return 1;
	}
//----------------------------------{Portoes BOPE}----------------------------------------
	CMD:pb2(playerid, params[])
	{
		if(IsACop(playerid))
		{
		     if(PlayerToPoint(15.0, playerid, 283.095062, -1542.899170, 25.510294))
		     {
			      MoveDynamicObject(portaobope, 283.095062, -1542.899170, 33.385311,3);
			      SetTimer("fecharbope", 5000, false);
			 }
		}
	  	return 1;
	}
//----------------------------------{Portoes BOPE}----------------------------------------
	CMD:pb3(playerid, params[])
	{
		if(IsACop(playerid))
		{
		     if(PlayerToPoint(15.0, playerid, 321.832672, -1488.615112, 25.527353))
		     {
			      MoveDynamicObject(portaobope2, 321.832672, -1488.615112, 33.777353,3);
			      SetTimer("fecharbope2", 5000, false);
			 }
		}
	  	return 1;
	}
//----------------------------------{Exercito}----------------------------------------
	CMD:abrirgn(playerid, params[])
	{
		if(IsACop(playerid))
		{
		     if(PlayerToPoint(15.0, playerid, 2619.6086,-2405.1840,16.5805))
		     {
			      MoveDynamicObject(portaoexercito,  2619.6086,-2405.1840,8.5805,3);
			      SetTimer("fecharexercito", 5000, false);
			 }
		}
	  	return 1;
	}
	CMD:abrirgn2(playerid, params[])
	{
		if(IsACop(playerid))
		{
		     if(PlayerToPoint(15.0, playerid, 2666.18066, -2504.07129, 16.57850))
		     {
			      MoveDynamicObject(portaoexercito2,  2666.18066, -2504.07129, 8.57850,3);
			      SetTimer("fecharexercito2", 5000, false);
			 }
		}
	  	return 1;
	}
    CMD:pnavio(playerid, params[])
	{
		if(IsACop(playerid))
		{
		    if(PlayerToPoint(5.0, playerid, -1383, 1494.1, 2))
		    {
                MoveDynamicObject(portanavio2, -1383, 1494.1, 4.6,2);
				SetTimer("fecharnavio2", 5000, false);
		    }
  		}
  		return 1;
	}
    CMD:pboxpf(playerid, params[])
	{
		if (PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25)
		{
		    if(PlayerToPoint(15.0, playerid, -595.90002, -517.20001, 19.1))
		    {
                 if(PlayerInfo[playerid][pCargo] > 3)
				 {
		            MoveDynamicObject(pboxpf, -603.40002, -517.20001, 19.1,2);
				    SetTimer("fecharboxpf", 5000, false);
				 }
				 else
				 {
					  SendClientMessage(playerid, COR_GRAD1, "Você precisa ser cargo 3+ para abrir este portão !");
					  return 1;
				 }
		    }
  		}
  		return 1;
  	}
    CMD:pboxgn(playerid, params[])
	{
		if (PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
		{
		    if(PlayerToPoint(15.0, playerid, 2774.38110, -2493.96460, 14.23780))
		    {
                if(PlayerInfo[playerid][pCargo] > 3)
				 {
		            MoveDynamicObject(pboxexe,  2774.38110, -2493.96460, 8.23780,2);
				    SetTimer("fecharboxexe", 5000, false);
				 }
				 else
				 {
					  SendClientMessage(playerid, COR_GRAD1, "Você precisa ser cargo 3+ para abrir este portão !");
					  return 1;
				 }
		    }
  		}
  		return 1;
	}
    CMD:phit(playerid, params[])
	{
		if (PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8 || IsACop(playerid))
		{
		    if(PlayerToPoint(15.0, playerid, 2313.30005, -1221.59998, 23.1))
		    {
		        MoveDynamicObject(phitmans, 2313.3, -1214.4, 23.1,2);
				SetTimer("fecharhitman1", 5000, false);
		    }
  		}
  		return 1;
	}
	CMD:pass(playerid, params[])
	{
		if (PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26 || IsACop(playerid))
		{
		    if(PlayerToPoint(15.0, playerid, 903.80157, -1436.45276, 10.45420))
		    {
		        MoveDynamicObject(passassins, 903.80157, -1449.7928, 10.45420,2);
				SetTimer("fecharassassins", 5000, false);
		    }
  		}
  		return 1;
	}
    CMD:prota(playerid, params[])
	{
		if (PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
		{
		    if(PlayerToPoint(15.0, playerid, 1289.55090, -1651.86951, 15.25877))
		    {
		        MoveDynamicObject(prota, 1289.55090, -1651.86951, 9.0,2);
				SetTimer("fecharrota", 5000, false);
		    }
  		}
  		return 1;
	}
    CMD:ptaxi(playerid, params[])
	{
		if (PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)
		{
		    if(PlayerToPoint(15.0, playerid, 618.7154,-1502.5515,14.8988))
		    {
		         MoveDynamicObject( ptaxista, 619.09998, -1502.3, 24.9,3);
				 SetTimer("fechartaxista", 5000, false);
		    }
  		}
  		return 1;
    }
  	CMD:pgate(playerid, params[])
    {
         if(IsACop(playerid))
		 {
              if(IsPlayerInRangeOfPoint(playerid,7.0, 631.7999900,-586.2999900,18.1000000))
              {
                   MoveDynamicObject(Gate,631.9000200,-586.7000100,22.6000000,3.0);
                   SetTimerEx("CloseGate", 5000, false, "i", Gate);
              }
  		 }
  		 return 1;
  	}
  	CMD:pbanco(playerid, params[])
    {
         if(IsACop(playerid))
		 {
              if(IsPlayerInRangeOfPoint(playerid,4.0, 2943.4744,-1783.4124,1178.5303))
              {
				   if(DeslogandoSocio[playerid] == 1)
				   {
						SendClientMessage(playerid, COR_GRAD1, "Você entrou como sócio na org, não pode abrir esta porta !");
						return 1;
				   }
                   MoveDynamicObject(portabanco,2943.5000000,-1782.1000000,1182.1000000,3.0);
                   SetTimerEx("fecharbanco", 5000, false, "i", Gate);
              }
  		 }
  		 return 1;
  	}
  	CMD:pinvasao(playerid, params[])
    {
         if(IsACop(playerid))
		 {
              if(IsPlayerInRangeOfPoint(playerid,4.0, 366.7346,188.7061,1008.3828))
              {
				   if(DeslogandoSocio[playerid] == 1)
				   {
						SendClientMessage(playerid, COR_GRAD1, "Você entrou como sócio na org, não pode abrir esta porta !");
						return 1;
				   }
                   MoveDynamicObject(portapref, 366.43143, 189.64662, 1005.60803,3.0);
                   SetTimerEx("fecharpref", 5000, false, "i", Gate);
              }
  		 }
  		 return 1;
  	}
  	CMD:pmotel(playerid, params[])
    {
         if(IsACop(playerid))
		 {
              if(IsPlayerInRangeOfPoint(playerid,4.0, 956, -50.1, 1002.1))
              {
                   if(DeslogandoSocio[playerid] == 1)
				   {
						SendClientMessage(playerid, COR_GRAD1, "Você entrou como sócio na org, não pode abrir esta porta !");
						return 1;
				   }
                   MoveDynamicObject(portamotel,956, -50.1, 998,3.0);
                   SetTimerEx("fecharmotel", 5000, false, "i", Gate);
              }
  		 }
  		 return 1;
  	}
	CMD:padm(playerid, params[])
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
		     if(PlayerToPoint(15.0, playerid, 2423.8999, -2083.80005, 15.3))
		     {
			      MoveDynamicObject( portaoadm1, 2423.8999, -2073.6001, 15.3,3);
			      MoveDynamicObject( portaoadm2, 2423.8999, -2105.19995, 15.3,3);
			      SetTimer("Closepadm", 4000, false);
			 }
		}
	  	return 1;
	}
  	CMD:pgatepc(playerid, params[])
    {
         if(IsACop(playerid))
		 {
              if(IsPlayerInRangeOfPoint(playerid,20.0, 2483.1001000,2354.2000000,9.7000000))
              {
                 MoveDynamicObject(pgatepc, 2462.3000000,2354.3999000,9.7000000,3.0);
                 SetTimerEx("Closepgatepc", 5000, false, "i", pgatepc);
		      }
  		 }
  		 return 1;
	}
	CMD:pgov(playerid, params[])
	{
		if(GetPlayerOrg(playerid) == 7)
		{
		     if(PlayerToPoint(15.0, playerid, 1540.90002, -1838.5, 12.5))
		     {
			      MoveDynamicObject( PortaoGov, 1540.80005, -1814.19995, 12.5,3);
			      SetTimer("PortaoGov2", 5000, false);
			 }
		}
	  	return 1;
	}
	CMD:ppre(playerid, params[])
	{
		if(GetPlayerOrg(playerid) == 7 || IsACop(playerid))
		{
			if(PlayerToPoint(2.0,playerid,368.39999, 160.5, 1026.59998) || PlayerToPoint(2.0, playerid, 369.29999, 164.2, 1026.30005))
			{
				 SendClientMessage(playerid, COR_GRAD1, "Você abriu a porta da prefeitura!");
			     MoveDynamicObject(portagov, 368.79999, 160.7, 1030.09998,3);
			     SetTimer("portaogov3", 5000, false);
			}
		}
	  	return 1;
	}
	CMD:portaox1(playerid, params[])
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
		     if(PlayerToPoint(15.0, playerid, -2321.5114746094, -1619.4454345703, 484.98388671875))
		     {
			      MoveDynamicObject( PortaoX1, -2321.5114746094, -1619.4454345703, 488.99388671875,3);
			      SetTimer("PortaoX12", 3000, false);
			 }
		}
	  	return 1;
	}
    CMD:portaoreporter(playerid, params[])// || CMD:preporter(playerid, params[])
	{
		if(GetPlayerOrg(playerid) == 9)
		{
		     if(PlayerToPoint(15.0, playerid, 777.70001, -1385.09998, 14.3))
		     {
			      MoveDynamicObject(PortaoReporter, 769.5, -1385.09998, 14.3,3);
			      SetTimer("PortaoReporter2", 5000, false);
			 }
		}
	  	return 1;
	}
//----------------------------------{Portao Policia Civil}----------------------------------------
	CMD:ppc(playerid, params[])
	{
		if(IsACop(playerid))
		{
		     if(PlayerToPoint(15.0, playerid, 263.2955,-1602.1699,34.9642))
		     {
			      MoveDynamicObject(PortaoPC, 263.2955,-1602.1699,34.9642,3,0.0000,0.0000,0.0000);
			      SetTimer("PortaoPC2", 5000, false);
			 }
		}
	  	return 1;
	}
//----------------------------------{Portao Mecânicos}----------------------------------------
	CMD:pcr(playerid, params[])
	{
		if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
		{
		     if(PlayerToPoint(15.0, playerid, 2813.7, -1468.3, 16.2))
		     {
			      MoveDynamicObject( PortaoMecanico, 2802.1001, -1468.5, 16.2,3);
			      SetTimer("PortaoMecanico2", 5000, false);
			 }
		}
	  	return 1;
	}
//----------------------------------{Portao Mecânicos LV}----------------------------------------
	CMD:pmec(playerid, params[])
	{
		if(GetPlayerOrg(playerid) == 14)
		{
			if(PlayerToPoint(15.0, playerid, 1017.6000000,2133.2000000,11.5000000))
			{
			   MoveDynamicObject(PortaoMecanicoLV, 1017.3000000,2153.3000000,11.5000000,3);
			   SetTimer("PortaoMecanicoLV2", 5000, false);
			}
		}
	  	return 1;
	}
    CMD:ts(playerid, params[])// || CMD:ts3(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            SendClientMessage(playerid, COR_DBLUE,"|------------------=TeamSpeak 3 Brasil Perfect Life=------------------|");
		    SendClientMessage(playerid, COR_LIGHTBLUE,"|								IP TS3: ts.brasilperfectlife.com						|");
		    SendClientMessage(playerid, COR_DBLUE,"|___________===========================____________|");
		}
		return 1;
	}
    CMD:vip(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            SendClientMessage(playerid, COR_DBLUE,"...::Seja VIP::...");
            SendClientMessage(playerid, COR_DBLUE,"|Vip Comum  = R$10,00|");
		    SendClientMessage(playerid, COR_DBLUE,"|Vip Premium  = R$15,00|");
	        SendClientMessage(playerid, COR_DBLUE,"|Sócio Comum = R$20,00|");
		    SendClientMessage(playerid, COR_DBLUE,"|Sócio Premium = R$30,00|");
		    SendClientMessage(playerid, COR_DBLUE,"|Sócio Diamante  = R$40,00|");
		    SendClientMessage(playerid, COR_DBLUE,"|Org Vip  = R$25,00|");
		    SendClientMessage(playerid, COR_VAGOS,"Acesse http://forum.brasilperfectlife.com/, vá em 'Seja VIP'");
		    SendClientMessage(playerid, COR_DBLUE,"|__________==========__________|");
		}
		return 1;
//------------------------Terroristas,Mafias e Gangs--------------------------//
    }
	CMD:trocarmat",true) ==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	         if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6 || PlayerInfo[playerid][pMembro] == 16|| PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22 || PlayerInfo[playerid][pMembro] == 20|| PlayerInfo[playerid][pLider] == 20 || PlayerInfo[playerid][pMembro] == 21|| PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pMembro] == 24|| PlayerInfo[playerid][pLider] == 24)
    	     {
    	          if(PlayerToPoint(3.0,playerid,-254.9228,2603.0635,62.8582) || PlayerToPoint(3.0,playerid,1173.2739,-2037.0060,69.1413) || PlayerToPoint(3.0,playerid,-13.5814, -2502.1829, 36.6555) || PlayerToPoint(2.0, playerid, 1757.1095,-1943.4386,13.5703))
			      {
	                   if(MatsHolding[playerid] != 0)
			           {
			                new payout = (100)*(MatsHolding[playerid]);
			                format(gstring, sizeof(gstring), "* Você pagou %d para o Armazén pelos seus %d pacotes.", payout, MatsHolding[playerid]);
					        SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
			                PlayerInfo[playerid][pMats] += payout;
			                MatsHolding[playerid] = 0;
			                SBizzInfo[5][sbTill] += payout/2;//Empresa de Produtos
              				ExtortionSBiz(5, payout/2);//Empresa de Produtos
			           }
			           else
			           {
                            SendClientMessage(playerid, COR_GREY, "Você não tem nenhum pacote !");
				            return 1;
			           }
			      }
			      else
			      {
                       SendClientMessage(playerid, COR_GREY, "Você não está nas caixas de materiais !");
                       return 1;
			      }
			 }
		}
		return 1;
	}
	CMD:menuadm(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
			     ShowPlayerDialog(playerid, 183, DIALOG_STYLE_LIST, "Menu Administração", "Iniciar Eventos\nEfetuar Destruições\nMensagens Administrativas", "Escolher", "Cancelar");
			}
		}
		return 1;
	}
	CMD:titulos(playerid, params[])
	{
		new dialogtitulos[3000];
  		format(gstring,128, "» {00e7c6}Nenhum\t\t{FFFF00}[Retirar Título]\n");
    	strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Administrador\t\t{FFFF00}[Cargo Admin]\n");
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Nome ORG\t\t{FFFF00}[Ter ORG]\n");
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Scripter\t\t{FFFF00}[Programador]\n");
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}VIP\t\t{FFFF00}[Conta VIP]\n");
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Sócio\t\t{FFFF00}[Conta Sócio]\n");
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Sócio Premium\t\t{FFFF00}[Conta Sócio Premium]\n");
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Sócio Diamante\t\t{FFFF00}[Conta Sócio Diamante]\n");
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Lider\t\t{FFFF00}[Lider De Uma ORG]\n");
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Sub Lider\t\t{FFFF00}[SubLider De Uma ORG]\n");
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Governador\t\t{FFFF00}[Lider Governo]\n");
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Serial Killer\t\t{FFFF00}[%d/500]\n",PlayerInfo[playerid][pKills]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Sequestrador\t\t{FFFF00}[%d/60]\n",PlayerInfo[playerid][pSequestros]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Assaltante\t\t{FFFF00}[%d/60]\n",PlayerInfo[playerid][pTituloAssaltante]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Ladrão\t\t{FFFF00}[%d/60]\n",PlayerInfo[playerid][pLadrao]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Dominador\t\t{FFFF00}[%d/500]\n",PlayerInfo[playerid][pDominador]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Traficante\t\t{FFFF00}[%d/500]\n",PlayerInfo[playerid][pCarcereiro]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Carcereiro Mestre\t\t{FFFF00}[%d/150]\n",PlayerInfo[playerid][pCarcereiro]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Caçador de Recompensas\t\t{FFFF00}[%d/200]\n",PlayerInfo[playerid][pCacador]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Noob\t\t{FFFF00}[%d/200]\n",PlayerInfo[playerid][pDeaths]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Guarda de Transito\t\t{FFFF00}[%d/150]\n",PlayerInfo[playerid][pMultas]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Protetor de Cofres\t\t{FFFF00}[%d/150]\n",PlayerInfo[playerid][pRoubosEvitados]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Detetive Profissional\t\t{FFFF00}[%d/500]\n",PlayerInfo[playerid][pDetSkill]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Maconheiro\t\t{FFFF00}[%d/500]\n",PlayerInfo[playerid][pMaconheiro]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Cheirador\t\t{FFFF00}[%d/500]\n",PlayerInfo[playerid][pCheirador]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Cracudo\t\t{FFFF00}[%d/500]\n",PlayerInfo[playerid][pCracudo]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Psicopata\t\t{FFFF00}[%d/500]\n",PlayerInfo[playerid][pPsicopata]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Atirador de Elite\t\t{FFFF00}[%d/200]\n",PlayerInfo[playerid][pAtiradorElite]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Presidiário\t\t{FFFF00}[%d/100]\n",PlayerInfo[playerid][pPreso]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Bazucador\t\t{FFFF00}[%d/250]\n",PlayerInfo[playerid][pBazucador]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Matador Secundário\t\t{FFFF00}[%d/500]\n",PlayerInfo[playerid][pMatador]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Incendiário\t\t{FFFF00}[%d/100]\n",PlayerInfo[playerid][pIncendio]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Winner\t\t{FFFF00}[%d/100]\n",PlayerInfo[playerid][pWinner]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Bombeiro\t\t{FFFF00}[%d/100]\n",PlayerInfo[playerid][pApagado]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Alcoolatra\t\t{FFFF00}[%d/500]\n",PlayerInfo[playerid][pAlcolatra]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Deejay\t\t{FFFF00}[%d/30]\n",PlayerInfo[playerid][pDeejay]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Criminoso\t\t{FFFF00}[%d/250]\n",PlayerInfo[playerid][pCrimes]);
		strcat(dialogtitulos, gstring);
		format(gstring,128, "» {00e7c6}Título personalizado\t\t{FFFF00}[Ter O Íten]");
		strcat(dialogtitulos, gstring);
        ShowPlayerDialog(playerid, 101, DIALOG_STYLE_TABLIST, "Títulos BPL", dialogtitulos, "Confirmar", "Cancelar");
		SendClientMessage(playerid, COR_GRAD1, "Para analizar todos os seus títulos, digite: /stitulos !");
		EmDialog[playerid] = 1;
		return 1;
	}
	CMD:acessorios(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
				MEGAString[0] = EOS;
				new Var[9], Var1[9], Var2[9], Var3[9], Var4[9], Var5[9], Var6[9],Var7[9],
				Var8[9], Var9[9], Var10[9], Var11[9], Var12[9], Var13[9], Var14[9],Var15[9],
				Var16[9],Var17[9],Var18[9],Var19[9],Var20[9],Var21[9];

				if(PlayerInfo[playerid][pTemCBombeiro] == 1)Var = "Comprado";
				if(PlayerInfo[playerid][pTemCPolicial] == 1) Var1 = "Comprado";
				if(PlayerInfo[playerid][pChapeuMichaelJackson] == 1) Var2 = "Comprado";
				if(PlayerInfo[playerid][pChapeuOperario] == 1) Var3 = "Comprado";
				if(PlayerInfo[playerid][pChapeuFunkeiro] == 1) Var4 = "Comprado";
				if(PlayerInfo[playerid][pChapeuIdoso] == 1) Var5 = "Comprado";
				if(PlayerInfo[playerid][pChapeuHarryPotter] == 1) Var6 = "Comprado";
				if(PlayerInfo[playerid][pCabecadeGalo] == 1) Var7 = "Comprado";
				if(PlayerInfo[playerid][pChifredeBoi] == 1) Var8 = "Comprado";
				if(PlayerInfo[playerid][pCabecaodoCJ] == 1) Var9 = "Comprado";
				if(PlayerInfo[playerid][pGorro] == 1) Var10 = "Comprado";
				if(PlayerInfo[playerid][pDado] == 1) Var11 = "Comprado";
				if(PlayerInfo[playerid][pCoracao] == 1) Var12 = "Comprado";
				if(PlayerInfo[playerid][pC4] == 1) Var13 = "Comprado";
				if(PlayerInfo[playerid][pVibradorGigante] == 1) Var14 = "Comprado";
				if(PlayerInfo[playerid][pItemMochila] == 1) Var15 = "Comprado";
				if(TemChapeuBruxa[playerid] == 1) Var16 = "Comprado";
				if(TemArara[playerid] == 1) Var17 = "Comprado";
				if(PlayerInfo[playerid][pGuitarra] == 1) Var18 = "Comprado";
				if(PlayerInfo[playerid][pTemM4Costas] == 1) Var19 = "Comprado";
				if(PlayerInfo[playerid][pGuitarraBranca] == 1) Var20 = "Comprado";
				if(PlayerInfo[playerid][pBaixo] == 1) Var21 = "Comprado";
				format(gstring, sizeof(gstring), "Chapéu de Bombeiro {0088FF}%s",Var);
				strcat(MEGAString,gstring);
				format(gstring, sizeof(gstring), "\nChapéu de Policial {0088FF}%s",Var1);
				strcat(MEGAString,gstring);
				format(gstring, sizeof(gstring), "\nChapéu Michael Jackson {0088FF}%s",Var2);
				strcat(MEGAString,gstring);
				format(gstring, sizeof(gstring), "\nChapéu Operário {0088FF}%s",Var3);
				strcat(MEGAString,gstring);
				format(gstring, sizeof(gstring), "\nChapéu de Funkeiro {0088FF}%s",Var4);
				strcat(MEGAString,gstring);
				format(gstring, sizeof(gstring), "\nChapéu de Idoso {0088FF}%s",Var5);
				strcat(MEGAString,gstring);
				format(gstring, sizeof(gstring), "\nChapéu do Harry Potter {0088FF}%s",Var6);
				strcat(MEGAString,gstring);
				format(gstring, sizeof(gstring), "\nCabeça de Galo {0088FF}%s",Var7);
				strcat(MEGAString,gstring);
				format(gstring, sizeof(gstring), "\nChifre de Boi 1 {0088FF}%s",Var8);
				strcat(MEGAString,gstring);
				format(gstring, sizeof(gstring), "\nCabeção do CJ {0088FF}%s",Var9);
				strcat(MEGAString,gstring);
				format(gstring, sizeof(gstring), "\nToca Papai Noel {0088FF}%s",Var10);
				strcat(MEGAString,gstring);
				format(gstring, sizeof(gstring), "\nDado Na Cabeça {0088FF}%s",Var11);
				strcat(MEGAString,gstring);
				format(gstring, sizeof(gstring), "\nCoração No Peito {0088FF}%s",Var12);
				strcat(MEGAString,gstring);
				format(gstring, sizeof(gstring), "\nC4 No Peito {0088FF}%s",Var13);
				strcat(MEGAString,gstring);
				format(gstring, sizeof(gstring), "\nVibrador Gigante {0088FF}%s",Var14);
				strcat(MEGAString,gstring);
				format(gstring, sizeof(gstring), "\nMochila {0088FF}%s",Var15);
				strcat(MEGAString,gstring);
				format(gstring, sizeof(gstring), "\nChapéu de Bruxa {0088FF}%s",Var16);
				strcat(MEGAString,gstring);
				format(gstring, sizeof(gstring), "\nBaixo {088FFF}%s",Var21);
				strcat(MEGAString, gstring);
				format(gstring, sizeof(gstring), "\nGuitarra Branca {088FFF}%s",Var20);
				strcat(MEGAString, gstring);
                format(gstring, sizeof(gstring), "\nGuitarra Preta {088FFF}%s",Var18);
				strcat(MEGAString, gstring);
				format(gstring, sizeof(gstring), "\nArara {0088FF}%s",Var17);
				strcat(MEGAString,gstring);
				format(gstring, sizeof(gstring), "\nM4 {0088FF}%s",Var19);
				strcat(MEGAString,gstring);
				format(gstring, sizeof(gstring), "\n{FF0000}Retirar Acessórios");
				strcat(MEGAString,gstring);
				ShowPlayerDialog(playerid, 13489, DIALOG_STYLE_LIST, "Acessórios, selecione um acessório:", MEGAString, "Ativar", "Sair");
		}
		return 1;
	}
	CMD:menubpl(playerid, params[])// || CMD:menu(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COR_YAK, "Você precisa ser acima do level 3.");
			if(PlayerInfo[playerid][pJailed] != 0) return SendClientMessage(playerid, COR_GRAD1, "Você não pode usar este comando neste local !");
			ShowPlayerDialog(playerid, 145, DIALOG_STYLE_LIST, "Menu BPL", "{9CEA00}Menu - {FFFFFF}Itens Comprados\n{9CEA00}Menu - {FFFFFF}Gerenciar titúlos\n{9CEA00}Menu - {FFFFFF}Controlar Mensagens\n{9CEA00}Menu - {FFFFFF}Casas e Empresas\n{9CEA00}Menu - {FFFFFF}Veiculo da Casa\n{9CEA00}Menu - {FFFFFF}Menu Hit\n{9CEA00}Menu - {FFFFFF}Menu VIP", "Escolher", "Cancelar");
		}
		return 1;
	}
	CMD:pegardecod(playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdmin] == 1342)
	    {
	        PlayerInfo[playerid][pDecod] ++;
	        SendClientMessage(playerid, -1, "Você ganhou um decodificador !");
	        return 1;
	    }
	    return 1;
	}
 	CMD:aa(playerid, params[])
	{
         if(PlayerInfo[playerid][pAdmin] < 1)
		 {
		    return 1;
		 }
		 if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
		 {
			  SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
			  return 1;
		 }
	     if(IsPlayerConnected(playerid))
	     {
             if(IsPlayerConnected(playerid))
	         {
	              MEGAString[0]=EOS;
			      if (PlayerInfo[playerid][pAdmin] >= 1)
			      {
				       strcat(MEGAString, "{02fcff}Nivel 1 - {FFFFFF} /fogo /tapinha /tapa /tapao /par /ver /kick /av /ir /trazer /verlicencas\n");
				       strcat(MEGAString, "{02fcff}Nivel 1 - {FFFFFF} /cnn /tvon /tvoff /congelar /descongelar /desbugar /spawn /calar /settime\n");
				       strcat(MEGAString, "{02fcff}Nivel 1 - {FFFFFF} /statuscel /desbanip /infoarmas /infoadm /paredao /respawnperto /hqadm\n");
				       strcat(MEGAString, "{02fcff}Nivel 1 - {FFFFFF} /ls /lv /sf /arenax1 /dn /up /rt /lt /respawnid /repararid /abastecerid /fila\n");
				       strcat(MEGAString, "{02fcff}Nivel 1 - {FFFFFF} /portaox1 /rcarro /acarro /bcarro /setarint /irincendio /novatos /cvips\n\n");
			      }
			      if (PlayerInfo[playerid][pAdmin] >= 2)
			      {
				       strcat(MEGAString, "{06e8eb}Nivel 2 - {FFFFFF} /cadeia /aviso /banir /1 /2 /3 /go /dcarro /entrarcarro /onestacionar /offestacionar /resetlocalizadoint\n");
				       strcat(MEGAString, "{06e8eb}Nivel 2 - {FFFFFF} /trazerx1 /retirar /matar /encher /testegod /carros /ircarro /trazercarro /flip /bloquearchatduvida\n");
				       strcat(MEGAString, "{06e8eb}Nivel 2 - {FFFFFF} /predio /praia /monte /aerols /aerolv /ircaixa /batebate /spysms /blindarperto /rarmas /vervotosf\n\n");
			      }
			      if (PlayerInfo[playerid][pAdmin] >= 3)
			      {
				       strcat(MEGAString, "{06d4d6}Nivel 3 - {FFFFFF} /carandiru /testetempo /mark /irmark /explodir /menuadm /setchuck /limparchat\n");
				       strcat(MEGAString, "{06d4d6}Nivel 3 - {FFFFFF} /abastecercarros /setarevento /voar /respawnorg  /respawncarros /sethora /rarmasall\n");
				       strcat(MEGAString, "{06d4d6}Nivel 3 - {FFFFFF} /ircasa /entrarorgadm /agendar /desagendar /soltarkarts /setarfamilia\n\n");
			      }
			      if (PlayerInfo[playerid][pAdmin] >= 4)
			      {
				       strcat(MEGAString, "{05bdbf}Nivel 4 - {FFFFFF} /iremp /irsemp /darcolete /setemprego /mudarcont /infoplayer\n");
				       strcat(MEGAString, "{05bdbf}Nivel 4 - {FFFFFF} /irtunning /rmparedao /onmudars /offmudars /setarct /setartr\n\n");
			      }
			      if (PlayerInfo[playerid][pAdmin] >= 1337)
			      {
			           strcat(MEGAString, "{047778}Master - {FFFFFF} /editar /seditar /gmx /iniciarloteria /desbanconta /tempo /onmudarn /offmudarn /updatemaconha /resetf\n\n");
			      }
			      if (PlayerInfo[playerid][pAdmin] >= 1338)
			      {
			           strcat(MEGAString, "{03ff5c}Master + - {FFFFFF} /admvcasa /admvbizz /admvcarro /darlicencas /dararma /rmparedao /destruir /retirarvip /setskin /infoconta\n");
			           strcat(MEGAString, "{03ff5c}Master + - {FFFFFF} /desarmarevento /eventodararma /iniciarx1\n\n");
			      }
                  if (PlayerInfo[playerid][pAdmin] >= 1339)
			      {
				       strcat(MEGAString, "{07d54f}Master ++ - {FFFFFF} /newgay /cleargay /setpos /carid /biz /sbizz /teleportar /lider\n");
				       strcat(MEGAString, "{07d54f}Master ++ - {FFFFFF} /tunning /spysms /coordenadas /reloadlogs /pegarlider /limparlider\n\n");
			      }
			      if (PlayerInfo[playerid][pAdmin] >= 1340)
			      {
			           strcat(MEGAString, "{049437}Aj Sub-Dono - {FFFFFF} /kitadmdono /blockpar /antixiter /cnnn /setgrana /spypar /spyparall /coins /caixinhap /cadeiaoculta /bonusbpl\n");
           			   strcat(MEGAString, "{049437}Aj Sub-Dono - {FFFFFF} /setaracessorio /retiraracessorio /schatduvida /spysms /spysmsall\n\n");
				  }
			      if (PlayerInfo[playerid][pAdmin] >= 1341)
			      {
                       strcat(MEGAString, "{03782d}Sub-Dono - {FFFFFF} /deslogartodos /admvcasaall /admvcasaall /seriais /irmaleta /destruirmaleta(SF War) /airdrop\n");
                       strcat(MEGAString, "{03782d}Sub-Dono - {FFFFFF} /descricao /darprocurado /retirarprocura /deletarconta /orelhas /setarorgvip /atividadeadmin\n\n");
                  }
                  if (PlayerInfo[playerid][pAdmin] >= 1342)
			      {
                       strcat(MEGAString, "{035921}Scripter - {FFFFFF} /daradmin /limparadmin /retiraradmin /esconderijo /resetduel /savefiles /agendarcoins\n");
                       strcat(MEGAString, "{035921}Scripter - {FFFFFF} /atualizar3dtext /iro /trazercasa /trazeremp /trazersemp /senha /setvaga /setarcoins\n\n");
			      }
			      ShowPlayerDialog(playerid, DSFUNCAO, DIALOG_STYLE_MSGBOX, "Comandos dos Admintradores", MEGAString, "OK","");
		     }
		 }
		 return 1;
	}
	CMD:darprocurado(playerid, params[])//)
    {
         if(IsPlayerConnected(playerid))
         {
              if(PlayerInfo[playerid][pAdmin] < 1341)
              {
                   SendClientMessage(playerid, COR_GRAD1, "Você não tem autorização para usar esse comando.");
                   return 1;
              }
              if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
			  {
                   SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
			       return 1;
			  }
              tmpzcmd = strtok(cmdtext, idxzcmd);
              if(!strlen(tmpzcmd))
              {
                   SendClientMessage(playerid, COR_GREY, "/darprocurado [id] [nível]");
			       return 1;
              }
              new para1;
              new procura;
              para1 = ReturnUser(tmpzcmd);
              tmpzcmd = strtok(cmdtext, idxzcmd);
              if(!strlen(tmpzcmd))
              {
                   SendClientMessage(playerid, COR_GREY, "/darprocurado [id] [nível]");
			       return 1;
              }
              procura = strval(tmpzcmd);
              if(IsPlayerConnected(para1))
              {
                   if(para1 != INVALID_PLAYER_ID)
                   {
                        WantedLevel[para1] += procura;
					    SetPlayerWantedLevel(para1, WantedLevel[para1]);
				        format(gstring, sizeof(gstring), "ADMCMD: %s colocou [%d] nível de procurado em %s.",PlayerName(playerid), procura, PlayerName(para1));
					    ABroadCast(COR_LIGHTRED, gstring,1);
					    format(gstring, sizeof(gstring), "Você foi setado com [%d] nível de procura pelo Administrador %s.", procura);
			            SendClientMessage(para1, COR_LIGHTBLUE, gstring);
                   }
              }
         }
	}
	CMD:retirarprocura(playerid, params[])
    {
              if(PlayerInfo[playerid][pAdmin] < 1341)
              {
                   SendClientMessage(playerid, COR_GRAD1, "Você não tem autorização para usar esse comando.");
                   return 1;
              }
              if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
			  {
                   SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
			       return 1;
			  }
              tmpzcmd = strtok(cmdtext, idxzcmd);
              if(!strlen(tmpzcmd))
              {
                   SendClientMessage(playerid, COR_GREY, "/retirarprocura [id] [quantia]");
			       return 1;
              }
              new para1;
              new rprocura;
              para1 = ReturnUser(tmpzcmd);
              tmpzcmd = strtok(cmdtext, idxzcmd);
              if(!strlen(tmpzcmd))
              {
                   SendClientMessage(playerid, COR_GREY, "/retirarprocura [id] [quantia]");
			       return 1;
              }
              if(WantedLevel[para1] == 0)
              {
				   SendClientMessage(playerid, COR_GRAD1, "Este jogador não está procurado !");
				   return 1;
              }
              rprocura = strval(tmpzcmd);
              if(IsPlayerConnected(para1))
              {
                   if(para1 != INVALID_PLAYER_ID)
                   {
                        WantedLevel[para1] -= rprocura;
                        SetPlayerWantedLevel(para1, WantedLevel[para1]);
                        if(WantedLevel[para1] > 0)
                        {
                             format(gstring, sizeof(gstring), "P:[%d]",WantedLevel[playerid]);
                             SetPlayerChatBubble(para1, gstring, COR_VERMELHO, 45.0, 100000);
                        }
                        else if(WantedLevel[para1] == 0)
                        {
                             SetPlayerChatBubble(para1, "*", COR_VERMELHO, 1, 1);
                        }
                        OnPlayerUpdate(para1);
                        format(gstring, sizeof(gstring), "ADMCMD: %s retirou [%d] nível de procurado em %s.",PlayerName(playerid), rprocura, PlayerName(para1));
					    ABroadCast(COR_LIGHTRED, gstring,1);
                        format(gstring, sizeof(gstring), "* Você limpou [%d] nivel de procura do jogador %s.",rprocura, giveplayerzcm);
                        SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
                        format(gstring, sizeof(gstring), "* Admin %s: retirou [%d] nivel de procura da sua ficha.",PlayerName(playerid), rprocura);
                        SendClientMessage(para1, COR_LIGHTBLUE, gstring);
                   }
       	      }
		      return 1;
	}
	CMD:habilidades)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new x_nr[32];
			x_nr = strtok(cmdtext, idxzcmd);
			if(!strlen(x_nr))
			{
				SendClientMessage(playerid, COR_BRANCO, "|_________________ Habilidades Skill _________________|");
				SendClientMessage(playerid, COR_BRANCO, "USE: /Habilidades [numero]");
		  		SendClientMessage(playerid, COR_GREY, "| 1: Detetive");
		  		SendClientMessage(playerid, COR_GREY, "| 2: Advogado");
		  		SendClientMessage(playerid, COR_GREY, "| 3: Vendedor de Drogas");
		  		SendClientMessage(playerid, COR_GREY, "| 4: Mecânico");
		  		SendClientMessage(playerid, COR_BRANCO, "|__________________________________________________|");
				return 1;
			}
		    if(strcmp(x_nr,"1(playerid, params[])//Detetive
			{
                new level = PlayerInfo[playerid][pDetSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COR_AMARELO, "Level de detetive = 1."); format(gstring, sizeof(gstring), "Você precisa procurar mais %d para passar de nível.", 10 - level); SendClientMessage(playerid, COR_AMARELO, gstring); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COR_AMARELO, "Level de detetive = 2."); format(gstring, sizeof(gstring), "Você precisa procurar mais %d para passar de nível.", 20 - level); SendClientMessage(playerid, COR_AMARELO, gstring); }
				else if(level >= 101 && level <= 150) { SendClientMessage(playerid, COR_AMARELO, "Level de detetive = 3."); format(gstring, sizeof(gstring), "Você precisa procurar mais %d para passar de nível.", 30 - level); SendClientMessage(playerid, COR_AMARELO, gstring); }
				else if(level >= 151 && level <= 200) { SendClientMessage(playerid, COR_AMARELO, "Level de detetive = 4."); format(gstring, sizeof(gstring), "Você precisa procurar mais %d para passar de nível.", 40 - level); SendClientMessage(playerid, COR_AMARELO, gstring); }
				else if(level >= 201) { SendClientMessage(playerid, COR_AMARELO, "Level de detetive = 5(Máximo)."); }
			}
			else if(strcmp(x_nr,"2(playerid, params[])//Advogado
			{
			    new level = PlayerInfo[playerid][pLawSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COR_AMARELO, "Level de advogado = 1."); format(gstring, sizeof(gstring), "Você precisa soltar mais %d pessoas para passar de nível.", 50 - level); SendClientMessage(playerid, COR_AMARELO, gstring); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COR_AMARELO, "Level de advogado = 2."); format(gstring, sizeof(gstring), "Você precisa soltar mais %d pessoas para passar de nível.", 100 - level); SendClientMessage(playerid, COR_AMARELO, gstring); }
				else if(level >= 101 && level <= 150) { SendClientMessage(playerid, COR_AMARELO, "Level de advogado = 3."); format(gstring, sizeof(gstring), "Você precisa soltar mais %d pessoas para passar de nível.", 200 - level); SendClientMessage(playerid, COR_AMARELO, gstring); }
				else if(level >= 151 && level <= 200) { SendClientMessage(playerid, COR_AMARELO, "Level de advogado = 4."); format(gstring, sizeof(gstring), "Você precisa soltar mais %d pessoas para passar de nível.", 400 - level); SendClientMessage(playerid, COR_AMARELO, gstring); }
				else if(level >= 201) { SendClientMessage(playerid, COR_AMARELO, "Level de advogado = 5(Máximo)."); }
			}
			else if(strcmp(x_nr,"3(playerid, params[])//Vendedor de Drogas
			{
			    new level = PlayerInfo[playerid][pDrogasSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COR_AMARELO, "Level de venda de drogas = 1."); format(gstring, sizeof(gstring), "Você precisar vender mais %d drogas para passar de nivel.", 50 - level); SendClientMessage(playerid, COR_AMARELO, gstring); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COR_AMARELO, "Level de venda de drogas = 2."); format(gstring, sizeof(gstring), "Você precisar vender mais %d drogas para passar de nivel.", 100 - level); SendClientMessage(playerid, COR_AMARELO, gstring); }
				else if(level >= 101 && level <= 150) { SendClientMessage(playerid, COR_AMARELO, "Level de venda de drogas = 3."); format(gstring, sizeof(gstring), "Você precisar vender mais %d drogas para passar de nivel.", 200 - level); SendClientMessage(playerid, COR_AMARELO, gstring); }
				else if(level >= 151 && level <= 200) { SendClientMessage(playerid, COR_AMARELO, "Level de venda de drogas = 4."); format(gstring, sizeof(gstring), "Você precisar vender mais %d drogas para passar de nivel.", 400 - level); SendClientMessage(playerid, COR_AMARELO, gstring); }
				else if(level >= 201) { SendClientMessage(playerid, COR_AMARELO, "Level de V.Drogas = 5(Máximo)."); }
			}
			else if(strcmp(x_nr,"4(playerid, params[])//Mecanico
			{
			    new level = PlayerInfo[playerid][pMechSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COR_AMARELO, "Level de mecânico = 1."); format(gstring, sizeof(gstring), "Você precisa concertar/abastecer mais %d carros para passar de nível.", 50 - level); SendClientMessage(playerid, COR_AMARELO, gstring); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COR_AMARELO, "Level de mecânico = 2."); format(gstring, sizeof(gstring), "Você precisa concertar/abastecer mais %d carros para passar de nível.", 100 - level); SendClientMessage(playerid, COR_AMARELO, gstring); }
				else if(level >= 101 && level <= 150) { SendClientMessage(playerid, COR_AMARELO, "Level de mecânico = 3."); format(gstring, sizeof(gstring), "Você precisa concertar/abastecer mais %d carros para passar de nível.", 200 - level); SendClientMessage(playerid, COR_AMARELO, gstring); }
				else if(level >= 151 && level <= 200) { SendClientMessage(playerid, COR_AMARELO, "Level de mecânico = 4."); format(gstring, sizeof(gstring), "Você precisa concertar/abastecer mais %d carros para passar de nível.", 400 - level); SendClientMessage(playerid, COR_AMARELO, gstring); }
				else if(level >= 201) { SendClientMessage(playerid, COR_AMARELO, "Level de mecânico = 5(Máximo)."); }
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "Número de habilidade inválido !");
			    return 1;
			}
	    }
	    return 1;
    }
    CMD:mervdecod(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if(GetPlayerOrg(playerid) != 21 && GetPlayerOrg(playerid) != 24 && GetPlayerOrg(playerid) != 29)
		    {
				SendClientMessage(playerid, COR_GREY, "Você não é um mercenário!");
				return 1;
		    }
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /mervdecod [ id ] [preco]");
				return 1;
			}
			if(PlayerInfo[playerid][pMats] < 70)
			{
                 SendClientMessage(playerid, COR_GRAD1, "* Voce precisa ter mas de 70 de Materiais para vender um decodificador !");
				 return 1;
			}
			new money;
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)) { return 1; }
			money = strval(tmpzcmd);
			if(PlayerInfo[giveplayeridzcmd][pDecod] > 0){ return SendClientMessage(playerid, -1, "Esse jogador já possui um decodificador.");}
			if(money < 500 || money > 3000) { SendClientMessage(playerid, COR_GREY, "Preço minimo 500, preço máximo 3000!"); return 1; }
			if(IsPlayerConnected(giveplayeridzcmd))
			{
			    if(giveplayeridzcmd != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, giveplayeridzcmd))
					{
					    //if(giveplayeridzcmd == playerid)
					    //{
					     //   SendClientMessage(playerid, COR_GREY, "Você não pode se vender decodificador!");
					   //     return 1;
					 //   }
					    GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
         				format(gstring, sizeof(gstring), "* Você ofereceu um decodificador ao(a) %s por R$[%d] .", giveplayerzcm, money);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "* Mercenário %s quer lhe vender um decodificador por R$[%d], (Digite /aceitar decod) para aceitar.", sendername, money);
						SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
						DecodificadorOffer[giveplayeridzcmd] = playerid;
						DecodificadorPrice[giveplayeridzcmd] = money;
						PlayerInfo[playerid][pMats] -= 70;
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "O Jogador não está perto de você !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "O Jogador está Offline!");
			}
		}
		return 1;
	}
    CMD:mafiavdinamite(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pMembro] != 20 && PlayerInfo[playerid][pLider] != 20 && PlayerInfo[playerid][pMembro] != 22	&& PlayerInfo[playerid][pLider] != 22 && PlayerInfo[playerid][pMembro] != 28	&& PlayerInfo[playerid][pLider] != 28 && PlayerInfo[playerid][pMembro] != 29	&& PlayerInfo[playerid][pLider] != 29)
		    {
				SendClientMessage(playerid, COR_GREY, "Você não é Mafioso !");
				return 1;
		    }
		    new carid = GetPlayerVehicleID(playerid);
		    if(!IsABoxCar(carid))
	        {
				 SendClientMessage(playerid, COR_GRAD1, "Você precisa estar dentro do BoxVille Para Vender Dinamites!");
				 return 1;
	        }
	        if(GetPlayerOrg(playerid) == 20 && donocasarao != 2)
		    {
		 	     SendClientMessage(playerid, COR_GRAD1, "Você é da Máfia Yakuza, precisa estar dominando algum território para usar este comando !");
				 return 1;
		    }
		    if(GetPlayerOrg(playerid) == 22 && donocasarao != 1)
		    {
			     SendClientMessage(playerid, COR_GRAD1, "Você é da Máfia Yakuza, precisa estar dominando algum território para usar este comando !");
			     return 1;
			}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /mafiavdinamite [id] [preço]");
				return 1;
			}
			if(PlayerInfo[playerid][pMats] < 20)
			{
                 SendClientMessage(playerid, COR_GRAD1, "* Voce precisa ter mas de 20 de Materiais para vender dinamites!");
				 return 1;
			}
			new money;
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)) { return 1; }
			money = strval(tmpzcmd);
			if(money < 1 || money > 5000) { SendClientMessage(playerid, COR_GREY, "Preço maior que 1, menor que 5000!"); return 1; }
			if(IsPlayerConnected(giveplayeridzcmd))
			{
			    if(giveplayeridzcmd != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, giveplayeridzcmd))
					{
					    if(giveplayeridzcmd == playerid)
					    {
					        SendClientMessage(playerid, COR_GREY, "Você não pode se vender dinamite!");
					        return 1;
					    }
					    GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
         				format(gstring, sizeof(gstring), "* Você ofereceu dinamites para %s por R$[%d].", giveplayerzcm, money);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "*  %s lhe ofereceu dinamites por R$[%d], (Digite /aceitar dinamite) para aceitar.", sendername, money);
						SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
						DinamiteOffer[giveplayeridzcmd] = playerid;
						DinamitePrice[giveplayeridzcmd] = money;
						PlayerInfo[playerid][pMats] -= 20;
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "O Jogador não está perto de você !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "O Jogador está Offline!");
			}
		}
		return 1;
	}
	CMD:darlicencas(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 3)
	        {
		        if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
	            tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd))
				{
				    SendClientMessage(playerid, COR_BRANCO, "USE: /darlicencas [ id ]");
				    return 1;
				}
				giveplayeridzcmd = ReturnUser(tmpzcmd);
				if(IsPlayerConnected(giveplayeridzcmd))
				{
				    if(giveplayeridzcmd != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
				        format(gstring, sizeof(gstring), "* Você deu todas as licenças para %s.",giveplayerzcm);
				        SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
			        	format(gstring, sizeof(gstring), "* Admin %s lhe deu todas as licenças.",sendername);
				        SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
				        format(gstring, sizeof(gstring), "AvisoAdmin: %s deu todas as licenças para o Jogador: %s.",sendername,giveplayerzcm);
				        ABroadCast(COR_AMARELO,gstring,1);
				        PlayerInfo[giveplayeridzcmd][pGunLic] = 1;
				        PlayerInfo[giveplayeridzcmd][pBoatLic] = 1;
				        PlayerInfo[giveplayeridzcmd][pFlyLic] = 1;
				        PlayerInfo[giveplayeridzcmd][pCarLic] = 1;
				        PlayerInfo[giveplayeridzcmd][pMotoLic] = 1;
				        PlayerInfo[giveplayeridzcmd][pCamOniLic] = 1;
                        PlayerInfo[giveplayeridzcmd][pValidadeCarro] = 400;
                        PlayerInfo[giveplayeridzcmd][pValidadeMoto] = 400;
                        PlayerInfo[giveplayeridzcmd][pValidadeBarco] = 400;
                        PlayerInfo[giveplayeridzcmd][pValidadeAviao] = 400;
                        PlayerInfo[giveplayeridzcmd][pValidadeOnibus] = 400;
				        return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COR_GREY, "O Jogador Está Offline !");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar este comando !");
	            return 1;
	        }
	    }
	    return 1;
	}
	CMD:retirarlicencas(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >=1337)
	        {
		        if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
	            tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd))
				{
				    SendClientMessage(playerid, COR_BRANCO, "USE: /retirarlicencas [ id ]");
				    return 1;
				}
				giveplayeridzcmd = ReturnUser(tmpzcmd);
				if(IsPlayerConnected(giveplayeridzcmd))
				{
				    if(giveplayeridzcmd != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
				        format(gstring, sizeof(gstring), "* Você retirou todas as licenças para %s.",giveplayerzcm);
				        SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
			        	format(gstring, sizeof(gstring), "* Admin %s lhe retirou todas as licenças.",sendername);
				        SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
				        PlayerInfo[giveplayeridzcmd][pGunLic] = 0;
				        PlayerInfo[giveplayeridzcmd][pBoatLic] = 0;
				        PlayerInfo[giveplayeridzcmd][pFlyLic] = 0;
				        PlayerInfo[giveplayeridzcmd][pCarLic] = 0;
				        PlayerInfo[giveplayeridzcmd][pMotoLic] = 0;
				        PlayerInfo[giveplayeridzcmd][pCamOniLic] = 0;
                        PlayerInfo[giveplayeridzcmd][pValidadeCarro] = 0;
                        PlayerInfo[giveplayeridzcmd][pValidadeMoto] = 0;
                        PlayerInfo[giveplayeridzcmd][pValidadeBarco] = 0;
                        PlayerInfo[giveplayeridzcmd][pValidadeAviao] = 0;
                        PlayerInfo[giveplayeridzcmd][pValidadeOnibus] = 0;
				        return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COR_GREY, "O Jogador Está Offline !");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar este comando !");
	            return 1;
	        }
	    }
	    return 1;
	}
	CMD:retiraraviso(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 3)
	        {
		        if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
	            tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd))
				{
				    SendClientMessage(playerid, COR_BRANCO, "USE: /retiraraviso [ id ]");
				    return 1;
				}
				if(PlayerInfo[giveplayeridzcmd][pAvisos] >= 1)
				{
				    SendClientMessage(playerid, COR_BRANCO, "Este player nao possui avisos");
				    return 1;
				}
				giveplayeridzcmd = ReturnUser(tmpzcmd);
				if(IsPlayerConnected(giveplayeridzcmd))
				{
				    if(giveplayeridzcmd != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
				        format(gstring, sizeof(gstring), "* Você retoir um aviso do player %s.",giveplayerzcm);
				        SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
                        format(gstring, sizeof(gstring), "* Admin %s retirou um aviso seu",sendername);
				        SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
				        PlayerInfo[giveplayeridzcmd][pAvisos] -= 1;
				        return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COR_GREY, "O Jogador Está Offline !");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar este comando !");
	            return 1;
	        }
	    }
	    return 1;
	}
	CMD:onestacionar(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 2)
	        {
		        if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
	            tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd))
				{
				    SendClientMessage(playerid, COR_BRANCO, "USE: /OnEstacionar [ id ]");
				    return 1;
				}
				giveplayeridzcmd = ReturnUser(tmpzcmd);
				if(IsPlayerConnected(giveplayeridzcmd))
				{
				    if(giveplayeridzcmd != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
				        CarroEstacionar[giveplayeridzcmd] = 1;
				        //format(gstring, sizeof(gstring), "* Você Autorizou o jogador: %s Estacionar seu veiculo VIP.",giveplayerzcm);
				        //SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
			        	format(gstring, sizeof(gstring), "Admin %s : Liberou você a estacionar seu veiculo,/veiculo estacionar.",sendername);
				        SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
					  	format(gstring, sizeof(gstring), "ADMIN CMD: %s autorizou %s a estacionar o veiculo !",sendername, giveplayerzcm);
						ABroadCast(COR_LIGHTRED,gstring,1);
				        return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COR_GREY, "O Jogador Está Offline !");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar este comando !");
	            return 1;
	        }
	    }
	    return 1;
	}
    CMD:offestacionar(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 2)
	        {
		        if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
	            tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd))
				{
				    SendClientMessage(playerid, COR_BRANCO, "USE: /offestacionar [ id ]");
				    return 1;
				}
				giveplayeridzcmd = ReturnUser(tmpzcmd);
				if(IsPlayerConnected(giveplayeridzcmd))
				{
				    if(giveplayeridzcmd != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
				        format(gstring, sizeof(gstring), "* Você Rertirou a permissão do jogador: %s Estacionar seu veiculo VIP.",giveplayerzcm);
				        SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
			        	format(gstring, sizeof(gstring), "Admin %s : Retirou sua permissão de estacionar seu carro vip,/veiculo estacionar.",sendername);
				        SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
				        CarroEstacionar[giveplayeridzcmd] = 0;
				        return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COR_GREY, "O Jogador Está Offline !");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar este comando !");
	            return 1;
	        }
	    }
	    return 1;
	}
	CMD:onmudars(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 4)
	        {
	            tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd))
				{
				    SendClientMessage(playerid, COR_GRAD2, "USE: /OnMudarS [ id ]");
				    return 1;
				}
				giveplayeridzcmd = ReturnUser(tmpzcmd);
				if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				if(IsPlayerConnected(giveplayeridzcmd))
				{
				    if(giveplayeridzcmd != INVALID_PLAYER_ID)
				    {
                        MudarSenhaAceito[giveplayeridzcmd] = 1;
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
				        format(gstring, sizeof(gstring), "* Você autorizou o jogador: %s à mudar a senha.", giveplayerzcm);
				        SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
                        format(gstring, sizeof(gstring), "Admin %s : Liberou você a mudar a senha,digite /mudarsenha.", sendername);
		        		SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
				        format(gstring, sizeof(gstring), "ADMIN CMD: %s autorizou %s a mudar a senha !",sendername,giveplayerzcm);
						ABroadCast(COR_LIGHTRED,gstring,1);
				        return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COR_GREY, "O Jogador Está Offline !");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar este comando !");
	            return 1;
	        }
	    }
	    return 1;
	}
 	CMD:offmudars(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 4)
	        {
	            tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd))
				{
				    SendClientMessage(playerid, COR_GRAD2, "USE: /OffMudarS [ id ]");
				    return 1;
				}
				giveplayeridzcmd = ReturnUser(tmpzcmd);
				if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				if(IsPlayerConnected(giveplayeridzcmd))
				{
				    if(giveplayeridzcmd != INVALID_PLAYER_ID)
				    {
                        MudarSenhaAceito[giveplayeridzcmd] = 0;
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
                        format(gstring, sizeof(gstring), "Admin %s : Tirou sua permissão para mudar de senha.", sendername);
		        		SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
				        format(gstring, sizeof(gstring), "ADMIN CMD: %s tirou a permissão de %s para mudar a senha !",sendername,giveplayerzcm);
						ABroadCast(COR_LIGHTRED,gstring,1);
				        return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COR_GREY, "O Jogador Está Offline !");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar este comando !");
	            return 1;
	        }
	    }
	    return 1;
	}
	CMD:arrombar(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(gTeam[playerid] == 2  || IsACop(playerid) || GetPlayerOrg(playerid) == 8 || GetPlayerOrg(playerid) == 26)
            {
                for(new i = 0; i < sizeof(HouseInfo); ++i)
				{
					if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
					{
					    SetPlayerInterior(playerid,HouseInfo[i][hInt]);
						SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
						SetPlayerVirtualWorld(playerid,HouseInfo[i][hWorld]);
						GameTextForPlayer(playerid, "~r~Arrombou a Porta", 5000, 1);
						InteriorAtual[playerid] = HouseInfo[i][hInt];
						LocalAtual[playerid] = i;
						HouseEntered[playerid] = i;
					}
				}
            }
            else
            {
                SendClientMessage(playerid, COR_GREY, "Você não é um Oficial ou um Hitman !");
			    return 1;
            }
		}
		return 1;
	}
	CMD:divorcio)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(!PlayerToPoint(5, playerid,2232.9705,-1333.0361,23.9815) || !PlayerToPoint(5, playerid,2491.1990,918.4307,11.0234))
	    	{
				SendClientMessage(playerid, COR_GREY, "   Você não está na Igreja !");
			    return 1;
			}
			if(PlayerInfo[playerid][pMarried] == 0)
			{
			    SendClientMessage(playerid, COR_GREY, "   Você não está casado !");
				return 1;
	        }
	        tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)) {
				SendClientMessage(playerid, COR_BRANCO, "USE: /divorcio [id]");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
		    if(IsPlayerConnected(giveplayeridzcmd))
			{
			    if(giveplayeridzcmd != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayeridzcmd))
					{
					    if(giveplayeridzcmd == playerid) { SendClientMessage(playerid, COR_GREY, "Você não pode se pedir em divórcio!"); return 1; }
					    new dstring[MAX_PLAYER_NAME];
						new wstring[MAX_PLAYER_NAME];
						GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(gstring, sizeof(gstring), "%s", giveplayerzcm);
						strmid(wstring, gstring, 0, strlen(gstring), 255);
						format(gstring, sizeof(gstring), "%s", PlayerInfo[playerid][pMarriedTo]);
						strmid(dstring, gstring, 0, strlen(gstring), 255);
						if(strcmp(dstring ,wstring, true ) == 0 )
						{
						    format(gstring, sizeof(gstring), "* Você enviou papéis de divórcio para %s.", giveplayerzcm);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* %s pediu papéis de divórcio (Digite /aceitar divorcio) para aceitar.", sendername);
							SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
					        DivorceOffer[giveplayeridzcmd] = playerid;
					        return 1;
						}
						else
						{
						    SendClientMessage(playerid, COR_GREY, "  Esse jogador não está casado com você !");
						    return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COR_GREY, "   O Jogador está longe de você !");
						return 1;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "   O Jogador Esta Offline !");
			    return 1;
			}
		}
		return 1;
	}
	CMD:pediremcasamento)
	{
        if(PlayerToPoint(5, playerid,2233.8225,-1333.2725,23.9816) || PlayerToPoint(5, playerid,2491.1990,918.4307,11.0234))
	   	{
	        if(GetPlayerMoneyEx(playerid) < 25000)
	        {
	            SendClientMessage(playerid, COR_GREY, "Para se Casar Custa R$25000 !");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pMarried] > 0)
			{
			    SendClientMessage(playerid, COR_GREY, "Você já é casado !");
				return 1;
	        }
	        tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)) {
				SendClientMessage(playerid, COR_BRANCO, "USE: /pediremcasamento [id]");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
		    if(IsPlayerConnected(giveplayeridzcmd))
			{
			    if(giveplayeridzcmd != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[giveplayeridzcmd][pMarried] > 0)
			        {
			            SendClientMessage(playerid, COR_GREY, "Este jogador(a) ja é casado(a) !");
			            return 1;
			        }
			        if (ProxDetectorS(8.0, playerid, giveplayeridzcmd))
					{
					    if(giveplayeridzcmd == playerid) { SendClientMessage(playerid, COR_GREY, "Você não pode propor a si mesmo!"); return 1; }
					    GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(gstring, sizeof(gstring), "* Você propôs casamento a %s.", giveplayerzcm);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "* %s Você foi pedida em casamento (Digite /aceitar casamento) para aceitar.", sendername);
						SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
				        ProposeOffer[giveplayeridzcmd] = playerid;
					}
					else
					{
						SendClientMessage(playerid, COR_GREY, "   O Jogador não está perto de você !");
						return 1;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "   O jogador esta offline !");
			    return 1;
			}
	    }
	    return 1;
	}
	CMD:padrinho)
	{
	    if(PlayerToPoint(5, playerid,2233.8225,-1333.2725,23.9816) || PlayerToPoint(5, playerid,2491.1990,918.4307,11.0234))
	   	{
	        tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)) {
				SendClientMessage(playerid, COR_BRANCO, "USE: /padrinho [id]");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
		    if(IsPlayerConnected(giveplayeridzcmd))
			{
			    if(giveplayeridzcmd != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayeridzcmd))
					{
					    if(giveplayeridzcmd == playerid) { SendClientMessage(playerid, COR_GREY, "Você não pode ser marido e padrinho do casamento!"); return 1; }
					    GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(gstring, sizeof(gstring), "* Você chamou %s para ser seu padrinho de casamento.", giveplayerzcm);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "* %s chamou Você para ser Padrinho do Casamento (Digite /aceitar padrinho) para aceitar.", sendername);
						SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
				        MarryWitnessOffer[giveplayeridzcmd] = playerid;
					}
					else
					{
						SendClientMessage(playerid, COR_GREY, "   O Jogador não está perto de você !");
						return 1;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "   O Jogador esta offline !");
			    return 1;
			}
	    }
	    return 1;
	}
	CMD:setartaxa)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLider] != 7)
	        {
				SendClientMessage(playerid, COR_GREY, "Você não é o Governador !");
				return 1;
	        }
	        tmpzcmd = strtok(cmdtext, idxzcmd);
	        if(!strlen(tmpzcmd)) {
				SendClientMessage(playerid, COR_BRANCO, "USE: /setartaxa [quantidade]");
				return 1;
			}
			moneyszcmd = strval(tmpzcmd);
			if(moneyszcmd < 1 || moneyszcmd > 1000) { SendClientMessage(playerid, COR_GREY, "O Dinheiro da Taxa não pode ser menor que 1 ou maior que 1000 !"); return 1; }
			Tax = moneyszcmd;
			SaveStuff();
			format(gstring, sizeof(gstring), "* Cada Jogador vai pagar uma taxa de R$[%d], apartir de agora!", Tax);
			SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
			format(gstring, sizeof(gstring), "Notícias: O Governador acaba de mudar a Taxa por Pessoa para: R$[%d].", Tax);
			SendClientMessageToAll(COR_LIGHTBLUE, gstring);
	    }
	    return 1;
	}
	CMD:dartaxa)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLider] != 7)
	        {
				SendClientMessage(playerid, COR_GREY, "Você não é o Governador !");
				return 1;
	        }
	        if(Tax < 1)
			{
			    SendClientMessage(playerid, COR_GREY, "Não há Dinheiro suficiente no banco de Impostos !");
				return 1;
			}
			new Cops = 0;
			for(new i = 0; i < MAX_PLAYERS; ++i)
			{
			    if(IsPlayerConnected(i))
			    {
			        if(IsACop(i))
			        {
			            Cops += 1;
			        }
			    }
			}
			if(Cops >= 1)
			{
			    new price = Tax / Cops;
			    for(new i = 0; i < MAX_PLAYERS; ++i)
				{
				    if(IsPlayerConnected(i))
				    {
				        if(IsACop(i))
				        {
				            SendClientMessage(playerid, COR_GREY, "Você deu a taxa para todos os policiais online!");
				            format(gstring, sizeof(gstring), "* Você recebeu R$[%d] do banco de Impostos pelo Governador.",price);
							SendClientMessage(i, COR_LIGHTBLUE, gstring);
							GivePlayerMoneyEx(i, price);
							Tax = 0;
				        }
				    }
				}
				SaveStuff();
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "Não há nenhum Policial Online no Momento !");
				return 1;
			}
		}
		return 1;
	}
	CMD:mudarlocal(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pPHousekey] != 999)
	        {
	            if(Spectate[playerid] != 255 && PlayerInfo[playerid][pAdmin] < 1)
	            {
	                SendClientMessage(playerid, COR_GREY, "Você está na TV, não pode mudar o spawn !");
	                return 1;
	            }
	            if(PlayerInfo[playerid][pSpawn] == 1)
	            {
	                SendClientMessage(playerid, COR_GRAD1, "Apartir de agora você irá nascer no seu local padrão de nascimento !");
	                PlayerInfo[playerid][pSpawn] = 0;
	            }
	            else
	            {
	                SendClientMessage(playerid, COR_GRAD1, "Apartir de agora você irá nascer em sua casa !");
	                PlayerInfo[playerid][pSpawn] = 1;
	            }
	        }
	        else
	        {
	            SendClientMessage(playerid, COR_GREY, "Você não tem uma casa,não pode mudar o local !");
		        return 1;
	        }
	    }
	    return 1;
	}
	CMD:spawnguerra(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(GetPlayerOrg(playerid) == 3 || GetPlayerOrg(playerid) == 6 || GetPlayerOrg(playerid) == 16 || GetPlayerOrg(playerid) == 30)
	        {
	            if(TendoGuerra == 1)
	            {
		            if(SpawnGuerra[playerid] == 1)
		            {
		                SendClientMessage(playerid, COR_GRAD1, "Você irá nascer em sua barraca durante essa guerra !");
		                SpawnGuerra[playerid] = 0;
		            }
		            else
		            {
		                SendClientMessage(playerid, COR_GRAD1, "Você irá nascer em sua hq durante essa guerra !");
		                SpawnGuerra[playerid] = 1;
		            }
	            }
	            else
		        {
		            SendClientMessage(playerid, COR_GRAD1, "Não está ocorrendo uma guerra !");
			        return 1;
		        }
	        }
	    }
	    return 1;
	}
	CMD:duvida(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COR_GREY, "Você não está logado!");
	            return 1;
	        }
	        GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
			{
				idxzcmd++;
			}
			new offset = idxzcmd;
			new result[64];
			while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
			{
				result[idxzcmd - offset] = cmdtext[idxzcmd];
				idxzcmd++;
			}
			result[idxzcmd - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COR_GRAD2, "Use: /Duvida [Pergunta]");
				return 1;
			}
			if(TentouDivulgar(result))
			{
  				GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
  				format(gstring, 128, "AdmAviso: [%d]%s tentou divulgar: %s.",playerid,PlayerName,result);
				ABroadCast(COR_AMARELO,gstring,1);
				DivulgouLog(gstring);
        		return 1;
			}
			/*if(GetTickCount() - TempoRelato[playerid] < 10000)
    	    {
		         SendClientMessage(playerid,COR_GRAD1,"Você tem que esperar um pouco para enviar outro relatório/dúvida!");
		         return 1;
		    }*/
			format(gstring, sizeof(gstring), "Dúvida De %s(ID:%d): %s", sendername, playerid, (result));
			ABroadCast(0x33AA33AA,gstring,1);
			SendClientMessage(playerid, 0x228B22FF, "Sua dúvida foi enviada aos Admins Presentes. (/n Chat dúvida global)");
			DuvidaLog(gstring);
		//	TempoRelato[playerid] = GetTickCount();
		}
	    return 1;
	}
	CMD:retirar(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COR_GREY, "Você não é um Oficial!");
			    return 1;
			}
			if(OnDuty[playerid] != 1 && GetPlayerOrg(playerid) != 7)
			{
			    SendClientMessage(playerid, COR_GREY, "Você não Bateu o cartão!");
			    return 1;
			}
	        if(gTeam[playerid] == 2 || IsACop(playerid) || GetPlayerOrg(playerid) == 7)
	        {
	            if(PlayerInfo[playerid][pCargo] < 2)
	            {
	                SendClientMessage(playerid, COR_GREY, "Você precisa de cargo 2 para usar este comando !");
	                return 1;
	            }
	            new x_nr[32];
				x_nr = strtok(cmdtext, idxzcmd);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COR_BRANCO, "|__________________ Licenças __________________");
					SendClientMessage(playerid, COR_BRANCO, "USE: /retirar [nome] [id]");
			  		SendClientMessage(playerid, COR_GREY, "Nomes Disponíveis: Carro, Piloto, Moto, Armas, Marujo, CamOni");
					return 1;
				}
			    if(strcmp(x_nr,"Carro(playerid, params[])
				{
				    tmpzcmd = strtok(cmdtext, idxzcmd);
					if(!strlen(tmpzcmd)) {
						SendClientMessage(playerid, COR_BRANCO, "USE: /retirar Motorista [id]");
						return 1;
					}
					giveplayeridzcmd = ReturnUser(tmpzcmd);
					if(IsPlayerConnected(giveplayeridzcmd))
					{
					    if(giveplayeridzcmd != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayeridzcmd))
							{
						        new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayeridzcmd, fudido, sizeof(fudido));
						        format(gstring, sizeof(gstring), "* Você retirou a licença de Carro de %s.", fudido);
						        SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						        format(gstring, sizeof(gstring), "* Oficial %s retirou sua licença de Carro.", cop);
						        SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
						        PlayerInfo[giveplayeridzcmd][pCarLic] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COR_GREY, "O Jogador está longe de você !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "O Jogador Está Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"Piloto(playerid, params[])
				{
				    tmpzcmd = strtok(cmdtext, idxzcmd);
					if(!strlen(tmpzcmd)) {
						SendClientMessage(playerid, COR_BRANCO, "USE: /retirar Piloto [id]");
						return 1;
					}
					giveplayeridzcmd = ReturnUser(tmpzcmd);
					if(IsPlayerConnected(giveplayeridzcmd))
					{
					    if(giveplayeridzcmd != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayeridzcmd))
							{
						        new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayeridzcmd, fudido, sizeof(fudido));
						        format(gstring, sizeof(gstring), "* Você retirou a licença de Voo de %s.", fudido);
						        SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						        format(gstring, sizeof(gstring), "* Oficial %s retirou sua licença de Voo.", cop);
						        SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
						        PlayerInfo[giveplayeridzcmd][pFlyLic] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COR_GREY, "O Jogador está longe de Você !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "O Jogador Está Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"Moto(playerid, params[])
				{
				    tmpzcmd = strtok(cmdtext, idxzcmd);
					if(!strlen(tmpzcmd)) {
						SendClientMessage(playerid, COR_BRANCO, "USE: /retirar Moto [id]");
						return 1;
					}
					giveplayeridzcmd = ReturnUser(tmpzcmd);
					if(IsPlayerConnected(giveplayeridzcmd))
					{
					    if(giveplayeridzcmd != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayeridzcmd))
							{
						        new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayeridzcmd, fudido, sizeof(fudido));
						        format(gstring, sizeof(gstring), "* Você retirou a licença de Moto de %s.", fudido);
						        SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						        format(gstring, sizeof(gstring), "* Oficial %s retirou sua licença de Moto.", cop);
						        SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
						        PlayerInfo[giveplayeridzcmd][pMotoLic] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COR_GREY, "O Jogador está longe de Você !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "O Jogador Está Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"Armas(playerid, params[])
				{
				    tmpzcmd = strtok(cmdtext, idxzcmd);
					if(!strlen(tmpzcmd)) {
						SendClientMessage(playerid, COR_BRANCO, "USE: /retirar portelegal [id]");
						return 1;
					}
					giveplayeridzcmd = ReturnUser(tmpzcmd);
					if(IsPlayerConnected(giveplayeridzcmd))
					{
					    if(giveplayeridzcmd != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayeridzcmd, sendername, sizeof(sendername));
					        if (ProxDetectorS(8.0, playerid, giveplayeridzcmd))
							{
						        new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayeridzcmd, fudido, sizeof(fudido));
						        format(gstring, sizeof(gstring), "* Você retirou a licença de Porte de Armas de %s.", fudido);
						        SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						        format(gstring, sizeof(gstring), "* Oficial %s retirou sua licença de Armas.", cop);
						        SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
						        PlayerInfo[giveplayeridzcmd][pGunLic] = 0;
					        }
					        else
							{
							    SendClientMessage(playerid, COR_GREY, "O Jogador está longe de Você !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "O Jogador Está Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"Marujo(playerid, params[])
				{
				    tmpzcmd = strtok(cmdtext, idxzcmd);
					if(!strlen(tmpzcmd)) {
						SendClientMessage(playerid, COR_BRANCO, "USE: /retirar Marujo [id]");
						return 1;
					}
					giveplayeridzcmd = ReturnUser(tmpzcmd);
					if(IsPlayerConnected(giveplayeridzcmd))
					{
					    if(giveplayeridzcmd != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayeridzcmd, sendername, sizeof(sendername));
					        if (ProxDetectorS(8.0, playerid, giveplayeridzcmd))
							{
						        new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayeridzcmd, fudido, sizeof(fudido));
						        format(gstring, sizeof(gstring), "* Você retirou a licença de Navegacao de %s.", fudido);
						        SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						        format(gstring, sizeof(gstring), "* Oficial %s Retirou sua licença de Navegacao.", cop);
						        SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
						        PlayerInfo[giveplayeridzcmd][pBoatLic] = 0;
					        }
					        else
							{
							    SendClientMessage(playerid, COR_GREY, "O Jogador está longe de Você !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "O Jogador Está Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"Armas(playerid, params[])
				{
				    tmpzcmd = strtok(cmdtext, idxzcmd);
					if(!strlen(tmpzcmd)) {
						SendClientMessage(playerid, COR_BRANCO, "USE: /retirar Armas [id]");
						return 1;
					}
					giveplayeridzcmd = ReturnUser(tmpzcmd);
					if(IsPlayerConnected(giveplayeridzcmd))
					{
					    if(giveplayeridzcmd != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayeridzcmd, sendername, sizeof(sendername));
					        if (ProxDetectorS(8.0, playerid, giveplayeridzcmd))
							{
                                new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayeridzcmd, fudido, sizeof(fudido));
						        format(gstring, sizeof(gstring), "* Você retirou as Armas de %s.", fudido);
						        SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						        format(gstring, sizeof(gstring), "* Oficial %s retirou suas Armas.", cop);
						        SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
						        ResetPlayerWeaponsEx(giveplayeridzcmd);
					        }
					        else
							{
							    SendClientMessage(playerid, COR_GREY, "O Jogador está longe de Você !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "O Jogador Está Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"CamOni(playerid, params[])
				{
				    tmpzcmd = strtok(cmdtext, idxzcmd);
					if(!strlen(tmpzcmd)) {
						SendClientMessage(playerid, COR_BRANCO, "USE: /retirar CamOni [id]");
						return 1;
					}
					giveplayeridzcmd = ReturnUser(tmpzcmd);
					if(IsPlayerConnected(giveplayeridzcmd))
					{
					    if(giveplayeridzcmd != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayeridzcmd))
							{
						        new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayeridzcmd, fudido, sizeof(fudido));
						        format(gstring, sizeof(gstring), "* Você retirou a licença de Caminhão/Ônibus de %s.", fudido);
						        SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						        format(gstring, sizeof(gstring), "* Oficial %s retirou sua licença de Caminhão/Ônibus.", cop);
						        SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
						        PlayerInfo[giveplayeridzcmd][pCamOniLic] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COR_GREY, "O Jogador está longe de Você !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "O Jogador Está Offline !");
					    return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COR_GREY, "Nome inválido !");
					return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COR_GREY, "Você não e COP !");
	            return 1;
	        }
	    }
	    return 1;
	}
	CMD:servico(playerid, params[])// || CMD:serviço(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			new x_nr[32];
			x_nr = strtok(cmdtext, idxzcmd);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COR_BRANCO, "|________________________ Service Names ________________________|");
				SendClientMessage(playerid, COR_BRANCO, "USE: /servico [nome]");
		  		SendClientMessage(playerid, COR_GREY, "Serviços: Taxi,Medico,Mecanico,Policia,Advogado.");
                SendClientMessage(playerid, COR_BRANCO, "|_________________________________________________________|");
				return 1;
			}
		    if(strcmp(x_nr,"taxi(playerid, params[])
			{
			    if(TaxiDrivers < 1)
		        {
		            SendClientMessage(playerid, COR_GREY, " Não tem taxista online agora, tente /servico onibus...");
		            return 1;
		        }
		        if(GetPlayerInterior(playerid) > 0)
                {
                    SendClientMessage(playerid,COR_GREY,"Você não pode fazer pedidos neste momento !");
                    return 1;
                }
		        if(TransportDuty[playerid] > 0)
		        {
		            SendClientMessage(playerid, COR_GREY, "   Você não pode ligar para um Taxi agora !");
		            return 1;
		        }
		        if(GetTickCount() - TempoTaxi[playerid] < 10000)
    	        {
		            SendClientMessage(playerid,COR_HITMAN,"Usaram /servico taxi a pouco tempo, aguarde.");
		            return 1;
	            }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(gstring, sizeof(gstring), "** %s Necessita de um Taxi. Use /servicos para ver a lista de serviços disponíveis.", sendername);
		    	SendFamilyMessage(10, TEAM_AZTECAS_COR, gstring);
		    	SendClientMessage(playerid, COR_LIGHTBLUE, "* Você chamou um Taxi, Agora espere por uma resposta...");
				PediuServico[playerid] = 1;
				TaxiCall = playerid;
		    	return 1;
			}
			else if(strcmp(x_nr,"medico(playerid, params[])
			{
			    if(Medics < 1)
		        {
		            SendClientMessage(playerid, COR_GREY, "Não tem nenhum medico online neste momento, espere um entrar !");
		            return 1;
		        }
		        if(GetPlayerInterior(playerid) > 0)
                {
                    SendClientMessage(playerid,COR_GREY,"Você não pode fazer pedidos neste momento !");
                    return 1;
                }
		        if(GetTickCount() - TempoPMedico[playerid] < 6000)
    	        {
		            SendClientMessage(playerid,COR_HITMAN,"Usaram /servico medico a pouco tempo, aguarde.");
		            return 1;
	            }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(gstring, sizeof(gstring), "** %s Necessita de um médico. Use /servicos para ver a lista de serviços disponíveis.", sendername);
		    	SendFamilyMessage(4, TEAM_AZTECAS_COR, gstring);
		    	SendClientMessage(playerid, COR_LIGHTBLUE, "* Você chamou um médico.... Agora espere por resposta.");
                PediuServicoMed[playerid] = 1;
				MedicCall = playerid;
		    	return 1;
			}
			else if(strcmp(x_nr,"policia(playerid, params[])
			{
                if(IsAGangster(playerid))
                {
					SendClientMessage(playerid, COR_GRAD1, "Você faz parte de uma organização criminosa, não pode chamar a polícia !");
					return 1;
                }
			    if(GetTickCount() - TempoPolicial[playerid] < 10000)
    	        {
		            SendClientMessage(playerid,COR_HITMAN,"Usaram /servico policia a pouco tempo, aguarde.");
		            return 1;
	            }
	            if(GetPlayerInterior(playerid) > 0)
                {
                    SendClientMessage(playerid,COR_GREY,"Você não pode fazer pedidos neste momento !");
                    return 1;
                }
		        for(new i = 0; i < MAX_PLAYERS; ++i)
				{
				    if(IsACop(i) && IsPlayerConnected(i))
				    {
				        if(PolicialInRonda[i] == 1)
				        {
				            SendClientMessage(playerid, COR_LIGHTBLUE, "* Estão fazendo uma chamada.");
				            return 1;
				        }
					}
				}
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    SendFamilyMessage(1, TEAM_AZTECAS_COR, gstring);
		    	SendFamilyMessage(2, TEAM_AZTECAS_COR, gstring);
		    	SendFamilyMessage(3, TEAM_AZTECAS_COR, gstring);
		    	SendFamilyMessage(12, TEAM_AZTECAS_COR, gstring);
		    	SendFamilyMessage(13, TEAM_AZTECAS_COR, gstring);
		    	SendFamilyMessage(17, TEAM_AZTECAS_COR, gstring);
		    	SendFamilyMessage(25, TEAM_AZTECAS_COR, gstring);
		    	SendClientMessage(playerid, COR_LIGHTBLUE, "* Você chamou um Policial Aguarde a Resposta.");
		    	PediuServicoCop[playerid] = 1;
		    	CopsrondaCall = playerid;
		    	return 1;
		    }
			else if(strcmp(x_nr,"advogado(playerid, params[])
			{
				if(GetTickCount() - TempoAdvogado[playerid] < 10000)
    	        {
		            SendClientMessage(playerid,COR_HITMAN,"Usaram /servico advogado a pouco tempo, aguarde.");
		            return 1;
	            }
	            if(GetPlayerInterior(playerid) > 0)
                {
                    SendClientMessage(playerid,COR_GREY,"Você não pode fazer pedidos neste momento !");
                    return 1;
                }
		        if(PlayerInfo[playerid][pJailed] == 0)
                {
		            SendClientMessage(playerid, COR_AMARELO, "Você precisa estar preso para poder usar este comando!");
		            return 1;
		        }
		        if(PlayerInfo[playerid][pJailed] == 2 || PlayerInfo[playerid][pJailed] == 3)
		        {
                    SendClientMessage(playerid, COR_AMARELO,"Você precisa estar preso em locais específicos para usar este comando!");
                    return 1;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
		        if(GetPlayerVirtualWorld(playerid) == 0)
		        {
			         format(gstring, sizeof(gstring), "** %s Necessita de um Advogado na Penitenciária LS - ID [%d].", sendername, playerid);
			    }
			    else
			    {
                     format(gstring, sizeof(gstring), "** %s Necessita de um Advogado na Penitenciária LV - ID [%d].", sendername, playerid);
			    }
		    	SendEmpregoMessage(2, COR_AMARELO, gstring);
		    	SendClientMessage(playerid, COR_LIGHTBLUE, "* Você chamou um Advogado,espere um chegar...");
		    	return 1;

			}
			else if(strcmp(x_nr,"mecanico(playerid, params[])
			{
			    if(Mechanics < 1)
		        {
		            SendClientMessage(playerid, COR_GREY, "   Nenhum mecanico online neste momento, espere um entrar !");
		            return 1;
		        }
		        if(GetPlayerInterior(playerid) > 0)
                {
                    SendClientMessage(playerid,COR_GREY,"Você não pode fazer pedidos neste momento !");
                    return 1;
                }
		        if(GetTickCount() - TempoPMecanico[playerid] < 10000)
    	        {
		            SendClientMessage(playerid,COR_HITMAN,"Usaram /servico mecanico a pouco tempo, aguarde.");
		            return 1;
	            }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(gstring, sizeof(gstring), "** %s Necessita de um Mecanico. Use /servicos para ver a lista de serviços disponíveis.", sendername);
		    	SendFamilyMessage(14, TEAM_AZTECAS_COR, gstring);
		    	SendClientMessage(playerid, COR_LIGHTBLUE, "* Você chamou um Mecanico... Agora espere por uma resposta.");
		    	PediuServicoMec[playerid] = 1;
		    	MechanicCall = playerid;
		    	return 1;
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "Serviço Inexistente !");
			    return 1;
			}
		}
		return 1;
	}
	CMD:sequestrar(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6 || PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18 || PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8
			|| PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22 || PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20 || PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23 || PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11 || PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21
			|| PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24 || PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)
 			{
				if(psequestrar == 1)
          		{
					 SendClientMessage(playerid,COR_GRAD2,"Sequestraram recentimente, só pode sequestrar a cada 4 minutos!");
					 return 1;
				}
    			if(PlayerInfo[playerid][pCargo] < 2)
		    	{
		 			SendClientMessage(playerid, COR_GRAD2, "Você precisa ser acima do cargo 2 para usar este comando !");
				 	return 1;
		    	}
				if(PlayerInfo[playerid][pLevel] < 4)
				{
					SendClientMessage(playerid, COR_LIGHTBLUE, "Você precisa ser level 4+ para usar este comando!");
			 		return 1;
				}
				tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd))
				{
					SendClientMessage(playerid, COR_GRAD2, "USE: /sequestrar [id] [quantia]");
					return true;
				}
				new money;
				giveplayeridzcmd = ReturnUser(tmpzcmd);
				tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd)) { return true; }
				money = strval(tmpzcmd);
				if(money < 1000 || money > 80000) { SendClientMessage(playerid, COR_GREY, "O valor requisitado no sequestro deve ser entre R$1.000 e R$80.000 !"); return true; }
				if(IsPlayerConnected(giveplayeridzcmd))
				{
				    if(giveplayeridzcmd != INVALID_PLAYER_ID)
				    {
				        new car = GetPlayerVehicleID(playerid);
						if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayeridzcmd, car))
						{
						    if(giveplayeridzcmd == playerid)
						    {
						        SendClientMessage(playerid, COR_GREY, "Você não pode se sequestrar !");
						        return true;
						    }
						    if(PlayerInfo[giveplayeridzcmd][pLevel] <= 4)
						    {
						        SendClientMessage(playerid, COR_GRAD1, "Você não pode sequestrar jogadores abaixo do level 4!");
						        return 1;
						    }
						    if(GetPlayerOrg(giveplayeridzcmd) == GetPlayerOrg(playerid))
						    {
						        SendClientMessage(playerid, COR_GRAD1, "Você não pode usar este comando na sua própria org!");
						        return 1;
						    }
						    new dinheirovitima = GetPlayerMoneyEx(giveplayeridzcmd);
							GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GivePlayerMoneyEx(giveplayeridzcmd, - dinheirovitima);
						    format(gstring, sizeof(gstring), "* Você foi sequestrado por %s, e perdeu todo o seu dinheiro que tinha na mão, e perdeu seu celular!", sendername);
							SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
							GivePlayerMoneyEx(playerid, dinheirovitima);
							format(gstring, sizeof(gstring), "* Você sequestrou %s e recebeu [%d] que ele tinha nas mãos.", giveplayerzcm, dinheirovitima);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
                            format(gstring, sizeof(gstring), "[Sequestro %s]: %s sequestrou %s[%d] e quer R$[%d] para libertá-lo.", NomeORG(playerid), sendername ,giveplayerzcm,giveplayeridzcmd, money);
							SendClientMessageToAll(GetPlayerColor(playerid), gstring);
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GameTextForPlayer(giveplayeridzcmd, "~r~Sequestrado", 2500, 3);
							psequestrar = 1;
							PlayerCuffed[giveplayeridzcmd] = 2;
                            SetPlayerAttachedObject(giveplayeridzcmd, 4, 19418, 6, -0.031999, 0.024000,-0.024000,-7.900000,-32.000011,-72.299987, 1.115998, 1.322000, 1.406000);
                            SetPlayerSpecialAction(giveplayeridzcmd, 24);
							Sequestrado[giveplayeridzcmd] = 1;
							PlayerInfo[giveplayeridzcmd][pPnumber] = 0;
                            TempoSequestrar = SetTimer("Sequestrar",186000, 0);
                            PlayerMutado[giveplayeridzcmd] = 1;
                            PlayerInfo[playerid][pSequestros] ++;
						}
						else
						{
						    SendClientMessage(playerid, COR_GREY, "O Jogador não está em seu carro, ou você não é o motorista !");
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COR_GREY, "O Jogador está Offline!");
				}
			}
			else
			{
   				SendClientMessage(playerid, COR_GREY, "Você não é um Gangster !");
			}
		}
		return true;
	}
	CMD:desamarrar(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6 || PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18 || PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8
			|| PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22 || PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20 || PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23 || PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11 || PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21
			|| PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24 || PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)
 			{
			    if(PlayerInfo[playerid][pCargo] < 4)
			    {
			        SendClientMessage(playerid, COR_GREY, "Você precisa de cargo 4 ou mais para desamarrar as pessoas !");
			        return 1;
			    }
			    if(Sequestrado[playerid] == 1)
			    {
			        SendClientMessage(playerid, COR_GREY, "Voce esta sendo sequestrado e nao pode usar este Comando!");
			        return 1;
			    }
			    tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd))
				{
					SendClientMessage(playerid, COR_BRANCO, "USE: /desamarrar [id]");
					return 1;
				}
				giveplayeridzcmd = ReturnUser(tmpzcmd);
				if(IsPlayerConnected(giveplayeridzcmd))
				{
					if(giveplayeridzcmd != INVALID_PLAYER_ID)
					{
					    if (ProxDetectorS(8.0, playerid, giveplayeridzcmd))
						{
						    if(giveplayeridzcmd == playerid) { SendClientMessage(playerid, COR_GREY, "Você não pode desamarrar à sí mesmo!"); return 1; }
							if(Sequestrado[giveplayeridzcmd] == 1)
							{
							    GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
								GetPlayerName(playerid, sendername, sizeof(sendername));
							    format(gstring, sizeof(gstring), "* Você foi libertado(a) por %s.", sendername);
								SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
								format(gstring, sizeof(gstring), "* Você libertou: %s, libere o refém imediatamente !", giveplayerzcm);
								SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
								GameTextForPlayer(giveplayeridzcmd, "~g~Libertado", 2500, 3);
								TogglePlayerControllable(giveplayeridzcmd, 1);
								Sequestrado[giveplayeridzcmd] = 0;
								PlayerMutado[giveplayeridzcmd] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COR_GREY, "O Jogador não está sequestrado !");
							    return 1;
							}
						}
						else
						{
						    SendClientMessage(playerid, COR_GREY, "O Jogador está longe de Você !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COR_GREY, "O Jogador Está Offline !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GREY, "Você não é um Gangster !");
			}
		}//not connected
		return 1;
	}
	CMD:jaula(playerid, params[])
	{
         if(IsACop(playerid) || PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6 || PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18 || PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8
		 || PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22 || PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20 || PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23 || PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11 || PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21
		 || PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24 || PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)
 		 {
		      tmpzcmd = strtok(cmdtext, idxzcmd);
			  if(!strlen(tmpzcmd))
			  {
			       SendClientMessage(playerid, COR_BRANCO, "Use: /jaula [ id ]");
				   return 1;
			  }
			  giveplayeridzcmd = ReturnUser(tmpzcmd);
			  if(Sequestrado[giveplayeridzcmd] == 1)
			  {
			       if(giveplayeridzcmd != INVALID_PLAYER_ID)
				   {
                        if(GetDistanceBetweenPlayers(playerid, giveplayeridzcmd) > 5)
					    {
							 SendClientMessage(playerid, COR_GRAD1, "O Jogador está longe de você !");
							 return 1;
					    }
					    if(PlayerInfo[playerid][pCargo] < 2)
					    {
							 SendClientMessage(playerid, COR_GRAD1, "Você precisa ser acima do cargo 2 para usar este comando !");
							 return 1;
					    }
                        if(giveplayeridzcmd == playerid)
						{
						     SendClientMessage(playerid, COR_GREY, "Você não pode colocar você mesmo na jaula!");
							 return 1;
						}
						if(IsACop(playerid))
						{
							 if(enjaulado[giveplayeridzcmd] == 0)
							 {
								  SendClientMessage(playerid, COR_GRAD1, "Este jogador não está na jaula.");
								  return 1;
							 }
						}
						if(enjaulado[giveplayeridzcmd] == 0)
						{
                             if(localizarcativeiro1[playerid] == 1)
                             {
						          SetPlayerPos(giveplayeridzcmd, 305.7169,300.5057,999.1484);
						          sequestradolocal[giveplayeridzcmd] = 1;
						     }
                             else if(localizarcativeiro2[playerid] == 1)
						     {
							      SetPlayerPos(giveplayeridzcmd, 413.8600,2536.6794,10.0000);
							      sequestradolocal[giveplayeridzcmd] = 2;
						     }
						     else if(localizarcativeiro3[playerid] == 1)
						     {
							      SetPlayerPos(giveplayeridzcmd, 248.6716,302.1269,999.1484);
							      sequestradolocal[giveplayeridzcmd] = 3;
						     }
						     else if(localizarcativeiro4[playerid] == 1)
						     {
							      SetPlayerPos(giveplayeridzcmd, -113.8710,-7.4669,1000.7188);
							      sequestradolocal[giveplayeridzcmd] = 4;
						     }
						     SequestroAcontecendo = true;
						     sequestradoid[giveplayeridzcmd] = giveplayeridzcmd;
						     enjaulado[giveplayeridzcmd] = 1;
							 PlayerMutado[giveplayeridzcmd] = 1;
							 TogglePlayerControllable(giveplayeridzcmd, 0);
						     ApplyAnimation(giveplayeridzcmd, "ped", "cower", 3.0, 1, 0, 0, 0, 0);
                             format(gstring, sizeof(gstring), "Você foi colocado na jaula do cativeiro pelo meliante: %s.", PlayerName(playerid));
						     SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
						     format(gstring, sizeof(gstring), "Você colou %s na jaula do cativeiro, para retira-lo digite /jaula.", PlayerName(giveplayeridzcmd));
						     SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
						     format(gstring, sizeof(gstring), "Meliante %s colocou %s da jaula.",PlayerName(playerid), PlayerName(giveplayeridzcmd));
						     ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						}
						else if(enjaulado[giveplayeridzcmd] == 1)
						{
                             if(localizarcativeiro1[playerid] == 1)
                             {
						          SetPlayerPos(giveplayeridzcmd, 303.1792,304.5661,999.1484);
						          sequestradolocal[giveplayeridzcmd] = 0;
						     }
                             else if(localizarcativeiro2[playerid] == 1)
						     {
							      SetPlayerPos(giveplayeridzcmd, 416.8167,2536.8608,10.0000);
							      sequestradolocal[giveplayeridzcmd] = 0;
						     }
						     else if(localizarcativeiro3[playerid] == 1)
						     {
							      SetPlayerPos(giveplayeridzcmd, 247.6351,304.1808,999.1484);
							      sequestradolocal[giveplayeridzcmd] = 0;
						     }
						     else if(localizarcativeiro3[playerid] == 4)
						     {
							      SetPlayerPos(giveplayeridzcmd, -114.0751,-11.3267,1000.7188);
							      sequestradolocal[giveplayeridzcmd] = 0;
						     }
						     SequestroAcontecendo = false;
						     sequestradoid[giveplayeridzcmd] = giveplayeridzcmd;
						     enjaulado[giveplayeridzcmd] = 0;
						     ClearAnimations(giveplayeridzcmd);
						     if(IsACop(playerid))
						     {
								  format(gstring, sizeof(gstring), "* Você retirou %s da jaula.", giveplayerzcm);
								  SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							      format(gstring, sizeof(gstring), "Oficial: %s está libertando o refém: %s", sendername,giveplayerzcm);
                                  SendClientMessageToAll(GetPlayerColor(playerid), gstring);
								  GameTextForPlayer(giveplayeridzcmd, "~g~Libertado", 2500, 3);
								  TogglePlayerControllable(giveplayeridzcmd, 1);
								  Sequestrado[giveplayeridzcmd] = 0;
								  RemovePlayerAttachedObject(giveplayeridzcmd, 4);
                                  SetPlayerSpecialAction(giveplayeridzcmd, SPECIAL_ACTION_NONE);
                                  PlayerCuffed[giveplayeridzcmd] = 0;
                                  TogglePlayerControllable(giveplayeridzcmd, 1);
								  PlayerMutado[giveplayeridzcmd] = 0;
						     }
						     else
						     {
                                  RemovePlayerAttachedObject(giveplayeridzcmd, 4);
                                  SetPlayerSpecialAction(giveplayeridzcmd, SPECIAL_ACTION_NONE);
                                  PlayerCuffed[giveplayeridzcmd] = 0;
						          format(gstring, sizeof(gstring), "Você foi retirado da jaula pelo Meliante: %s.", PlayerName(playerid));
						          SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
						          format(gstring, sizeof(gstring), "Você retirou a vitima: %s da jaula.", PlayerName(giveplayeridzcmd));
						          SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
						          format(gstring, sizeof(gstring), "Meliante %s retirou %s da jaula.",PlayerName(playerid), PlayerName(giveplayeridzcmd));
						          ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						     }
						}
				   }
			  }
			  else
			  {
				   SendClientMessage(playerid, COR_GRAD1, "Este jogador não está sequestrado !");
				   return 1;
			  }
		 }
	}
	CMD:corridaoff)
    {
         if(IsPlayerConnected(playerid))
	     {
              if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)
			  {
                   format(gstring, sizeof(gstring), "%s desativou a sua corrida!", PlayerName(playerid));
                   SendFamilyMessage(10,0xFFEC8BFF,gstring);
                   SendClientMessage(playerid, COR_GRAD1, "Você cancelou a sua corrida!");
                   DisablePlayerCheckpoint(playerid);
                   TaxiCallTime[playerid] = 0;
			  }
		 }
	}
	CMD:corrida)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10 || PlayerInfo[playerid][pEmprego] == 4)
			{
				if(TransportDuty[playerid] > 0)
				{
				    if(TransportDuty[playerid] == 1)
				    {
				        TaxiDrivers -= 1;
				    }
				    else if(TransportDuty[playerid] == 2)
				    {
				        BusDrivers -= 1;
				    }
				    TransportDuty[playerid] = 0;
					format(gstring, sizeof(gstring), "* Está fora do serviço, ganhou R$[%d].", TransportMoney[playerid]);
					SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					GivePlayerMoneyEx(playerid, TransportMoney[playerid]);
					ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
					return 1;
				}
				new Veh = GetPlayerVehicleID(playerid);
				if(TaxistaCarros(Veh) && (PlayerInfo[playerid][pMembro] == 10||PlayerInfo[playerid][pLider] == 10))
				{
				    if(GetPlayerState(playerid) == 2)
				    {
					    tmpzcmd = strtok(cmdtext, idxzcmd);
						if(!strlen(tmpzcmd))
						{
							SendClientMessage(playerid, COR_BRANCO, "USE: /corrida [Preço]");
							return 1;
						}
						moneyszcmd = strval(tmpzcmd);
						if(moneyszcmd < 1 || moneyszcmd > 110) { SendClientMessage(playerid, COR_GREY, "Preço da corrida mínimo R$1 Máximo R$110!"); return 1; }
					    TaxiDrivers += 1; TransportDuty[playerid] = 1; TransportValue[playerid] = moneyszcmd;
					    GetPlayerName(playerid,sendername,sizeof(sendername));
	    				format(gstring, sizeof(gstring), "[Taxista Disponível] {FFFFFF}%s está em serviço, /servico taxi - Corrida: R$[%d]", sendername, TransportValue[playerid]);
	    				SendClientMessageToAll(COR_TAXI,gstring);
	    				return 1;
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "Voce não é o motorista!");
					    return 1;
					}
				}
				else if(OnibusCarros(Veh) && PlayerInfo[playerid][pEmprego] == 4)
				{
				    if(GetPlayerState(playerid) == 2)
				    {
					    tmpzcmd = strtok(cmdtext, idxzcmd);
						if(!strlen(tmpzcmd))
						{
							SendClientMessage(playerid, COR_BRANCO, "USE: /corrida [Preco]");
							return 1;
						}
						moneyszcmd = strval(tmpzcmd);
						if(moneyszcmd < 1 || moneyszcmd > 60) { SendClientMessage(playerid, COR_GREY, "Mínimo R$ 1, Máximo R$ 60 !"); return 1; }
					    BusDrivers += 1; TransportDuty[playerid] = 2; TransportValue[playerid]= moneyszcmd;
					    GetPlayerName(playerid,sendername,sizeof(sendername));
					    format(gstring, sizeof(gstring), "[Ônibus Disponível] {FFFFFF}%s está em serviço - Corrida: R$[%d]", sendername, TransportValue[playerid]);
	    				SendClientMessageToAll(0x2993edFF,gstring);
	    				return 1;
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "Voce não é o motorista!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COR_GREY, "Voce não está em um taxi/onibus!");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid,COR_GREY,"Voce não é um taxista/motorista de ônibus!");
			    return 1;
			}
	    }
	    return 1;
 	}
	CMD:1(playerid, params[])
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
            GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
			format(gstring, sizeof(gstring), "~p~| ~r~1 ~p~|");
            GameTextForAll(gstring, 1000, 5);
		}
		return 1;
	}
	CMD:2(playerid, params[])
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
			format(gstring, sizeof(gstring), "~p~| ~r~2 ~p~|");
            GameTextForAll(gstring, 1000, 5);
		}
		return 1;
	}
	CMD:3(playerid, params[])
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
			format(gstring, sizeof(gstring), "~p~| ~y~3 ~p~|");
            GameTextForAll(gstring, 1000, 5);
		}
		return 1;
	}
	CMD:go(playerid, params[])
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
			format(gstring, sizeof(gstring), "~p~| ~g~Go Go Go ~p~|");
            GameTextForAll(gstring, 1000, 5);
		}
		return 1;
 	}
	CMD:minhaslicencas)
    {
        if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COR_BRANCO, "|________________________________ Suas Licencas ________________________________|");
	        if(PlayerInfo[playerid][pCarLic] == 1)
	        {
	             format(gstring, sizeof(gstring), "** Motorista:{00FF00}Positivo | Tempo Restante: [%d].", PlayerInfo[playerid][pValidadeCarro]);
			     SendClientMessage(playerid, COR_GREY, gstring);
			}
			else
			{
                 format(gstring, sizeof(gstring), "** Motorista:{FF0000}Negativo | Tempo Restante: [%d].", PlayerInfo[playerid][pValidadeCarro]);
			     SendClientMessage(playerid, COR_GREY, gstring);
			}
			if(PlayerInfo[playerid][pMotoLic] == 1)
	        {
	             format(gstring, sizeof(gstring), "** Moto:{00FF00}Positivo | Tempo Restante: [%d].", PlayerInfo[playerid][pValidadeMoto]);
			     SendClientMessage(playerid, COR_GREY, gstring);
			}
			else
			{
                 format(gstring, sizeof(gstring), "** Moto:{FF0000}Negativo | Tempo Restante: [%d].", PlayerInfo[playerid][pValidadeMoto]);
			     SendClientMessage(playerid, COR_GREY, gstring);
			}
			if(PlayerInfo[playerid][pCamOniLic] == 1)
	        {
	             format(gstring, sizeof(gstring), "** Caminhão/Ônibus:{00FF00}Positivo | Tempo Restante: [%d].", PlayerInfo[playerid][pValidadeOnibus]);
			     SendClientMessage(playerid, COR_GREY, gstring);
			}
			else
			{
                 format(gstring, sizeof(gstring), "** Caminhão/Ônibus:{FF0000}Negativo | Tempo Restante: [%d].", PlayerInfo[playerid][pValidadeOnibus]);
			     SendClientMessage(playerid, COR_GREY, gstring);
			}
			if(PlayerInfo[playerid][pFlyLic] == 1)
	        {
	             format(gstring, sizeof(gstring), "** Aérea:{00FF00}Positivo | Tempo Restante: [%d].", PlayerInfo[playerid][pValidadeAviao]);
			     SendClientMessage(playerid, COR_GREY, gstring);
			}
			else
			{
                 format(gstring, sizeof(gstring), "** Aérea:{FF0000}Negativo | Tempo Restante: [%d].", PlayerInfo[playerid][pValidadeAviao]);
			     SendClientMessage(playerid, COR_GREY, gstring);
			}
			if(PlayerInfo[playerid][pBoatLic] == 1)
	        {
	             format(gstring, sizeof(gstring), "** Navegação:{00FF00}Positivo | Tempo Restante: [%d].", PlayerInfo[playerid][pValidadeBarco]);
			     SendClientMessage(playerid, COR_GREY, gstring);
			}
			else
			{
                 format(gstring, sizeof(gstring), "** Navegação:{FF0000}Negativo | Tempo Restante: [%d].", PlayerInfo[playerid][pValidadeBarco]);
			     SendClientMessage(playerid, COR_GREY, gstring);
			}
			if(PlayerInfo[playerid][pGunLic] == 1)
	        {
	             format(gstring, sizeof(gstring), "** Armas:{00FF00}Positivo.");
			     SendClientMessage(playerid, COR_GREY, gstring);
			}
			else
			{
                 format(gstring, sizeof(gstring), "** Armas:[{FF0000}Negativo].");
			     SendClientMessage(playerid, COR_GREY, gstring);
			}
            SendClientMessage(playerid, COR_LIGHTBLUE, "Cada salário = um ponto em cada licença, ao esgotar, terá de tirá-la novamente.");
			SendClientMessage(playerid, COR_BRANCO, "|___________________________________________________________________________|");
		}
	    return 1;
 	}
 	CMD:mostrarlicencas)
    {
        if(IsPlayerConnected(playerid))
	    {
	        tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_BRANCO, "Use: /mostrarlicencas [ id ]");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			if(IsPlayerConnected(giveplayeridzcmd))
			{
				if(giveplayeridzcmd != INVALID_PLAYER_ID)
				{
					if(AdminTrabalhando[giveplayeridzcmd] > 0)
					{
						 SendClientMessage(playerid, COR_GRAD1, "Você não pode mostrar licenças para admins em modo trabalho !");
						 return 1;
					}
				    if (ProxDetectorS(8.0, playerid, giveplayeridzcmd))
					{
					    if(giveplayeridzcmd == playerid) { SendClientMessage(playerid, COR_GREY, "Para ver suas licencas Use: /minhaslicencas!"); return 1; }
					    GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
	                    format(gstring, sizeof(gstring), "|________________________________ Licencas Do:%s ________________________________|", PlayerName(playerid));
			            SendClientMessage(giveplayeridzcmd, COR_BRANCO, gstring);
	                    if(PlayerInfo[playerid][pCarLic] == 1)
	                    {
	                         format(gstring, sizeof(gstring), "** Carro: Positivo.", PlayerInfo[playerid]);
			                 SendClientMessage(giveplayeridzcmd, COR_GREY, gstring);
			            }
			            else
			            {
                             format(gstring, sizeof(gstring), "** Carro: Negativo.", PlayerInfo[playerid]);
			                 SendClientMessage(playerid, COR_GREY, gstring);
			            }
			            if(PlayerInfo[playerid][pMotoLic] == 1)
	                    {
	                         format(gstring, sizeof(gstring), "** Moto: Positivo.", PlayerInfo[playerid]);
			                 SendClientMessage(giveplayeridzcmd, COR_GREY, gstring);
			            }
			            else
			            {
                             format(gstring, sizeof(gstring), "** Moto: Negativo.", PlayerInfo[playerid]);
			                 SendClientMessage(giveplayeridzcmd, COR_GREY, gstring);
			            }
			            if(PlayerInfo[playerid][pCamOniLic] == 1)
	                    {
	                         format(gstring, sizeof(gstring), "** Caminhão/Ônibus: Positivo.", PlayerInfo[playerid]);
			                 SendClientMessage(giveplayeridzcmd, COR_GREY, gstring);
			            }
			            else
		             	{
                             format(gstring, sizeof(gstring), "** Caminhão/Ônibus: Negativo.", PlayerInfo[playerid]);
			                 SendClientMessage(giveplayeridzcmd, COR_GREY, gstring);
			            }
			            if(PlayerInfo[playerid][pFlyLic] == 1)
	                    {
	                         format(gstring, sizeof(gstring), "** Aérea: Positivo.", PlayerInfo[playerid]);
			                 SendClientMessage(giveplayeridzcmd, COR_GREY, gstring);
			            }
			            else
			            {
                             format(gstring, sizeof(gstring), "** Aérea: Negativo.", PlayerInfo[playerid]);
			                 SendClientMessage(giveplayeridzcmd, COR_GREY, gstring);
			            }
			            if(PlayerInfo[playerid][pBoatLic] == 1)
	                    {
	                         format(gstring, sizeof(gstring), "** Navegação: Positivo.", PlayerInfo[playerid]);
			                 SendClientMessage(giveplayeridzcmd, COR_GREY, gstring);
			            }
			            else
			            {
                             format(gstring, sizeof(gstring), "** Navegação: Negativo.", PlayerInfo[playerid]);
			                 SendClientMessage(giveplayeridzcmd, COR_GREY, gstring);
			            }
			            if(PlayerInfo[playerid][pGunLic] == 1)
	                    {
	                         format(gstring, sizeof(gstring), "** Armas: Positivo.");
			                 SendClientMessage(giveplayeridzcmd, COR_GREY, gstring);
			            }
			            else
			            {
                             format(gstring, sizeof(gstring), "** Armas: Negativo.");
			                 SendClientMessage(giveplayeridzcmd, COR_GREY, gstring);
			            }
			            SendClientMessage(giveplayeridzcmd, COR_BRANCO, "|___________________________________________________________________________|");
			            format(gstring, sizeof(gstring), "* %s mostrou as licencas para você.", sendername);
						SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
			            format(gstring, sizeof(gstring), "* Você mostrou suas licencas para %s.", giveplayerzcm);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "O Jogador esta longe de Você !");
					    return 1;
					}
				}
			}
	        else
	        {
	            SendClientMessage(playerid, COR_GREY, "O Jogador está offline !");
	            return 1;
	        }
		}
	    return 1;
	}
	CMD:mostrarCoins)
    {
        if(IsPlayerConnected(playerid))
	    {
	        tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_BRANCO, "Use: /mostrarCoins [ id ]");
				return 1;
			}
		 	if(AdminTrabalhando[giveplayeridzcmd] > 0)
   			{
				SendClientMessage(playerid, COR_GRAD1, "Você não pode doar nada para um admin em modo trabalho !");
				return 1;
   			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			if(IsPlayerConnected(giveplayeridzcmd))
			{
				if(giveplayeridzcmd != INVALID_PLAYER_ID)
				{

				    if (ProxDetectorS(8.0, playerid, giveplayeridzcmd))
					{
						if(PlayerInfo[playerid][pCoins] == 0)
						{
						    SendClientMessage(playerid, COR_LIGHTBLUE, "Você não possui Coins para mostrar !");
							return 1;
						}
	  					if(giveplayeridzcmd == playerid) { SendClientMessage(playerid, COR_GREY, "Para ver suas Coins, use /rg!"); return 1; }
					    GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
			            SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
	                    {
	                         format(gstring, sizeof(gstring), "[Coins] %s mostrou para você que possui:[%d Coins]",sendername,PlayerInfo[giveplayeridzcmd][pCoins]);
                             SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
			                 format(gstring, sizeof(gstring), "* Você mostrou suas Coins para %s.", giveplayerzcm);
			                 SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
			            }

					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "O Jogador esta longe de Você !");
					    return 1;
					}
				}
			}
	        else
	        {
	            SendClientMessage(playerid, COR_GREY, "O Jogador está offline !");
	            return 1;
	        }
		}
	    return 1;
	}
	CMD:armamentos(playerid, params[])
	{
		if(PlayerToPoint(1.0, playerid,217.2318,1251.1764,1082.1481) || PlayerToPoint(1.0, playerid,2263.2544,-1133.3362,1050.6328) || PlayerToPoint(1.0, playerid,20.0156,1416.0397,1084.4297))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)//tr
	        {
                if(PlayerInfo[playerid][pGunLic] == 0)
 	    	    {
				     SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	    }
				if(Equipado[playerid] == 1)
				{
					ResetPlayerWeapons(playerid);
					SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					Equipado[playerid] = 0;
					return 1;
	    		}
                if (PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 6 || PlayerInfo[playerid][pMembro] == 6) //tr
                {
					if (PlayerInfo[playerid][pCargo] == 1)
			     	{
		   				format(gstring, sizeof(gstring), "* %s %s pegou seus equipamentos de cargo 1.",NomeORG(playerid), sendername);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
     					GivePlayerWeaponEx(playerid, 24, 100); //granadas
						GivePlayerWeaponEx(playerid, 30, 150); //Mp4
						GivePlayerWeaponEx(playerid, 29, 150); //Mp5
						GivePlayerWeaponEx(playerid, 35, 1); //12
						GivePlayerWeaponEx(playerid, 16, 4); //eagle
						GivePlayerWeaponEx(playerid, 35, 1); //eagle
						SetPlayerArmour(playerid, 100);
						SetPlayerHealth(playerid, 100);
						Equipado[playerid] = 1;
						return 1;
                    }
					if (PlayerInfo[playerid][pCargo] == 2)
			     	{
	   					format(gstring, sizeof(gstring), "* %s %s pegou seus equipamentos de cargo 2.",NomeORG(playerid), sendername);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeaponEx(playerid, 24, 100); //granadas
						GivePlayerWeaponEx(playerid, 30, 150); //Mp4
						GivePlayerWeaponEx(playerid, 29, 150); //Mp5
						GivePlayerWeaponEx(playerid, 35, 1); //12
						GivePlayerWeaponEx(playerid, 16, 4); //eagle
						GivePlayerWeaponEx(playerid, 35, 1); //eagle
						SetPlayerArmour(playerid, 100);
						SetPlayerHealth(playerid, 100);
						Equipado[playerid] = 1;
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 3)
					{
						format(gstring, sizeof(gstring), "* %s %s pegou seus equipamentos de cargo 3.",NomeORG(playerid), sendername);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeaponEx(playerid, 24, 150); //granadas
						GivePlayerWeaponEx(playerid, 30, 200); //Mp4
						GivePlayerWeaponEx(playerid, 29, 200); //Mp5
						GivePlayerWeaponEx(playerid, 35, 1); //12
						GivePlayerWeaponEx(playerid, 16, 8); //eagle
						GivePlayerWeaponEx(playerid, 35, 1); //eagle
						SetPlayerArmour(playerid, 100);
						SetPlayerHealth(playerid, 100);
						Equipado[playerid] = 1;
						return 1;
                    }
	 				if (PlayerInfo[playerid][pCargo] == 4)
					{
						format(gstring, sizeof(gstring), "* %s %s pegou seus equipamentos de cargo 4.",NomeORG(playerid), sendername);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeaponEx(playerid, 24, 250); //granadas
						GivePlayerWeaponEx(playerid, 30, 250); //Mp4
						GivePlayerWeaponEx(playerid, 29, 250); //Mp5
						GivePlayerWeaponEx(playerid, 35, 2); //12
						GivePlayerWeaponEx(playerid, 16, 6); //eagle
						GivePlayerWeaponEx(playerid, 35, 1); //eagle
						SetPlayerArmour(playerid, 100);
						SetPlayerHealth(playerid, 100);
						Equipado[playerid] = 1;
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 5)
					{
						format(gstring, sizeof(gstring), "* %s %s pegou seus equipamentos de cargo 5.",NomeORG(playerid), sendername);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
                        GivePlayerWeaponEx(playerid, 24, 250); //granadas
						GivePlayerWeaponEx(playerid, 30, 250); //Mp4
						GivePlayerWeaponEx(playerid, 29, 250); //Mp5
						GivePlayerWeaponEx(playerid, 35, 2); //12
						GivePlayerWeaponEx(playerid, 16, 6); //eagle
						GivePlayerWeaponEx(playerid, 35, 1); //eagle
						SetPlayerArmour(playerid, 100);
						SetPlayerHealth(playerid, 100);
						Equipado[playerid] = 1;
	                    return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 6)
					{
						format(gstring, sizeof(gstring), "* %s %s pegou seus equipamentos de cargo 6.",NomeORG(playerid), sendername);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeaponEx(playerid, 24, 250); //granadas
						GivePlayerWeaponEx(playerid, 30, 250); //Mp4
						GivePlayerWeaponEx(playerid, 29, 250); //Mp5
						GivePlayerWeaponEx(playerid, 35, 2); //12
						GivePlayerWeaponEx(playerid, 16, 6); //eagle
						GivePlayerWeaponEx(playerid, 35, 1); //eagle
						SetPlayerArmour(playerid, 100);
						SetPlayerHealth(playerid, 100);
						Equipado[playerid] = 1;
						return 1;
					}
				}
			}
		}
	}
//-------------------------------Org Vip Orgs Particulares--------------------------//
	CMD:orgvipmec(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,616.8884,-21.8296,1004.7884) || PlayerToPoint(2, playerid,1055.7040,2156.1606,10.8203))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
 	        if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)//Mecanico
       	    {
                new arquivo[64];
				format(arquivo, sizeof(arquivo), "ORG VIPS/Org14.ini");
				if(DOF2_FileExists(arquivo))
				{
				    if(DOF2_GetInt(arquivo, "Dias") == 0)
				    {
				        SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				        return 1;
				    }
				}
				else if(!DOF2_FileExists(arquivo))
				{
				    SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				    return 1;
				}
		    	if(PlayerInfo[playerid][pGunLic] == 0)
 	    	    {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	    }
 			    if(Equipado[playerid] == 1)
 			    {
			 		ResetPlayerWeapons(playerid);
					SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					Equipado[playerid] = 0;
					return 1;
 	    	    }
 	    	    if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	        {
		             SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		             return 1;
		        }
  			    format(gstring, sizeof(gstring), "[Mecânico]: %s Pegou Um Kit ORGVIP.", sendername);
		        ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
                ResetPlayerWeaponsEx(playerid);
		        if(DOF2_GetInt(arquivo, "Tipo") == 1)
                {
	               GivePlayerWeaponEx(playerid, 35, 4); //molotov
	               GivePlayerWeaponEx(playerid, 34, 50); //Sniper
	               GivePlayerWeaponEx(playerid, 31, 800); //M4
	               GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	               GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	               GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	               GivePlayerWeaponEx(playerid, 2, 1);//taco de golf
	               GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			       SetPlayerArmour(playerid, 120);
			       SetPlayerHealth(playerid, 100);
				}
		        else if(DOF2_GetInt(arquivo, "Tipo") == 2)
		        {
		           GivePlayerWeaponEx(playerid, 35, 4); //molotov
	               GivePlayerWeaponEx(playerid, 34, 100); //Sniper
	               GivePlayerWeaponEx(playerid, 31, 800); //M4
	               GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	               GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	               GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	               GivePlayerWeaponEx(playerid, 4, 1);//faca
	               GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			       SetPlayerArmour(playerid, 130);
			       SetPlayerHealth(playerid, 100);
		        }
		        else if(DOF2_GetInt(arquivo, "Tipo") == 3)
		        {
		           GivePlayerWeaponEx(playerid, 35, 4); //molotov
	               GivePlayerWeaponEx(playerid, 34, 110); //Sniper
	               GivePlayerWeaponEx(playerid, 31, 800); //M4
	               GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	               GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	               GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	               GivePlayerWeaponEx(playerid, 4, 1);//faca
	               GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			       SetPlayerArmour(playerid, 140);
			       SetPlayerHealth(playerid, 100);
		        }
		        Equipado[playerid] = 1;
		        TempoEquiparOrgVip[playerid] = GetTickCount();
		        return 1;
		    }
	    }
		return 1;
	}
	CMD:orgviptaxi(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,578.2953,-1493.3728,15.0523))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
 	        if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)//Taxista
       	    {
 			    new arquivo[64];
				format(arquivo, sizeof(arquivo), "ORG VIPS/Org10.ini");
				if(DOF2_FileExists(arquivo))
				{
				    if(DOF2_GetInt(arquivo, "Dias") == 0)
				    {
				        SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				        return 1;
				    }
				}
				else if(!DOF2_FileExists(arquivo))
				{
				    SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				    return 1;
				}
		    	if(PlayerInfo[playerid][pGunLic] == 0)
 	    	    {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	    }
 			    if(Equipado[playerid] == 1)
 			    {
			 		ResetPlayerWeapons(playerid);
					SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					Equipado[playerid] = 0;
					return 1;
 	    	    }
 	    	    if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	        {
		             SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		             return 1;
		        }
  			    format(gstring, sizeof(gstring), "[Taxista]: %s Pegou Um Kit ORGVIP.", sendername);
		        ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
                ResetPlayerWeaponsEx(playerid);
		        if(DOF2_GetInt(arquivo, "Tipo") == 1)
                {
	               GivePlayerWeaponEx(playerid, 35, 4); //molotov
	               GivePlayerWeaponEx(playerid, 34, 50); //Sniper
	               GivePlayerWeaponEx(playerid, 31, 800); //M4
	               GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	               GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	               GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	               GivePlayerWeaponEx(playerid, 2, 1);//taco de golf
	               GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			       SetPlayerArmour(playerid, 120);
			       SetPlayerHealth(playerid, 100);
				}
		        else if(DOF2_GetInt(arquivo, "Tipo") == 2)
		        {
		           GivePlayerWeaponEx(playerid, 35, 4); //molotov
	               GivePlayerWeaponEx(playerid, 34, 100); //Sniper
	               GivePlayerWeaponEx(playerid, 31, 800); //M4
	               GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	               GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	               GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	               GivePlayerWeaponEx(playerid, 4, 1);//faca
	               GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			       SetPlayerArmour(playerid, 130);
			       SetPlayerHealth(playerid, 100);
		        }
		        else if(DOF2_GetInt(arquivo, "Tipo") == 3)
		        {
		           GivePlayerWeaponEx(playerid, 35, 4); //molotov
	               GivePlayerWeaponEx(playerid, 34, 110); //Sniper
	               GivePlayerWeaponEx(playerid, 31, 800); //M4
	               GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	               GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	               GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	               GivePlayerWeaponEx(playerid, 4, 1);//faca
	               GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			       SetPlayerArmour(playerid, 140);
			       SetPlayerHealth(playerid, 100);
		        }
		        Equipado[playerid] = 1;
		        TempoEquiparOrgVip[playerid] = GetTickCount();
		        return 1;
		    }
	    }
		return 1;
	}
	CMD:orgviprep(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,2188.7671,-1202.0815,1049.0308))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
 	        if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)//Reporter
       	    {
 			    new arquivo[64];
				format(arquivo, sizeof(arquivo), "ORG VIPS/Org9.ini");
				if(DOF2_FileExists(arquivo))
				{
				    if(DOF2_GetInt(arquivo, "Dias") == 0)
				    {
				        SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				        return 1;
				    }
				}
				else if(!DOF2_FileExists(arquivo))
				{
				    SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				    return 1;
				}
		    	if(PlayerInfo[playerid][pGunLic] == 0)
 	    	    {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	    }
 			    if(Equipado[playerid] == 1)
 			    {
			 		ResetPlayerWeapons(playerid);
					SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					Equipado[playerid] = 0;
					return 1;
 	    	    }
 	    	    if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	        {
		             SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		             return 1;
		        }
  			    format(gstring, sizeof(gstring), "[Repórter]: %s Pegou Um Kit ORGVIP.", sendername);
		        ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
                ResetPlayerWeaponsEx(playerid);
                if(DOF2_GetInt(arquivo, "Tipo") == 1)
                {
	               GivePlayerWeaponEx(playerid, 35, 4); //molotov
	               GivePlayerWeaponEx(playerid, 34, 50); //Sniper
	               GivePlayerWeaponEx(playerid, 31, 800); //M4
	               GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	               GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	               GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	               GivePlayerWeaponEx(playerid, 2, 1);//taco de golf
	               GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			       SetPlayerArmour(playerid, 120);
			       SetPlayerHealth(playerid, 100);
				}
		        else if(DOF2_GetInt(arquivo, "Tipo") == 2)
		        {
		           GivePlayerWeaponEx(playerid, 35, 4); //molotov
	               GivePlayerWeaponEx(playerid, 34, 100); //Sniper
	               GivePlayerWeaponEx(playerid, 31, 800); //M4
	               GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	               GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	               GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	               GivePlayerWeaponEx(playerid, 4, 1);//faca
	               GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			       SetPlayerArmour(playerid, 130);
			       SetPlayerHealth(playerid, 100);
		        }
		        else if(DOF2_GetInt(arquivo, "Tipo") == 3)
		        {
		           GivePlayerWeaponEx(playerid, 35, 4); //molotov
	               GivePlayerWeaponEx(playerid, 34, 110); //Sniper
	               GivePlayerWeaponEx(playerid, 31, 800); //M4
	               GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	               GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	               GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	               GivePlayerWeaponEx(playerid, 4, 1);//faca
	               GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			       SetPlayerArmour(playerid, 140);
			       SetPlayerHealth(playerid, 100);
		        }
		        Equipado[playerid] = 1;
		        TempoEquiparOrgVip[playerid] = GetTickCount();
		        return 1;
		    }
	    }
		return 1;
	}
	CMD:orgvipsamu(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,1168.3002,-1314.7644,9280.5693) || PlayerToPoint(1, playerid,1615.0291,1815.2408,10.8203))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
 	        if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)//SAMU
       	    {
 			    new arquivo[64];
				format(arquivo, sizeof(arquivo), "ORG VIPS/Org4.ini");
				if(DOF2_FileExists(arquivo))
				{
				    if(DOF2_GetInt(arquivo, "Dias") == 0)
				    {
				        SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				        return 1;
				    }
				}
				else if(!DOF2_FileExists(arquivo))
				{
				    SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				    return 1;
				}
		    	if(PlayerInfo[playerid][pGunLic] == 0)
 	    	    {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	    }
 			    if(Equipado[playerid] == 1)
 			    {
			 		ResetPlayerWeapons(playerid);
					SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					Equipado[playerid] = 0;
					return 1;
 	    	    }
 	    	    if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	        {
		             SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		             return 1;
		        }
  			    format(gstring, sizeof(gstring), "[Médicos]: %s Pegou Um Kit ORGVIP.", sendername);
		        ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
                ResetPlayerWeaponsEx(playerid);
                if(DOF2_GetInt(arquivo, "Tipo") == 1)
                {
	               GivePlayerWeaponEx(playerid, 35, 4); //molotov
	               GivePlayerWeaponEx(playerid, 34, 50); //Sniper
	               GivePlayerWeaponEx(playerid, 31, 800); //M4
	               GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	               GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	               GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	               GivePlayerWeaponEx(playerid, 2, 1);//taco de golf
	               GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			       SetPlayerArmour(playerid, 120);
			       SetPlayerHealth(playerid, 100);
				}
		        else if(DOF2_GetInt(arquivo, "Tipo") == 2)
		        {
		           GivePlayerWeaponEx(playerid, 35, 4); //molotov
	               GivePlayerWeaponEx(playerid, 34, 100); //Sniper
	               GivePlayerWeaponEx(playerid, 31, 800); //M4
	               GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	               GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	               GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	               GivePlayerWeaponEx(playerid, 4, 1);//faca
	               GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			       SetPlayerArmour(playerid, 130);
			       SetPlayerHealth(playerid, 100);
		        }
		        else if(DOF2_GetInt(arquivo, "Tipo") == 3)
		        {
		           GivePlayerWeaponEx(playerid, 35, 4); //molotov
	               GivePlayerWeaponEx(playerid, 34, 110); //Sniper
	               GivePlayerWeaponEx(playerid, 31, 800); //M4
	               GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	               GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	               GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	               GivePlayerWeaponEx(playerid, 4, 1);//faca
	               GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			       SetPlayerArmour(playerid, 140);
			       SetPlayerHealth(playerid, 100);
		        }
		        Equipado[playerid] = 1;
		        TempoEquiparOrgVip[playerid] = GetTickCount();
		        return 1;
		    }
	    }
		return 1;
//------------------------------Org Vip Gangster--------------------------//
	}
	CMD:orgvipgs(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,2487.5378,-1690.4541,14.7656))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
 	        if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)//Groove Street
       	    {
                new arquivo[64];
				format(arquivo, sizeof(arquivo), "ORG VIPS/Org15.ini");
				if(DOF2_FileExists(arquivo))
				{
				    if(DOF2_GetInt(arquivo, "Dias") == 0)
				    {
				        SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				        return 1;
				    }
				}
				else if(!DOF2_FileExists(arquivo))
				{
				    SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				    return 1;
				}
		    	if(PlayerInfo[playerid][pGunLic] == 0)
 	    	    {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	    }
 			    if(Equipado[playerid] == 1)
 			    {
			 		ResetPlayerWeapons(playerid);
					SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					Equipado[playerid] = 0;
					return 1;
 	    	    }
 	    	    if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	        {
		             SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		             return 1;
		        }
  			    format(gstring, sizeof(gstring), "[Groove Street]: %s Pegou Um Kit ORGVIP.", sendername);
		        ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
                ResetPlayerWeaponsEx(playerid);
                if(DOF2_GetInt(arquivo, "Tipo") == 1)
                {
	                GivePlayerWeaponEx(playerid, 18, 4); //Molotov
	                GivePlayerWeaponEx(playerid, 34, 50); //Sniper
	                GivePlayerWeaponEx(playerid, 30, 800); //AK-47
	                GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	                GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	                GivePlayerWeaponEx(playerid, 4, 1);//Faca
	                GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			        SetPlayerArmour(playerid, 120);
			        SetPlayerHealth(playerid, 100);
				}
		        else if(DOF2_GetInt(arquivo, "Tipo") == 2)
		        {
		            GivePlayerWeaponEx(playerid, 18, 4); //Molotov
	                GivePlayerWeaponEx(playerid, 34, 100); //Sniper
	                GivePlayerWeaponEx(playerid, 30, 800); //AK-47
	                GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	                GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	                GivePlayerWeaponEx(playerid, 5, 1);//Taco
	                GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			        SetPlayerArmour(playerid, 130);
			        SetPlayerHealth(playerid, 100);
		        }
		        else if(DOF2_GetInt(arquivo, "Tipo") == 3)
		        {
		            GivePlayerWeaponEx(playerid, 18, 4); //Molotov
	                GivePlayerWeaponEx(playerid, 34, 110); //Sniper
	                GivePlayerWeaponEx(playerid, 30, 800); //AK-47
	                GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	                GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	                GivePlayerWeaponEx(playerid, 5, 1);//Taco
	                GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			        SetPlayerArmour(playerid, 140);
			        SetPlayerHealth(playerid, 100);
		        }
		        Equipado[playerid] = 1;
		        TempoEquiparOrgVip[playerid] = GetTickCount();
		        return 1;
		    }
	    }
		return 1;
	}
	CMD:orgvipcv(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,2315.4016,-1210.1344,1049.0234))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)//Comando Vermelho
	        {
                new arquivo[64];
				format(arquivo, sizeof(arquivo), "ORG VIPS/Org23.ini");
				if(DOF2_FileExists(arquivo))
				{
				    if(DOF2_GetInt(arquivo, "Dias") == 0)
				    {
				        SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				        return 1;
				    }
				}
				else if(!DOF2_FileExists(arquivo))
				{
				    SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				    return 1;
				}
		    	if(PlayerInfo[playerid][pGunLic] == 0)
 	    	    {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	    }
 			    if(Equipado[playerid] == 1)
				{
					ResetPlayerWeapons(playerid);
					SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					Equipado[playerid] = 0;
					return 1;
	    		}
	    		if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	        {
		             SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		             return 1;
		        }
  			    format(gstring, sizeof(gstring), "[Comando Vermelho]: %s Pegou Um Kit ORGVIP.", sendername);
		        ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
                ResetPlayerWeaponsEx(playerid);
                if(DOF2_GetInt(arquivo, "Tipo") == 1)
                {
	                GivePlayerWeaponEx(playerid, 18, 4); //Molotov
	                GivePlayerWeaponEx(playerid, 34, 50); //Sniper
	                GivePlayerWeaponEx(playerid, 30, 800); //AK-47
	                GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	                GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	                GivePlayerWeaponEx(playerid, 4, 1);//Faca
	                GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			        SetPlayerArmour(playerid, 120);
			        SetPlayerHealth(playerid, 100);
				}
		        else if(DOF2_GetInt(arquivo, "Tipo") == 2)
		        {
		            GivePlayerWeaponEx(playerid, 18, 4); //Molotov
	                GivePlayerWeaponEx(playerid, 34, 100); //Sniper
	                GivePlayerWeaponEx(playerid, 30, 800); //AK-47
	                GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	                GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	                GivePlayerWeaponEx(playerid, 5, 1);//Taco
	                GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			        SetPlayerArmour(playerid, 130);
			        SetPlayerHealth(playerid, 100);
		        }
		        else if(DOF2_GetInt(arquivo, "Tipo") == 3)
		        {
		            GivePlayerWeaponEx(playerid, 18, 4); //Molotov
	                GivePlayerWeaponEx(playerid, 34, 110); //Sniper
	                GivePlayerWeaponEx(playerid, 30, 800); //AK-47
	                GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	                GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	                GivePlayerWeaponEx(playerid, 5, 1);//Taco
	                GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			        SetPlayerArmour(playerid, 140);
			        SetPlayerHealth(playerid, 100);
		        }
		        Equipado[playerid] = 1;
		        TempoEquiparOrgVip[playerid] = GetTickCount();
		        return 1;
		    }
	    }
		return 1;
	}
	CMD:orgvipaz(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,2807.3630,-1165.1414,1025.5703))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)//Los Aztecas
	        {
                new arquivo[64];
				format(arquivo, sizeof(arquivo), "ORG VIPS/Org5.ini");
				if(DOF2_FileExists(arquivo))
				{
				    if(DOF2_GetInt(arquivo, "Dias") == 0)
				    {
				        SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				        return 1;
				    }
				}
				else if(!DOF2_FileExists(arquivo))
				{
				    SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				    return 1;
				}
		    	if(PlayerInfo[playerid][pGunLic] == 0)
 	    	    {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	    }
 			    if(Equipado[playerid] == 1)
				{
					ResetPlayerWeapons(playerid);
					SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					Equipado[playerid] = 0;
					return 1;
	    		}
	    		if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	        {
		             SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		             return 1;
		        }
  			    format(gstring, sizeof(gstring), "[Los Aztecas]: %s Pegou Um Kit ORGVIP.", sendername);
		        ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
                ResetPlayerWeaponsEx(playerid);
                if(DOF2_GetInt(arquivo, "Tipo") == 1)
                {
	                GivePlayerWeaponEx(playerid, 18, 4); //Molotov
	                GivePlayerWeaponEx(playerid, 34, 50); //Sniper
	                GivePlayerWeaponEx(playerid, 30, 800); //AK-47
	                GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	                GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	                GivePlayerWeaponEx(playerid, 4, 1);//Faca
	                GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			        SetPlayerArmour(playerid, 120);
			        SetPlayerHealth(playerid, 100);
				}
		        else if(DOF2_GetInt(arquivo, "Tipo") == 2)
		        {
		            GivePlayerWeaponEx(playerid, 18, 4); //Molotov
	                GivePlayerWeaponEx(playerid, 34, 100); //Sniper
	                GivePlayerWeaponEx(playerid, 30, 800); //AK-47
	                GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	                GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	                GivePlayerWeaponEx(playerid, 5, 1);//Taco
	                GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			        SetPlayerArmour(playerid, 130);
			        SetPlayerHealth(playerid, 100);
		        }
		        else if(DOF2_GetInt(arquivo, "Tipo") == 3)
		        {
		            GivePlayerWeaponEx(playerid, 18, 4); //Molotov
	                GivePlayerWeaponEx(playerid, 34, 110); //Sniper
	                GivePlayerWeaponEx(playerid, 30, 800); //AK-47
	                GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	                GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	                GivePlayerWeaponEx(playerid, 5, 1);//Taco
	                GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			        SetPlayerArmour(playerid, 140);
			        SetPlayerHealth(playerid, 100);
		        }
		        Equipado[playerid] = 1;
		        TempoEquiparOrgVip[playerid] = GetTickCount();
		        return 1;
		    }
	    }
		return 1;
	}
	CMD:orgvipyk(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,-2171.3018,642.0004,1057.5938))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)//Máfia Yakuza
	        {
                new arquivo[64];
				format(arquivo, sizeof(arquivo), "ORG VIPS/Org20.ini");
				if(DOF2_FileExists(arquivo))
				{
				    if(DOF2_GetInt(arquivo, "Dias") == 0)
				    {
				        return 1;
				    }
				}
				else if(!DOF2_FileExists(arquivo))
				{
				    SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				    return 1;
				}
		    	if(PlayerInfo[playerid][pGunLic] == 0)
 	    	    {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	    }
 			    if(Equipado[playerid] == 1)
				{
					ResetPlayerWeapons(playerid);
					SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					Equipado[playerid] = 0;
					return 1;
	    		}
	    		if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	        {
		             SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		             return 1;
		        }
  			    format(gstring, sizeof(gstring), "[Máfia Yakuza]: %s Pegou Um Kit ORGVIP.", sendername);
		        ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
                ResetPlayerWeaponsEx(playerid);
                if(DOF2_GetInt(arquivo, "Tipo") == 1)
                {
	               GivePlayerWeaponEx(playerid, 35, 4); //molotov
	               GivePlayerWeaponEx(playerid, 34, 50); //Sniper
	               GivePlayerWeaponEx(playerid, 31, 800); //M4
	               GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	               GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	               GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	               GivePlayerWeaponEx(playerid, 8, 1);//katana
	               GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			       SetPlayerArmour(playerid, 120);
			       SetPlayerHealth(playerid, 100);
				}
		        else if(DOF2_GetInt(arquivo, "Tipo") == 2)
		        {
		           GivePlayerWeaponEx(playerid, 35, 4); //molotov
	               GivePlayerWeaponEx(playerid, 34, 100); //Sniper
	               GivePlayerWeaponEx(playerid, 31, 800); //M4
	               GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	               GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	               GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	               GivePlayerWeaponEx(playerid, 4, 1);//faca
	               GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			       SetPlayerArmour(playerid, 130);
			       SetPlayerHealth(playerid, 100);
		        }
		        else if(DOF2_GetInt(arquivo, "Tipo") == 3)
		        {
		           GivePlayerWeaponEx(playerid, 35, 4); //molotov
	               GivePlayerWeaponEx(playerid, 34, 110); //Sniper
	               GivePlayerWeaponEx(playerid, 31, 800); //M4
	               GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	               GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	               GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	               GivePlayerWeaponEx(playerid, 4, 1);//faca
	               GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			       SetPlayerArmour(playerid, 140);
			       SetPlayerHealth(playerid, 100);
		        }
		        Equipado[playerid] = 1;
		        TempoEquiparOrgVip[playerid] = GetTickCount();
		        return 1;
		    }
	    }
		return 1;
	}
	CMD:orgvipsons(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,508.2276,-84.5340,998.9609))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)//Sons Of Anarchy
	        {
                new arquivo[64];
				format(arquivo, sizeof(arquivo), "ORG VIPS/Org21.ini");
				if(DOF2_FileExists(arquivo))
				{
				    if(DOF2_GetInt(arquivo, "Dias") == 0)
				    {
				        SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				        return 1;
				    }
				}
				else if(!DOF2_FileExists(arquivo))
				{
				    SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				    return 1;
				}
		    	if(PlayerInfo[playerid][pGunLic] == 0)
 	    	    {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	    }
 			    if(Equipado[playerid] == 1)
				{
					ResetPlayerWeapons(playerid);
					SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					Equipado[playerid] = 0;
					return 1;
	    		}
	    		if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	        {
		             SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		             return 1;
		        }
  			    format(gstring, sizeof(gstring), "[Sons]: %s Pegou Um Kit ORGVIP.", sendername);
		        ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
                ResetPlayerWeaponsEx(playerid);
                if(DOF2_GetInt(arquivo, "Tipo") == 1)
                {
	               GivePlayerWeaponEx(playerid, 35, 4); //molotov
	               GivePlayerWeaponEx(playerid, 34, 50); //Sniper
	               GivePlayerWeaponEx(playerid, 31, 800); //M4
	               GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	               GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	               GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	               GivePlayerWeaponEx(playerid, 8, 1);//katana
	               GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			       SetPlayerArmour(playerid, 120);
			       SetPlayerHealth(playerid, 100);
				}
		        else if(DOF2_GetInt(arquivo, "Tipo") == 2)
		        {
		           GivePlayerWeaponEx(playerid, 35, 4); //molotov
	               GivePlayerWeaponEx(playerid, 34, 100); //Sniper
	               GivePlayerWeaponEx(playerid, 31, 800); //M4
	               GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	               GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	               GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	               GivePlayerWeaponEx(playerid, 4, 1);//faca
	               GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			       SetPlayerArmour(playerid, 130);
			       SetPlayerHealth(playerid, 100);
		        }
		        else if(DOF2_GetInt(arquivo, "Tipo") == 3)
		        {
		           GivePlayerWeaponEx(playerid, 35, 4); //molotov
	               GivePlayerWeaponEx(playerid, 34, 110); //Sniper
	               GivePlayerWeaponEx(playerid, 31, 800); //M4
	               GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	               GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	               GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	               GivePlayerWeaponEx(playerid, 4, 1);//faca
	               GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			       SetPlayerArmour(playerid, 140);
			       SetPlayerHealth(playerid, 100);
		        }
		        Equipado[playerid] = 1;
		        TempoEquiparOrgVip[playerid] = GetTickCount();
		        return 1;
		    }
	    }
		return 1;
	}
	CMD:orgvipvg(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,2455.6482,-1706.5518,1013.5078))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)//Los Vagos
	        {
                new arquivo[64];
				format(arquivo, sizeof(arquivo), "ORG VIPS/Org19.ini");
				if(DOF2_FileExists(arquivo))
				{
				    if(DOF2_GetInt(arquivo, "Dias") == 0)
				    {
				        SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				        return 1;
				    }
				}
				else if(!DOF2_FileExists(arquivo))
				{
				    SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				    return 1;
				}
		    	if(PlayerInfo[playerid][pGunLic] == 0)
 	    	    {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	    }
 			    if(Equipado[playerid] == 1)
				{
					ResetPlayerWeapons(playerid);
					SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					Equipado[playerid] = 0;
					return 1;
	    		}
	    		if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	        {
		             SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		             return 1;
		        }
  			    format(gstring, sizeof(gstring), "[Los Vagos]: %s Pegou Um Kit ORGVIP.", sendername);
		        ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
                ResetPlayerWeaponsEx(playerid);
                if(DOF2_GetInt(arquivo, "Tipo") == 1)
                {
	                GivePlayerWeaponEx(playerid, 18, 4); //Molotov
	                GivePlayerWeaponEx(playerid, 34, 50); //Sniper
	                GivePlayerWeaponEx(playerid, 30, 800); //AK-47
	                GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	                GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	                GivePlayerWeaponEx(playerid, 5, 1);//Taco
	                GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			        SetPlayerArmour(playerid, 120);
			        SetPlayerHealth(playerid, 100);
				}
		        else if(DOF2_GetInt(arquivo, "Tipo") == 2)
		        {
		            GivePlayerWeaponEx(playerid, 18, 4); //Molotov
	                GivePlayerWeaponEx(playerid, 34, 100); //Sniper
	                GivePlayerWeaponEx(playerid, 30, 800); //AK-47
	                GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	                GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	                GivePlayerWeaponEx(playerid, 4, 1);//faca
	                GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			        SetPlayerArmour(playerid, 130);
			        SetPlayerHealth(playerid, 100);
		        }
		        else if(DOF2_GetInt(arquivo, "Tipo") == 3)
		        {
		            GivePlayerWeaponEx(playerid, 18, 4); //Molotov
	                GivePlayerWeaponEx(playerid, 34, 110); //Sniper
	                GivePlayerWeaponEx(playerid, 30, 800); //AK-47
	                GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	                GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	                GivePlayerWeaponEx(playerid, 4, 1);//faca
	                GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			        SetPlayerArmour(playerid, 140);
			        SetPlayerHealth(playerid, 100);
		        }
		        Equipado[playerid] = 1;
		        TempoEquiparOrgVip[playerid] = GetTickCount();
		        return 1;
		    }
	    }
		return 1;
	}
	CMD:orgvipcn(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,-2673.6357,1423.7786,912.4063))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)//Mafia Cosa Nostra
	        {
                new arquivo[64];
				format(arquivo, sizeof(arquivo), "ORG VIPS/Org22.ini");
				if(DOF2_FileExists(arquivo))
				{
				    if(DOF2_GetInt(arquivo, "Dias") == 0)
				    {
				        SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				        return 1;
				    }
				}
				else if(!DOF2_FileExists(arquivo))
				{
				    SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				    return 1;
				}
		    	if(PlayerInfo[playerid][pGunLic] == 0)
 	    	    {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	    }
 			    if(Equipado[playerid] == 1)
				{
					ResetPlayerWeapons(playerid);
					SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					Equipado[playerid] = 0;
					return 1;
	    		}
	    		if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	        {
		             SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		             return 1;
		        }
  			    format(gstring, sizeof(gstring), "[Máfia CN]: %s Pegou Um Kit ORGVIP.", sendername);
		        ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
                ResetPlayerWeaponsEx(playerid);
                if(DOF2_GetInt(arquivo, "Tipo") == 1)
                {
	               GivePlayerWeaponEx(playerid, 35, 4); //molotov
	               GivePlayerWeaponEx(playerid, 34, 50); //Sniper
	               GivePlayerWeaponEx(playerid, 31, 800); //M4
	               GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	               GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	               GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	               GivePlayerWeaponEx(playerid, 8, 1);//katana
	               GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			       SetPlayerArmour(playerid, 120);
			       SetPlayerHealth(playerid, 100);
				}
		        else if(DOF2_GetInt(arquivo, "Tipo") == 2)
		        {
		           GivePlayerWeaponEx(playerid, 35, 4); //molotov
	               GivePlayerWeaponEx(playerid, 34, 100); //Sniper
	               GivePlayerWeaponEx(playerid, 31, 800); //M4
	               GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	               GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	               GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	               GivePlayerWeaponEx(playerid, 4, 1);//faca
	               GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			       SetPlayerArmour(playerid, 130);
			       SetPlayerHealth(playerid, 100);
		        }
		        else if(DOF2_GetInt(arquivo, "Tipo") == 3)
		        {
		           GivePlayerWeaponEx(playerid, 35, 4); //molotov
	               GivePlayerWeaponEx(playerid, 34, 110); //Sniper
	               GivePlayerWeaponEx(playerid, 31, 800); //M4
	               GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	               GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	               GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	               GivePlayerWeaponEx(playerid, 4, 1);//faca
	               GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			       SetPlayerArmour(playerid, 140);
			       SetPlayerHealth(playerid, 100);
		        }
		        Equipado[playerid] = 1;
		        TempoEquiparOrgVip[playerid] = GetTickCount();
		        return 1;
		    }
	    }
		return 1;
	}
	CMD:orgvipmc(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,940.3221,-4.1909,1000.9297))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)//Mayans
	        {
                new arquivo[64];
				format(arquivo, sizeof(arquivo), "ORG VIPS/Org24.ini");
				if(DOF2_FileExists(arquivo))
				{
				    if(DOF2_GetInt(arquivo, "Dias") == 0)
				    {
				        SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				        return 1;
				    }
				}
				else if(!DOF2_FileExists(arquivo))
				{
				    SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				    return 1;
				}
		    	if(PlayerInfo[playerid][pGunLic] == 0)
 	    	    {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	    }
 			    if(Equipado[playerid] == 1)
				{
					ResetPlayerWeapons(playerid);
					SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					Equipado[playerid] = 0;
					return 1;
	    		}
	    		if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	        {
		             SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		             return 1;
		        }
  			    format(gstring, sizeof(gstring), "[Mayans]: %s Pegou Um Kit ORGVIP.", sendername);
		        ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
                ResetPlayerWeaponsEx(playerid);
                if(DOF2_GetInt(arquivo, "Tipo") == 1)
                {
	               GivePlayerWeaponEx(playerid, 34, 50); //Sniper
	               GivePlayerWeaponEx(playerid, 31, 800); //M4
	               GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	               GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	               GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	               GivePlayerWeaponEx(playerid, 39, 4); //c4
	               GivePlayerWeaponEx(playerid, 5, 1);//taco
	               GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			       SetPlayerArmour(playerid, 120);
			       SetPlayerHealth(playerid, 100);
				}
		        else if(DOF2_GetInt(arquivo, "Tipo") == 2)
		        {
	               GivePlayerWeaponEx(playerid, 34, 100); //Sniper
	               GivePlayerWeaponEx(playerid, 31, 800); //M4
	               GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	               GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	               GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	               GivePlayerWeaponEx(playerid, 39, 4); //c4
	               GivePlayerWeaponEx(playerid, 4, 1);//faca
	               GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			       SetPlayerArmour(playerid, 130);
			       SetPlayerHealth(playerid, 100);
		        }
		        else if(DOF2_GetInt(arquivo, "Tipo") == 3)
		        {
	               GivePlayerWeaponEx(playerid, 34, 110); //Sniper
	               GivePlayerWeaponEx(playerid, 31, 800); //M4
	               GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	               GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	               GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	               GivePlayerWeaponEx(playerid, 39, 4); //c4
	               GivePlayerWeaponEx(playerid, 4, 1);//faca
	               GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			       SetPlayerArmour(playerid, 140);
			       SetPlayerHealth(playerid, 100);
		        }
		        Equipado[playerid] = 1;
		        TempoEquiparOrgVip[playerid] = GetTickCount();
		        return 1;
		    }
	    }
		return 1;
	}
	CMD:orgvipballas(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,2255.1445,-1207.8907,1049.0308))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)//Ballas
	        {
                new arquivo[64];
				format(arquivo, sizeof(arquivo), "ORG VIPS/Org18.ini");
				if(DOF2_FileExists(arquivo))
				{
				    if(DOF2_GetInt(arquivo, "Dias") == 0)
				    {
				        SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				        return 1;
				    }
				}
				else if(!DOF2_FileExists(arquivo))
				{
				    SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				    return 1;
				}
		    	if(PlayerInfo[playerid][pGunLic] == 0)
 	    	    {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	    }
 			    if(Equipado[playerid] == 1)
				{
					ResetPlayerWeapons(playerid);
					SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					Equipado[playerid] = 0;
					return 1;
	    		}
	    		if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	        {
		             SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		             return 1;
		        }
  			    format(gstring, sizeof(gstring), "[Ballas]: %s Pegou Um Kit ORGVIP.", sendername);
		        ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
                ResetPlayerWeaponsEx(playerid);
                if(DOF2_GetInt(arquivo, "Tipo") == 1)
                {
	                GivePlayerWeaponEx(playerid, 18, 4); //Molotov
	                GivePlayerWeaponEx(playerid, 34, 50); //Sniper
	                GivePlayerWeaponEx(playerid, 30, 800); //AK-47
	                GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	                GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	                GivePlayerWeaponEx(playerid, 5, 1);//Taco
	                GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			        SetPlayerArmour(playerid, 120);
			        SetPlayerHealth(playerid, 100);
				}
		        else if(DOF2_GetInt(arquivo, "Tipo") == 2)
		        {
		            GivePlayerWeaponEx(playerid, 18, 4); //Molotov
	                GivePlayerWeaponEx(playerid, 34, 100); //Sniper
	                GivePlayerWeaponEx(playerid, 30, 800); //AK-47
	                GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	                GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	                GivePlayerWeaponEx(playerid, 4, 1);//faca
	                GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			        SetPlayerArmour(playerid, 130);
			        SetPlayerHealth(playerid, 100);
		        }
		        else if(DOF2_GetInt(arquivo, "Tipo") == 3)
		        {
		            GivePlayerWeaponEx(playerid, 18, 4); //Molotov
	                GivePlayerWeaponEx(playerid, 34, 110); //Sniper
	                GivePlayerWeaponEx(playerid, 30, 800); //AK-47
	                GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	                GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	                GivePlayerWeaponEx(playerid, 4, 1);//faca
	                GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			        SetPlayerArmour(playerid, 110);
			        SetPlayerHealth(playerid, 100);
		        }
		        Equipado[playerid] = 1;
		        TempoEquiparOrgVip[playerid] = GetTickCount();
		        return 1;
		    }
	    }
		return 1;
	}
	CMD:orgvippcc(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,2375.7561,-1129.0848,1050.8750))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)//PCC
	        {
                new arquivo[64];
				format(arquivo, sizeof(arquivo), "ORG VIPS/Org11.ini");
				if(DOF2_FileExists(arquivo))
				{
				    if(DOF2_GetInt(arquivo, "Dias") == 0)
				    {
				        SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				        return 1;
				    }
				}
				else if(!DOF2_FileExists(arquivo))
				{
				    SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				    return 1;
				}
		    	if(PlayerInfo[playerid][pGunLic] == 0)
 	    	    {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	    }
 			    if(Equipado[playerid] == 1)
				{
					ResetPlayerWeapons(playerid);
					SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					Equipado[playerid] = 0;
					return 1;
	    		}
	    		if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	        {
		             SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		             return 1;
		        }
  			    format(gstring, sizeof(gstring), "[PCC]: %s Pegou Um Kit ORGVIP.", sendername);
		        ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
                ResetPlayerWeaponsEx(playerid);
                if(DOF2_GetInt(arquivo, "Tipo") == 1)
                {
	                GivePlayerWeaponEx(playerid, 18, 4); //Molotov
	                GivePlayerWeaponEx(playerid, 34, 50); //Sniper
	                GivePlayerWeaponEx(playerid, 30, 800); //AK-47
	                GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	                GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	                GivePlayerWeaponEx(playerid, 5, 1);//Taco
	                GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			        SetPlayerArmour(playerid, 120);
			        SetPlayerHealth(playerid, 100);
				}
		        else if(DOF2_GetInt(arquivo, "Tipo") == 2)
		        {
		            GivePlayerWeaponEx(playerid, 18, 4); //Molotov
	                GivePlayerWeaponEx(playerid, 34, 100); //Sniper
	                GivePlayerWeaponEx(playerid, 30, 800); //AK-47
	                GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	                GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	                GivePlayerWeaponEx(playerid, 4, 1);//faca
	                GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			        SetPlayerArmour(playerid, 130);
			        SetPlayerHealth(playerid, 100);
		        }
		        else if(DOF2_GetInt(arquivo, "Tipo") == 3)
		        {
		            GivePlayerWeaponEx(playerid, 18, 4); //Molotov
	                GivePlayerWeaponEx(playerid, 34, 110); //Sniper
	                GivePlayerWeaponEx(playerid, 30, 800); //AK-47
	                GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	                GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	                GivePlayerWeaponEx(playerid, 4, 1);//faca
	                GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			        SetPlayerArmour(playerid, 110);
			        SetPlayerHealth(playerid, 100);
		        }
		        Equipado[playerid] = 1;
		        TempoEquiparOrgVip[playerid] = GetTickCount();
		        return 1;
		    }
	    }
		return 1;
	}
	CMD:orgviphit(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,349.6120,310.0100,999.1484))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)//Hitmans
	        {
                new arquivo[64];
				format(arquivo, sizeof(arquivo), "ORG VIPS/Org8.ini");
				if(DOF2_FileExists(arquivo))
				{
				    if(DOF2_GetInt(arquivo, "Dias") == 0)
				    {
				        SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				        return 1;
				    }
				}
				else if(!DOF2_FileExists(arquivo))
				{
				    SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				    return 1;
				}
		    	if(PlayerInfo[playerid][pGunLic] == 0)
 	    	    {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	    }
 			    if(Equipado[playerid] == 1)
				{
					ResetPlayerWeapons(playerid);
					SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					Equipado[playerid] = 0;
					return 1;
                }
                if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	        {
		             SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		             return 1;
		        }
  			    format(gstring, sizeof(gstring), "[Hitmans]: %s Pegou Um Kit ORGVIP.", sendername);
		        ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
                ResetPlayerWeaponsEx(playerid);
                if(DOF2_GetInt(arquivo, "Tipo") == 1)
                {
	                GivePlayerWeaponEx(playerid, 18, 4); //molotov
			        GivePlayerWeaponEx(playerid, 34, 5);//sniper
	  	            GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	  	            GivePlayerWeaponEx(playerid, 25, 120);//shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //eagle
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
	                GivePlayerWeaponEx(playerid, 4, 1);//faca
			        SetPlayerArmour(playerid, 120);
			        SetPlayerHealth(playerid, 100);
				}
		        else if(DOF2_GetInt(arquivo, "Tipo") == 2)
		        {
		            GivePlayerWeaponEx(playerid, 18, 4); //molotov
			        GivePlayerWeaponEx(playerid, 34, 10);//sniper
	  	            GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	  	            GivePlayerWeaponEx(playerid, 25, 120);//shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //eagle
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
	                GivePlayerWeaponEx(playerid, 4, 1);//faca
			        SetPlayerArmour(playerid, 130);
			        SetPlayerHealth(playerid, 100);
		        }
		        else if(DOF2_GetInt(arquivo, "Tipo") == 3)
		        {
		            GivePlayerWeaponEx(playerid, 18, 4); //molotov
			        GivePlayerWeaponEx(playerid, 34, 11);//sniper
	  	            GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	  	            GivePlayerWeaponEx(playerid, 25, 120);//shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //eagle
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
	                GivePlayerWeaponEx(playerid, 4, 1);//faca
			        SetPlayerArmour(playerid, 140);
			        SetPlayerHealth(playerid, 100);
		        }
		        Equipado[playerid] = 1;
		        TempoEquiparOrgVip[playerid] = GetTickCount();
		        return 1;
		    }
	    }
		return 1;
	}
	CMD:orgvipass(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,2331.8477,-1061.6725,1049.0234))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)//Assassins
	        {
                new arquivo[64];
				format(arquivo, sizeof(arquivo), "ORG VIPS/Org26.ini");
				if(DOF2_FileExists(arquivo))
				{
				    if(DOF2_GetInt(arquivo, "Dias") == 0)
				    {
				        SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				        return 1;
				    }
				}
				else if(!DOF2_FileExists(arquivo))
				{
				    SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				    return 1;
				}
		    	if(PlayerInfo[playerid][pGunLic] == 0)
 	    	    {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	    }
 			    if(Equipado[playerid] == 1)
				{
					ResetPlayerWeapons(playerid);
					SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					Equipado[playerid] = 0;
					return 1;
                }
                if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	        {
		             SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		             return 1;
		        }
  			    format(gstring, sizeof(gstring), "[Assassins]: %s Pegou Um Kit ORGVIP.", sendername);
		        ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
                ResetPlayerWeaponsEx(playerid);
		        if(DOF2_GetInt(arquivo, "Tipo") == 1)
                {
	                GivePlayerWeaponEx(playerid, 18, 4); //molotov
			        GivePlayerWeaponEx(playerid, 34, 5);//sniper
	  	            GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	  	            GivePlayerWeaponEx(playerid, 25, 120);//shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //eagle
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
	                GivePlayerWeaponEx(playerid, 4, 1);//faca
			        SetPlayerArmour(playerid, 120);
			        SetPlayerHealth(playerid, 100);
				}
		        else if(DOF2_GetInt(arquivo, "Tipo") == 2)
		        {
		            GivePlayerWeaponEx(playerid, 18, 4); //molotov
			        GivePlayerWeaponEx(playerid, 34, 10);//sniper
	  	            GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	  	            GivePlayerWeaponEx(playerid, 25, 120);//shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //eagle
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
	                GivePlayerWeaponEx(playerid, 4, 1);//faca
			        SetPlayerArmour(playerid, 130);
			        SetPlayerHealth(playerid, 100);
		        }
		        else if(DOF2_GetInt(arquivo, "Tipo") == 3)
		        {
		            GivePlayerWeaponEx(playerid, 18, 4); //molotov
			        GivePlayerWeaponEx(playerid, 34, 11);//sniper
	  	            GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	  	            GivePlayerWeaponEx(playerid, 25, 120);//shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //eagle
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
	                GivePlayerWeaponEx(playerid, 4, 1);//faca
			        SetPlayerArmour(playerid, 140);
			        SetPlayerHealth(playerid, 100);
		        }
		        Equipado[playerid] = 1;
		        TempoEquiparOrgVip[playerid] = GetTickCount();
		        return 1;
		    }
	    }
		return 1;
//=====================================OrgVip Dos Terroristas===============//
    }
	CMD:orgvipal(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,217.8626,1244.5505,1082.1406) || PlayerToPoint(1, playerid,315.6971,973.2890,1961.5928))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)//Al Qaeda
	        {
                 new arquivo[64];
				 format(arquivo, sizeof(arquivo), "ORG VIPS/Org16.ini");
				 if(DOF2_FileExists(arquivo))
				 {
				     if(DOF2_GetInt(arquivo, "Dias") == 0)
				     {
				         SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				         return 1;
				     }
				 }
				 else if(!DOF2_FileExists(arquivo))
				 {
				     SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				     return 1;
				 }
		    	 if(PlayerInfo[playerid][pGunLic] == 0)
 	    	     {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	     }
                 if(Equipado[playerid] == 1)
				 {
					 ResetPlayerWeapons(playerid);
					 SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					 Equipado[playerid] = 0;
					 return 1;
	    		 }
	    		 if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	         {
		              SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		              return 1;
		         }
  				 format(gstring, sizeof(gstring), "[Al`Qaeda]: %s Pegou Um Kit ORGVIP.", sendername);
		         ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
		         ResetPlayerWeaponsEx(playerid);
		         if(DOF2_GetInt(arquivo, "Tipo") == 1)
                 {
	                GivePlayerWeaponEx(playerid, 46, 1); //paraquedas
	                GivePlayerWeaponEx(playerid, 18, 4); //Molotov
	                GivePlayerWeaponEx(playerid, 35, 3); //bazuca
	                GivePlayerWeaponEx(playerid, 34, 50); //Sniper
	                GivePlayerWeaponEx(playerid, 30, 800); //AK-47
	                GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	                GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	                GivePlayerWeaponEx(playerid, 8, 1);//katana
	                GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			        SetPlayerArmour(playerid, 120);
			        SetPlayerHealth(playerid, 100);
				 }
		         else if(DOF2_GetInt(arquivo, "Tipo") == 2)
		         {
	                GivePlayerWeaponEx(playerid, 46, 1); //paraquedas
	                GivePlayerWeaponEx(playerid, 18, 4); //Molotov
	                GivePlayerWeaponEx(playerid, 35, 3); //bazuca
	                GivePlayerWeaponEx(playerid, 34, 100); //Sniper
	                GivePlayerWeaponEx(playerid, 30, 800); //AK-47
	                GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	                GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	                GivePlayerWeaponEx(playerid, 4, 1);//faca
	                GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			        SetPlayerArmour(playerid, 130);
			        SetPlayerHealth(playerid, 100);
		         }
		         else if(DOF2_GetInt(arquivo, "Tipo") == 3)
		         {
	                GivePlayerWeaponEx(playerid, 46, 1); //paraquedas
	                GivePlayerWeaponEx(playerid, 18, 4); //Molotov
	                GivePlayerWeaponEx(playerid, 35, 3); //bazuca
	                GivePlayerWeaponEx(playerid, 34, 110); //Sniper
	                GivePlayerWeaponEx(playerid, 30, 800); //AK-47
	                GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	                GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	                GivePlayerWeaponEx(playerid, 4, 1);//faca
	                GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			        SetPlayerArmour(playerid, 140);
			        SetPlayerHealth(playerid, 100);
		         }
		         Equipado[playerid] = 1;
		         TempoEquiparOrgVip[playerid] = GetTickCount();
		         return 1;
		     }
		}
		return 1;
    }
	CMD:orgviptal(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,2260.5281,-1141.0366,1050.6328) || PlayerToPoint(1, playerid,315.6971,973.2890,1961.5928))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)//Taliban
	        {
                 new arquivo[64];
				 format(arquivo, sizeof(arquivo), "ORG VIPS/Org6.ini");
				 if(DOF2_FileExists(arquivo))
				 {
				     if(DOF2_GetInt(arquivo, "Dias") == 0)
				     {
                         SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				         return 1;
				     }
				 }
				 else if(!DOF2_FileExists(arquivo))
				 {
				     SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				     return 1;
				 }
		    	 if(PlayerInfo[playerid][pGunLic] == 0)
 	    	     {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	     }
 			     if(Equipado[playerid] == 1)
				 {
					 ResetPlayerWeapons(playerid);
					 SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					 Equipado[playerid] = 0;
					 return 1;
	    		 }
	    		 if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	         {
		              SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		              return 1;
		         }
  				 format(gstring, sizeof(gstring), "[Taliban]: %s Pegou Um Kit ORGVIP.", sendername);
		         ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
		         ResetPlayerWeaponsEx(playerid);
                 if(DOF2_GetInt(arquivo, "Tipo") == 1)
                 {
	                GivePlayerWeaponEx(playerid, 46, 1); //paraquedas
	                GivePlayerWeaponEx(playerid, 18, 4); //Molotov
	                GivePlayerWeaponEx(playerid, 35, 3); //bazuca
	                GivePlayerWeaponEx(playerid, 34, 50); //Sniper
	                GivePlayerWeaponEx(playerid, 30, 800); //AK-47
	                GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	                GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	                GivePlayerWeaponEx(playerid, 8, 1);//katana
	                GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			        SetPlayerArmour(playerid, 120);
			        SetPlayerHealth(playerid, 100);
				 }
		         else if(DOF2_GetInt(arquivo, "Tipo") == 2)
		         {
	                GivePlayerWeaponEx(playerid, 46, 1); //paraquedas
	                GivePlayerWeaponEx(playerid, 18, 4); //Molotov
	                GivePlayerWeaponEx(playerid, 35, 3); //bazuca
	                GivePlayerWeaponEx(playerid, 34, 100); //Sniper
	                GivePlayerWeaponEx(playerid, 30, 800); //AK-47
	                GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	                GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	                GivePlayerWeaponEx(playerid, 4, 1);//faca
	                GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			        SetPlayerArmour(playerid, 130);
			        SetPlayerHealth(playerid, 100);
		         }
		         else if(DOF2_GetInt(arquivo, "Tipo") == 3)
		         {
	                GivePlayerWeaponEx(playerid, 46, 1); //paraquedas
	                GivePlayerWeaponEx(playerid, 18, 4); //Molotov
	                GivePlayerWeaponEx(playerid, 35, 3); //bazuca
	                GivePlayerWeaponEx(playerid, 34, 110); //Sniper
	                GivePlayerWeaponEx(playerid, 30, 800); //AK-47
	                GivePlayerWeaponEx(playerid, 29, 400); //MP-5
	                GivePlayerWeaponEx(playerid, 25, 150); //Shotgun
	                GivePlayerWeaponEx(playerid, 24, 150); //Eagle
	                GivePlayerWeaponEx(playerid, 4, 1);//faca
	                GivePlayerWeaponEx(playerid, 1, 1);//Soco Inglês
			        SetPlayerArmour(playerid, 140);
			        SetPlayerHealth(playerid, 100);
		         }
		         Equipado[playerid] = 1;
		         TempoEquiparOrgVip[playerid] = GetTickCount();
		         return 1;
		     }
		}
		return 1;
//=====================================Inicio OrgVip Dos Cops==============================//
	}
	CMD:orgvippm(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,253.2831,79.7014,1003.6406))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)//Policia Militar
	        {
                new arquivo[64];
				format(arquivo, sizeof(arquivo), "ORG VIPS/Org1.ini");
				if(DOF2_FileExists(arquivo))
				{
				    if(DOF2_GetInt(arquivo, "Dias") == 0)
				    {
				        SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				        return 1;
				    }
				}
				else if(!DOF2_FileExists(arquivo))
				{
				    SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				    return 1;
				}
		    	if(PlayerInfo[playerid][pGunLic] == 0)
 	    	    {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	    }
 			    if(Equipado[playerid] == 1)
				{
					ResetPlayerWeapons(playerid);
					SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					Equipado[playerid] = 0;
					return 1;
	    		}
	    		if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	        {
		             SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		             return 1;
		        }
   				format(gstring, sizeof(gstring), "[Policia Militar]: %s Pegou Um Kit ORGVIP.", sendername);
			    ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
				ResetPlayerWeaponsEx(playerid);
				if(DOF2_GetInt(arquivo, "Tipo") == 1)
				{
					GivePlayerWeaponEx(playerid, 16, 4); //granada
	                GivePlayerWeaponEx(playerid, 34, 50); //Sniper
	                GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	                GivePlayerWeaponEx(playerid, 25, 120); //12
	                GivePlayerWeaponEx(playerid, 23, 150); //eagle
	                GivePlayerWeaponEx(playerid, 3, 1); //cassetete
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
					SetPlayerArmour(playerid, 120);
					SetPlayerHealth(playerid, 100);
				}
				else if(DOF2_GetInt(arquivo, "Tipo") == 2)
				{
					GivePlayerWeaponEx(playerid, 16, 4); //granada
	                GivePlayerWeaponEx(playerid, 34, 100); //Sniper
	                GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	                GivePlayerWeaponEx(playerid, 25, 120); //12
	                GivePlayerWeaponEx(playerid, 23, 150); //eagle
	                GivePlayerWeaponEx(playerid, 4, 1); //faca
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
					SetPlayerArmour(playerid, 130);
					SetPlayerHealth(playerid, 100);
				}
				else if(DOF2_GetInt(arquivo, "Tipo") == 3)
				{
					GivePlayerWeaponEx(playerid, 16, 4); //granada
	                GivePlayerWeaponEx(playerid, 34, 110); //Sniper
	                GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	                GivePlayerWeaponEx(playerid, 25, 120); //12
	                GivePlayerWeaponEx(playerid, 23, 150); //eagle
	                GivePlayerWeaponEx(playerid, 4, 1); //faca
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
					SetPlayerArmour(playerid, 140);
					SetPlayerHealth(playerid, 100);
				}
				Equipado[playerid] = 1;
				TempoEquiparOrgVip[playerid] = GetTickCount();
				return 1;
		     }
		}
		return 1;
	}
    CMD:orgvipip(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,1709.7462,-1646.1157,20.2160))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)//Rota
	        {
                new arquivo[64];
				format(arquivo, sizeof(arquivo), "ORG VIPS/Org12.ini");
				if(DOF2_FileExists(arquivo))
				{
				    if(DOF2_GetInt(arquivo, "Dias") == 0)
				    {
				        SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				        return 1;
				    }
				}
				else if(!DOF2_FileExists(arquivo))
				{
				    SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				    return 1;
				}
		    	if(PlayerInfo[playerid][pGunLic] == 0)
 	    	    {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	    }
 			    if(Equipado[playerid] == 1)
				{
					ResetPlayerWeapons(playerid);
					SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					Equipado[playerid] = 0;
					return 1;
	    		}
	    		if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	        {
		             SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		             return 1;
		        }
   				format(gstring, sizeof(gstring), "[Rota]: %s Pegou Um Kit ORGVIP.", sendername);
			    ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
				ResetPlayerWeaponsEx(playerid);
				if(DOF2_GetInt(arquivo, "Tipo") == 1)
				{
					GivePlayerWeaponEx(playerid, 16, 4); //granada
	                GivePlayerWeaponEx(playerid, 34, 50); //Sniper
	                GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	                GivePlayerWeaponEx(playerid, 25, 120); //12
	                GivePlayerWeaponEx(playerid, 23, 150); //eagle
	                GivePlayerWeaponEx(playerid, 3, 1); //cassetete
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
					SetPlayerArmour(playerid, 120);
					SetPlayerHealth(playerid, 100);
				}
				else if(DOF2_GetInt(arquivo, "Tipo") == 2)
				{
					GivePlayerWeaponEx(playerid, 16, 4); //granada
	                GivePlayerWeaponEx(playerid, 34, 100); //Sniper
	                GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	                GivePlayerWeaponEx(playerid, 25, 120); //12
	                GivePlayerWeaponEx(playerid, 23, 150); //eagle
	                GivePlayerWeaponEx(playerid, 4, 1); //faca
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
					SetPlayerArmour(playerid, 130);
					SetPlayerHealth(playerid, 100);
				}
				else if(DOF2_GetInt(arquivo, "Tipo") == 3)
				{
					GivePlayerWeaponEx(playerid, 16, 4); //granada
	                GivePlayerWeaponEx(playerid, 34, 110); //Sniper
	                GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	                GivePlayerWeaponEx(playerid, 25, 120); //12
	                GivePlayerWeaponEx(playerid, 23, 150); //eagle
	                GivePlayerWeaponEx(playerid, 4, 1); //faca
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
					SetPlayerArmour(playerid, 140);
					SetPlayerHealth(playerid, 100);
				}
				Equipado[playerid] = 1;
				TempoEquiparOrgVip[playerid] = GetTickCount();
				return 1;
		     }
		}
		return 1;
	}
	CMD:orgvipgov(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,345.3195,163.4190,1025.7891))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)//Governo
	        {
                new arquivo[64];
				format(arquivo, sizeof(arquivo), "ORG VIPS/Org7.ini");
				if(DOF2_FileExists(arquivo))
				{
				    if(DOF2_GetInt(arquivo, "Dias") == 0)
				    {
				        SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				        return 1;
				    }
				}
				else if(!DOF2_FileExists(arquivo))
				{
				    SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				    return 1;
				}
		    	if(PlayerInfo[playerid][pGunLic] == 0)
 	    	    {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	    }
 			    if(Equipado[playerid] == 1)
				{
					ResetPlayerWeapons(playerid);
					SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					Equipado[playerid] = 0;
					return 1;
	    		}
	    		if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	        {
		             SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		             return 1;
		        }
   				format(gstring, sizeof(gstring), "[Governo]: %s Pegou Um Kit ORGVIP.", sendername);
			    ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
				ResetPlayerWeaponsEx(playerid);
				if(DOF2_GetInt(arquivo, "Tipo") == 1)
				{
					GivePlayerWeaponEx(playerid, 16, 4); //granada
	                GivePlayerWeaponEx(playerid, 34, 50); //Sniper
	                GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	                GivePlayerWeaponEx(playerid, 25, 120); //12
	                GivePlayerWeaponEx(playerid, 23, 150); //eagle
	                GivePlayerWeaponEx(playerid, 3, 1); //cassetete
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
	                GivePlayerWeapon(playerid, 41, 99999);//Spray
					SetPlayerArmour(playerid, 120);
					SetPlayerHealth(playerid, 100);
				}
				else if(DOF2_GetInt(arquivo, "Tipo") == 2)
				{
					GivePlayerWeaponEx(playerid, 16, 4); //granada
	                GivePlayerWeaponEx(playerid, 34, 100); //Sniper
	                GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	                GivePlayerWeaponEx(playerid, 25, 120); //12
	                GivePlayerWeaponEx(playerid, 23, 150); //eagle
	                GivePlayerWeaponEx(playerid, 4, 1); //faca
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
	                GivePlayerWeapon(playerid, 41, 99999);//Spray
					SetPlayerArmour(playerid, 130);
					SetPlayerHealth(playerid, 100);
				}
				else if(DOF2_GetInt(arquivo, "Tipo") == 3)
				{
					GivePlayerWeaponEx(playerid, 16, 4); //granada
	                GivePlayerWeaponEx(playerid, 34, 110); //Sniper
	                GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	                GivePlayerWeaponEx(playerid, 25, 120); //12
	                GivePlayerWeaponEx(playerid, 23, 150); //eagle
	                GivePlayerWeaponEx(playerid, 4, 1); //faca
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
	                GivePlayerWeapon(playerid, 41, 99999);//Spray
					SetPlayerArmour(playerid, 140);
					SetPlayerHealth(playerid, 100);
				}
				Equipado[playerid] = 1;
				TempoEquiparOrgVip[playerid] = GetTickCount();
				return 1;
		     }
		}
		return 1;
	}
	CMD:orgvipbope(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,252.3919,117.2783,1003.2188))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)//BOPE
	        {
                new arquivo[64];
				format(arquivo, sizeof(arquivo), "ORG VIPS/Org2.ini");
				if(DOF2_FileExists(arquivo))
				{
				    if(DOF2_GetInt(arquivo, "Dias") == 0)
				    {
				        SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				        return 1;
				    }
				}
				else if(!DOF2_FileExists(arquivo))
				{
				    SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				    return 1;
				}
		    	if(PlayerInfo[playerid][pGunLic] == 0)
 	    	    {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	    }
                if(Equipado[playerid] == 1)
				{
					ResetPlayerWeapons(playerid);
					SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					Equipado[playerid] = 0;
					return 1;
	    		}
	    		if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	        {
		             SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		             return 1;
		        }
   				format(gstring, sizeof(gstring), "[BOPE]: %s Pegou Um Kit ORGVIP.", sendername);
			    ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
				ResetPlayerWeaponsEx(playerid);
				if(DOF2_GetInt(arquivo, "Tipo") == 1)
				{
					GivePlayerWeaponEx(playerid, 16, 4); //granada
	                GivePlayerWeaponEx(playerid, 34, 50); //Sniper
	                GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	                GivePlayerWeaponEx(playerid, 25, 120); //12
	                GivePlayerWeaponEx(playerid, 23, 150); //eagle
	                GivePlayerWeaponEx(playerid, 3, 1); //cassetete
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
					SetPlayerArmour(playerid, 120);
					SetPlayerHealth(playerid, 100);
				}
				else if(DOF2_GetInt(arquivo, "Tipo") == 2)
				{
					GivePlayerWeaponEx(playerid, 16, 4); //granada
	                GivePlayerWeaponEx(playerid, 34, 100); //Sniper
	                GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	                GivePlayerWeaponEx(playerid, 25, 120); //12
	                GivePlayerWeaponEx(playerid, 23, 150); //eagle
	                GivePlayerWeaponEx(playerid, 4, 1); //faca
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
					SetPlayerArmour(playerid, 130);
					SetPlayerHealth(playerid, 100);
				}
				else if(DOF2_GetInt(arquivo, "Tipo") == 3)
				{
					GivePlayerWeaponEx(playerid, 16, 4); //granada
	                GivePlayerWeaponEx(playerid, 34, 110); //Sniper
	                GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	                GivePlayerWeaponEx(playerid, 25, 120); //12
	                GivePlayerWeaponEx(playerid, 23, 150); //eagle
	                GivePlayerWeaponEx(playerid, 4, 1); //faca
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
					SetPlayerArmour(playerid, 140);
					SetPlayerHealth(playerid, 100);
				}
				Equipado[playerid] = 1;
				TempoEquiparOrgVip[playerid] = GetTickCount();
				return 1;
		     }
		}
		return 1;
	}
	CMD:orgvippf(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,326.1613,303.2757,999.1484))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25)//Polícia Federal
	        {
                new arquivo[64];
				format(arquivo, sizeof(arquivo), "ORG VIPS/Org25.ini");
				if(DOF2_FileExists(arquivo))
				{
				    if(DOF2_GetInt(arquivo, "Dias") == 0)
				    {
				        SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				        return 1;
				    }
				}
				else if(!DOF2_FileExists(arquivo))
				{
				    SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				    return 1;
				}
		    	if(PlayerInfo[playerid][pGunLic] == 0)
 	    	    {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	    }
 			    if(Equipado[playerid] == 1)
				{
					ResetPlayerWeapons(playerid);
					SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					Equipado[playerid] = 0;
					return 1;
	    		}
	    		if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	        {
		             SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		             return 1;
		        }
   				format(gstring, sizeof(gstring), "[Policia Federal]: %s Pegou Um Kit ORGVIP.", sendername);
			    ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
				ResetPlayerWeaponsEx(playerid);
				if(DOF2_GetInt(arquivo, "Tipo") == 1)
				{
					GivePlayerWeaponEx(playerid, 16, 4); //granada
	                GivePlayerWeaponEx(playerid, 34, 50); //Sniper
	                GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	                GivePlayerWeaponEx(playerid, 25, 120); //12
	                GivePlayerWeaponEx(playerid, 23, 150); //eagle
	                GivePlayerWeaponEx(playerid, 3, 1); //cassetete
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
					SetPlayerArmour(playerid, 120);
					SetPlayerHealth(playerid, 100);
				}
				else if(DOF2_GetInt(arquivo, "Tipo") == 2)
				{
					GivePlayerWeaponEx(playerid, 16, 4); //granada
	                GivePlayerWeaponEx(playerid, 34, 100); //Sniper
	                GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	                GivePlayerWeaponEx(playerid, 25, 120); //12
	                GivePlayerWeaponEx(playerid, 23, 150); //eagle
	                GivePlayerWeaponEx(playerid, 4, 1); //faca
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
					SetPlayerArmour(playerid, 130);
					SetPlayerHealth(playerid, 100);
				}
				else if(DOF2_GetInt(arquivo, "Tipo") == 3)
				{
					GivePlayerWeaponEx(playerid, 16, 4); //granada
	                GivePlayerWeaponEx(playerid, 34, 110); //Sniper
	                GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	                GivePlayerWeaponEx(playerid, 25, 120); //12
	                GivePlayerWeaponEx(playerid, 23, 150); //eagle
	                GivePlayerWeaponEx(playerid, 4, 1); //faca
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
					SetPlayerArmour(playerid, 140);
					SetPlayerHealth(playerid, 100);
				}
				Equipado[playerid] = 1;
				TempoEquiparOrgVip[playerid] = GetTickCount();
				return 1;
		     }
		}
		return 1;
	}
	CMD:orgvipgn(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,2688.3987,-2451.3127,13.4781) || PlayerToPoint(1, playerid,315.6971,973.2890,1961.5928))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)//Exercito
	        {
                new arquivo[64];
				format(arquivo, sizeof(arquivo), "ORG VIPS/Org3.ini");
				if(DOF2_FileExists(arquivo))
				{
				    if(DOF2_GetInt(arquivo, "Dias") == 0)
				    {
				        SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				        return 1;
				    }
				}
				else if(!DOF2_FileExists(arquivo))
				{
				    SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				    return 1;
				}
		    	if(PlayerInfo[playerid][pGunLic] == 0)
 	    	    {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	    }
 			    if(Equipado[playerid] == 1)
				{
					ResetPlayerWeapons(playerid);
					SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					Equipado[playerid] = 0;
					return 1;
	    		}
	    		if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	        {
		             SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		             return 1;
		        }
   				format(gstring, sizeof(gstring), "[Exercito]: %s Pegou Um Kit ORGVIP.", sendername);
			    ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
				ResetPlayerWeaponsEx(playerid);
                if(DOF2_GetInt(arquivo, "Tipo") == 1)
				{
					GivePlayerWeaponEx(playerid, 16, 4); //granada
	                GivePlayerWeaponEx(playerid, 34, 50); //Sniper
	                GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	                GivePlayerWeaponEx(playerid, 25, 120); //12
	                GivePlayerWeaponEx(playerid, 23, 150); //eagle
	                GivePlayerWeaponEx(playerid, 3, 1); //cassetete
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
					SetPlayerArmour(playerid, 120);
					SetPlayerHealth(playerid, 100);
				}
				else if(DOF2_GetInt(arquivo, "Tipo") == 2)
				{
					GivePlayerWeaponEx(playerid, 16, 4); //granada
	                GivePlayerWeaponEx(playerid, 34, 100); //Sniper
	                GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	                GivePlayerWeaponEx(playerid, 25, 120); //12
	                GivePlayerWeaponEx(playerid, 23, 150); //eagle
	                GivePlayerWeaponEx(playerid, 4, 1); //faca
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
					SetPlayerArmour(playerid, 130);
					SetPlayerHealth(playerid, 100);
				}
				else if(DOF2_GetInt(arquivo, "Tipo") == 3)
				{
					GivePlayerWeaponEx(playerid, 16, 4); //granada
	                GivePlayerWeaponEx(playerid, 34, 110); //Sniper
	                GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	                GivePlayerWeaponEx(playerid, 25, 120); //12
	                GivePlayerWeaponEx(playerid, 23, 150); //eagle
	                GivePlayerWeaponEx(playerid, 4, 1); //faca
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
					SetPlayerArmour(playerid, 140);
					SetPlayerHealth(playerid, 100);
				}
				Equipado[playerid] = 1;
				TempoEquiparOrgVip[playerid] = GetTickCount();
				return 1;
		     }
		}
		return 1;
	}
	CMD:orgvipgate(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,324.6782,303.4984,999.1484) || PlayerToPoint(1, playerid,2497.8569,2392.4238,4.2109))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)//GATE
	        {
                new arquivo[64];
				format(arquivo, sizeof(arquivo), "ORG VIPS/Org13.ini");
				if(DOF2_FileExists(arquivo))
				{
				    if(DOF2_GetInt(arquivo, "Dias") == 0)
				    {
				        SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				        return 1;
				    }
				}
				else if(!DOF2_FileExists(arquivo))
				{
				    SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				    return 1;
				}
		    	if(PlayerInfo[playerid][pGunLic] == 0)
 	    	    {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	    }
 			    if(Equipado[playerid] == 1)
				{
					ResetPlayerWeapons(playerid);
					SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					Equipado[playerid] = 0;
					return 1;
	    		}
	    		if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	        {
		             SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		             return 1;
		        }
   				format(gstring, sizeof(gstring), "[G.A.T.E]: %s Pegou Um Kit ORGVIP.", sendername);
			    ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
				ResetPlayerWeaponsEx(playerid);
				if(DOF2_GetInt(arquivo, "Tipo") == 1)
				{
					GivePlayerWeaponEx(playerid, 16, 4); //granada
	                GivePlayerWeaponEx(playerid, 34, 50); //Sniper
	                GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	                GivePlayerWeaponEx(playerid, 25, 120); //12
	                GivePlayerWeaponEx(playerid, 23, 150); //eagle
	                GivePlayerWeaponEx(playerid, 3, 1); //cassetete
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
					SetPlayerArmour(playerid, 120);
					SetPlayerHealth(playerid, 100);
				}
				else if(DOF2_GetInt(arquivo, "Tipo") == 2)
				{
					GivePlayerWeaponEx(playerid, 16, 4); //granada
	                GivePlayerWeaponEx(playerid, 34, 100); //Sniper
	                GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	                GivePlayerWeaponEx(playerid, 25, 120); //12
	                GivePlayerWeaponEx(playerid, 23, 150); //eagle
	                GivePlayerWeaponEx(playerid, 4, 1); //faca
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
					SetPlayerArmour(playerid, 130);
					SetPlayerHealth(playerid, 100);
				}
				else if(DOF2_GetInt(arquivo, "Tipo") == 3)
				{
					GivePlayerWeaponEx(playerid, 16, 4); //granada
	                GivePlayerWeaponEx(playerid, 34, 110); //Sniper
	                GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	                GivePlayerWeaponEx(playerid, 25, 120); //12
	                GivePlayerWeaponEx(playerid, 23, 150); //eagle
	                GivePlayerWeaponEx(playerid, 4, 1); //faca
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
					SetPlayerArmour(playerid, 140);
					SetPlayerHealth(playerid, 100);
				}
				Equipado[playerid] = 1;
				TempoEquiparOrgVip[playerid] = GetTickCount();
				return 1;
		     }
		}
		return 1;
	}
	CMD:orgvippc(playerid, params[])
	{
		if(PlayerToPoint(1, playerid,228.6938,159.5593,1003.0234) || PlayerToPoint(1, playerid,2497.8569,2392.4238,4.2109))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)//Policia Civil
	        {
                new arquivo[64];
				format(arquivo, sizeof(arquivo), "ORG VIPS/Org17.ini");
				if(DOF2_FileExists(arquivo))
				{
				    if(DOF2_GetInt(arquivo, "Dias") == 0)
				    {
				        SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				        return 1;
				    }
				}
				else if(!DOF2_FileExists(arquivo))
				{
				    SendClientMessage(playerid, COR_GRAD1, "A sua organização não é VIP.");
				    return 1;
				}
		    	if(PlayerInfo[playerid][pGunLic] == 0)
 	    	    {
					 SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					 return 1;
 	    	    }
 			    if(Equipado[playerid] == 1)
				{
					ResetPlayerWeapons(playerid);
					SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					Equipado[playerid] = 0;
					return 1;
	    		}
	    		if(GetTickCount() - TempoEquiparOrgVip[playerid] < 4000)
    	        {
		             SendClientMessage(playerid,COR_GRAD1,"Você só pode usar este comando a cada 4 segundos.");
		             return 1;
		        }
   				format(gstring, sizeof(gstring), "[Policia Civil]: %s Pegou Um Kit ORGVIP.", sendername);
			    ProxDetector(30.0, playerid, gstring, COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL,COR_AZUL);
				ResetPlayerWeaponsEx(playerid);
				if(DOF2_GetInt(arquivo, "Tipo") == 1)
				{
					GivePlayerWeaponEx(playerid, 16, 4); //granada
	                GivePlayerWeaponEx(playerid, 34, 50); //Sniper
	                GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	                GivePlayerWeaponEx(playerid, 25, 120); //12
	                GivePlayerWeaponEx(playerid, 23, 150); //eagle
	                GivePlayerWeaponEx(playerid, 3, 1); //cassetete
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
					SetPlayerArmour(playerid, 120);
					SetPlayerHealth(playerid, 100);
				}
				else if(DOF2_GetInt(arquivo, "Tipo") == 2)
				{
					GivePlayerWeaponEx(playerid, 16, 4); //granada
	                GivePlayerWeaponEx(playerid, 34, 100); //Sniper
	                GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	                GivePlayerWeaponEx(playerid, 25, 120); //12
	                GivePlayerWeaponEx(playerid, 23, 150); //eagle
	                GivePlayerWeaponEx(playerid, 4, 1); //faca
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
					SetPlayerArmour(playerid, 130);
					SetPlayerHealth(playerid, 100);
				}
				else if(DOF2_GetInt(arquivo, "Tipo") == 3)
				{
					GivePlayerWeaponEx(playerid, 16, 4); //granada
	                GivePlayerWeaponEx(playerid, 34, 110); //Sniper
	                GivePlayerWeaponEx(playerid, 31, 400);//m-4
	  	            GivePlayerWeaponEx(playerid, 29, 400);//mp5
	                GivePlayerWeaponEx(playerid, 25, 120); //12
	                GivePlayerWeaponEx(playerid, 23, 150); //eagle
	                GivePlayerWeaponEx(playerid, 4, 1); //faca
	                GivePlayerWeaponEx(playerid, 1, 1); //soqueira
					SetPlayerArmour(playerid, 140);
					SetPlayerHealth(playerid, 100);
				}
				Equipado[playerid] = 1;
				TempoEquiparOrgVip[playerid] = GetTickCount();
				return 1;
		     }
		}
		return 1;
    }
	CMD:equipar(playerid, params[])
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		 SendClientMessage(playerid,COR_GREY," Você não pode equipar na cadeia!");
	   		 return 1;
    	}
		if(OnDuty[playerid] != 1)
		{
             SendClientMessage(playerid, COR_GREY, "Você não Bateu o cartão!");
             return 1;
		}
		if(PlayerInfo[playerid][pGunLic] == 0)
 	    {
	         SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
			 return 1;
 	    }
    	if (IsACop(playerid))
     	{
     	    new tmpzcmdcar = GetPlayerVehicleID(playerid);
     	    GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
	    	if(IsAEnforcerCar(tmpzcmdcar) || PlayerToPoint(2, playerid,252.5212,69.6307,1003.6406) || PlayerToPoint(2,playerid,255.0129,76.0857,1003.6406) || PlayerToPoint(2,playerid,240.6702,112.7933,1003.2188) || PlayerToPoint(2, playerid,302.6840,-1529.6685,24.9219) || PlayerToPoint(2, playerid,2688.4722,-2443.8438,13.4729) || PlayerToPoint(2, playerid,326.4964,306.9705,999.1484) || PlayerToPoint(1, playerid,914.5157,-1235.1240,17.2109)
			|| PlayerToPoint(2, playerid,229.7716,165.0986,1003.0234) || PlayerToPoint(2, playerid,1709.7360,-1642.6481,20.2188) || PlayerToPoint(2, playerid,2497.8533,2389.3938,4.2109) || PlayerToPoint(2, playerid,2080.9387,-1376.1432,300.5588) || PlayerToPoint(2, playerid,2251.4067,2490.9138,10.9908))
			{
			    ResetPlayerWeaponsEx(playerid);
				SetPlayerArmour(playerid, 100.0);
				SetPlayerHealth(playerid, 100.0);
				if(IsACop(playerid))
    			{
			   	    if(PlayerInfo[playerid][pCargo] == 1)
					{
						format(gstring, sizeof(gstring), "[%s] %s pegou seus equipamentos de cargo 1.",NomeORG(playerid), sendername);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						GivePlayerWeaponEx(playerid, 16, 2); //granadas
						GivePlayerWeaponEx(playerid, 34, 4); //sniper
					    GivePlayerWeaponEx(playerid, 31, 400); //Mp4
				  	    GivePlayerWeaponEx(playerid, 29, 400); //Mp5
					    GivePlayerWeaponEx(playerid, 25, 100); //12
					    GivePlayerWeaponEx(playerid, 24, 200); //eagle
					    GivePlayerWeaponEx(playerid, 41, 5000); //spray
					    GivePlayerWeaponEx(playerid, 3, 1); //cacetete
					    if(PlayerInfo[playerid][pMembro] == 3)
						{
                             GivePlayerWeaponEx(playerid, 35, 1); //bazuka exército
						}
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						return 1;
					}
					else if (PlayerInfo[playerid][pCargo] == 2)
					{
	   					format(gstring, sizeof(gstring), "[%s] %s pegou seus equipamentos de cargo 2.",NomeORG(playerid), sendername);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						GivePlayerWeaponEx(playerid, 16, 2); //granadas
						GivePlayerWeaponEx(playerid, 34, 4); //sniper
					    GivePlayerWeaponEx(playerid, 31, 400); //Mp4
				  	    GivePlayerWeaponEx(playerid, 29, 400); //Mp5
					    GivePlayerWeaponEx(playerid, 25, 110); //12
					    GivePlayerWeaponEx(playerid, 24, 210); //eagle
					    GivePlayerWeaponEx(playerid, 41, 5000); //spray
					    GivePlayerWeaponEx(playerid, 3, 1); //cacetete
					    if(PlayerInfo[playerid][pMembro] == 3)
						{
                             GivePlayerWeaponEx(playerid, 35, 1); //bazuka exército
						}
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						return 1;
					}
 					else if (PlayerInfo[playerid][pCargo] == 3)
                    {
						format(gstring, sizeof(gstring), "[%s] %s pegou seus equipamentos de cargo 3.",NomeORG(playerid), sendername);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						GivePlayerWeaponEx(playerid, 16, 3); //granadas
						GivePlayerWeaponEx(playerid, 34, 4); //sniper
					    GivePlayerWeaponEx(playerid, 31, 400); //Mp4
				  	    GivePlayerWeaponEx(playerid, 29, 400); //Mp5
					    GivePlayerWeaponEx(playerid, 25, 120); //12
					    GivePlayerWeaponEx(playerid, 24, 220); //eagle
					    GivePlayerWeaponEx(playerid, 41, 5000); //spray
					    GivePlayerWeaponEx(playerid, 3, 1); //cacetete
					    if(PlayerInfo[playerid][pMembro] == 3)
						{
                             GivePlayerWeaponEx(playerid, 35, 1); //bazuka exército
						}
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						return 1;
					}
	  				else if (PlayerInfo[playerid][pCargo] == 4)
					{
						format(gstring, sizeof(gstring), "[%s] %s pegou seus equipamentos de cargo 4.",NomeORG(playerid), sendername);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						GivePlayerWeaponEx(playerid, 16, 4); //granadas
						GivePlayerWeaponEx(playerid, 34, 4); //sniper
					    GivePlayerWeaponEx(playerid, 31, 400); //Mp4
				  	    GivePlayerWeaponEx(playerid, 29, 400); //Mp5
					    GivePlayerWeaponEx(playerid, 25, 130); //12
					    GivePlayerWeaponEx(playerid, 24, 230); //eagle
					    GivePlayerWeaponEx(playerid, 41, 5000); //spray
					    GivePlayerWeaponEx(playerid, 3, 1); //cacetete
					    if(PlayerInfo[playerid][pMembro] == 3)
						{
                             GivePlayerWeaponEx(playerid, 35, 1); //bazuka exército
						}
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						return 1;
					}
	 				else if (PlayerInfo[playerid][pCargo] == 5)
					{
						format(gstring, sizeof(gstring), "[%s] %s pegou seus equipamentos de cargo 5.",NomeORG(playerid), sendername);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						GivePlayerWeaponEx(playerid, 16, 4); //granadas
						GivePlayerWeaponEx(playerid, 34, 4); //sniper
					    GivePlayerWeaponEx(playerid, 31, 400); //Mp4
				  	    GivePlayerWeaponEx(playerid, 29, 400); //Mp5
					    GivePlayerWeaponEx(playerid, 25, 140); //12
					    GivePlayerWeaponEx(playerid, 24, 240); //eagle
					    GivePlayerWeaponEx(playerid, 41, 5000); //spray
					    GivePlayerWeaponEx(playerid, 3, 1); //cacetete
					    if(PlayerInfo[playerid][pMembro] == 3)
						{
                             GivePlayerWeaponEx(playerid, 35, 2); //bazuka exército
						}
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						return 1;
					}
					else if(PlayerInfo[playerid][pCargo] == 6)
					{
	    			    format(gstring, sizeof(gstring), "[%s] %s pegou seus equipamentos de cargo 6.",NomeORG(playerid), sendername);
					    ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
					    GivePlayerWeaponEx(playerid, 16, 4); //granadas
						GivePlayerWeaponEx(playerid, 34, 4); //sniper
					    GivePlayerWeaponEx(playerid, 31, 400); //Mp4
				  	    GivePlayerWeaponEx(playerid, 29, 400); //Mp5
					    GivePlayerWeaponEx(playerid, 25, 150); //12
					    GivePlayerWeaponEx(playerid, 24, 250); //eagle
					    GivePlayerWeaponEx(playerid, 41, 5000); //spray
					    GivePlayerWeaponEx(playerid, 3, 1); //cacetete
					    if(PlayerInfo[playerid][pLider] == 3)
						{
                             GivePlayerWeaponEx(playerid, 35, 2); //bazuka exército
						}
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
					    return 1;
					}
				}
			}
		}
	}
	CMD:equiparm(playerid, params[])
	{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        new tmpzcmdcar = GetPlayerVehicleID(playerid);
            if (PlayerInfo[playerid][pLider] == 22 || PlayerInfo[playerid][pMembro] == 22) // CN
            {
           	    if(IsABoxCar(tmpzcmdcar) || PlayerToPoint(2, playerid,-2648.2217,1397.0399,906.4609))
		        {
					if(GetPlayerOrg(playerid) != 22)
					{
                         SendClientMessage(playerid, COR_GRAD1, "Você não é da Máfia C.N !");
				         return 1;
					}
					if(PlayerInfo[playerid][pGunLic] == 0)
 	    	        {
					     SendClientMessage(playerid, COR_GRAD1, "Você não possui a licença de armas, compre no Centro de Licenças.");
					     return 1;
 	    	        }
                    if(Equipado[playerid] == 1)
				    {
                        ResetPlayerWeapons(playerid);
					    SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					    Equipado[playerid] = 0;
					    return 1;
	    		    }
					if (PlayerInfo[playerid][pCargo] == 1)
					{
		   				format(gstring, sizeof(gstring), "* M.Cosa Nostra %s pegou seus equipamentos de cargo 1.", sendername);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeaponEx(playerid, 16, 2); //granada
						GivePlayerWeaponEx(playerid, 34, 4); //sniper
						GivePlayerWeaponEx(playerid, 31, 400); //M4
						GivePlayerWeaponEx(playerid, 29, 400); //MP5
						GivePlayerWeaponEx(playerid, 25, 100); //12
						GivePlayerWeaponEx(playerid, 24, 200); //eagle
						GivePlayerWeaponEx(playerid, 1, 1); //Soqueira
						SetPlayerArmour(playerid, 100);
						SetPlayerHealth(playerid, 100);
						Equipado[playerid] = 1;
						return 1;
					}
					else if (PlayerInfo[playerid][pCargo] == 2)
					{
	   					format(gstring, sizeof(gstring), "* M.Cosa Nostra %s pegou seus equipamentos de cargo 2.", sendername);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
                        GivePlayerWeaponEx(playerid, 16, 3); //granada
						GivePlayerWeaponEx(playerid, 34, 4); //sniper
						GivePlayerWeaponEx(playerid, 31, 400); //M4
						GivePlayerWeaponEx(playerid, 29, 400); //MP5
						GivePlayerWeaponEx(playerid, 25, 100); //12
						GivePlayerWeaponEx(playerid, 24, 210); //eagle
						GivePlayerWeaponEx(playerid, 1, 1); //Soqueira
						SetPlayerArmour(playerid, 100);
						SetPlayerHealth(playerid, 100);
						Equipado[playerid] = 1;
						return 1;
					}
					else if (PlayerInfo[playerid][pCargo] == 3)
					{
						format(gstring, sizeof(gstring), "* M.Cosa Nostra %s pegou seus equipamentos de cargo 3.", sendername);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeaponEx(playerid, 16, 3); //granada
						GivePlayerWeaponEx(playerid, 34, 4); //sniper
						GivePlayerWeaponEx(playerid, 31, 400); //M4
						GivePlayerWeaponEx(playerid, 29, 400); //MP5
						GivePlayerWeaponEx(playerid, 25, 100); //12
						GivePlayerWeaponEx(playerid, 24, 220); //eagle
						GivePlayerWeaponEx(playerid, 1, 1); //Soqueira
						SetPlayerArmour(playerid, 100);
						SetPlayerHealth(playerid, 100);
						Equipado[playerid] = 1;
						return 1;
                    }
	 				else if (PlayerInfo[playerid][pCargo] == 4)
					{
						format(gstring, sizeof(gstring), "* M.Cosa Nostra %s pegou seus equipamentos de cargo 4.", sendername);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeaponEx(playerid, 16, 4); //granada
						GivePlayerWeaponEx(playerid, 34, 4); //sniper
						GivePlayerWeaponEx(playerid, 31, 400); //M4
						GivePlayerWeaponEx(playerid, 29, 400); //MP5
						GivePlayerWeaponEx(playerid, 25, 100); //12
						GivePlayerWeaponEx(playerid, 24, 230); //eagle
						GivePlayerWeaponEx(playerid, 1, 1); //Soqueira
						SetPlayerArmour(playerid, 100);
						SetPlayerHealth(playerid, 100);
						Equipado[playerid] = 1;
						return 1;
					}
					else if (PlayerInfo[playerid][pCargo] == 5)
					{
						format(gstring, sizeof(gstring), "* M.Cosa Nostra %s pegou seus equipamentos de cargo 5.", sendername);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeaponEx(playerid, 16, 4); //granada
						GivePlayerWeaponEx(playerid, 34, 4); //sniper
						GivePlayerWeaponEx(playerid, 31, 400); //M4
						GivePlayerWeaponEx(playerid, 29, 400); //MP5
						GivePlayerWeaponEx(playerid, 25, 100); //12
						GivePlayerWeaponEx(playerid, 24, 250); //eagle
						GivePlayerWeaponEx(playerid, 1, 1); //Soqueira
						SetPlayerArmour(playerid, 100);
						SetPlayerHealth(playerid, 100);
						Equipado[playerid] = 1;
	                    return 1;
					}
					else if (PlayerInfo[playerid][pCargo] == 6)
					{
						format(gstring, sizeof(gstring), "* M.Cosa Nostra %s pegou seus equipamentos de cargo 6.", sendername);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeaponEx(playerid, 16, 4); //granada
						GivePlayerWeaponEx(playerid, 34, 4); //sniper
						GivePlayerWeaponEx(playerid, 31, 400); //M4
						GivePlayerWeaponEx(playerid, 29, 400); //MP5
						GivePlayerWeaponEx(playerid, 25, 100); //12
						GivePlayerWeaponEx(playerid, 24, 250); //eagle
						GivePlayerWeaponEx(playerid, 1, 1); //Soqueira
						SetPlayerArmour(playerid, 100);
						SetPlayerHealth(playerid, 100);
						Equipado[playerid] = 1;
						return 1;
					}
				}
	  	    }
	  	    if (PlayerInfo[playerid][pLider] == 20 || PlayerInfo[playerid][pMembro] == 20) // YAKUZA
            {
           	    if(PlayerToPoint(2, playerid,-2161.8567,646.5695,1057.5861))
		        {
                    if(Equipado[playerid] == 1)
				    {
					    ResetPlayerWeapons(playerid);
					    SetTimerEx("ResetPlayerWeapons", 1000, 0, "i", playerid);
					    Equipado[playerid] = 0;
					    return 1;
	    		    }
					if (PlayerInfo[playerid][pCargo] == 1)
					{
		   				format(gstring, sizeof(gstring), "* M.Yakuza %s pegou seus equipamentos de cargo 1.", sendername);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeaponEx(playerid, 16, 2); //granada
						GivePlayerWeaponEx(playerid, 34, 4); //sniper
						GivePlayerWeaponEx(playerid, 31, 400); //M4
						GivePlayerWeaponEx(playerid, 29, 400); //MP5
						GivePlayerWeaponEx(playerid, 25, 100); //12
						GivePlayerWeaponEx(playerid, 24, 200); //eagle
						GivePlayerWeaponEx(playerid, 1, 1); //Soqueira
						SetPlayerArmour(playerid, 100);
						SetPlayerHealth(playerid, 100);
						Equipado[playerid] = 1;
						return 1;
					}
					else if (PlayerInfo[playerid][pCargo] == 2)
					{
	   					format(gstring, sizeof(gstring), "* M.Yakuza %s pegou seus equipamentos de cargo 2.", sendername);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
                        GivePlayerWeaponEx(playerid, 16, 3); //granada
						GivePlayerWeaponEx(playerid, 34, 4); //sniper
						GivePlayerWeaponEx(playerid, 31, 400); //M4
						GivePlayerWeaponEx(playerid, 29, 400); //MP5
						GivePlayerWeaponEx(playerid, 25, 100); //12
						GivePlayerWeaponEx(playerid, 24, 210); //eagle
						GivePlayerWeaponEx(playerid, 1, 1); //Soqueira
						SetPlayerArmour(playerid, 100);
						SetPlayerHealth(playerid, 100);
						Equipado[playerid] = 1;
						return 1;
					}
					else if (PlayerInfo[playerid][pCargo] == 3)
					{
						format(gstring, sizeof(gstring), "* M.Yakuza %s pegou seus equipamentos de cargo 3.", sendername);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeaponEx(playerid, 16, 3); //granada
						GivePlayerWeaponEx(playerid, 34, 4); //sniper
						GivePlayerWeaponEx(playerid, 31, 400); //M4
						GivePlayerWeaponEx(playerid, 29, 400); //MP5
						GivePlayerWeaponEx(playerid, 25, 100); //12
						GivePlayerWeaponEx(playerid, 24, 220); //eagle
						GivePlayerWeaponEx(playerid, 1, 1); //Soqueira
						SetPlayerArmour(playerid, 100);
						SetPlayerHealth(playerid, 100);
						Equipado[playerid] = 1;
						return 1;
                    }
	 				else if (PlayerInfo[playerid][pCargo] == 4)
					{
						format(gstring, sizeof(gstring), "* M.Yakuza %s pegou seus equipamentos de cargo 4.", sendername);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeaponEx(playerid, 16, 4); //granada
						GivePlayerWeaponEx(playerid, 34, 4); //sniper
						GivePlayerWeaponEx(playerid, 31, 400); //M4
						GivePlayerWeaponEx(playerid, 29, 400); //MP5
						GivePlayerWeaponEx(playerid, 25, 100); //12
						GivePlayerWeaponEx(playerid, 24, 230); //eagle
						GivePlayerWeaponEx(playerid, 1, 1); //Soqueira
						SetPlayerArmour(playerid, 100);
						SetPlayerHealth(playerid, 100);
						Equipado[playerid] = 1;
						return 1;
					}
					else if (PlayerInfo[playerid][pCargo] == 5)
					{
						format(gstring, sizeof(gstring), "* M.Yakuza %s pegou seus equipamentos de cargo 5.", sendername);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeaponEx(playerid, 16, 4); //granada
						GivePlayerWeaponEx(playerid, 34, 4); //sniper
						GivePlayerWeaponEx(playerid, 31, 400); //M4
						GivePlayerWeaponEx(playerid, 29, 400); //MP5
						GivePlayerWeaponEx(playerid, 25, 100); //12
						GivePlayerWeaponEx(playerid, 24, 250); //eagle
						GivePlayerWeaponEx(playerid, 1, 1); //Soqueira
						SetPlayerArmour(playerid, 100);
						SetPlayerHealth(playerid, 100);
						Equipado[playerid] = 1;
	                    return 1;
					}
					else if (PlayerInfo[playerid][pCargo] == 6)
					{
						format(gstring, sizeof(gstring), "* M.Yakuza Nostra %s pegou seus equipamentos de cargo 6.", sendername);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeaponEx(playerid, 16, 4); //granada
						GivePlayerWeaponEx(playerid, 34, 4); //sniper
						GivePlayerWeaponEx(playerid, 31, 400); //M4
						GivePlayerWeaponEx(playerid, 29, 400); //MP5
						GivePlayerWeaponEx(playerid, 25, 100); //12
						GivePlayerWeaponEx(playerid, 24, 250); //eagle
						GivePlayerWeaponEx(playerid, 1, 1); //Soqueira
						SetPlayerArmour(playerid, 100);
						SetPlayerHealth(playerid, 100);
						Equipado[playerid] = 1;
						return 1;
					}
				}
	  	    }
	  	    else
		    {
				 SendClientMessage(playerid, COR_GRAD1, "Você não é da Máfia Yakuza !");
			 	 return 1;
		    }
	}
	CMD:mervarma)
    {
        if(IsPlayerConnected(playerid))
	    {
            if(!IsPlayerInMotel(playerid))
	        {
				 return 1;
	        }
			if(PlayerInfo[playerid][pMats] == 0)
			{
				 return 1;
			}
            if (PlayerInfo[playerid][pMembro] != 21 && PlayerInfo[playerid][pLider] != 21 && PlayerInfo[playerid][pMembro] != 24 && PlayerInfo[playerid][pLider] != 24 && PlayerInfo[playerid][pMembro] != 29 && PlayerInfo[playerid][pLider] != 29)
            {
			     SendClientMessage(playerid,COR_GREY,"Você não é de nenhuma Organização Mercenária!");
			     return 1;
		    }
			giveplayeridzcmd = ReturnUser(tmpzcmd);
            if(giveplayeridzcmd == playerid) { SendClientMessage(playerid, COR_GREY, "Você não pode se vender armas !"); return 1; }
			new x_weapon[32],weapon[MAX_PLAYERS],ammo[MAX_PLAYERS],price[MAX_PLAYERS];
			tmpzcmd = strtok(cmdtext,idxzcmd);
			if(!strlen(tmpzcmd))
			{
                SendClientMessage(playerid,COR_EXE,"_________________________________________________");
                SendClientMessage(playerid,COR_BRANCO,"*** Vender Armas - Mercenários ***");
				SendClientMessage(playerid,COR_GRAD1,"USE: /mervarma [ID do Player] [nome da arma]");
				SendClientMessage(playerid,COR_GREY,"Armas: cargaexplosiva(2000 materiais) -  5 balas");
				SendClientMessage(playerid,COR_GREY,"Armas: faca(4000 materiais)");
				SendClientMessage(playerid,COR_EXE,"_________________________________________________");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			if (IsPlayerConnected(giveplayeridzcmd))
			{
                if(IsACop(giveplayeridzcmd))
                {
			         SendClientMessage(playerid,COR_GRAD1,"Você não pode vender armas para policiais !");
			         return 1;
                }
                if(!PlayerInfo[giveplayeridzcmd][pGunLic])
                {
			         SendClientMessage(playerid,COR_GRAD1,"Este jogador não possui licença de armas !");
			         return 1;
                }
                if(GetPlayerOrg(giveplayeridzcmd) == 21 || GetPlayerOrg(playerid) == 24 || GetPlayerOrg(playerid) == 29)
                {
			         SendClientMessage(playerid,COR_GRAD1,"Você não pode vender armas para outros mercenários !");
			         return 1;
                }
			    if(giveplayeridzcmd != INVALID_PLAYER_ID)
			    {
                    if(giveplayeridzcmd == playerid) { SendClientMessage(playerid, COR_GREY, "Você não pode se vender armas !"); return 1; }
					x_weapon = strtok(cmdtext,idxzcmd);
					if(!strlen(x_weapon))
					{
				        //SendClientMessage(playerid,COR_GREY,"Armas: bazuca(1500) grana(1000) fumaça(500)");
						return 1;
					}
				}
				if(strcmp(x_weapon,"cargaexplosiva(playerid, params[]) { if(PlayerInfo[playerid][pMats] > 2000) { weapon[playerid] = 39; price[playerid] = 2000; ammo[playerid] = 5; PlayerInfo[giveplayeridzcmd][pGun2] = 39; PlayerInfo[giveplayeridzcmd][pAmmo2] = 5; } else { SendClientMessage(playerid,COR_GREY,"Materiais insuficientes para vender esta arma!"); return 1; } }
				else if(strcmp(x_weapon,"faca(playerid, params[]) { if(PlayerInfo[playerid][pMats] > 4000) { weapon[playerid] = 4; price[playerid] = 1500; ammo[playerid] = 1; PlayerInfo[giveplayeridzcmd][pGun2] = 4; PlayerInfo[giveplayeridzcmd][pAmmo2] = 1; } else { SendClientMessage(playerid,COR_GREY,"Materiais insuficientes para vender esta arma!"); return 1; } }
				else { SendClientMessage(playerid,COR_GREY,"Nome da arma inválida!"); return 1; }
				if (ProxDetectorS(5.0,playerid,giveplayeridzcmd))
				{
					ConsumingMoney[playerid] = 1;
					GetPlayerName(giveplayeridzcmd,giveplayerzcm,sizeof(giveplayerzcm));
					GetPlayerName(playerid,sendername,sizeof(sendername));
					format(gstring,sizeof(gstring),"Você vendeu uma %s com %d munições, e custou %d Materiais .",x_weapon,ammo[playerid],price[playerid]);
					PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
					SendClientMessage(playerid,COR_LIGHTBLUE,gstring);
					format(gstring,sizeof(gstring),"Você recebeu uma %s com %d munições do Mercenário %s.",x_weapon,ammo[playerid],sendername);
					SendClientMessage(giveplayeridzcmd,COR_LIGHTBLUE,gstring);
					PlayerPlaySound(giveplayeridzcmd,1052,0.0,0.0,0.0);
					format(gstring,sizeof(gstring),"* %s vendeu armas para %s.",sendername ,giveplayerzcm);
					ProxDetector(30.0,playerid,gstring,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
					GivePlayerWeaponEx(giveplayeridzcmd,weapon[playerid],ammo[playerid]);
					PlayerInfo[playerid][pMats] -= price[playerid];
					//SaveVendas();
				}
				else
				{
					SendClientMessage(playerid,COR_GRAD1,"O cliente não esta proximo de você.");
					return 1;
				}
			}
			else
			{
				format(gstring,sizeof(gstring),"%d não esta online este player.",giveplayeridzcmd);
				SendClientMessage(playerid,COR_GRAD1,gstring);
			}
		}
		return 1;
	}
	CMD:trrvarma)
    {
        if(IsPlayerConnected(playerid))
	    {
            if(!IsPlayerInMata(playerid))
	        {
				 return 1;
	        }
            if (PlayerInfo[playerid][pMembro] != 6 && PlayerInfo[playerid][pLider] != 6 && PlayerInfo[playerid][pMembro] != 16 && PlayerInfo[playerid][pLider] != 16 && PlayerInfo[playerid][pMembro] != 30 && PlayerInfo[playerid][pLider] != 30)
            {
			     SendClientMessage(playerid,COR_GREY,"Você não é de nenhuma Organização Terrorista!");
			     return 1;
		    }
			giveplayeridzcmd = ReturnUser(tmpzcmd);
            if(giveplayeridzcmd == playerid) { SendClientMessage(playerid, COR_GREY, "Você não pode se vender armas !"); return 1; }
			new x_weapon[32],weapon[MAX_PLAYERS],ammo[MAX_PLAYERS],price[MAX_PLAYERS];
			tmpzcmd = strtok(cmdtext,idxzcmd);
			if(!strlen(tmpzcmd))
			{
                SendClientMessage(playerid,COR_EXE,"_________________________________________________");
                SendClientMessage(playerid,COR_BRANCO,"*** Vender Armas - Terroristas ***");
				SendClientMessage(playerid,COR_GRAD1,"USE: /trrvarma [ID do Player] [nome da arma]");
				SendClientMessage(playerid,COR_GREY,"Armas: fumaca(400 materiais) -  10 balas");
			    SendClientMessage(playerid,COR_GREY,"Armas: granada(550 materiais) - 5 balas");
			    SendClientMessage(playerid,COR_GREY,"Armas: molotov(550 materiais) - 2 balas");
			    SendClientMessage(playerid,COR_GREY,"Armas: bazuca(1500 materiais) - 3 balas");
			    SendClientMessage(playerid,COR_GREY,"Armas: bazuca2(3000 materiais) - 2 balas");
				SendClientMessage(playerid,COR_EXE,"_________________________________________________");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			if (IsPlayerConnected(giveplayeridzcmd))
			{
                if(IsACop(giveplayeridzcmd))
                {
			         SendClientMessage(playerid,COR_GRAD1,"Você não pode vender armas para policiais !");
			         return 1;
                }
                if(!PlayerInfo[giveplayeridzcmd][pGunLic])
                {
			         SendClientMessage(playerid,COR_GRAD1,"Este jogador não possui licença de armas !");
			         return 1;
                }
                if(GetPlayerOrg(giveplayeridzcmd) == 6 && GetPlayerOrg(playerid) == 16 && GetPlayerOrg(playerid) == 30)
                {
			         SendClientMessage(playerid,COR_GRAD1,"Você não pode vender armas para outros terroristas !");
			         return 1;
                }
			    if(giveplayeridzcmd != INVALID_PLAYER_ID)
			    {
                    if(giveplayeridzcmd == playerid) { SendClientMessage(playerid, COR_GREY, "Você não pode se vender armas !"); return 1; }
					x_weapon = strtok(cmdtext,idxzcmd);
					if(!strlen(x_weapon))
					{
				        //SendClientMessage(playerid,COR_GREY,"Armas: bazuca(1500) grana(1000) fumaça(500)");
						return 1;
					}
				}
				if(strcmp(x_weapon,"bazuca(playerid, params[]) { if(PlayerInfo[playerid][pMats] > 1500) { weapon[playerid] = 35; price[playerid] = 1500; ammo[playerid] = 2; PlayerInfo[giveplayeridzcmd][pGun2] = 35; PlayerInfo[giveplayeridzcmd][pAmmo2] = 2; } else { SendClientMessage(playerid,COR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"fumaca(playerid, params[]) { if(PlayerInfo[playerid][pMats] > 400) { weapon[playerid] = 17; price[playerid] = 400; ammo[playerid] = 5; PlayerInfo[giveplayeridzcmd][pGun2] = 17; PlayerInfo[giveplayeridzcmd][pAmmo2] = 5; } else { SendClientMessage(playerid,COR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"molotov(playerid, params[]) { if(PlayerInfo[playerid][pMats] > 550) { weapon[playerid] = 18; price[playerid] = 550; ammo[playerid] = 3; PlayerInfo[giveplayeridzcmd][pGun2] = 18; PlayerInfo[giveplayeridzcmd][pAmmo2] = 3; } else { SendClientMessage(playerid,COR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"granada(playerid, params[]) { if(PlayerInfo[playerid][pMats] > 550) { weapon[playerid] = 16; price[playerid] = 550; ammo[playerid] = 10; PlayerInfo[giveplayeridzcmd][pGun2] = 16; PlayerInfo[giveplayeridzcmd][pAmmo2] = 10; } else { SendClientMessage(playerid,COR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"bazuca2(playerid, params[]) { if(PlayerInfo[playerid][pMats] > 5000) { weapon[playerid] = 36; price[playerid] = 2500; ammo[playerid] = 2; PlayerInfo[giveplayeridzcmd][pGun2] = 36; PlayerInfo[giveplayeridzcmd][pAmmo2] = 2; } else { SendClientMessage(playerid,COR_GREY,"Materiais insuficientes para vender esta arma!"); return 1; } }
				else { SendClientMessage(playerid,COR_GREY,"Nome da arma inválida!"); return 1; }
				if (ProxDetectorS(5.0,playerid,giveplayeridzcmd))
				{
					ConsumingMoney[playerid] = 1;
					GetPlayerName(giveplayeridzcmd,giveplayerzcm,sizeof(giveplayerzcm));
					GetPlayerName(playerid,sendername,sizeof(sendername));
					format(gstring,sizeof(gstring),"Você vendeu uma %s com %d munições, e custou %d Materiais .",x_weapon,ammo[playerid],price[playerid]);
					PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
					SendClientMessage(playerid,COR_LIGHTBLUE,gstring);
					format(gstring,sizeof(gstring),"Você recebeu uma %s com %d munições do Terrorista %s.",x_weapon,ammo[playerid],sendername);
					SendClientMessage(giveplayeridzcmd,COR_LIGHTBLUE,gstring);
					PlayerPlaySound(giveplayeridzcmd,1052,0.0,0.0,0.0);
					format(gstring,sizeof(gstring),"* %s vendeu armas para %s.",sendername ,giveplayerzcm);
					ProxDetector(30.0,playerid,gstring,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
					GivePlayerWeaponEx(giveplayeridzcmd,weapon[playerid],ammo[playerid]);
					PlayerInfo[playerid][pMats] -= price[playerid];
					//SaveVendas();
				}
				else
				{
					SendClientMessage(playerid,COR_GRAD1,"O cliente não esta proximo de você.");
					return 1;
				}
			}
			else
			{
				format(gstring,sizeof(gstring),"%d não esta online !",giveplayeridzcmd);
				SendClientMessage(playerid,COR_GRAD1,gstring);
			}
		}
		return 1;
	}
	CMD:mafiavkit(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!IsPlayerInCasarao(playerid))
	        {
				SendClientMessage(playerid,COR_GRAD1,"Você precisa estar no Casarão e dentro do BoxVille !");
				return 1;
	        }
	        if(PlayerInfo[playerid][pJailed] != 0)
    		{
	   			SendClientMessage(playerid,COR_AMARELO," Você não pode vender armas na cadeia!");
	   			return 1;
    		}
			new carid = GetPlayerVehicleID(playerid);
			if(!IsABoxCar(carid))
			{
				SendClientMessage(playerid,COR_GRAD1,"Você precisa estar dentro do BoxVille !");
				return 1;
			}
			if(GetPlayerOrg(playerid) == 20 && donocasarao != 2)
		    {
		 	     SendClientMessage(playerid, COR_GRAD1, "Você é da Máfia Yakuza, precisa estar dominando algum território para usar este comando !");
				 return 1;
		    }
		    if(GetPlayerOrg(playerid) == 22 && donocasarao != 1)
		    {
			     SendClientMessage(playerid, COR_GRAD1, "Você é da Máfia Yakuza, precisa estar dominando algum território para usar este comando !");
			     return 1;
			}
	        if (PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20 || PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)
			{
	            new x_nr[32];
				x_nr = strtok(cmdtext, idxzcmd);
				if(!strlen(x_nr))
				{
					    SendClientMessage(playerid,COR_EXE,"________________________________________________________________");
						SendClientMessage(playerid,COR_BRANCO,"*** Vender Armas - Mafiosos ***");
						SendClientMessage(playerid,COR_GREY,"USE: /mafiavkit [1 a 3] [ID do Player] ");
						SendClientMessage(playerid,COR_GREY,"Kit 1: Shotgun, m4, mp5 - (399 Materiais)");
						SendClientMessage(playerid,COR_GREY,"Kit 2: Eagle, Shotgun, m4, mp5 - (499 Materiais)");
						SendClientMessage(playerid,COR_GREY,"Kit 3: Eagle, Shotgun, m4, mp5, Sniper, Faca - (599 Materiais)");
						SendClientMessage(playerid,COR_EXE,"_________________________________________________________________");
					    return 1;
				}
				else if(strcmp(x_nr,"1(playerid, params[])
				{
		            tmpzcmd = strtok(cmdtext, idxzcmd);
					if(!strlen(tmpzcmd))
					{
                        SendClientMessage(playerid,COR_EXE,"________________________________________________________________");
						SendClientMessage(playerid,COR_BRANCO,"*** Vender Armas - Mafiosos ***");
						SendClientMessage(playerid,COR_GREY,"USE: /mafiavkit [1 a 3] [ID do Player] ");
						SendClientMessage(playerid,COR_GREY,"Kit 1: Shotgun, m4, mp5 - (399 Materiais)");
						SendClientMessage(playerid,COR_GREY,"Kit 2: Eagle, Shotgun, m4, mp5 - (499 Materiais)");
						SendClientMessage(playerid,COR_GREY,"Kit 3: Eagle, Shotgun, m4, mp5, Sniper, Faca - (599 Materiais)");
						SendClientMessage(playerid,COR_EXE,"_________________________________________________________________");
					    return 1;
					}
					giveplayeridzcmd = ReturnUser(tmpzcmd);
					if(giveplayeridzcmd == playerid) { SendClientMessage(playerid, COR_GREY, "Você não pode se vender armas!"); return 1; }
					new carid1 = GetPlayerVehicleID(giveplayeridzcmd);
					if(IsACop(giveplayeridzcmd))
					{
						SendClientMessage(playerid,COR_GRAD1,"Você não pode vender kit para policiais");
						return 1;
					}
					if(!PlayerInfo[giveplayeridzcmd][pGunLic])
					{
						SendClientMessage(playerid,COR_GRAD1,"Este jogador não possui licença de armas !");
						return 1;
					}
					if(!IsABoxCar(carid1))
					{
						SendClientMessage(playerid,COR_GRAD1,"O player para quem você vai vender precisa estar dentro do BoxVille !");
						return 1;
					}
					if(IsPlayerConnected(giveplayeridzcmd))
					{
					    if(giveplayeridzcmd != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
				            if(PlayerInfo[playerid][pMats] > 399)
							{
					    		GivePlayerMoneyEx(giveplayeridzcmd, -10000);
					    		GivePlayerMoneyEx(playerid, 10000);
					    		PlayerInfo[playerid][pMats] -= 399;
				    			GivePlayerWeaponEx(giveplayeridzcmd, 31, 300);
				    			GivePlayerWeaponEx(giveplayeridzcmd, 29, 200);
				    			GivePlayerWeaponEx(giveplayeridzcmd, 25, 100);
				    			format(gstring,sizeof(gstring),"Você vendeu o kit 1,para %s.",giveplayerzcm);
				    			SendClientMessage(playerid,COR_GRAD1,gstring);
				    			format(gstring,sizeof(gstring),"* %s vendeu kits para %s.",sendername ,giveplayerzcm);
				    			ProxDetector(30.0,playerid,gstring,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				    			return 1;
							}
							else
							{
								SendClientMessage(playerid,COR_GREY,"Materiais insuficientes para vender este kit!");
								return 1;
							}
						}
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "   O Jogador Está Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"2(playerid, params[])
				{
		            tmpzcmd = strtok(cmdtext, idxzcmd);
					if(!strlen(tmpzcmd))
					{
						SendClientMessage(playerid,COR_BRANCO,"|__________________ Vender Armas - Mafiosos __________________|");
						SendClientMessage(playerid,COR_GREY,"USE: /mafiavkit [1 a 3] [ID do Player] ");
						SendClientMessage(playerid,COR_GREY,"Kit 1: Shotgun,m4,mp5(399)");
						SendClientMessage(playerid,COR_GREY,"Kit 2: Eagle,Shotgun,m4,mp5(499)");
						SendClientMessage(playerid,COR_GREY,"Kit 3: Eagle,Shotgun,m4,mp5,sniper,faca(599)");
					    return 1;
					}
					giveplayeridzcmd = ReturnUser(tmpzcmd);
					if(giveplayeridzcmd == playerid) { SendClientMessage(playerid, COR_GREY, "Você não pode se vender armas!"); return 1; }
					new carid2 = GetPlayerVehicleID(giveplayeridzcmd);
					if(IsACop(giveplayeridzcmd))
					{
						SendClientMessage(playerid,COR_GRAD1,"Você não pode vender kit para policiais");
						return 1;
					}
					if(!IsABoxCar(carid2))
					{
						SendClientMessage(playerid,COR_GRAD1,"O player para quem você vai vender precisa estar dentro do BoxVille");
						return 1;
					}
					if(IsPlayerConnected(giveplayeridzcmd))
					{
					    GetPlayerName(playerid, sendername, sizeof(sendername));
		       			GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
					    if(PlayerInfo[playerid][pMats] > 499)
						{
					    	GivePlayerMoneyEx(giveplayeridzcmd, -12000);
					    	GivePlayerMoneyEx(playerid, 12000);
					    	PlayerInfo[playerid][pMats] -= 499;
                    		GivePlayerWeaponEx(giveplayeridzcmd, 31, 300);
				    		GivePlayerWeaponEx(giveplayeridzcmd, 29, 200);
				    		GivePlayerWeaponEx(giveplayeridzcmd, 25, 100);
				    		GivePlayerWeaponEx(giveplayeridzcmd, 24, 100);
				    		format(gstring,sizeof(gstring),"Você vendeu o kit 2,para %s.",giveplayerzcm);
				    		SendClientMessage(playerid,COR_GRAD1,gstring);
				    		format(gstring,sizeof(gstring),"* %s vendeu kits para %s.",sendername ,giveplayerzcm);
				    		ProxDetector(30.0,playerid,gstring,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				    		return 1;
						}
						else
						{
							SendClientMessage(playerid,COR_GREY,"Materiais insuficientes para vender este kit!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "   O Jogador Está Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"3(playerid, params[])
				{
		            tmpzcmd = strtok(cmdtext, idxzcmd);
					if(!strlen(tmpzcmd))
					{
						SendClientMessage(playerid,COR_BRANCO,"|__________________ Vender Armas - Mafiosos __________________|");
						SendClientMessage(playerid,COR_GREY,"USE: /mafiavkit [1 a 3] [ID do Player] ");
						SendClientMessage(playerid,COR_GREY,"Kit 1: Shotgun,m4,mp5(399)");
						SendClientMessage(playerid,COR_GREY,"Kit 2: Eagle,Shotgun,m4,mp5(499)");
						SendClientMessage(playerid,COR_GREY,"Kit 3: Eagle,Shotgun,m4,mp5,sniper,faca(599)");
					    return 1;
					}
					giveplayeridzcmd = ReturnUser(tmpzcmd);
					if(giveplayeridzcmd == playerid) { SendClientMessage(playerid, COR_GREY, "Você não pode se vender armas!"); return 1; }
					new carid3 = GetPlayerVehicleID(giveplayeridzcmd);
                    if(IsACop(giveplayeridzcmd))
					{
						SendClientMessage(playerid,COR_GRAD1,"Você não pode vender kit para policiais !");
						return 1;
					}
					if(!IsABoxCar(carid3))
					{
						SendClientMessage(playerid,COR_GRAD1,"O player para quem você vai vender precisa estar dentro do BoxVille !");
						return 1;
					}
					if(IsPlayerConnected(giveplayeridzcmd))
					{
					    GetPlayerName(playerid, sendername, sizeof(sendername));
					    GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
					    if(PlayerInfo[playerid][pMats] > 599)
						{
					    	GivePlayerMoneyEx(giveplayeridzcmd, -15000);
					    	GivePlayerMoneyEx(playerid, 15000);
					    	PlayerInfo[playerid][pMats] -= 599;
                    		GivePlayerWeaponEx(giveplayeridzcmd, 31, 300);
				    		GivePlayerWeaponEx(giveplayeridzcmd, 29, 200);
				    		GivePlayerWeaponEx(giveplayeridzcmd, 24, 100);
				    		GivePlayerWeaponEx(giveplayeridzcmd, 25, 100);
				    		GivePlayerWeaponEx(giveplayeridzcmd, 34, 80);
				    		GivePlayerWeaponEx(giveplayeridzcmd, 4, 1);
				    		format(gstring,sizeof(gstring),"Você vendeu o kit 3,para %s.",giveplayerzcm);
				    		SendClientMessage(playerid,COR_GRAD1,gstring);
				    		format(gstring,sizeof(gstring),"* %s vendeu kits para %s.",sendername ,giveplayerzcm);
				    		ProxDetector(30.0,playerid,gstring,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				    		return 1;
						}
						else
						{
							SendClientMessage(playerid,COR_GREY,"Materiais insuficientes para vender este kit!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "   O Jogador Está Offline !");
					    return 1;
					}
				}
	        }
	        else
	        {
	            SendClientMessage(playerid,COR_GREY,"Você não é de nenhuma Organização Mafiosa!");
	            return 1;
	        }
	    }
	    return 1;
    }
	CMD:mafia)
	{
	    if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20 || PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)
    	{
			new x_nr[150];
			x_nr = strtok(cmdtext, idxzcmd);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COR_BRANCO, "Use: /mafia [nome]");
				SendClientMessage(playerid, COR_BRANCO, "Nomes validos: pegar, trocar.");
				return 1;
			}
			if(strcmp(x_nr,"pegar(playerid, params[])
			{
				if(PlayerToPoint(3.0,playerid,1738.6844,-1944.9553,13.5647))
				{
  	    			if(MatsHolding[playerid] >= 55)
  	   				{
         				SendClientMessage(playerid, COR_GREY, " Você já tem Pacotes !");
	        			return 1;
        			}
		        	tmpzcmd = strtok(cmdtext, idxzcmd);
		        	if(!strlen(tmpzcmd))
					{
						SendClientMessage(playerid, COR_BRANCO, "Use: /mafia pegar [quantidade]  *Max p/ Vez = 55*");
						return 1;
					}
      				moneyszcmd = strval(tmpzcmd);
					if(moneyszcmd < 1 || moneyszcmd > 55) { SendClientMessage(playerid, COR_GREY, "   O Números de Pacotes à ser pegos tem que ser mais que 1 e menos que 50 !"); return 1; }
					new price = moneyszcmd * 100;
					if(GetPlayerMoneyEx(playerid) > price)
					{
    					format(gstring, sizeof(gstring), "* Voce recebeu %d Materiais por R$[%d].", moneyszcmd, price);
				    	SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
				    	GivePlayerMoneyEx(playerid, - price);
				    	MatsHolding[playerid] = moneyszcmd;
					}
					else
					{
    					format(gstring, sizeof(gstring), "Você não tem R$[%d] !", price);
				    	SendClientMessage(playerid, COR_GREY, gstring);
					}
				}
   				else
		    	{
      				SendClientMessage(playerid, COR_GREY, " Você não está nas caixas de Materiais na Estação Unity !");
       	 			return 1;
 	  			}
			}
			else if(strcmp(x_nr,"trocar(playerid, params[])
			{
			    if(PlayerToPoint(3.0,playerid,1173.2739,-2037.0060,69.1413))
			    {
			        if(MatsHolding[playerid] > 0)
			        {
			            new payout = (100)*(MatsHolding[playerid]);
			            format(gstring, sizeof(gstring), "* Você pagou [%d] para o Armazén pelos seus %d pacotes.", payout, MatsHolding[playerid]);
					    SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
			            PlayerInfo[playerid][pMats] += payout;
			            MatsHolding[playerid] = 0;
			        }
			        else
			        {
			            SendClientMessage(playerid, COR_GREY, "   Você não tem nenhum pacote !");
				        return 1;
			        }
			    }
			    else
			    {
			        SendClientMessage(playerid, COR_GREY, "   Você não está nas caixas de Materiais no Casarão !");
			        return 1;
			    }
			}
		}
		return 1;
	}
	CMD:mafiavarma)
    {
	    if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COR_AMARELO," Você não pode vender armas na cadeia!");
	   		return 1;
   		}
   		if(GetPlayerOrg(playerid) == 20 && donocasarao != 2)
		{
		    SendClientMessage(playerid, COR_GRAD1, "Você é da Máfia Yakuza, precisa estar dominando algum território para usar este comando !");
		    return 1;
		}
		if(GetPlayerOrg(playerid) == 22 && donocasarao != 1)
		{
		    SendClientMessage(playerid, COR_GRAD1, "Você é da Máfia Yakuza, precisa estar dominando algum território para usar este comando !");
		    return 1;
		}
        if(IsPlayerConnected(playerid))
	    {
		    if (PlayerInfo[playerid][pMembro] != 20 && PlayerInfo[playerid][pLider] != 20 && PlayerInfo[playerid][pMembro] != 22 && PlayerInfo[playerid][pLider] != 22 && PlayerInfo[playerid][pMembro] != 28 && PlayerInfo[playerid][pLider] != 28)
			{
			    SendClientMessage(playerid,COR_GREY,"Você não é de nenhuma Organização Mafiosa!");
			    return 1;
			}
			if(PlayerInfo[giveplayeridzcmd][pLevel] < 2)
			{
				SendClientMessage(playerid, COR_GRAD2, "Você não pode vender armas para jogadores level 2!");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
            if (giveplayeridzcmd == playerid)
			{
			    SendClientMessage(playerid,COR_GREY,"Você não pode vender armas pra si mesmo!");
			    return 1;
			}
			new x_weapon[32],weapon[MAX_PLAYERS],ammo[MAX_PLAYERS],price[MAX_PLAYERS];
			tmpzcmd = strtok(cmdtext,idxzcmd);
			if(!strlen(tmpzcmd))
			{
                SendClientMessage(playerid,COR_GREEN,"__________________________________________________________");
                SendClientMessage(playerid,COR_BRANCO,"*** Vender Armas Mafiosos ***");
				SendClientMessage(playerid,COR_GRAD1,"USE: /mafiavarma [ID do Player] [nome da arma]");
				SendClientMessage(playerid,COR_GREY,"Armas: pistola(50) eagle(200) mp5(150) faca(50) sniper(200)");
				SendClientMessage(playerid,COR_GREY,"Armas: flores(25) ak47(200) m4(200) rifle(200) shotgun(150)");
				SendClientMessage(playerid,COR_GREEN,"__________________________________________________________");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			if (IsPlayerConnected(giveplayeridzcmd))
			{
			    if(giveplayeridzcmd != INVALID_PLAYER_ID)
			    {
			        giveplayeridzcmd = ReturnUser(tmpzcmd);
					if(giveplayeridzcmd == playerid) { SendClientMessage(playerid, COR_GREY, "Você não pode se vender armas!"); return 1; }
					x_weapon = strtok(cmdtext,idxzcmd);
					if(!strlen(x_weapon))
					{
                        SendClientMessage(playerid,COR_GREEN,"__________________________________________________________");
                        SendClientMessage(playerid,COR_BRANCO,"** Vender Armas Mafiosos ***");
			 	        SendClientMessage(playerid,COR_GRAD1,"USE: /mafiavarma [ID do Player] [nome da arma]");
				        SendClientMessage(playerid,COR_GREY,"Armas: pistola(50) eagle(200) mp5(150) faca(50) sniper(200)");
				        SendClientMessage(playerid,COR_GREY,"Armas: flores(25) ak47(200) m4(200) rifle(200) shotgun(150)");
				        SendClientMessage(playerid,COR_GREEN,"__________________________________________________________");
						return 1;
					}
				}
				if(strcmp(x_weapon,"pistola(playerid, params[]) { if(PlayerInfo[playerid][pMats] > 49) { weapon[playerid] = 23; price[playerid] = 50; ammo[playerid] = 240; PlayerInfo[giveplayeridzcmd][pGun2] = 23; PlayerInfo[giveplayeridzcmd][pAmmo2] = 240; } else { SendClientMessage(playerid,COR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"flores(playerid, params[]) { if(PlayerInfo[playerid][pMats] > 24) { weapon[playerid] = 14; price[playerid] = 25; ammo[playerid] = 1; PlayerInfo[giveplayeridzcmd][pGun1] = 14; PlayerInfo[giveplayeridzcmd][pAmmo1] = 1; } else { SendClientMessage(playerid,COR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"eagle(playerid, params[]) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 24; price[playerid] = 100; ammo[playerid] = 220; PlayerInfo[giveplayeridzcmd][pGun2] = 24; PlayerInfo[giveplayeridzcmd][pAmmo2] = 220; } else { SendClientMessage(playerid,COR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"mp5(playerid, params[]) {	if(PlayerInfo[playerid][pMats] > 149) { weapon[playerid] = 29; price[playerid] = 100; ammo[playerid] = 360; PlayerInfo[giveplayeridzcmd][pGun2] = 29; PlayerInfo[giveplayeridzcmd][pAmmo2] = 360; } else { SendClientMessage(playerid,COR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"shotgun(playerid, params[]) {	if(PlayerInfo[playerid][pMats] > 149) { weapon[playerid] = 25; price[playerid] = 200; ammo[playerid] = 190; PlayerInfo[giveplayeridzcmd][pGun2] = 25; PlayerInfo[giveplayeridzcmd][pAmmo2] = 190; } else { SendClientMessage(playerid,COR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"ak47(playerid, params[]) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 30; price[playerid] = 200; ammo[playerid] = 360; PlayerInfo[giveplayeridzcmd][pGun2] = 30; PlayerInfo[giveplayeridzcmd][pAmmo2] = 360; } else { SendClientMessage(playerid,COR_GREY,"   Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"m4(playerid, params[]) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 31; price[playerid] = 200; ammo[playerid] = 360; PlayerInfo[giveplayeridzcmd][pGun2] = 31; PlayerInfo[giveplayeridzcmd][pAmmo2] = 360; } else { SendClientMessage(playerid,COR_GREY,"   Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"rifle(playerid, params[]) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 33; price[playerid] = 200; ammo[playerid] = 230; PlayerInfo[giveplayeridzcmd][pGun2] = 33; PlayerInfo[giveplayeridzcmd][pAmmo2] = 230; } else { SendClientMessage(playerid,COR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"faca(playerid, params[]) { if(PlayerInfo[playerid][pMats] > 49) { weapon[playerid] = 4; price[playerid] = 50; ammo[playerid] = 1; PlayerInfo[giveplayeridzcmd][pGun1] = 4; PlayerInfo[giveplayeridzcmd][pAmmo1] = 1; } else { SendClientMessage(playerid,COR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"sniper(playerid, params[]) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 34; price[playerid] = 200; ammo[playerid] = 100; PlayerInfo[giveplayeridzcmd][pGun2] = 34; PlayerInfo[giveplayeridzcmd][pAmmo2] = 100; } else { SendClientMessage(playerid,COR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else { SendClientMessage(playerid,COR_GREY,"Nome da arma inválida!"); return 1; }
				if (ProxDetectorS(5.0,playerid,giveplayeridzcmd))
				{
					ConsumingMoney[playerid] = 1;
					GetPlayerName(giveplayeridzcmd,giveplayerzcm,sizeof(giveplayerzcm));
					GetPlayerName(playerid,sendername,sizeof(sendername));
					format(gstring,sizeof(gstring),"Você vendeu uma %s com %d munições, e custou %d materiais.",x_weapon,ammo[playerid],price[playerid]);
					PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
					SendClientMessage(playerid,COR_GRAD1,gstring);
					format(gstring,sizeof(gstring),"Você recebeu uma %s com %d munições do mafioso %s.",x_weapon,ammo[playerid],sendername);
					SendClientMessage(giveplayeridzcmd,COR_GRAD1,gstring);
					PlayerPlaySound(giveplayeridzcmd,1052,0.0,0.0,0.0);
					format(gstring,sizeof(gstring),"* %s vendeu armas para %s.",sendername ,giveplayerzcm);
					ProxDetector(30.0,playerid,gstring,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
					GivePlayerWeaponEx(giveplayeridzcmd,weapon[playerid],ammo[playerid]);
					PlayerInfo[playerid][pMats] -= price[playerid];
					//SaveVendas();
				}
				else
				{
					SendClientMessage(playerid,COR_GRAD1,"O cliente não esta proximo de você.");
					return 1;
				}
			}
			else
			{
				format(gstring,sizeof(gstring),"%d não esta online este player.",giveplayeridzcmd);
				SendClientMessage(playerid,COR_GRAD1,gstring);
			}
		}
		return 1;
    }
    CMD:abastecer(playerid, params[])
    {
        if(IsPlayerInAnyVehicle(playerid))
	    {
	       if(IsAtGasStation(playerid))
	       {
			  if(GetPlayerState(playerid) == 2)
			  {
	               ShowPlayerDialog(playerid, 73, DIALOG_STYLE_LIST,"Voce deseja abastecer seu veiculo?","Abastecer+20 Por Centro - R$ 100\nAbastecer+50 Por Centro - R$ 250\nAbastecer 100 Por Cento - R$ 350\nAbastecer Orgs Especiais - R$ 50","Aceitar","Cancelar");
	          }
      	   }
      	   else
      	   {
				SendClientMessage(playerid, COR_GRAD1, "Você não está em um posto de Gasolina");
				return 1;
		   }
        }
        return 1;
    }
	CMD:algemar(playerid, params[])
    {
        if(IsPlayerConnected(playerid))
        {
             if(!IsACop(playerid) && PlayerInfo[playerid][pMembro] != 7 && PlayerInfo[playerid][pLider] != 7 && PlayerInfo[playerid][pEmprego] != 7)
             {
                  SendClientMessage(playerid, COR_GRAD1, "Você não é um Oficial !");
			 	  return 1;
             }
             tmpzcmd = strtok(cmdtext, idxzcmd);
             if(!strlen(tmpzcmd))
             {
                       SendClientMessage(playerid, COR_BRANCO, "Use: /algemar [id]");
                       return true;
             }
             giveplayeridzcmd = ReturnUser(tmpzcmd);
             if(IsPlayerConnected(giveplayeridzcmd))
             {
                  if(giveplayeridzcmd != INVALID_PLAYER_ID)
                  {
                       if(gTeam[giveplayeridzcmd] == 2 || IsACop(giveplayeridzcmd))
					   {
                            SendClientMessage(playerid, COR_GREY, "Você não pode algemar COPs !");
                            return true;
                       }
                       if(Algemado[giveplayeridzcmd] == 1)
                       {
                            SendClientMessage(playerid, COR_GREY, "O Jogador já esta algemado !");
                            return true;
                       }
                       if(WantedLevel[giveplayeridzcmd] == 0)
                       {
							SendClientMessage(playerid, COR_GREY, "O Jogador não está procurado !");
							return 1;
                       }
                       if(GetPlayerState(giveplayeridzcmd) == 2)
                       {
							SendClientMessage(playerid, COR_GREY, "Você não pode algemar o motorista do veiculo!");
							return 1;
                       }
                       if(GetPlayerState(playerid) == 2 && !IsPlayerInAnyVehicle(giveplayeridzcmd))
                       {
                            SendClientMessage(playerid, COR_GREY, "Você está dentro de um veiculo, e por isso você não pode alguemar que está fora !");
							return 1;
					   }
					   else if(SeRendeu[giveplayeridzcmd] == 0)
				       {
				      		SendClientMessage(playerid, COR_GREY, "Esse jogador não se rendeu ! (Mandar /hd ou /hi)");
	        				return 1;
				       }
					   if(PlayerInfo[playerid][pEmprego] == 7)
   					   {
      		    			if(!PlayerToPoint(30.0,playerid,1770.6527,-1573.1688,1734.9430))
      		    			{
      		        			SendClientMessage(playerid, COR_GREY, "Você só pode algemar jogadores dentro da penitenciária !");
      		        			return 1;
      		    			}
				       }
                       if (ProxDetectorS(2.0, playerid, giveplayeridzcmd))
                       {
                            if(giveplayeridzcmd == playerid) { SendClientMessage(playerid, COR_GREY, "Você nao pode se algemar!"); return true; }
                            {
                                 GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
                                 GetPlayerName(playerid, sendername, sizeof(sendername));
                                 format(gstring, sizeof(gstring), "* Você foi algemado por: %s.", PlayerName(playerid));
                                 SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
                                 format(gstring, sizeof(gstring), "* Você algemou %s.", giveplayerzcm);
                                 SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
                                 format(gstring, sizeof(gstring), "* Oficial: %s algemou o suspeito: %s.", sendername ,giveplayerzcm);
                                 ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
                                 GameTextForPlayer(giveplayeridzcmd, "~r~Algemado", 2500, 3);
                                 PlayerCuffed[giveplayeridzcmd] = 2;
                                 SetPlayerAttachedObject(giveplayeridzcmd, 4, 19418, 6, -0.031999, 0.024000,-0.024000,-7.900000,-32.000011,-72.299987, 1.115998, 1.322000, 1.406000);
                                 SetPlayerSpecialAction(giveplayeridzcmd, 24);
                                 Algemado[giveplayeridzcmd] = 1;
                                 SeRendeu[giveplayeridzcmd] = 0;
								 if(ProcuraOffer[giveplayeridzcmd] == playerid)
								 {
								    ProcuraOffer[giveplayeridzcmd] = 999;
								    format(gstring, sizeof(gstring), "[Procurando] %s[%d] que você estava procurando foi algemado, para cancelar a busca, use: /procuraroff.", PlayerName(playerid), playerid);
								    SendClientMessage(giveplayeridzcmd, COR_AMARELO, gstring);
								 }
                            }
                       }
                       else
                       {
                            SendClientMessage(playerid, COR_GREY, " O Jogador está longe de Você !");
                            return true;
				       }
	               }
				   else
				   {
                        SendClientMessage(playerid, COR_GREY, "Esse não é um jogador ativo !");
                        return true;
                   }
             }
        }
        return true;
    }
    CMD:desalgemar(playerid, params[])
    {
         if(IsPlayerConnected(playerid))
         {
			  if(!IsACop(playerid) && PlayerInfo[playerid][pEmprego] != 7)
			  {
				   SendClientMessage(playerid, COR_GREY, "* Você não é um Oficial!");
				   return 1;
			  }
              tmpzcmd = strtok(cmdtext, idxzcmd);
              if(!strlen(tmpzcmd))
			  {
                   SendClientMessage(playerid, COR_BRANCO, "USE: /desalgemar [id]");
                   return 1;
              }
              giveplayeridzcmd = ReturnUser(tmpzcmd);
              if(IsPlayerConnected(giveplayeridzcmd))
              {
                   if(giveplayeridzcmd != INVALID_PLAYER_ID)
                   {
                        if (ProxDetectorS(8.0, playerid, giveplayeridzcmd))
                        {
                             if(giveplayeridzcmd == playerid)
							 {
							      SendClientMessage(playerid, COR_GREY, "Você não pode se desalgemar!");
								  return 1;
						     }
                             if(PlayerCuffed[giveplayeridzcmd])
                             {
                                  GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
                                  GetPlayerName(playerid, sendername, sizeof(sendername));
                                  format(gstring, sizeof(gstring), "* Você foi desalgemado pelo: %s.", sendername);
                                  SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
                                  format(gstring, sizeof(gstring), "* Você desalgemou %s.", giveplayerzcm);
                                  SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
                                  GameTextForPlayer(giveplayeridzcmd, "~g~Desalgemado", 2500, 3);
                                  RemovePlayerAttachedObject(giveplayeridzcmd, 4);
                                  SetPlayerSpecialAction(giveplayeridzcmd, SPECIAL_ACTION_NONE);
                                  PlayerCuffed[giveplayeridzcmd] = 0;
                                  PlayerMutado[giveplayeridzcmd] = 0;
                                  Algemado[giveplayeridzcmd] = 0;
                             }
                             else
                             {
                                  SendClientMessage(playerid, COR_GREY, " Este jogador não está algemado !");
                                  return 1;
                             }
                        }
                        else
                        {
                             SendClientMessage(playerid, COR_GREY, " O Jogador está longe de você !");
                             return 1;
                        }
                   }
              }
              else
              {
                   SendClientMessage(playerid, COR_GREY, " O Jogador Está Off-Line !");
                   return 1;
              }
         }
         return 1;
	}
	CMD:procuraroff)
	{
	    KillTimer(timer[playerid]);
	    DisablePlayerCheckpoint(playerid);
	    SendClientMessage(playerid, COR_GRAD1, "Você retirou o seu checkpoint !");
	    return 1;
	}
    CMD:acharcasa(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
		    tmpzcmd = strtok(cmdtext, idxzcmd);
		    new CasaLucas = strval(tmpzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /acharcasa [ID]");
				return true;
			}
			SetPlayerCheckpoint(playerid, HouseInfo[CasaLucas][hEntrancex], HouseInfo[CasaLucas][hEntrancey], HouseInfo[CasaLucas][hEntrancez], 5.0);
		}
		return 1;
	}
	CMD:pchuck(playerid, params[])
	{
         tmpzcmd = strtok(cmdtext, idxzcmd);
		 if(!strlen(tmpzcmd))
		 {
		      SendClientMessage(playerid, COR_GRAD2, "USE: /pchuck [ id ]");
			  return true;
		 }
		 giveplayeridzcmd = ReturnUser(tmpzcmd);
		 if(PlayerInfo[playerid][pTrazerChuck] == 1)
		 {
			  if(PrimeiroChuck[giveplayeridzcmd] == 1)
			  {
				   new Float:pX,Float:pY,Float:pZ;
                   DisablePlayerCheckpoint(playerid);
				   GetPlayerPos(giveplayeridzcmd, pX,pY,pZ);
				   SetPlayerCheckpoint(playerid, pX,pY,pZ, 6);
				   GameTextForPlayer(playerid, "~r~siga o checkpoint !",5000, 6);
				   timer[playerid] = SetTimerEx("Procurando",500,true,"ii",playerid, giveplayeridzcmd);
			  }
			  else
			  {
				   SendClientMessage(playerid, COR_GRAD1, "Você só pode procurar pelo id do Chuck Norris !");
				   return 1;
			  }
		 }
		 else
		 {
			  SendClientMessage(playerid, COR_GRAD1, "Você não está no evento paintball !");
			  return 1;
		 }
	}
	CMD:procurar(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if((PlayerInfo[playerid][pEmprego] != 1) && (PlayerInfo[playerid][pEmprego] != 3))
		    {
				SendClientMessage(playerid, COR_GREY, "Você não é Detetive/Segurança !");
				return true;
		    }
			if(UsedFind[playerid] != 0 && PlayerInfo[playerid][pDetSkill] < 201)
			{
			    SendClientMessage(playerid, COR_GREY, "Você só pode procurar novamente, daqui a 2 Minutos !");
			    return true;
			}
		    tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /procurar [id]");
				return true;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			if(AdminTrabalhando[giveplayeridzcmd] != 0)
	 	    {
                 SendClientMessage(playerid, COR_GREY, "Você não pode procurar admins em modo trabalho !");
                 return 1;
		    }
		    if(NaPorraDoEvento[giveplayeridzcmd] == true)
		    {
		        SendClientMessage(playerid, COR_GREY, "Você não pode procurar jogadores que estejam neste evento!");
		        return 1;
		    }
	        if(PlayerInfo[giveplayeridzcmd][pAdmin] >= 1340)
            {
            	SendClientMessage(playerid, COR_GRAD2, "Você não pode procurar por Admins Donos!");
             	return 1;
            }
			if(IsPlayerConnected(giveplayeridzcmd))
			{
			    if(giveplayeridzcmd != INVALID_PLAYER_ID)
			    {
                    GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
                    static Float:X,Float:Y,Float:Z;
                    ProcuraOffer[playerid] = giveplayeridzcmd;
                    if(PlayerInfo[giveplayeridzcmd][pJailed] != 0)
                    {
						 DisablePlayerCheckpoint(playerid);
						 if(PlayerInfo[giveplayeridzcmd][pPenitenciaria] == 0)
						 {
					          format(gstring, sizeof gstring, "O Jogador está dentro da Penitenciária LS!");
					          SendClientMessage(playerid, COR_LIGHTRED, gstring);
					     }
					     else if(PlayerInfo[giveplayeridzcmd][pPenitenciaria] == 1)
						 {
					          format(gstring, sizeof gstring, "O Jogador está dentro da Penitenciária LS!");
					          SendClientMessage(playerid, COR_LIGHTRED, gstring);
					     }
					     else if(PlayerInfo[giveplayeridzcmd][pPenitenciaria] == 2)
						 {
					          format(gstring, sizeof gstring, "O Jogador %s está no carandiru !", giveplayerzcm);
					          SendClientMessage(playerid, COR_LIGHTRED, gstring);
					     }
					     SetPlayerCheckpoint(playerid, X,Y,Z, 6);
				    	 return true;
                    }
                    if(emduelo[giveplayeridzcmd] == 1)
					{
						SendClientMessage(playerid, COR_LIGHTRED, "O Jogador está em um duelo na arena de duelos!");
						DisablePlayerCheckpoint(playerid);
						SetPlayerCheckpoint(playerid, X,Y,Z, 6);
						return true;
					}
       				if (localizardppm[giveplayeridzcmd] == 1)
				    {
				    	DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro da HQ Policia Militar!");
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
				    	return true;
					}
					if (localizardpbope[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro do interior da HQ da B.O.P.E!");
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizardppf[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro do interior da HQ da Polícia Federal!");
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizardppc[giveplayeridzcmd] == 1)
				    {
			            DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro do interior da HQ da Polícia Civil!");
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
                    if (localizardprota[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro do interior da Rota!");
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
	                    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizardpgate[giveplayeridzcmd] == 1)
				    {
				        DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro do interior da GATE!");
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizarrep[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro do interior da HQ Repórteres!");
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizarhitman[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está no interior da HQ Hitmans !");
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
                        SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizaraztecas[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro do interior da HQ Los Aztecas!");
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizargroove[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro do interior da HQ Groove Street!");
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
				    	return true;
					}
					if (localizarballas[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro do interior da HQ Ballas!");
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizarvagos[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro do interior da HQ Los Vagos!");
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizarcv[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro do interior da HQ Comando Vermelho!");
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizarpcc[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro do interior da HQ PCC!");
                        SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizartaliban[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro do interior da HQ Taliban!");
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizaralqaeda[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro do interior da HQ Al'qaeda!");
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizarcosa[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro do interior da HQ Cosa Nostra!");
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizaryakuza[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro do interior da HQ Yakuza!", giveplayerzcm);
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizarsons[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro do interior da HQ Sons Of Anarchy!", giveplayerzcm);
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizarsonsbanheiro[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro do interior da HQ Sons Of Anarchy!", giveplayerzcm);
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizarmayans[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro do interior da HQ Mayans!", giveplayerzcm);
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
                    if (localizaralhambra[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador %s está no interior do Alhambra!", giveplayerzcm);
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizarputeiro[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador %s está no interior do Puteiro !", giveplayerzcm);
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
                        SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizarmotel[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador %s está no interior do Motel !", giveplayerzcm);
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
                    if (localizarcativeiro1[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador %s está no interior do Cativeiro !", giveplayerzcm);
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
				    	return true;
					}
					if (localizarcativeiro2[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador %s está no interior do Cativeiro 2 !", giveplayerzcm);
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
				    	return true;
					}
					if (localizarcativeiro3[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador %s está no interior do Cativeiro 3 !", giveplayerzcm);
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
				    	return true;
					}
					if (localizarcativeiro4[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador %s está no interior do Cativeiro 4 !", giveplayerzcm);
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
				    	return true;
					}
					if (locaizadoPenitenciariaLS[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro da Penitenciária LS!");
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizadoLotericaLS[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro da Lotérica Los Santos!");
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizadolj1[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro da Loja de Armas 1!");
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizadolj2[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro da Loja de Armas 2!");
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizadolj3[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro da Loja de Armas 3!");
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizadoRestaurante[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro do Restaurante Los Santos!");
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizadoPizzaria[giveplayeridzcmd] == 1)
					{
	    				DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador está dentro da Pizzaria LS!");
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizarbanco[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador %s está no interior do Cofre Banco de Los Santos !", giveplayerzcm);
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizarmecanico[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador %s está no interior da HQ Mecânicos !", giveplayerzcm);
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if(localizarassassins[giveplayeridzcmd] == 1)
					{
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador %s está no interior da HQ Assassins !", giveplayerzcm);
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
                    if (localizarpref[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador %s está no interior da Prefeitura de Los Santos !", giveplayerzcm);
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if (localizarpreflv[giveplayeridzcmd] == 1)
				    {
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador %s está no interior da Prefeitura de Las Venturas !", giveplayerzcm);
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if(localizargl[giveplayeridzcmd] == 1)
					{
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador %s está no interior do Ginásio de Lutas !", giveplayerzcm);
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if(localizar247gasstation[giveplayeridzcmd] == 1)
					{
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador %s está no interior da 24/7 Posto Norte !", giveplayerzcm);
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if(localizar247postosul[giveplayeridzcmd] == 1)
					{
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador %s está no interior da 24/7 Posto Sul !", giveplayerzcm);
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if(localizar247maddog[giveplayeridzcmd] == 1)
					{
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador %s está no interior da 24/7 Mansão Maddog !", giveplayerzcm);
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if(localizar247pracadp[giveplayeridzcmd] == 1)
					{
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador %s está no interior da 24/7 Prefeitura !", giveplayerzcm);
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if(localizar247barlv[giveplayeridzcmd] == 1)
					{
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador %s está no interior da 24/7 LV !", giveplayerzcm);
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if(localizar247lv[giveplayeridzcmd] == 1)
					{
					    DisablePlayerCheckpoint(playerid);
					    format(gstring, sizeof gstring, "O Jogador %s está no interior da 24/7 LV PERTO HQ EXÉRCITO !", giveplayerzcm);
					    SendClientMessage(playerid, COR_LIGHTRED, gstring);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					    return true;
					}
					if(InteriorAtual[playerid] == 26)
					{
                        DisablePlayerCheckpoint(playerid);
		                format(gstring, sizeof gstring, "%s[%d] está no interior do Mercado Negro !", giveplayerzcm,giveplayeridzcmd);
	                    SendClientMessage(playerid, COR_LIGHTRED, gstring);
			            SetPlayerCheckpoint(playerid, X,Y,Z, 6);
         	            return true;
					}
					if(InteriorAtual[playerid] == 25)
					{
                        DisablePlayerCheckpoint(playerid);
		                format(gstring, sizeof gstring, "%s[%d] está no interior do esgoto !", giveplayerzcm,giveplayeridzcmd);
	                    SendClientMessage(playerid, COR_LIGHTRED, gstring);
			            SetPlayerCheckpoint(playerid, X,Y,Z, 6);
         	            return true;
					}
					if(InteriorAtual[playerid] == 27)
					{
                        DisablePlayerCheckpoint(playerid);
		                format(gstring, sizeof gstring, "%s[%d] está no interior do Cinema !", giveplayerzcm,giveplayeridzcmd);
	                    SendClientMessage(playerid, COR_LIGHTRED, gstring);
			            SetPlayerCheckpoint(playerid, X,Y,Z, 6);
         	            return true;
					}
					if(InteriorAtual[playerid] == 26)
					{
                        DisablePlayerCheckpoint(playerid);
		                format(gstring, sizeof gstring, "%s[%d] está no interior do Mercado Negro !", giveplayerzcm,giveplayeridzcmd);
	                    SendClientMessage(playerid, COR_LIGHTRED, gstring);
			            SetPlayerCheckpoint(playerid, X,Y,Z, 6);
         	            return true;
					}
					if(HouseEntered[giveplayeridzcmd] != 999)
				    {
		                DisablePlayerCheckpoint(playerid);
		                format(gstring, sizeof gstring, "%s[%d] está dentro da casa [%d], digite /info e procure-a no mapa !", giveplayerzcm,giveplayeridzcmd,HouseEntered[giveplayeridzcmd]);
	                    SendClientMessage(playerid, COR_LIGHTRED, gstring);
			            SetPlayerCheckpoint(playerid, X,Y,Z, 6);
         	            return true;
					}
					if(Inenforcer[giveplayeridzcmd] != 0)
					{
                        DisablePlayerCheckpoint(playerid);
		                format(gstring, sizeof gstring, "%s[%d] está dentro da cela do enforcer [%d] !", Inenforcer[giveplayeridzcmd]);
	                    SendClientMessage(playerid, COR_LIGHTRED, gstring);
			            SetPlayerCheckpoint(playerid, X,Y,Z, 6);
         	            return true;
					}
					DisablePlayerCheckpoint(playerid);
					KillTimer(timer[playerid]);
				    GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
					GetPlayerPos(giveplayeridzcmd, X,Y,Z);
					SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					GameTextForPlayer(playerid, "~p~siga o checkpoint !",5000, 6);
					timer[playerid] = SetTimerEx("Procurando",500,true,"ii",playerid,giveplayeridzcmd);
					PlayerInfo[playerid][pDetSkill] ++;
					UsedFind[playerid] = 1;
					if(PlayerInfo[playerid][pDetSkill] == 50)
					{
					     SendClientMessage(playerid, COR_AMARELO, "* Seu nível de detetive agora é 2, Você pode procurar mais rápido e encontrar mais rápido.");
					}
					else if(PlayerInfo[playerid][pDetSkill] == 100)
					{
					     SendClientMessage(playerid, COR_AMARELO, "* Seu nível de detetive agora é 3, Você pode procurar mais rápido e encontrar mais rápido.");
					}
					else if(PlayerInfo[playerid][pDetSkill] == 150)
					{
					     SendClientMessage(playerid, COR_AMARELO, "* Seu nível de detetive agora é 4, Você pode procurar mais rápido e encontrar mais rápido.");
					}
					else if(PlayerInfo[playerid][pDetSkill] == 200)
					{
					     SendClientMessage(playerid, COR_AMARELO, "* Seu nível de detetive agora é 5, Você pode procurar mais rápido e encontrar mais rápido.");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "   Esse não é um jogador ativo !");
			}
		}
	    return true;
	}
    CMD:id(playerid, params[])//)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /id [ nick ]");
				return true;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
			if(IsPlayerConnected(giveplayeridzcmd))
			{
			    if(giveplayeridzcmd != INVALID_PLAYER_ID)
			    {
                     format(gstring, sizeof(gstring), "ID: (%d) %s",giveplayeridzcmd, giveplayerzcm);
                     SendClientMessage(playerid, COR_GREY, gstring);
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Esse não é um jogador ativo !");
				return 1;
			}
		}
		return 1;
	}
	CMD:proteger(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 3)
		    {
				SendClientMessage(playerid, COR_GREY, "Você não é um segurança!");
				return 1;
		    }
		    if(PlayerInfo[playerid][pJailed] != 0)
		    {
		        SendClientMessage(playerid, COR_GREY, "Você não pode digitar este comando agora!");
				return 1;
		    }
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /proteger [id] [preço]");
				return 1;
			}
			if(GetTickCount() - TempoProteger[playerid] < 60000)
            {
	             SendClientMessage(playerid, COR_GREY, "Você só pode usar este comando a cada 1 minuto !");
                 return 1;
		    }
			new money;
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)) { return 1; }
			money = strval(tmpzcmd);
			if(money < 2000 || money > 10000) { SendClientMessage(playerid, COR_GREY, "A proteção deve custar entre R$2000 e R$10000!"); return 1; }
			if(IsPlayerConnected(giveplayeridzcmd))
			{
			    if(giveplayeridzcmd != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, giveplayeridzcmd))
					{

					    if(PlayerInfo[giveplayeridzcmd][pEmprego] == 3)
		                {
				             SendClientMessage(playerid, COR_GREY, "Você não pode proteger um segurança !");
				             return 1;
		                }
					    GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(gstring, sizeof(gstring), "* Você se ofereceu para proteger %s por R$[%d].", giveplayerzcm, money);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "* Segurança %s ofereceu segurança por R$[%d], (Digite /aceitar seguranca) para aceitar.", sendername, money);
						SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
						GuardOffer[giveplayeridzcmd] = playerid;
						GuardPrice[giveplayeridzcmd] = money;
						TempoProteger[playerid] = GetTickCount();
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "O Jogador não está perto de você !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "O Jogador está Offline!");
			}
		}
		return 1;
	}
	CMD:soltar(playerid, params[])
	{
            if(!PlayerToPoint(30.0,playerid,1767.2574,-1573.4009,1735.5995))
	 		{
			   SendClientMessage(playerid, COR_GRAD1, "Você não etá na penitenciaria !");
			   return 1;
			}
            if(PlayerInfo[playerid][pEmprego] != 2)
		    {
		        SendClientMessage(playerid, COR_GREY, "Você não é um advogado!");
		        return 1;
            }
   			if(PlayerInfo[playerid][pJailed] != 0)
			{
   				SendClientMessage(playerid,COR_AMARELO," Você não pode usar esse comando na cadeia!");
		        return 1;
  			}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /soltar [id] [preco]");
				return 1;
			}
			if(LicencaAdvogado[playerid] == 0)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado,pegue uma autorização !");
				return 1;
			}
            new playa;
			new money;
			playa = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			money = strval(tmpzcmd);
			new granapreso = GetPlayerMoneyEx(playa);
			if(money < 500 || money > 5000) { SendClientMessage(playerid, COR_GREY, "Custo entre R$ 500 e 5000 !"); return 1; }
			if(GetPlayerMoneyEx(playa) < money) { format(gstring, sizeof(gstring), "* Você ofereceu soltar o preso %s por R$[%d], ele só tem R$[%d] !", PlayerName(playa), money, granapreso); SendClientMessage(playerid, COR_LIGHTBLUE, gstring); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
					if(JaTemAdvogado[playa] == 1)
					{
						SendClientMessage(playerid, COR_GRAD1, "Este preso já tem um advogado !");
						return 1;
					}
                    if(PlayerInfo[playa][pPenitenciaria] == 0)
					{
						 if(localizarpenlv[playerid] == 1)
						 {
							  SendClientMessage(playerid, COR_GRAD1, "Este preso está na penitenciária de outra cidade, use /gps e vá até lá!");
							  return 1;
						 }
					}
					if(PlayerInfo[playa][pPenitenciaria] == 1)
					{
						 if(localizarpen[playerid] == 1)
						 {
							  SendClientMessage(playerid, COR_GRAD1, "Este preso está na penitenciária de outra cidade, use /gps e vá até lá!");
							  return 1;
						 }
					}
					new level = PlayerInfo[playerid][pLawSkill];
				    if(level >= 0 && level <= 50 && PlayerInfo[playa][pJailTime] > 300)
					{
						SendClientMessage(playerid, COR_GRAD1, "Você é advogado nivel 1, só pode soltar presos com até 5 minutos(300 segundos) de cadeia!");
						return 1;
					}
					if(level >= 51 && level <= 100 && PlayerInfo[playa][pJailTime] > 420)
					{
						SendClientMessage(playerid, COR_GRAD1, "Você é advogado nivel 2, só pode soltar presos com até 7 minutos(700 segundos) de cadeia!");
						return 1;
					}
					if(level >= 101 && level <= 200 && PlayerInfo[playa][pJailTime] > 540)
					{
						SendClientMessage(playerid, COR_GRAD1, "Você é advogado nivel 3, só pode soltar presos com até 9 minutos(900 segundos) de cadeia!");
						return 1;
					}
					if(level >= 201 && level <= 300 && PlayerInfo[playa][pJailTime] > 720)
					{
						SendClientMessage(playerid, COR_GRAD1, "Você é advogado nivel 4, só pode soltar presos com até 12 minutos(900 segundos) de cadeia!");
						return 1;
					}
					//--------------Preoço para Soltar-------------//
					if(level >= 0 && level <= 50 && money > 1000)
					{
						SendClientMessage(playerid, COR_GRAD1, "Você é advogado nivel 1,só pode cobrar até R$1000!");
						return 1;
					}
					if(level >= 51 && level <= 100 && money > 2000)
					{
						SendClientMessage(playerid, COR_GRAD1, "Você é advogado nivel 2,só pode cobrar até R$2000!");
						return 1;
					}
					if(level >= 101 && level <= 200 && money > 3000)
					{
						SendClientMessage(playerid, COR_GRAD1, "Você é advogado nivel 3,só pode cobrar até R$3000!");
						return 1;
					}
					if(level >= 201 && level <= 300 && money > 4000)
					{
						SendClientMessage(playerid, COR_GRAD1, "Você é advogado nivel 4,só pode cobrar até R$4000!");
						return 1;
					}
			        if(playa == playerid) { SendClientMessage(playerid, COR_GREY, "Você não pode se libertar!"); return true; }
				 	if(PlayerInfo[playa][pJailed] == 1 || PlayerInfo[playa][pJailed] == 2
					|| PlayerInfo[playa][pJailed] == 3 && LicencaAdvogado[playerid] == 1)
					{
				    	GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(gstring,sizeof(gstring),"* Advogado: %s ofereceu para te soltar por R$[%d]\nVocê deseja pagar R$[%d] para ser solto?", PlayerName(playerid), money, money);
				        ShowPlayerDialog(playa ,9,DIALOG_STYLE_MSGBOX,"Advogado",gstring,"Sim","Não");
				        format(gstring, sizeof(gstring), "* Você ofereceu a liberdade para o preso:%s, por R$[%d] !", giveplayerzcm, money);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
				        JaTemAdvogado[playa] = 1;
						CuraOffer[playa] = playerid;
						CuraPrice[playa] = money;
					}
					else
					{
					    SendClientMessage(playerid, COR_GRAD1, "O jogador não precisa de advogado ou você não tem autorização !");
					}
				}
			}
		    return 1;
	}
	CMD:cancelar)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_Emprego[32];
			x_Emprego = strtok(cmdtext, idxzcmd);
			if(!strlen(x_Emprego))
			{
				SendClientMessage(playerid, COR_BRANCO, "|_____________ Cancelar _____________|");
				SendClientMessage(playerid, COR_BRANCO, "Use: /cancelar [nome]");
				SendClientMessage(playerid, COR_GREY, "Nomes Validos: Taxi, Onibus, Medico, Mecanico, Policia");
				return 1;
			}
			if(strcmp(x_Emprego,"taxi(playerid, params[])
			{
			        if(TransportDuty[playerid] == 1 && TaxiCallTime[playerid] > 0)
			        {
			            TaxiAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						TaxiCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						PediuServico[giveplayeridzcmd] = 0;
						TaxiCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(TaxiCall)) { if(TaxiCall == playerid) { TaxiCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; ++i)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(TaxiAccepted[i] < 999)
						        {
							        if(TaxiAccepted[i] == playerid)
							        {
							            TaxiAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
							            TaxiCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						            }
						        }
						    }
					    }
				  }
			}
			else if(strcmp(x_Emprego,"bus(playerid, params[] || strcmp(x_Emprego,"onibus(playerid, params[])
			{
			        if(TransportDuty[playerid] == 2 && BusCallTime[playerid] > 0)
			        {
			            BusAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						BusCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						BusCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(BusCall)) { if(BusCall == playerid) { BusCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; ++i)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(BusAccepted[i] < 999)
						        {
							        if(BusAccepted[i] == playerid)
							        {
							            BusAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
							            BusCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						            }
						        }
						    }
				  	   }
				  }
			}
			else if(strcmp(x_Emprego,"mecanico(playerid, params[])
			{
			        if(MechanicCallTime[playerid] > 0)
			        {
			            MechanicAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						MechanicCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						PediuServicoMec[playerid] = 0;
						MechanicCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(MechanicCall)) { if(MechanicCall == playerid) { MechanicCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; ++i)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(MechanicAccepted[i] < 999)
						        {
							        if(MechanicAccepted[i] == playerid)
							        {
							            MechanicAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
							            MechanicCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						            }
						        }
						    }
					   }
				 }
			}
			else if(strcmp(x_Emprego,"medico(playerid, params[])
			{
			        if(MedicCallTime[playerid] > 0)
			        {
			            MedicAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						MedicCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						PediuServicoMed[playerid] = 0;
						MedicCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(MedicCall)) { if(MedicCall == playerid) { MedicCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; ++i)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(MedicAccepted[i] < 999)
						        {
							        if(MedicAccepted[i] == playerid)
							        {
							            MedicAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Paciente~n~~r~Cancelou a Chamada", 5000, 1);
							            MedicCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						            }
						        }
					  	    }
					    }
				  }
			}
			else if(strcmp(x_Emprego,"policia(playerid, params[])
			{
			        if(CopsrondaCallTime[playerid] > 0)
			        {
			            CopsrondaAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						CopsrondaCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						PediuServicoCop[playerid] = 0;
						CopsrondaCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(CopsrondaCall)) { if(CopsrondaCall == playerid) { CopsrondaCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; ++i)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(CopsrondaAccepted[i] < 999)
						        {
							        if(CopsrondaAccepted[i] == playerid)
							        {
							            CopsrondaAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
							            CopsrondaCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						             }
						         }
						    }
					   }
			 	 }
			}
			else { return 1; }
			format(gstring, sizeof(gstring), "* Você cancelou: %s.", x_Emprego);
			SendClientMessage(playerid, COR_AMARELO, gstring);
		}//not connected
		return 1;
	}
	CMD:terminar)
	{
		if(IsPlayerConnected(playerid))
		{
			new x_Emprego[32];
			x_Emprego = strtok(cmdtext, idxzcmd);
			if(strcmp(x_Emprego,"atendimento(playerid, params[])
			{
				if(InviteAtt[playerid] < 999)
				{
					if(IsPlayerConnected(InviteAtt[playerid]))
					{
						if(ChatAtendimento[playerid] == 0)
						{
							SendClientMessage(playerid, COR_GRAD1, "Você não está em um atendimento.");
							return 1;
						}
						ForPlayers(i)
						{
							if(InviteAtt[i] == playerid)
							{
							    format(gstring,sizeof(gstring),"/meavalie %d",playerid);
            					OnPlayerCommandText(i,gstring);
								ChatAtendimento[playerid] = 0;
								ChatAtendimento[i] = 0;
								IDAvaliou[playerid] = 999;
								IDAvaliou[i] = 999;
								InviteAtt[i] = 999;
								InviteAtt[playerid] = 9999;
								NumeroChatAtendimento[i] = 0;
								NumeroChatAtendimento[playerid] = 0;
								format(gstring, 128, "* %s saiu do atendimento.", PlayerName(playerid));
								SendClientMessage(i, COR_LIGHTBLUE, gstring);
								format(gstring, sizeof(gstring), "* Você saiu do atendimento.");
								SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							}
						}
					}
					else
					{
						SendClientMessage(playerid, COR_GREY, "O jogador que lhe convidou não está conectado.");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COR_GREY, "Você não está em um atendimento.");
					return 1;
				}
			}
		}
		return 1;
	}
	CMD:aceitar)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_Emprego[32];
			x_Emprego = strtok(cmdtext, idxzcmd);
			if(!strlen(x_Emprego))
			{
				SendClientMessage(playerid, COR_BRANCO, "|_______________ Aceitar _______________A");
				SendClientMessage(playerid, COR_BRANCO, "Use: aceitar [nome]");
				SendClientMessage(playerid, COR_GREY, "Nomes Validos: drogas, Reparo, Advogado, segurança, convite, aovivo, Refill , Assalto, Convite");
				SendClientMessage(playerid, COR_GREY, "Nomes Validos: Carro, Multa ,divorcio, mendigo, blindagem, Dinamite, decod");
				return 1;
			}
			if(strcmp(x_Emprego,"convite(playerid, params[])
			{
				if(InviteOffer[playerid] < 999)
			    {
					if(IsPlayerConnected(InviteOffer[playerid]))
					{
						if(PlayerInfo[playerid][pEmprego] > 1)
						{
                             SendClientMessage(playerid, COR_AMARELO, "Voce possui um emprego /sairdoemprego.");
			   	             return 1;
						}
						if(convidado[playerid] == 0)
						{
							 SendClientMessage(playerid, COR_GRAD1, "Você não foi convidado para nenhuma organização.");
							 return 1;
						}
						skincop[playerid] = GetPlayerSkin(playerid);
                        if(PlayerInfo[InviteOffer[playerid]][pLider] == 1) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
		 	            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 2) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
			            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 3) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
			            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 4) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
			            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 5) { SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
			            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 6) { SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 7) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
			            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 8) { SetSpawnInfo(playerid, 10, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 10; gTeam[playerid] = 10; }
		 	            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 9) { SetSpawnInfo(playerid, 10, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 10; gTeam[playerid] = 10; }
			            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 10) { SetSpawnInfo(playerid, 10, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 10; gTeam[playerid] = 10; }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 11) { SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 12) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 13) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 14) { SetSpawnInfo(playerid, 10, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 10; gTeam[playerid] = 10; }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 15) { SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 16) { SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 17) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 18) { SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 19) { SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 20) { SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 21) { SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
			            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 22) { SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
			            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 23) { SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 24) { SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 25) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
			            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 26) { SetSpawnInfo(playerid, 10, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 10; gTeam[playerid] = 10; }
                        convidado[playerid] = 0;
						PlayerInfo[playerid][pMembro] = InviteJob[playerid];
						PlayerInfo[playerid][pCargo] = 1;
					   	format(gstring, 128, "* %s aceitou seu convite para entrar na sua organização.", PlayerName(playerid));
					   	SendClientMessage(InviteOffer[playerid], COR_LIGHTBLUE, gstring);
					    format(gstring, sizeof(gstring), "* Você aceitou o convite de %s para entrar para organização: %s, parabéns.", PlayerName(InviteOffer[playerid]), NomeORG(InviteOffer[playerid]));
                        SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						ConviteInfoOrg(PlayerName(playerid), InviteJob[playerid], 1);
                        SetPlayerSpawn(playerid);
					}
					else
					{
						SendClientMessage(playerid, COR_GREY, "O jogador que lhe convidou não está conectado.");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COR_GREY, "Você não foi convidado para nenhuma organização.");
					return 1;
				}
			}
			else if(strcmp(x_Emprego,"assalto(playerid, params[])
			{
			    if(OfAssalto[playerid] < 999)
			    {
			        if(IsPlayerConnected(OfAssalto[playerid]))
			        {
			            if (ProxDetectorS(5.0, playerid, OfAssalto[playerid]))
						{
				           	GetPlayerName(OfAssalto[playerid], giveplayerzcm, sizeof(giveplayerzcm));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(gstring, sizeof(gstring), "* Você aceitou um assalto de %s e pagou R$[%d].", giveplayerzcm, precoassalto[playerid]);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* %s aceitou seu assalto e pagou R$[%d].", sendername, precoassalto[playerid]);
			                SendClientMessage(OfAssalto[playerid], COR_LIGHTBLUE, gstring);
			                format(gstring, sizeof(gstring), "Jogador %s aceitou um assalto.", sendername);
			                SendClientMessageToAll(COR_LIGHTRED, gstring);
							SendClientMessage(TicketOffer[playerid], COR_LIGHTBLUE, gstring);
							GivePlayerMoneyEx(playerid, - precoassalto[playerid]);
							GivePlayerMoneyEx(OfAssalto[playerid], precoassalto[playerid]);
							SetPlayerCriminal(OfAssalto[playerid],255, "Assalto");
							OfAssalto[playerid] = 999;
							precoassalto[playerid] = 0;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COR_GREY, "O Assaltante está longe de você!");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COR_GREY, "Você não Foi Roubado!");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"divorcio(playerid, params[])
			{
			    if(DivorceOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(DivorceOffer[playerid]))
			        {
			            if(ProxDetectorS(10.0, playerid, DivorceOffer[playerid]))
						{
						    GetPlayerName(DivorceOffer[playerid], giveplayerzcm, sizeof(giveplayerzcm));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(gstring, sizeof(gstring), "* Voce aceitou o pedido de %s para ser testemunha de seu divorcio.", giveplayerzcm);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* %s aceitou o seu pedido para ser testemunha do seu divorcio.", sendername);
							SendClientMessage(DivorceOffer[playerid], COR_LIGHTBLUE, gstring);
							ClearMarriage(playerid);
							ClearMarriage(DivorceOffer[playerid]);
							PlayerInfo[playerid][pPHousekey] = 999;
							PlayerInfo[playerid][pPbiskey] = 255;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COR_GREY, "O jogador que te enviou os papéis do divórcio não está perto de você!");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COR_GREY, "Ninguem te enviou qualquer papel de divórcio!");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"onibus(playerid, params[])
			{
			    if(TransportDuty[playerid] != 2)
			    {
			        SendClientMessage(playerid, COR_GREY, "Você não está em corrida, USE: /corrida !");
				    return 1;
			    }
			    if(PlayerInfo[playerid][pEmprego] != 4)
			    {
				   SendClientMessage(playerid, COR_GRAD1, "Você não é um Motorista De Onibus !");
				   return 1;
			    }
	            if(BusCallTime[playerid] > 0)
	            {
	                SendClientMessage(playerid, COR_GREY, "Você já aceitou a chamada de Onibus !");
				    return 1;
	            }
	            if(BusCall < 999)
	            {
	                if(IsPlayerConnected(BusCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(BusCall, giveplayerzcm, sizeof(giveplayerzcm));
	                	format(gstring, sizeof(gstring), "* Voce aceitou a chamada do(a) %s[%d], siga a marca vermelha",giveplayerzcm,giveplayeridzcmd);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
                        format(gstring, sizeof(gstring), "* Motorista : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",sendername);
						SendClientMessage(BusCall, COR_LIGHTBLUE, gstring);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~ir Ate a Marca Vermelha", 5000, 1);
						SendClientMessage(playerid, COR_GREY, "Para Cancelar a chamada,digite /cancelar onibus !");
                        new Float:X,Float:Y,Float:Z;
					    GetPlayerPos(giveplayeridzcmd, X,Y,Z);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
                        BusCallTime[playerid] = 1;
						BusAccepted[playerid] = BusCall;
						BusCall = 999;
						return 1;
					}
	            }
	            else
	            {
	                SendClientMessage(playerid, COR_GREY, "Não tem nenhuma chamada de onibus no momento !");
			    	return 1;
	            }
			}
			else if(strcmp(x_Emprego,"pedido(playerid, params[])
			{
			   // new vid = GetPlayerVehicleID(playerid);
			    if(EmpregoDuty[playerid] == 0)
			    {
					 SendClientMessage(playerid, COR_GRAD1, "Você precisa bater o cartão para aceitar chamadas !");
					 return 1;
			    }
	            else
	            {
	                SendClientMessage(playerid, COR_GREY, "Não tem nenhuma chamada de onibus no momento !");
			    	return 1;
	            }
			}
			else if(strcmp(x_Emprego,"padrinho(playerid, params[])
			{
			    if(MarryWitnessOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(MarryWitnessOffer[playerid]))
			        {
			            if(ProxDetectorS(10.0, playerid, MarryWitnessOffer[playerid]))
						{
						    GetPlayerName(MarryWitnessOffer[playerid], giveplayerzcm, sizeof(giveplayerzcm));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(gstring, sizeof(gstring), "* Você aceitou o pedido de %s para ser padrinho de seu casamento.", giveplayerzcm);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* %s aceitou o seu pedido para ser padrinho do seu casamento.", sendername);
							SendClientMessage(MarryWitnessOffer[playerid], COR_LIGHTBLUE, gstring);
							MarryWitness[MarryWitnessOffer[playerid]] = playerid;
							MarryWitnessOffer[playerid] = 999;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COR_GREY, "O jogador que pediu para ser padrinho de seu casamento não está perto de você!");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COR_GREY, "Ninguem pediu para ser padrinho de seu casamento!");
				    return 1;
				}
			}
	        else if(strcmp(x_Emprego,"casamento(playerid, params[])
			{
			    if(ProposeOffer[playerid] < 999)
			    {
			        if(!PlayerToPoint(10.0, playerid, 2233.8225,-1333.2725,23.9816))
			        {
			            SendClientMessage(playerid, COR_GREY, "Você não está na igreja de Los Santos !");
			            return 1;
			        }
			        if(IsPlayerConnected(ProposeOffer[playerid]))
			        {
			            if(ProxDetectorS(10.0, playerid, ProposeOffer[playerid]))
						{
						    if(MarryWitness[ProposeOffer[playerid]] == 999)
						    {
						        SendClientMessage(playerid, COR_GREY, "O jogador não possui um padrinho de casamento!");
						        return 1;
						    }
						    if(IsPlayerConnected(MarryWitness[ProposeOffer[playerid]]))
						    {
							    if(ProxDetectorS(12.0, ProposeOffer[playerid], MarryWitness[ProposeOffer[playerid]]))
								{
								    GetPlayerName(ProposeOffer[playerid], giveplayerzcm, sizeof(giveplayerzcm));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									format(gstring, sizeof(gstring), "* Voce aceitou o pedido de %s para ser seu marido.", giveplayerzcm);
									SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
									format(gstring, sizeof(gstring), "* %s aceitou o seu pedido para ser sua esposa.", sendername);
									SendClientMessage(ProposeOffer[playerid], COR_LIGHTBLUE, gstring);
									format(gstring, sizeof(gstring), "Padre: %s voce aceita %s como seu legitimo marido? (use 'sim', qualquer outra coisa cancela o casamento)", sendername, giveplayerzcm);
									SendClientMessage(playerid, COR_BRANCO, gstring);
									MarriageCeremoney[playerid] = 1;
									ProposedTo[ProposeOffer[playerid]] = playerid;
									GotProposedBy[playerid] = ProposeOffer[playerid];
									MarryWitness[ProposeOffer[playerid]] = 999;
									ProposeOffer[playerid] = 999;
									return 1;
								}
								else
								{
								    SendClientMessage(playerid, COR_GREY, "O padrinho de casamento nao esta perto de sua noiva/noivo!");
								    return 1;
								}
							}
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COR_GREY, "O jogador não esta perto de você!");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COR_GREY, "Ninguem te fez uma proposta!");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"multa(playerid, params[])
			{
			    if(TicketOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(TicketOffer[playerid]))
			        {
			            if (ProxDetectorS(8.0, playerid, TicketOffer[playerid]))
						{
						    //valores multas;
						    if(MultadoCM[playerid] == 1) TicketMoney[playerid] = 4000;
						    else if(MultadoDB[playerid] == 1) TicketMoney[playerid] = 6000;
						    else if(MultadoDP[playerid] == 1) TicketMoney[playerid] = 6000;
						    else if(MultadoEI[playerid] == 1) TicketMoney[playerid] = 3000;
						    else if(MultadoFD[playerid] == 1) TicketMoney[playerid] = 2000;
						    else if(MultadoVD[playerid] == 1) TicketMoney[playerid] = 4000;
							else if(MultadoTNC[playerid] == 1) TicketMoney[playerid] = 3500;
							else return SendClientMessage(playerid, COR_GREY, "Ninguem lhe deu uma multa !");
							//====//
				           	GetPlayerName(TicketOffer[playerid], giveplayerzcm, sizeof(giveplayerzcm));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(gstring, sizeof(gstring), "* Você pagou a multa de R$[%d] para o Oficial: %s e acumulou 2 pontos na carteira.", TicketMoney[playerid], giveplayerzcm);
							SendClientMessage(playerid, COR_BRANCO, gstring);
							format(gstring, sizeof(gstring), "* %s pagou a multa de $%d.", sendername, TicketMoney[playerid]);
							SendClientMessage(TicketOffer[playerid], COR_BRANCO, gstring);
							GivePlayerMoneyEx(playerid, - TicketMoney[playerid]);
							GivePlayerMoneyEx(TicketOffer[playerid], TicketMoney[playerid]);
							TicketOffer[playerid] = 999;
							TicketMoney[playerid] = 0;
							DeslogandoMulta[playerid] = 0;
							PlayerInfo[playerid][pPontos] +=2;
							new vehicleid = GetPlayerVehicleID(playerid);
							if(PlayerInfo[playerid][pPontos] == 20)
                            {
	                            if(IsAMoto(vehicleid))
	                            {
								   SendClientMessage(playerid, COR_VERMELHO, "Você chegou a 20 pontos na carteira,perdeu a carteira de moto!");
								   SendClientMessage(playerid, COR_VERMELHO, "Faça novamente o teste para tirar sua carteira após 12 paydays !");
                                   PlayerInfo[playerid][pMotoLic] = 0;
                                   PlayerInfo[playerid][pPontos] = 0;
                                   PlayerInfo[playerid][pMultado] = 12;
                                   RemovePlayerFromVehicleEx(playerid);
                                }
                                if(IsAAviao(vehicleid))
	                            {
								   SendClientMessage(playerid, COR_VERMELHO, "Você chegou a 20 pontos na carteira,perdeu a carteira de voô!");
								   SendClientMessage(playerid, COR_VERMELHO, "Faça novamente o teste para tirar sua carteira após 12 paydays !");
                                   PlayerInfo[playerid][pMotoLic] = 0;
                                   PlayerInfo[playerid][pPontos] = 0;
                                   PlayerInfo[playerid][pMultado] = 12;
                                   RemovePlayerFromVehicleEx(playerid);
                                }
                                if(IsACamOni(vehicleid))
	                            {
								   SendClientMessage(playerid, COR_VERMELHO, "Você chegou a 20 pontos na carteira,perdeu a carteira de caminhão/ônibus!");
								   SendClientMessage(playerid, COR_VERMELHO, "Faça novamente o teste para tirar sua carteira após 12 paydays !");
                                   PlayerInfo[playerid][pMotoLic] = 0;
                                   PlayerInfo[playerid][pPontos] = 0;
                                   PlayerInfo[playerid][pMultado] = 12;
                                   RemovePlayerFromVehicleEx(playerid);
                                }
                                if(IsABarco(vehicleid))
	                            {
								   SendClientMessage(playerid, COR_VERMELHO, "Você chegou a 20 pontos na carteira,perdeu a carteira de barco!");
								   SendClientMessage(playerid, COR_VERMELHO, "Faça novamente o teste para tirar sua carteira após 12 paydays !");
                                   PlayerInfo[playerid][pMotoLic] = 0;
                                   PlayerInfo[playerid][pPontos] = 0;
                                   PlayerInfo[playerid][pMultado] = 12;
                                   RemovePlayerFromVehicleEx(playerid);
                                }
                                if(!IsAMoto(vehicleid) && !IsAAviao(vehicleid) && !IsACamOni(vehicleid) && !IsABarco(vehicleid))
	                            {
								   SendClientMessage(playerid, COR_VERMELHO, "Você chegou a 20 pontos na carteira,perdeu a carteira de carros!");
								   SendClientMessage(playerid, COR_VERMELHO, "Faça novamente o teste para tirar sua carteira após 12 paydays !");
                                   PlayerInfo[playerid][pMotoLic] = 0;
                                   PlayerInfo[playerid][pPontos] = 0;
                                   PlayerInfo[playerid][pMultado] = 12;
                                   RemovePlayerFromVehicleEx(playerid);
                                }
                            }
						}
						else
						{
						    SendClientMessage(playerid, COR_GREY, "O policial não está perto de você !");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COR_GREY, "Ninguem lhe deu uma multa !");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"abastecimento(playerid, params[])
			{
			    if(RefillOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(RefillOffer[playerid]))
			        {
			            if(GetPlayerMoneyEx(playerid) > RefillPrice[playerid])
			            {
			                if(IsPlayerInAnyVehicle(playerid))
							{
			                	GetPlayerName(RefillOffer[playerid], giveplayerzcm, sizeof(giveplayerzcm));
								GetPlayerName(playerid, sendername, sizeof(sendername));
			                	new car = GetPlayerVehicleID(playerid);
			                	new fuel;
			                	new level = PlayerInfo[playerid][pMechSkill];
			                	PlayerInfo[RefillOffer[playerid]][pMechSkill] ++;
			                	if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 50)
								{
								     SendClientMessage(RepairOffer[playerid], COR_AMARELO, "* Seu mecânico e nível 2, Agora ele pode adicionar combustivel para qualquer carro.");
								}
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 100)
								{
								     SendClientMessage(RepairOffer[playerid], COR_AMARELO, "* Seu mecânico e nível 3, Agora ele pode adicionar combustivel para qualquer carro.");
								}
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 150)
								{
								     SendClientMessage(RepairOffer[playerid], COR_AMARELO, "* Seu mecânico e nível 4, Agora ele pode adicionar combustivel para qualquer carro.");
								}
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 200)
								{
								     SendClientMessage(RepairOffer[playerid], COR_AMARELO, "* Seu mecânico e nível 5, Agora ele pode adicionar combustivel para qualquer carro.");
								}
								if(level >= 0 && level <= 50)
								{ fuel = 15; }
								else if(level >= 51 && level <= 100)
								{ fuel = 40; }
								else if(level >= 101 && level <= 200)
								{ fuel = 60; }
								else if(level >= 201 && level <= 400)
								{ fuel = 80; }
								else if(level >= 401)
								{ fuel = 100; }
								format(gstring, sizeof(gstring), "* O Mecânico %s re-abasteceu seu veículo por R$%d.",giveplayerzcm,RefillPrice[playerid]);
							    SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							    format(gstring, sizeof(gstring), "* Você re-abasteceu o carro do %s e R$[%d] foi adicionado em seu salário.",sendername,RefillPrice[playerid]);
							    SendClientMessage(RepairOffer[playerid], COR_LIGHTBLUE, gstring);
								PlayerInfo[RefillOffer[playerid]][pSalario] += RefillPrice[playerid];
								GivePlayerMoneyEx(playerid, -RefillPrice[playerid]);
								if(Gas[car] < 100) { Gas[car] += fuel; }
								if(Gas[car] > 100) { Gas[car] = 100; }
					        	RefillOffer[playerid] = 999;
								RefillPrice[playerid] = 0;
								return 1;
							}
							else
							{
						    	SendClientMessage(playerid, COR_LIGHTBLUE, "Você não está em um carro!");
						    	return 1;
							}
			            }
						else
						{
						    SendClientMessage(playerid, COR_GREY, "Você não pode pagar pelo abastecimento !");
						    return 1;
						}
			        }
			        return 1;
			    }
				else
				{
				    SendClientMessage(playerid, COR_GREY, "Ninguem ofereceu abastecimento para seu carro!");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"aovivo(playerid, params[])
			{
			    if(LiveOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(LiveOffer[playerid]))
			        {
				        if (ProxDetectorS(5.0, playerid, LiveOffer[playerid]))
						{
						    SendClientMessage(playerid, COR_LIGHTBLUE, "* Você está congelado ate que a conversa termine.");
                            SendClientMessage(playerid, COR_LIGHTBLUE, "* Deseja cancelar? digite /sair.");
							SendClientMessage(LiveOffer[playerid], COR_LIGHTBLUE, "* Você está congelado até o final da conversa (use /aovivo denovo).");
							TogglePlayerControllable(playerid, 0);
							TogglePlayerControllable(LiveOffer[playerid], 0);
							TalkingLive[playerid] = LiveOffer[playerid];
							TalkingLive[LiveOffer[playerid]] = playerid;
							LiveOffer[playerid] = 999;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COR_GREY, "Você está longe do Rede Globo !");
							return 1;
						}
					}
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COR_GREY, "Você não tem nenhuma oferta de conversa AoVivo!");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"seguranca(playerid, params[])
			{
			    if(GuardOffer[playerid] < 999)
			    {
			        if(GetPlayerMoneyEx(playerid) > GuardPrice[playerid])
				    {
					    if(IsPlayerConnected(GuardOffer[playerid]))
					    {
					        GetPlayerName(GuardOffer[playerid], giveplayerzcm, sizeof(giveplayerzcm));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(gstring, sizeof(gstring), "* Você aceitou a proteção por R$[%d] do Segurança: %s.",GuardPrice[playerid],giveplayerzcm);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* %s aceitou sua proteção, e R$[%d] serão adicionados no seu salário.",sendername,GuardPrice[playerid]);
							SendClientMessage(GuardOffer[playerid], COR_LIGHTBLUE, gstring);
					        format(gstring,sizeof(gstring),"* Segurança %s está contratado pelo jogador: %s por R$[%d].", giveplayerzcm,sendername,GuardPrice[playerid]);
					        SendClientMessageToAll(COR_LIGHTBLUE, gstring);
					        SendClientMessage(GuardOffer[playerid], COR_LIGHTRED, "VOCÊ É UM SEGURANÇA, SÓ USE SUAS ARMAS SE  FOR PARA PROTEGER QUEM TE CONTRATOU !");
					        SendClientMessage(GuardOffer[playerid], COR_LIGHTRED, "SE VOCÊ USAR AS ARMAS PARA MATAR PESSOAS SEM MOTIVO,VOCÊ SERÁ BANIDO DO SERVIDOR !");
					        GivePlayerWeaponEx(GuardOffer[playerid], 24, 40);
					        GivePlayerWeaponEx(GuardOffer[playerid], 25, 40);
					        GivePlayerWeaponEx(GuardOffer[playerid], 29, 80);
					        SetPlayerArmour(GuardOffer[playerid], 100);
							PlayerInfo[GuardOffer[playerid]][pSalario] += GuardPrice[playerid];
							GivePlayerMoneyEx(playerid, -GuardPrice[playerid]);
					        GuardOffer[playerid] = 999;
							GuardPrice[playerid] = 0;
							return 1;
						}
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "Você não pode pagar pela proteção !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COR_GREY, "Ninguem te ofereceu proteção!");
			        return 1;
			    }
			}
            else if(strcmp(x_Emprego,"Coins(playerid, params[])
			{
			    if(MoedaOffer[playerid] < 999)
			    {
			        if(GetPlayerMoneyEx(playerid) > MoedaPrice[playerid])
				    {
				        if(IsPlayerConnected(playerid))
				        {
					        if(IsPlayerConnected(MoedaOffer[playerid]))
					        {
					            GetPlayerName(MoedaOffer[playerid], giveplayerzcm, sizeof(giveplayerzcm));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(gstring, sizeof(gstring), "* Você aceitou [%d] Coins por R$:[%d] do jogador: %s.",MoedaGram[playerid],MoedaPrice[playerid],giveplayerzcm);
								SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
								format(gstring, sizeof(gstring), "* O Jogador: %s aceitou a sua oferta de:[%d] Coins, foram adicionados R$:[%d] em seu banco.",sendername,MoedaGram[playerid],MoedaPrice[playerid]);
								SendClientMessage(MoedaOffer[playerid], COR_LIGHTBLUE, gstring);
								format(gstring, sizeof(gstring), "[VENDA DE COINS] %s vendeu [%d] Coins por R$:[%d] para %s.",giveplayerzcm,MoedaGram[playerid],MoedaPrice[playerid],sendername);
                                ABroadCast(COR_LIGHTRED,gstring,1);
                                VendaMoeda(gstring);
								GivePlayerMoneyEx(playerid, -MoedaPrice[playerid]);
								PlayerInfo[MoedaOffer[playerid]][pConta] += MoedaPrice[playerid];
								PlayerInfo[playerid][pCoins] += MoedaGram[playerid];
								PlayerInfo[MoedaOffer[playerid]][pCoins] -= MoedaGram[playerid];
                                OnPlayerSave(playerid);
								MoedaOffer[playerid] = 999;
								MoedaPrice[playerid] = 0;
								MoedaGram[playerid] = 0;
								return 1;
							}
							return 1;
						}
						else
						{
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "Você não pode pagar essas Coins !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COR_GREY, "Você não recebeu nenhuma oferta de Coins !");
			        return 1;
			    }
			}
			else if(strcmp(x_Emprego,"acessorio(playerid, params[])
			{

				if(AcessorioOffer[playerid] < 999)
				{

					if(GetPlayerMoneyEx(playerid) > AcessorioPrice[playerid])
					{

						if(IsPlayerConnected(playerid))
						{

							if(IsPlayerConnected(AcessorioOffer[playerid]))
							{

								GetPlayerName(AcessorioOffer[playerid], giveplayerzcm, sizeof(giveplayerzcm));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								new lolz[30];
								if(AcessorioGram[playerid] == 1)
								{

									if(PlayerInfo[playerid][pTemOculos] == 1)
									{

										SendClientMessage(playerid, -1, "[BPL ACESSORIOS]: Você já possui este acessório.");
										return 1;
									}
									PlayerInfo[playerid][pTemOculos] = 1;
									PlayerInfo[AcessorioOffer[playerid]][pTemOculos] = 0;
									lolz = "Óculos";
									RemovePlayerAttachedObject(playerid, 8); // OCULOS
								}
								if(AcessorioGram[playerid] == 2)
								{
									if(PlayerInfo[playerid][pTemBandana] == 1)
									{

										SendClientMessage(playerid, -1, "[BPL ACESSORIOS]: Você já possui este acessório.");
										return 1;
									}
									PlayerInfo[playerid][pTemBandana] = 1;
									PlayerInfo[AcessorioOffer[playerid]][pTemBandana] = 0;
									lolz = "Bandana";
									RemovePlayerAttachedObject(playerid, 9); // BANDANA
								}
								if(AcessorioGram[playerid] == 3)
								{

									if(TemArara[playerid] == 1)
									{

										SendClientMessage(playerid, -1, "[BPL ACESSORIOS]: Você já possui este acessório.");
										return 1;
									}
									TemArara[playerid] = 1;
									TemArara[AcessorioOffer[playerid]] = 0;
									lolz = "Arara";
									RemovePlayerAttachedObject(AcessorioOffer[playerid], 7); // ARARA
								}
								if(AcessorioGram[playerid] == 4)
								{

									if(TemKitBone[playerid] == 1)
									{

										SendClientMessage(playerid, -1, "[BPL ACESSORIOS]: Você já possui este acessório.");
										return 1;
									}
									TemKitBone[playerid] = 1;
									TemKitBone[AcessorioOffer[playerid]] = 0;
									lolz = "Boné";
									RemovePlayerAttachedObject(playerid, 7); // BONE
								}
								if(AcessorioGram[playerid] == 5)
								{

									if(TemKitRelogio[playerid] == 1)
									{

										SendClientMessage(playerid, -1, "[BPL ACESSORIOS]: Você já possui este acessório.");
										return 1;
									}
									TemKitRelogio[playerid] = 1;
									TemKitRelogio[AcessorioOffer[playerid]] = 0;
									lolz = "Relógio";
									RemovePlayerAttachedObject(playerid, 1); //RELOGIO
								}
								if(AcessorioGram[playerid] == 6)
								{

									if(PlayerInfo[playerid][pTemCBombeiro] == 1)
									{

										SendClientMessage(playerid, -1, "[BPL ACESSORIOS]: Você já possui este acessório.");
										return 1;
									}
									PlayerInfo[playerid][pTemCBombeiro] = 1;
									PlayerInfo[AcessorioOffer[playerid]][pTemCBombeiro] = 0;
									lolz = "Chapéu Bombeiro";
									RemovePlayerAttachedObject(AcessorioOffer[playerid], 7); // CHAPEU BOMBEIRO
								}
								if(AcessorioGram[playerid] == 7)
								{

									if(PlayerInfo[playerid][pTemCPolicial] == 1)
									{

										SendClientMessage(playerid, -1, "[BPL ACESSORIOS]: Você já possui este acessório.");
										return 1;
									}
									PlayerInfo[playerid][pTemCPolicial] = 1;
									PlayerInfo[AcessorioOffer[playerid]][pTemCPolicial] = 0;
									lolz = "Chapéu Policial";
									RemovePlayerAttachedObject(AcessorioOffer[playerid], 7); // CHAPEU POLICIAL
								}
								if(AcessorioGram[playerid] == 8)
								{

									if(PlayerInfo[playerid][pChapeuMichaelJackson] == 1)
									{

										SendClientMessage(playerid, -1, "[BPL ACESSORIOS]: Você já possui este acessório.");
										return 1;
									}
									PlayerInfo[playerid][pChapeuMichaelJackson] = 1;
									PlayerInfo[AcessorioOffer[playerid]][pChapeuMichaelJackson] = 0;
									lolz = "Chapéu Michael Jackson";
									RemovePlayerAttachedObject(AcessorioOffer[playerid], 7); // CHAPEU MJ
								}
								if(AcessorioGram[playerid] == 9)
								{

									if(PlayerInfo[playerid][pChapeuOperario] == 1)
									{

										SendClientMessage(playerid, -1, "[BPL ACESSORIOS]: Você já possui este acessório.");
										return 1;
									}
									PlayerInfo[playerid][pChapeuOperario] = 1;
									PlayerInfo[AcessorioOffer[playerid]][pChapeuOperario] = 0;
									lolz = "Chapéu Operário";
									RemovePlayerAttachedObject(AcessorioOffer[playerid], 7); // CHAPEU MJ
								}
								if(AcessorioGram[playerid] == 10)
								{

									if(PlayerInfo[playerid][pChapeuFunkeiro] == 1)
									{

										SendClientMessage(playerid, -1, "[BPL ACESSORIOS]: Você já possui este acessório.");
										return 1;
									}
									PlayerInfo[playerid][pChapeuFunkeiro] = 1;
									PlayerInfo[AcessorioOffer[playerid]][pChapeuFunkeiro] = 0;
									lolz = "Chapeu Funkeiro";
									RemovePlayerAttachedObject(AcessorioOffer[playerid], 7); // CHAPEU MJ
								}
								if(AcessorioGram[playerid] == 11)
								{

									if(PlayerInfo[playerid][pChapeuIdoso] == 1)
									{

										SendClientMessage(playerid, -1, "[BPL ACESSORIOS]: Você já possui este acessório.");
										return 1;
									}
									PlayerInfo[playerid][pChapeuIdoso] = 1;
									PlayerInfo[AcessorioOffer[playerid]][pChapeuIdoso] = 0;
									lolz = "Chapéu Idoso";
									RemovePlayerAttachedObject(AcessorioOffer[playerid], 7); // CHAPEU MJ
								}
								if(AcessorioGram[playerid] == 12)
								{

									if(PlayerInfo[playerid][pChapeuHarryPotter] == 1)
									{

										SendClientMessage(playerid, -1, "[BPL ACESSORIOS]: Você já possui este acessório.");
										return 1;
									}
									PlayerInfo[playerid][pChapeuHarryPotter] = 1;
									PlayerInfo[AcessorioOffer[playerid]][pChapeuHarryPotter] = 0;
									lolz = "Chapéu Harry Potter";
									RemovePlayerAttachedObject(AcessorioOffer[playerid], 7); // CHAPEU MJ
								}
								if(AcessorioGram[playerid] == 13)
								{

									if(PlayerInfo[playerid][pCabecadeGalo] == 1)
									{

										SendClientMessage(playerid, -1, "[BPL ACESSORIOS]: Você já possui este acessório.");
										return 1;
									}
									PlayerInfo[playerid][pCabecadeGalo] = 1;
									PlayerInfo[AcessorioOffer[playerid]][pCabecadeGalo] = 0;
									lolz = "Cabeça de Galo";
									RemovePlayerAttachedObject(AcessorioOffer[playerid], 7); // CHAPEU MJ
								}
								if(AcessorioGram[playerid] == 14)
								{

									if(PlayerInfo[playerid][pChifredeBoi] == 1)
									{

										SendClientMessage(playerid, -1, "[BPL ACESSORIOS]: Você já possui este acessório.");
										return 1;
									}
									PlayerInfo[playerid][pChifredeBoi] = 1;
									PlayerInfo[AcessorioOffer[playerid]][pChifredeBoi] = 0;
									lolz = "Chifre De Boi";
									RemovePlayerAttachedObject(AcessorioOffer[playerid], 7); // Chifre de Boi
								}
								if(AcessorioGram[playerid] == 15)
								{

									if(PlayerInfo[playerid][pCabecaodoCJ] == 1)
									{

										SendClientMessage(playerid, -1, "[BPL ACESSORIOS]: Você já possui este acessório.");
										return 1;
									}
									PlayerInfo[playerid][pCabecaodoCJ] = 1;
									PlayerInfo[AcessorioOffer[playerid]][pCabecaodoCJ] = 0;
									lolz = "Cabeção Do CJ";
									RemovePlayerAttachedObject(AcessorioOffer[playerid], 7); // CabecaodoCJ
								}
								if(AcessorioGram[playerid] == 16)
								{

									if(PlayerInfo[playerid][pGorro] == 1)
									{

										SendClientMessage(playerid, -1, "[BPL ACESSORIOS]: Você já possui este acessório.");
										return 1;
									}
									PlayerInfo[playerid][pGorro] = 1;
									PlayerInfo[AcessorioOffer[playerid]][pGorro] = 0;
									lolz = "Gorro";
									RemovePlayerAttachedObject(AcessorioOffer[playerid], 7); // GORRO
								}
								if(AcessorioGram[playerid] == 17)
								{

									if(PlayerInfo[playerid][pDado] == 1)
									{

										SendClientMessage(playerid, -1, "[BPL ACESSORIOS]: Você já possui este acessório.");
										return 1;
									}
									PlayerInfo[playerid][pDado] = 1;
									PlayerInfo[AcessorioOffer[playerid]][pDado] = 0;
									lolz = "Dado";
									RemovePlayerAttachedObject(AcessorioOffer[playerid], 7); // DADO
								}
								if(AcessorioGram[playerid] == 18)
								{

									if(PlayerInfo[playerid][pCoracao] == 1)
									{

										SendClientMessage(playerid, -1, "[BPL ACESSORIOS]: Você já possui este acessório.");
										return 1;
									}
									PlayerInfo[playerid][pCoracao] = 1;
									PlayerInfo[AcessorioOffer[playerid]][pCoracao] = 0;
									lolz = "Coração";
									RemovePlayerAttachedObject(playerid, 2); // CORAÇÃO
								}
								if(AcessorioGram[playerid] == 19)
								{

									if(PlayerInfo[playerid][pC4] == 1)
									{

										SendClientMessage(playerid, -1, "[BPL ACESSORIOS]: Você já possui este acessório.");
										return 1;
									}
									PlayerInfo[playerid][pC4] = 1;
									PlayerInfo[AcessorioOffer[playerid]][pC4] = 0;
									lolz = "C4";
									RemovePlayerAttachedObject(playerid, 2); // C4
								}
								if(AcessorioGram[playerid] == 20)
								{

									if(PlayerInfo[playerid][pVibradorGigante] == 1)
									{

										SendClientMessage(playerid, -1, "[BPL ACESSORIOS]: Você já possui este acessório.");
										return 1;
									}
									PlayerInfo[playerid][pVibradorGigante] = 1;
									PlayerInfo[AcessorioOffer[playerid]][pVibradorGigante] = 0;
									lolz = "Vibrador Gigante";
									RemovePlayerAttachedObject(playerid, 4); // VIBRADOR GIGANTE
								}
								if(AcessorioGram[playerid] == 21)
								{

									if(PlayerInfo[playerid][pItemMochila] == 1)
									{

										SendClientMessage(playerid, -1, "[BPL ACESSORIOS]: Você já possui este acessório.");
										return 1;
									}
									PlayerInfo[playerid][pItemMochila] = 1;
									PlayerInfo[AcessorioOffer[playerid]][pItemMochila] = 0;
									lolz = "Mochila";
									RemovePlayerAttachedObject(playerid, 5); // MOCHILA
								}
								if(AcessorioGram[playerid] == 22)
								{

									if(TemChapeuBruxa[playerid] == 1)
									{

										SendClientMessage(playerid, -1, "[BPL ACESSORIOS]: Você já possui este acessório.");
										return 1;
									}
									TemChapeuBruxa[playerid] = 1;
									TemChapeuBruxa[AcessorioOffer[playerid]] = 0;
									lolz = "Chapéu Bruxa";
									RemovePlayerAttachedObject(AcessorioOffer[playerid], 7); // CHAPEU BRUXA
								}
								format(gstring, sizeof(gstring), "* Você aceitou 	o Acessório: %s, ID:[%d]  por R$:[%d] do jogador: %s.",lolz,AcessorioGram[playerid],AcessorioPrice[playerid],giveplayerzcm);
								SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
								format(gstring, sizeof(gstring), "* O Jogador: %s aceitou a sua oferta de vender o acessório: %s, ID:[%d], foram adicionados R$:[%d] em seu banco.",sendername,lolz,AcessorioGram[playerid],AcessorioPrice[playerid]);
								SendClientMessage(AcessorioOffer[playerid], COR_LIGHTBLUE, gstring);
								format(gstring, sizeof(gstring), "[VENDA ACESSORIOS] %s vendeu o Acessório: %s, ID:[%d] por R$:[%d] para %s.",giveplayerzcm,lolz,AcessorioGram[playerid],AcessorioPrice[playerid],sendername);
								ABroadCast(COR_LIGHTRED,gstring,1);
								GivePlayerMoneyEx(playerid, -AcessorioPrice[playerid]);
								PlayerInfo[AcessorioOffer[playerid]][pConta] += AcessorioPrice[playerid];
								OnPlayerSave(playerid);
								AcessorioOffer[playerid] = 999;
								AcessorioPrice[playerid] = 0;
								AcessorioGram[playerid] = 0;
								return 1;
							}
							return 1;
						}
						else
						{

							return 1;
						}
					}
					else
					{

						SendClientMessage(playerid, COR_GREY, "Você não pode pagar por esse Acessório!");
						return 1;
					}
				}
				else
				{

					SendClientMessage(playerid, COR_GREY, "Você não recebeu nenhuma oferta para comprar Acessorios !");
					return 1;
				}
			}
			else if(strcmp(x_Emprego,"maconha(playerid, params[])
			{
			    if(DrugOffer[playerid] < 999)
			    {
			        if(GetPlayerMoneyEx(playerid) > DrugPrice[playerid])
				    {
				        if(PlayerInfo[playerid][pMaconha] < 7)
				        {
					        if(IsPlayerConnected(DrugOffer[playerid]))
					        {
					            GetPlayerName(DrugOffer[playerid], giveplayerzcm, sizeof(giveplayerzcm));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(gstring, sizeof(gstring), "* Você aceitou [%d] maconha por R$[%d] do traficante: %s, para usar: /usarmaconha",DrugGram[playerid],DrugPrice[playerid],giveplayerzcm);
								SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
								format(gstring, sizeof(gstring), "* %s comprou suas %d pedras de maconha, e R$%d será adicionado no seu salário.",sendername,DrugGram[playerid],DrugPrice[playerid]);
								SendClientMessage(DrugOffer[playerid], COR_LIGHTBLUE, gstring);
								PlayerInfo[DrugOffer[playerid]][pSalario] += DrugPrice[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogasSkill] ++;
								PlayerInfo[DrugOffer[playerid]][pTraficante] ++;
								GivePlayerMoneyEx(playerid, -DrugPrice[playerid]);
								PlayerInfo[playerid][pMaconha] += DrugGram[playerid];
								PlayerInfo[DrugOffer[playerid]][pMaconha] -= DrugGram[playerid];
								if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 50)
								{
								     SendClientMessage(DrugOffer[playerid], COR_AMARELO, "* Seu nível de traficante agora é 2, e você pode comprar mais erva por um preço mais barato.");
								}
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 100)
								{
								     SendClientMessage(DrugOffer[playerid], COR_AMARELO, "* Seu nível de traficante agora é 3, e você pode comprar mais erva por um preço mais barato.");
								}
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 150)
								{
								     SendClientMessage(DrugOffer[playerid], COR_AMARELO, "* Seu nível de traficante agora é 4, e você pode comprar mais erva por um preço mais barato.");
								}
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 200)
								{
								     SendClientMessage(DrugOffer[playerid], COR_AMARELO, "* Seu nível de traficante agora é 5, e você pode comprar mais erva por um preço mais barato.");
								}
					            DrugOffer[playerid] = 999;
								DrugPrice[playerid] = 0;
								DrugGram[playerid] = 0;
								return 1;
							}
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COR_GREY, "Você está totalmente carregado com maconha, use ou venda primeiro !");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "Você não pode pagar essas maconhas !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COR_GREY, "Ninguem te ofereceu maconha !");
			        return 1;
			    }
			}
			else if(strcmp(x_Emprego,"cocaina(playerid, params[])
			{
			    if(DrugOffer[playerid] < 999)
			    {
			        if(GetPlayerMoneyEx(playerid) > DrugPrice[playerid])
				    {
				        if(PlayerInfo[playerid][pCocaina] < 7)
				        {
					        if(IsPlayerConnected(DrugOffer[playerid]))
					        {
					            GetPlayerName(DrugOffer[playerid], giveplayerzcm, sizeof(giveplayerzcm));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(gstring, sizeof(gstring), "* Você aceitou [%d] cocaina por R$[%d] do traficante: %s, para usar: /usarcocaina",DrugGram[playerid],DrugPrice[playerid],giveplayerzcm);
								SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
								format(gstring, sizeof(gstring), "* %s comprou suas %d pedras de cocaína, e R$%d será adicionado no seu salário.",sendername,DrugGram[playerid],DrugPrice[playerid]);
								SendClientMessage(DrugOffer[playerid], COR_LIGHTBLUE, gstring);
								PlayerInfo[DrugOffer[playerid]][pSalario] += DrugPrice[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogasSkill] ++;
								GivePlayerMoneyEx(playerid, -DrugPrice[playerid]);
								PlayerInfo[playerid][pCocaina] += DrugGram[playerid];
								PlayerInfo[DrugOffer[playerid]][pCocaina] -= DrugGram[playerid];
								if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 50)
								{
								     SendClientMessage(DrugOffer[playerid], COR_AMARELO, "* Seu nível de traficante agora é 2, e você pode comprar mais erva por um preço mais barato.");
								}
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 100)
								{
								     SendClientMessage(DrugOffer[playerid], COR_AMARELO, "* Seu nível de traficante agora é 3, e você pode comprar mais erva por um preço mais barato.");
								}
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 150)
								{
								     SendClientMessage(DrugOffer[playerid], COR_AMARELO, "* Seu nível de traficante agora é 4, e você pode comprar mais erva por um preço mais barato.");
								}
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 200)
								{
								     SendClientMessage(DrugOffer[playerid], COR_AMARELO, "* Seu nível de traficante agora é 5, e você pode comprar mais erva por um preço mais barato.");
								}
					            DrugOffer[playerid] = 999;
								DrugPrice[playerid] = 0;
								DrugGram[playerid] = 0;
								return 1;
							}
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COR_GREY, "Você está carregado com crack, use ou venda primeiro !");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "Você não pode pagar por essa cocaína !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COR_GREY, "Ninguem te ofereceu cocaína !");
			        return 1;
			    }
			}
   			else if(strcmp(x_Emprego,"crack(playerid, params[])
			{
			    if(DrugOffer[playerid] < 999)
			    {
			        if(GetPlayerMoneyEx(playerid) > DrugPrice[playerid])
				    {
				        if(PlayerInfo[playerid][pCrack] < 7)
				        {
					        if(IsPlayerConnected(DrugOffer[playerid]))
					        {
					            GetPlayerName(DrugOffer[playerid], giveplayerzcm, sizeof(giveplayerzcm));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(gstring, sizeof(gstring), "* Você aceitou [%d] crack por R$[%d] do traficante: %s, para usar: /usarcrack",DrugGram[playerid],DrugPrice[playerid],giveplayerzcm);
								SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
								format(gstring, sizeof(gstring), "* %s comprou suas %d pedras de crack, e R$%d será adicionado no seu salário.",sendername,DrugGram[playerid],DrugPrice[playerid]);
								SendClientMessage(DrugOffer[playerid], COR_LIGHTBLUE, gstring);
								PlayerInfo[DrugOffer[playerid]][pSalario] += DrugPrice[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogasSkill] ++;
								GivePlayerMoneyEx(playerid, -DrugPrice[playerid]);
								PlayerInfo[playerid][pCrack] += DrugGram[playerid];
								PlayerInfo[DrugOffer[playerid]][pCrack] -= DrugGram[playerid];
								if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 50)
								{
								     SendClientMessage(DrugOffer[playerid], COR_AMARELO, "* Seu nível de traficante agora é 2, e você pode comprar mais erva por um preço mais barato.");
								}
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 100)
								{
								     SendClientMessage(DrugOffer[playerid], COR_AMARELO, "* Seu nível de traficante agora é 3, e você pode comprar mais erva por um preço mais barato.");
								}
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 150)
								{
								     SendClientMessage(DrugOffer[playerid], COR_AMARELO, "* Seu nível de traficante agora é 4, e você pode comprar mais erva por um preço mais barato.");
								}
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 200)
								{
								     SendClientMessage(DrugOffer[playerid], COR_AMARELO, "* Seu nível de traficante agora é 5, e você pode comprar mais erva por um preço mais barato.");
								}
					            DrugOffer[playerid] = 999;
								DrugPrice[playerid] = 0;
								DrugGram[playerid] = 0;
								return 1;
							}
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COR_GREY, "Você está carregado com crack, use ou venda primeiro !");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "Você não pode pagar por esse crack !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COR_GREY, "Ninguem te ofereceu crack !");
			        return 1;
			    }
			}
			else if(strcmp(x_Emprego,"lsd(playerid, params[])
			{
			    if(DrugOffer[playerid] < 999)
			    {
			        if(GetPlayerMoneyEx(playerid) > DrugPrice[playerid])
				    {
				        if(PlayerInfo[playerid][pLsd] < 7)
				        {
					        if(IsPlayerConnected(DrugOffer[playerid]))
					        {
					            GetPlayerName(DrugOffer[playerid], giveplayerzcm, sizeof(giveplayerzcm));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(gstring, sizeof(gstring), "* Você aceitou [%d] lsd por R$[%d] do traficante: %s, para usar: /usarcrack",DrugGram[playerid],DrugPrice[playerid],giveplayerzcm);
								SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
								format(gstring, sizeof(gstring), "* %s comprou suas %d pedras de lsd, e R$%d será adicionado no seu salário.",sendername,DrugGram[playerid],DrugPrice[playerid]);
								SendClientMessage(DrugOffer[playerid], COR_LIGHTBLUE, gstring);
								PlayerInfo[DrugOffer[playerid]][pSalario] += DrugPrice[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogasSkill] ++;
								GivePlayerMoneyEx(playerid, -DrugPrice[playerid]);
								PlayerInfo[playerid][pLsd] += DrugGram[playerid];
								PlayerInfo[DrugOffer[playerid]][pLsd] -= DrugGram[playerid];
								if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 50)
								{
								     SendClientMessage(DrugOffer[playerid], COR_AMARELO, "* Seu nível de traficante agora é 2, e você pode comprar mais erva por um preço mais barato.");
								}
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 100)
								{
								     SendClientMessage(DrugOffer[playerid], COR_AMARELO, "* Seu nível de traficante agora é 3, e você pode comprar mais erva por um preço mais barato.");
								}
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 150)
								{
								     SendClientMessage(DrugOffer[playerid], COR_AMARELO, "* Seu nível de traficante agora é 4, e você pode comprar mais erva por um preço mais barato.");
								}
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 200)
								{
								     SendClientMessage(DrugOffer[playerid], COR_AMARELO, "* Seu nível de traficante agora é 5, e você pode comprar mais erva por um preço mais barato.");
								}
					            DrugOffer[playerid] = 999;
								DrugPrice[playerid] = 0;
								DrugGram[playerid] = 0;
								return 1;
							}
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COR_GREY, "Você está carregado com crack, use ou venda primeiro !");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "Você não pode pagar por esse crack !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COR_GREY, "Ninguem te ofereceu crack !");
			        return 1;
			    }
			}
			else if(strcmp(x_Emprego,"mendigo(playerid, params[])
			{
			    if(MendigoOffer[playerid] < 999)
				{
					if(GetPlayerMoneyEx(playerid) > MendigoPrice[playerid])
			  		{
						if (IsPlayerConnected(MendigoOffer[playerid]))
						{
							GetPlayerName(MendigoOffer[playerid], giveplayerzcm, sizeof(giveplayerzcm));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(gstring, sizeof(gstring), "* Você deu um esmola de R$[%d], para %s.",MendigoPrice[playerid] ,giveplayerzcm);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* %s te deu uma esmola de R$[%d]", sendername, MendigoPrice[playerid]);
							SendClientMessage(MendigoOffer[playerid], COR_LIGHTBLUE, gstring);
							GivePlayerMoneyEx(playerid, -MendigoPrice[playerid]);
							GivePlayerMoneyEx(MendigoOffer[playerid], MendigoPrice[playerid]);
							MendigoPrice[playerid] = 0;
							MendigoOffer[playerid] = 999;
							SendClientMessage(giveplayeridzcmd, COR_VAGOS, "Obrigado por ajudar os necessitados voce e um bom cidadão!");
							return 1;
						}//Connected ou not
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "Você não pode pagar a esmola!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COR_GREY, "Você não tem nenhum pedido de esmola!");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"blindagem(playerid, params[])
			{
			    if(BlindagemOffer[playerid] < 999)
                {
					if(GetPlayerMoneyEx(playerid) > BlindagemPrice[playerid])
			  		{
						if (IsPlayerConnected(BlindagemOffer[playerid]))
						{
						    if(!IsPlayerInAnyVehicle(playerid))
                            {
                                 SendClientMessage(playerid,COR_VERMELHO,"Voce nao esta Dentro de Um Veiculo");
                                 return 1;
                            }
                            new vehicleid = GetPlayerVehicleID(playerid);
                            new modeloo = GetVehicleModel(vehicleid);
						    GetPlayerName(BlindagemOffer[playerid], giveplayerzcm, sizeof(giveplayerzcm));
							GetPlayerName(playerid, sendername, sizeof(sendername));
						    Vuln[vehicleid] = MaxVuln;
						    format(gstring, sizeof(gstring), "* Você Aceitou Uma Blindagem De:[%s] Por: [%d] ",sendername ,MoneyPrice[playerid]);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* O Mecânico %s blindou seu veículo por R$%d.",giveplayerzcm,BlindagemPrice[playerid]);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* Você blindou o carro do %s e R$[%d] foi adicionado em seu salário.",sendername,BlindagemPrice[playerid]);
							SendClientMessage(BlindagemOffer[playerid], COR_LIGHTBLUE, gstring);
						    BlindagemOffer[playerid] = 999;
							BlindagemPrice[playerid] = 0;
       				        if(modeloo == 522 || modeloo == 581 || modeloo == 586 || modeloo == 521 || modeloo == 468 || modeloo == 463 || modeloo == 461 || modeloo == 462 || modeloo == 448)
                            {
                                Vuln[vehicleid] = MaxVulnMoto;
                            }
                            return 1;
						}//Connected ou not
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "Você não pode pagar a esmola!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COR_GREY, "Você não tem nenhum pedido de esmola!");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"nitro(playerid, params[])
			{
			    if(TunarOffer[playerid] < 999)
                {
					if(GetPlayerMoneyEx(playerid) > TunarPrice[playerid])
			  		{
						if (IsPlayerConnected(TunarOffer[playerid]))
						{
						    if(!IsPlayerInAnyVehicle(playerid))
                            {
                                 SendClientMessage(playerid,COR_VERMELHO,"Voce nao esta Dentro de Um Veiculo");
                                 return 1;
                            }
                            new vehicleid = GetPlayerVehicleID(playerid);
                            new modeloo = GetVehicleModel(vehicleid);
						    GetPlayerName(TunarOffer[playerid], giveplayerzcm, sizeof(giveplayerzcm));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							AddVehicleComponent(vehicleid, 1010);
						    format(gstring, sizeof(gstring), "* Você colocou nitro em seu carro por R$[%d] Mecânico: %s.",MoneyPrice[playerid],sendername);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* O Mecânico %s tunou seu veículo por R$%d.",giveplayerzcm,TunarPrice[playerid]);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* Você tunou o carro do %s e R$[%d] foi adicionado em seu salário.",sendername,TunarPrice[playerid]);
							SendClientMessage(TunarOffer[playerid], COR_LIGHTBLUE, gstring);
						    TunarOffer[playerid] = 999;
							TunarPrice[playerid] = 0;
       				        if(modeloo == 522 || modeloo == 581 || modeloo == 586 || modeloo == 521 || modeloo == 468 || modeloo == 463 || modeloo == 461 || modeloo == 462 || modeloo == 448)
                            {
                                SendClientMessage(playerid, -1, "Você não pode aceitar blindagem em motos !");
                                return 1;
                            }
                            return 1;
						}//Connected ou not
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "Você não pode pagar a esmola!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COR_GREY, "Você não tem nenhum pedido de esmola!");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"sexo(playerid, params[])
			{
			    if(SexoOffer[playerid] < 999)
                {
					if(GetPlayerMoneyEx(playerid) > SexoPrice[playerid])
			  		{
						if (IsPlayerInAnyVehicle(playerid))
						{
                            new vehicleid = GetPlayerVehicleID(playerid);
                            new modeloo = GetVehicleModel(vehicleid);
						    if(modeloo != 416 && modeloo != 407 && modeloo != 468)
                                return SendClientMessage(playerid,COR_VERMELHO,"* Você não está em uma ambulancia");
                                
				            GetPlayerName(BlindagemOffer[playerid], giveplayerzcm, sizeof(giveplayerzcm));
							GetPlayerName(playerid, sendername, sizeof(sendername));
						    format(gstring, sizeof(gstring), "* Você aceitou de sexo por R$[%d] do médico: %s.",SexoPrice[playerid],sendername);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* Você mudou o sexo de %s, e R$[%d] foi adicionado no seu salário.",sendername,SexoPrice[playerid]);
							SendClientMessage(SexoOffer[playerid], COR_LIGHTBLUE, gstring);
						    SexoOffer[playerid] = 999;
							SexoPrice[playerid] = 0;
							if(PlayerInfo[playerid][pSex] == 2)
							{
                               PlayerInfo[playerid][pSex] = 1;
							   SendClientMessage(playerid, COR_AMARELO, "Você mudou seu sexo para masculino !");
							   return 1;
							}
							else if(PlayerInfo[playerid][pSex] == 1)
							{
                               PlayerInfo[playerid][pSex] = 2;
							   SendClientMessage(playerid, COR_AMARELO, "Você mudou seu sexo para feminino !");
							   return 1;
							}
							return 1;
						}
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "* Você não tem esse dinheiro !");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COR_GREY, "Você não tem nenhum pedido de troca de sexo !");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"cura(playerid, params[])
			{
			    if(CuraOffer[playerid] < 999)
                {
					if(GetPlayerMoneyEx(playerid) > CuraPrice[playerid])
			  		{
						if (IsPlayerConnected(CuraOffer[playerid]))
						{
                            new vehicleid = GetPlayerVehicleID(playerid);
                            new modeloo = GetVehicleModel(vehicleid);
						    if(modeloo != 416 && modeloo != 407 && modeloo != 468)
                                return SendClientMessage(playerid,COR_VERMELHO,"* Você não está em uma ambulancia");
                                 
						    GetPlayerName(BlindagemOffer[playerid], giveplayerzcm, sizeof(giveplayerzcm));
							GetPlayerName(playerid, sendername, sizeof(sendername));
						    format(gstring, sizeof(gstring), "* Você aceitou a cura por R$[%d] do Médico: %s.",CuraPrice[playerid],sendername);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* Você curou o jogador: %s, e R$[%d] foi adicionado no seu salário.",sendername,CuraPrice[playerid]);
							SendClientMessage(CuraOffer[playerid], COR_LIGHTBLUE, gstring);
							SetPlayerArmour(playerid, 100);
				            SetPlayerHealth(playerid, 100);
							PlayerInfo[playerid][pDoenca] = 0;
							SetPlayerDrunkLevel (playerid, 0);
					        PlayerInfo[playerid][pDorgado2] = 0;
						    CuraOffer[playerid] = 999;
							CuraPrice[playerid] = 0;
							return 1;
						}
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "* Você não tem esse dinheiro !");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COR_GREY, "Você não tem nenhum pedido de cura !");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"dinamite(playerid, params[])
			{
			    if(DinamiteOffer[playerid] < 999)
			    {
			        if(GetPlayerMoneyEx(playerid) > DinamitePrice[playerid])
				    {
					    if(IsPlayerConnected(DinamiteOffer[playerid]))
					    {
							if(PlayerInfo[playerid][pDina] == 10)
							{
								 SendClientMessage(playerid, COR_GRAD1, "Você já atingiu o limite máximo de dinamites !");
								 return 1;
							}
					        GetPlayerName(DinamiteOffer[playerid], giveplayerzcm, sizeof(giveplayerzcm));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(gstring, sizeof(gstring), "* Você aceitou as dinamites por R$[%d] do Mafioso: %s.",DinamitePrice[playerid],giveplayerzcm);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* %s aceitou as dinamites, e R$[%d] será adcionado no seu Salario.",sendername,DinamitePrice[playerid]);
							SendClientMessage(DinamiteOffer[playerid], COR_LIGHTBLUE, gstring);
							GivePlayerMoneyEx(playerid, -DinamitePrice[playerid]);
       						PlayerInfo[playerid][pDina] += 1;
					        DinamiteOffer[playerid] = 999;
							DinamitePrice[playerid] = 0;
							SBizzInfo[9][sbTill] += 1000;
		                    ExtortionSBiz(9, 1000);
							return 1;
						}
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "Você não pode permitir a venda !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COR_GREY, "Não tem nenhuma oferta de dinamites !");
			        return 1;
			    }
			}
			else if(strcmp(x_Emprego,"decod(playerid, params[])
			{
			    if(DecodificadorOffer[playerid] < 999)
			    {
			        if(GetPlayerMoneyEx(playerid) > DecodificadorPrice[playerid])
				    {
					    if(IsPlayerConnected(DecodificadorOffer[playerid]))
					    {
							if(PlayerInfo[playerid][pDecod] > 0)
							{
								 SendClientMessage(playerid, COR_GRAD1, "Você já atingiu o limite máximo de dinamites !");
								 return 1;
							}
					        GetPlayerName(DecodificadorOffer[playerid], giveplayerzcm, sizeof(giveplayerzcm));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(gstring, sizeof(gstring), "* Você aceitou o decodificador por R$[%d] do Mafioso: %s.",DecodificadorPrice[playerid],giveplayerzcm);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* %s aceitou o seu decodificador, e R$[%d] serão adicionados em seu salário.",sendername,DecodificadorPrice[playerid]);
							SendClientMessage(DecodificadorOffer[playerid], COR_LIGHTBLUE, gstring);
							GivePlayerMoneyEx(playerid, -DecodificadorPrice[playerid]);
       						PlayerInfo[playerid][pDecod] += 1;
					        DecodificadorOffer[playerid] = 999;
							DecodificadorPrice[playerid] = 0;
							SBizzInfo[9][sbTill] += 1000;
		                    ExtortionSBiz(9, 1000);
							return 1;
						}
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "Você não pode permitir a venda !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COR_GREY, "Não tem nenhuma oferta de decodificador !");
			        return 1;
			    }
			}
			else if(strcmp(x_Emprego,"reparo(playerid, params[])
			{
			    if(RepairOffer[playerid] < 999)
			    {
			        if(GetPlayerMoneyEx(playerid) > RepairPrice[playerid])
				    {
					    if(IsPlayerInAnyVehicle(playerid))
					    {
					        if(IsPlayerConnected(RepairOffer[playerid]))
					        {
                                new vid = GetPlayerVehicleID(playerid);
						        GetPlayerName(RepairOffer[playerid], giveplayerzcm, sizeof(giveplayerzcm));
								GetPlayerName(playerid, sendername, sizeof(sendername));
						        RepairCar[playerid] = GetPlayerVehicleID(playerid);
						        SetVehicleHealth(RepairCar[playerid], 1000.0);
						        RepairVehicle(RepairCar[playerid]);
								format(gstring, sizeof(gstring), "* O Mecânico %s reparou seu veículo por R$%d.",giveplayerzcm,RepairPrice[playerid]);
							    SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							    format(gstring, sizeof(gstring), "* Você reparou o carro do %s e R$[%d] foi adicionado em seu salário.",sendername,RepairPrice[playerid]);
							    SendClientMessage(RepairOffer[playerid], COR_LIGHTBLUE, gstring);
								PlayerInfo[RepairOffer[playerid]][pMechSkill] ++;
				                if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 50)
								{
								     SendClientMessage(RepairOffer[playerid], COR_AMARELO, "* Seu mecânico e nível 2, Agora ele pode adicionar combustivel para qualquer carro.");
								}
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 100)
								{
								     SendClientMessage(RepairOffer[playerid], COR_AMARELO, "* Seu mecânico e nível 3, Agora ele pode adicionar combustivel para qualquer carro.");
								}
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 150)
								{
								     SendClientMessage(RepairOffer[playerid], COR_AMARELO, "* Seu mecânico e nível 4, Agora ele pode adicionar combustivel para qualquer carro.");
								}
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 200)
								{
								     SendClientMessage(RepairOffer[playerid], COR_AMARELO, "* Seu mecânico e nível 5, Agora ele pode adicionar combustivel para qualquer carro.");
								}
								PlayerInfo[RepairOffer[playerid]][pSalario] += RepairPrice[playerid];
								GivePlayerMoneyEx(playerid, -RepairPrice[playerid]);
								Quebrado[vid] = 0;
						        RepairOffer[playerid] = 999;
								RepairPrice[playerid] = 0;
								return 1;
							}
							return 1;
						}
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "Você não pode permitir o reparo !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COR_GREY, "Falta uma oferta para Você reparar o carro !");
			        return 1;
			    }
			}
			else { return 1; }
		}//not connected
		return 1;
	}
	CMD:abastecercarro(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(GetPlayerOrg(playerid) != 14)
		    {
		        SendClientMessage(playerid, COR_GREY, "Você não é mecanico!");
		        return 1;
		    }
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /abastecercarro [id] [preco]");
				return 1;
			}
            new playa;
			new money;
			playa = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			money = strval(tmpzcmd);
			if(money < 1 || money > 8000) { SendClientMessage(playerid, COR_GREY, "Preco minimo 1, preco maximo 8000!"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
					{
					    if(playa == playerid) { SendClientMessage(playerid, COR_GREY, "Nao posso fazer isso!"); return 1; }
					    GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(gstring, sizeof(gstring), "Você ofereceu ao(a) %s para abastecer seu carro por R$[%d].",giveplayerzcm,money);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "* Mecanico %s quer re-abastecer seu carro por R$%d, (Digite /aceitar abastecimento) para aceitar.",sendername,money);
						SendClientMessage(playa, COR_LIGHTBLUE, gstring);
						RefillOffer[playa] = playerid;
						RefillPrice[playa] = money;
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "O Player nao esta perto de Você ou nao esta no carro.");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "Jogador offline.");
			}
		}
		return 1;
	}
	CMD:reparar(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(GetPlayerOrg(playerid) != 14)
		    {
		        SendClientMessage(playerid, COR_GREY, "Você não é mecanico!");
		        return 1;
		    }
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /reparar [id] [preco]");
				return 1;
			}
            new playa;
			new money;
			playa = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			money = strval(tmpzcmd);
			if(money < 1 || money > 5000) { SendClientMessage(playerid, COR_GREY, "Preco minimo 1, preco maximo 5000!"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
					{
					    if(playa == playerid) { SendClientMessage(playerid, COR_GREY, "Não posso fazer isso!"); return 1; }
				    	GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(gstring, sizeof(gstring), "Você ofereceu ao(a) %s para reparar seu carro por R$[%d].",giveplayerzcm,money);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "* Mecanico %s quer reparar seu carro por R$[%d], (Digite /aceitar reparo) para aceitar.",sendername,money);
						SendClientMessage(playa, COR_LIGHTBLUE, gstring);
						RepairOffer[playa] = playerid;
						RepairPrice[playa] = money;
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "Este jogador nao esta perto de Você ou nao esta no carro.");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "O Jogador esta offline.");
			}
		}
		return 1;
	}
	CMD:gangue(playerid, params[])// || CMD:ga(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerMutado[playerid] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COR, "Você não pode falar, pois foi calado.");
				return 1;
			}
			if(PlayerInfo[playerid][pJailed] == 2)
			{
				 SendClientMessage(playerid, COR_BALLAS, "Você não pode falar, pois foi calado.");
				 return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
			{
				idxzcmd++;
			}
			new offset = idxzcmd;
			new result[85];
			while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
			{
				result[idxzcmd - offset] = cmdtext[idxzcmd];
				idxzcmd++;
			}
			result[idxzcmd - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: (/ga) [Chat Org]");
				return 1;
			}
			if(GetTickCount() - TempoChatGang[playerid] < 3000)
    	    {
		         SendClientMessage(playerid,COR_GRAD1,"Você só pode escrever uma mensagem a cada 3 segundos.");
		         return 1;
		    }
			if(TentouDivulgar(result))
			{
  				GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
  				format(gstring, 128, "AdmAviso: [%d]%s tentou divulgar: %s.",playerid,PlayerName,result);
				ABroadCast(COR_AMARELO,gstring,1);
				DivulgouLog(gstring);
        		return 1;
			}
			if (PlayerInfo[playerid][pLider] > 0 || PlayerInfo[playerid][pMembro] > 0)
			{

			    new leader = PlayerInfo[playerid][pLider];
			    new member = PlayerInfo[playerid][pMembro];
			    if(member == 5 || leader == 5)
			    {
           			if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Chefão (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Sub-Chefe (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Gangster (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Capanga (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Fogueteiro (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Novato (%s) %s. ))  **", sendername, result); }
					else { format(gstring, sizeof(gstring), "** Novato (%s) %s. ))  **", sendername, result); }
					TempoChatGang[playerid] = GetTickCount();
					SendFamilyMessage(5, COR_GA, gstring);
					format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/ga).", PlayerName(playerid));
	                ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
			    }
			    if(member == 6 || leader == 6)
			    {
			        if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Ahmed Yassin (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Sub-Chefe (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Bombadeador (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Terrorista (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Membro (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Homem-Bomba (%s) %s. ))  **", sendername, result); }
					else { format(gstring, sizeof(gstring), "** Homem-Bomba (%s) %s. ))  **", sendername, result); }
					TempoChatGang[playerid] = GetTickCount();
					SendFamilyMessage(6, COR_GA, gstring);
					format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/ga).", PlayerName(playerid));
	                ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
			    }
			    if(member == 8 || leader == 8)
			    {
			        if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Diretor (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Vice-Diretor (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Agente Especial (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Agente (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Assassino (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Aprendiz (%s) %s. ))  **", sendername, result); }
					else { format(gstring, sizeof(gstring), "** Aprendiz (%s) %s. ))  **", sendername, result); }
					TempoChatGang[playerid] = GetTickCount();
					SendFamilyMessage(8, COR_GA, gstring);
					format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/ga).", PlayerName(playerid));
	                ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
			    }
			    if(member == 9 || leader == 9)
			    {
			        if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Diretor de Produção (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Produção (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Editor Local (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Rede Globo Nacional (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Rede Globo Local (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Humorista (%s) %s. ))  **", sendername, result); }
					else { format(gstring, sizeof(gstring), "** Humorista (%s) %s )) **", sendername, result); }
					TempoChatGang[playerid] = GetTickCount();
					SendFamilyMessage(9, COR_GA, gstring);
					format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/ga).", PlayerName(playerid));
	                ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
			    }
			    if(member == 10 || leader == 10)
			    {
           			if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Chefe (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Sub-Chefe (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Taxista Profissional (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Taxista Experiente (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Taxista (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Taxista Em Treinamento (%s) %s. ))  **", sendername, result); }
					else { format(gstring, sizeof(gstring), "** Taxista em Treinamento (%s) %s. )) **", sendername, result); }
					TempoChatGang[playerid] = GetTickCount();
					SendFamilyMessage(10, COR_GA, gstring);
					format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/ga).", PlayerName(playerid));
	                ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				}
				if(member == 15 || leader == 15)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Chefão (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Sub-Chefe (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Gangster (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Capanga (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Fogueteiro (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Novato (%s) %s. ))  **", sendername, result); }
					else { format(gstring, sizeof(gstring), "** Novato (%s) %s. )) **", sendername, result); }
					TempoChatGang[playerid] = GetTickCount();
				    SendFamilyMessage(15, COR_GA, gstring);
				    format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/ga).", PlayerName(playerid));
	                ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				}
				if(member == 16 || leader == 16)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Osama Bin Laden (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Sub-Chefe (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Bombadeador (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Terrorista (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Membro (%s) %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Homem-Bomba (%s) %s. ))  **", sendername, result); }
					else { format(gstring, sizeof(gstring), "** Homem-Bomba (%s) %s. )) **", sendername, result); }
					TempoChatGang[playerid] = GetTickCount();
					SendFamilyMessage(16, COR_GA, gstring);
					format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/ga).", PlayerName(playerid));
	                ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				}
				if(member == 18 || leader == 18)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Chefão (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Sub-Chefe (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Gangster (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Capanga (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Fogueteiro (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Novato (%s) %s. ))  **", sendername, result); }
					else { format(gstring, sizeof(gstring), "** Novato (%s) %s. )) **", sendername, result); }
					TempoChatGang[playerid] = GetTickCount();
					SendFamilyMessage(18, COR_GA, gstring);
					format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/ga).", PlayerName(playerid));
	                ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				}
				if(member == 19 || leader == 19)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Chefão (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Sub-Chefe (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Gangster (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Capanga (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Fogueteiro (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Novato (%s) %s. ))  **", sendername, result); }
					else { format(gstring, sizeof(gstring), "** Novato (%s) %s. )) **", sendername, result); }
					TempoChatGang[playerid] = GetTickCount();
					SendFamilyMessage(19, COR_GA, gstring);
					format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/ga).", PlayerName(playerid));
	                ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				}
				if(member == 23 || leader == 23)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Chefão (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Sub-Chefe (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Gangster (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Capanga (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Fogueteiro (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Novato (%s) %s. ))  **", sendername, result); }
					else { format(gstring, sizeof(gstring), "** Novato (%s) %s. )) **", sendername, result); }
					TempoChatGang[playerid] = GetTickCount();
					SendFamilyMessage(23, COR_GA, gstring);
					format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/ga).", PlayerName(playerid));
	                ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				}
				if(member == 11 || leader == 11)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Chefão (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Sub-Chefe (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Gangster (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Capanga (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Fogueteiro (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Novato (%s) %s. ))  **", sendername, result); }
					else { format(gstring, sizeof(gstring), "** Novato (%s) %s. )) **", sendername, result); }
					TempoChatGang[playerid] = GetTickCount();
					SendFamilyMessage(11, COR_GA, gstring);
					format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/ga).", PlayerName(playerid));
	                ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				}
				if(member == 21 || leader == 21)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Motoqueiro-Chefão (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Motoqueiro-Sub (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Motoqueiro-Experiente (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Motoqueiro-Profissional (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Motoqueiro-Aprendiz (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Motoqueiro-Novato (%s) %s. ))  **", sendername, result); }
					else { format(gstring, sizeof(gstring), "** Motoqueiro-Novato (%s) %s. )) **", sendername, result); }
					TempoChatGang[playerid] = GetTickCount();
					SendFamilyMessage(21, COR_GA, gstring);
					format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/ga).", PlayerName(playerid));
	                ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				}
				if(member == 24 || leader == 24)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Motoqueiro-Chefão (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Motoqueiro-Sub (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Motoqueiro-Experiente (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Motoqueiro-Profissional (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Motoqueiro-Aprendiz (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Motoqueiro-Novato (%s) %s. ))  **", sendername, result); }
					else { format(gstring, sizeof(gstring), "** Motoqueiro-Novato (%s) %s. )) **", sendername, result); }
					TempoChatGang[playerid] = GetTickCount();
					SendFamilyMessage(24, COR_GA, gstring);
					format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/ga).", PlayerName(playerid));
	                ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				}
				if(member == 20 || leader == 20)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Don (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Consiglieri (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Capo (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Soldatto (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Assossiado (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Novizio (%s) %s. ))  **", sendername, result); }
					else { format(gstring, sizeof(gstring), "** Novizio (%s) %s. )) **", sendername, result); }
					TempoChatGang[playerid] = GetTickCount();
					SendFamilyMessage(20, COR_GA, gstring);
					format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/ga).", PlayerName(playerid));
	                ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				}
				if(member == 22 || leader == 22)
			    {
			        if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Don (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Capo Bastone (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Capo Regime (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Sgarrista (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Picciotto (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Associate (%s) %s. ))  **", sendername, result); }
					else { format(gstring, sizeof(gstring), "** Associate (%s) %s. )) **", sendername, result); }
					TempoChatGang[playerid] = GetTickCount();
					SendFamilyMessage(22, COR_GA, gstring);
					format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/ga).", PlayerName(playerid));
	                ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				}
			    if(member == 14 || leader == 14)
			    {
           			if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Mecanico-Chefe (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Sub-Chefe (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Mecanico Profissional (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Mecanico Experiente (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Mecanico Aprendiz (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Mecanico Em Treinamento (%s) %s. ))  **", sendername, result); }
					else { format(gstring, sizeof(gstring), "** Mecanico em Treinamento (%s) %s. )) **", sendername, result); }
					TempoChatGang[playerid] = GetTickCount();
					SendFamilyMessage(14, COR_GA, gstring);
					format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/ga).", PlayerName(playerid));
	                ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				}
				if(member == 26 || leader == 26)
			    {
			        if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Diretor (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Vice-Diretor (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Agente Especial (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Agente (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Assassino (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Aprendiz (%s) %s. ))  **", sendername, result); }
					else { format(gstring, sizeof(gstring), "** Aprendiz (%s) %s. ))  **", sendername, result); }
					TempoChatGang[playerid] = GetTickCount();
					SendFamilyMessage(26, COR_GA, gstring);
					format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/ga).", PlayerName(playerid));
	                ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
			    }
                if(member == 27 || leader == 27)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Chefão Marombeiro (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Sub Marombeiro (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Gangster (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Capanga (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Fogueteiro (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Novato (%s) %s. ))  **", sendername, result); }
					else { format(gstring, sizeof(gstring), "** Novato (%s) %s. )) **", sendername, result); }
					TempoChatGang[playerid] = GetTickCount();
					SendFamilyMessage(27, COR_GA, gstring);
					format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/ga).", PlayerName(playerid));
	                ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				}
				if(member == 28 || leader == 28)
			    {
			        if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Mikhailov (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Capo Bastone (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Capo Regime (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Sgarrista (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Picciotto (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Associate (%s) %s. ))  **", sendername, result); }
					else { format(gstring, sizeof(gstring), "** Associate (%s) %s. )) **", sendername, result); }
					TempoChatGang[playerid] = GetTickCount();
					SendFamilyMessage(28, COR_GA, gstring);
					format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/ga).", PlayerName(playerid));
	                ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				}
                if(member == 29 || leader == 29)
			    {
			        if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Juan Pablo (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Capo Bastone (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Capo Regime (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Sgarrista (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Picciotto (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Associate (%s) %s. ))  **", sendername, result); }
					else { format(gstring, sizeof(gstring), "** Associate (%s) %s. )) **", sendername, result); }
					TempoChatGang[playerid] = GetTickCount();
					SendFamilyMessage(29, COR_GA, gstring);
					format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/ga).", PlayerName(playerid));
	                ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
				}
				if(member == 30 || leader == 30)
			    {
			        if(PlayerInfo[playerid][pCargo] == 6) { format(gstring, sizeof(gstring), "** Mohammed Deif (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(gstring, sizeof(gstring), "** Sub-Chefe (%s) %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(gstring, sizeof(gstring), "** Bombadeador (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(gstring, sizeof(gstring), "** Terrorista (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(gstring, sizeof(gstring), "** Membro (%s) %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(gstring, sizeof(gstring), "** Homem-Bomba (%s) %s. ))  **", sendername, result); }
					else { format(gstring, sizeof(gstring), "** Homem-Bomba (%s) %s. ))  **", sendername, result); }
					TempoChatGang[playerid] = GetTickCount();
					SendFamilyMessage(30, COR_GA, gstring);
					format(gstring, sizeof(gstring), "* %s usou o rádio para falar com a sua organização(/ga).", PlayerName(playerid));
	                ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
			    }
				printf("%s", gstring);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD2, "Você não faz parte de nenhuma família!");
				return 1;
			}
		}
		return 1;
	}
	CMD:no(playerid, params[]) || strcmp(cmd,"/noticia",true) ==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)
			{
			    new newcar = GetPlayerVehicleID(playerid);
		        if(PlayerMutado[playerid] == 1)
				{
					SendClientMessage(playerid, TEAM_CYAN_COR, "Você nao poder falar, Você foi calado");
					return 1;
				}
				if(GloboCarros(newcar))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new length = strlen(cmdtext);
					while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
					{
						idxzcmd++;
					}
					new offset = idxzcmd;
					new result[64];
					while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
					{
						result[idxzcmd - offset] = cmdtext[idxzcmd];
						idxzcmd++;
					}
					result[idxzcmd - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COR_GRAD2, "USE: /noticias [Texto]");
						return 1;
					}
					if( panuncioreporter == 1)
	        		{
	        			SendClientMessage(playerid,COR_GRAD2,"Espere 10 segundos para poder anunciar novamente!");
	        			return 1;
	        		}
					if(TentouDivulgar(result))
					{
			  			GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
			  			format(gstring, 128, "AdmAviso: [%d]%s tentou divulgar: %s.",playerid,PlayerName,result);
						ABroadCast(COR_AMARELO,gstring,1);
						DivulgouLog(gstring);
        				return 1;
					}
					format(gstring, sizeof(gstring), "[Rede Globo]: %s - %s[%d] - Cel[%d]",result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
					SendClientMessageToAll(COR_NEWS,gstring);
					panuncioreporter = 1;
					TempoAnuncioReporter = SetTimer("AnuncioReporter", 10000, 0);
				}
				else
				{
				    SendClientMessage(playerid, COR_GREY, "Você não está no Jornal ou na Van !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "Você não é um Reporter !");
			}
		}//not connected
		return 1;
	}
	CMD:aovivo(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)
			{
			    if(TalkingLive[playerid] != 255)
			    {
			        SendClientMessage(playerid, COR_LIGHTBLUE, "* A Conversa AoVivo Terminou.");
			        SendClientMessage(TalkingLive[playerid], COR_LIGHTBLUE, "* A Conversa AoVivo Terminou.");
			        TogglePlayerControllable(playerid, 1);
			        TogglePlayerControllable(TalkingLive[playerid], 1);
		            TalkingLive[TalkingLive[playerid]] = 255;
			        TalkingLive[playerid] = 255;
			        return 1;
			    }
			    if(PlayerInfo[playerid][pCargo] < 2)
				{
				    SendClientMessage(playerid, COR_GREY, "Voce precisa ser maior que cargo 2 para usar este comando!");
				    return 1;
				}
				tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd))
				{
					SendClientMessage(playerid, COR_GRAD1, "USE: /aovivo [id]");
					return 1;
				}
		        giveplayeridzcmd = ReturnUser(tmpzcmd);
				if (IsPlayerConnected(giveplayeridzcmd))
				{
				    if(giveplayeridzcmd != INVALID_PLAYER_ID)
				    {
						if (ProxDetectorS(5.0, playerid, giveplayeridzcmd))
						{
						    if(giveplayeridzcmd == playerid)
							{
								SendClientMessage(playerid, COR_GREY, "Você não pode falar AoVivo com você mesmo!");
								return 1;
							}
						    GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(gstring, sizeof(gstring), "* Você ofereceu a %s para ter uma conversa AoVivo.", giveplayerzcm);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* %s você tem uma oferta para conversas ao vivo, Digite(/aceitar aovivo) para aceitar.", PlayerName(playerid));
							SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
							LiveOffer[giveplayeridzcmd] = playerid;
						}
						else
						{
						    SendClientMessage(playerid, COR_GREY, "Você esta longe deste player !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COR_GREY, "ID/Nick - Invalido !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "Você não é um membro da rede globo !");
			}
		}//not connected
		return 1;
	}
	CMD:venderacessorios(playerid, params[])// || CMD:venderacessorio(playerid, params[])
	{

		if(IsPlayerConnected(playerid))
		{

			if(PlayerInfo[playerid][pJailed] != 0)
			{

				SendClientMessage(playerid,COR_AMARELO," Você não pode vender Acessórios na cadeia!");
				return 1;
			}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{

				SendClientMessage(playerid, COR_GRAD2, "USE: /venderacessorios [id] [ id acessório ] [preco]");
				return 1;
			}
            new playa;
			new money;
			new needed;
			playa = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{

				SendClientMessage(playerid, COR_GREY, "USE: /venderacessorios [id] [ id acessório ] [preco]");
				SendClientMessage(playerid, COR_CV, "|1 Kit óculos | 2 Kit bandana | 3 Arara | 4 kit boné | 5 kit relógio");
				SendClientMessage(playerid, COR_AMARELO, "|6 Chapéu bombeiro | 7 Chapéu Polícial | 8 Chapéu Michael Jackson | 9 Chapéu Operario | 10 Chapéu Funkeiro");
				SendClientMessage(playerid, COR_AMARELO, "|11 Chapeu Idoso | 12 Chapeu Harry Potter | 13 Cabeça de Galo | 14 Chifre de Boi | 15 Cabeção do CJ");
				SendClientMessage(playerid, COR_AMARELO, "|16 Toca Papai Noel | 17 Dado Na Cabeça | 18 Coração No Peito | 19 C4 No Peito | 20 Vibrador Gigante | 21 Mochila | 22 chapéu de bruxa");
				return 1;
			}
			needed = strval(tmpzcmd);
			if(needed < 1 || needed > 22)
			{

				return SendClientMessage(playerid, COR_GREY, "O id do acessório deve ser entre 1 a 22!");
			}
			new lolz[30];
			if(needed == 1)
			{

				lolz = "Óculos";
				if(PlayerInfo[playerid][pTemOculos] == 0)
				{

					format(gstring, sizeof(gstring), "* Você não possui o item %s, ID: [%d].", lolz, needed);
					SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					return 1;
				}
			}
			if(needed == 2)
			{

				lolz = "Bandana";
				if(PlayerInfo[playerid][pTemBandana] == 0)
				{

					format(gstring, sizeof(gstring), "* Você não possui o item %s, ID: [%d].", lolz, needed);
					SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					return 1;

				}
			}
			if(needed == 3)
			{

				lolz = "Arara";
				if(TemArara[playerid] == 0)
				{

					format(gstring, sizeof(gstring), "* Você não possui o item %s, ID: [%d].", lolz, needed);
					SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					return 1;
				}
			}
			if(needed == 4)
			{

				lolz = "Boné";
				if(TemKitBone[playerid] == 0)
				{

					format(gstring, sizeof(gstring), "* Você não possui o item %s, ID: [%d].", lolz, needed);
					SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					return 1;
				}

			}
			if(needed == 5)
			{

				lolz = "Relógio";
				if(TemKitRelogio[playerid] == 0)
				{

					format(gstring, sizeof(gstring), "* Você não possui o item %s, ID: [%d].", lolz, needed);
					SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					return 1;
				}
			}
			if(needed == 6)
			{

				lolz = "Chapéu Bombeiro";
				if(PlayerInfo[playerid][pTemCBombeiro] == 0)
				{

					format(gstring, sizeof(gstring), "* Você não possui o item %s, ID: [%d].", lolz, needed);
					SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					return 1;
				}
			}
			if(needed == 7)
			{

				lolz = "Chapéu Policial";
				if(PlayerInfo[playerid][pTemCPolicial] == 0)
				{

					format(gstring, sizeof(gstring), "* Você não possui o item %s, ID: [%d].", lolz, needed);
					SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					return 1;
				}
			}
			if(needed == 8)
			{

				lolz = "Chapéu Michael Jackson";
				if(PlayerInfo[playerid][pChapeuMichaelJackson] == 0)
				{

					format(gstring, sizeof(gstring), "* Você não possui o item %s, ID: [%d].", lolz, needed);
					SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					return 1;
				}
			}
			if(needed == 9)
			{

				lolz = "Chapéu Operário";
				if(PlayerInfo[playerid][pChapeuOperario] == 0)
				{

					format(gstring, sizeof(gstring), "* Você não possui o item %s, ID: [%d].", lolz, needed);
					SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					return 1;
				}
			}
			if(needed == 10)
			{

				lolz = "Chapeu Funkeiro";
				if(PlayerInfo[playerid][pChapeuFunkeiro] == 0)
				{

					format(gstring, sizeof(gstring), "* Você não possui o item %s, ID: [%d].", lolz, needed);
					SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					return 1;
				}
			}
			if(needed == 11)
			{

				lolz = "Chapéu Idoso";
				if(PlayerInfo[playerid][pChapeuIdoso] == 0)
				{

					format(gstring, sizeof(gstring), "* Você não possui o item %s, ID: [%d].", lolz, needed);
					SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					return 1;
				}
			}
			if(needed == 12)
			{

				lolz = "Chapéu Harry Potter";
				if(PlayerInfo[playerid][pChapeuHarryPotter] == 0)
				{

					format(gstring, sizeof(gstring), "* Você não possui o item %s, ID: [%d].", lolz, needed);
					SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					return 1;
				}
			}
			if(needed == 13)
			{

				lolz = "Cabeça de Galo";
				if(PlayerInfo[playerid][pCabecadeGalo] == 0)
				{

					format(gstring, sizeof(gstring), "* Você não possui o item %s, ID: [%d].", lolz, needed);
					SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					return 1;
				}
			}
			if(needed == 14)
			{

				lolz = "Chifre De Boi";
				if(PlayerInfo[playerid][pChifredeBoi] == 0)
				{

					format(gstring, sizeof(gstring), "* Você não possui o item %s, ID: [%d].", lolz, needed);
					SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					return 1;
				}
			}
			if(needed == 15)
			{

				lolz = "Cabeção Do CJ";
				if(PlayerInfo[playerid][pCabecaodoCJ] == 0)
				{

					format(gstring, sizeof(gstring), "* Você não possui o item %s, ID: [%d].", lolz, needed);
					SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					return 1;
				}
			}
			if(needed == 16)
			{

				lolz = "Gorro";
				if(PlayerInfo[playerid][pGorro] == 0)
				{

					format(gstring, sizeof(gstring), "* Você não possui o item %s, ID: [%d].", lolz, needed);
					SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					return 1;
				}
			}
			if(needed == 17)
			{

				lolz = "Dado";
				if(PlayerInfo[playerid][pDado] == 0)
				{

					format(gstring, sizeof(gstring), "* Você não possui o item %s, ID: [%d].", lolz, needed);
					SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					return 1;
				}
			}
			if(needed == 18)
			{

				lolz = "Coração";
				if(PlayerInfo[playerid][pCoracao] == 0)
				{

					format(gstring, sizeof(gstring), "* Você não possui o item %s, ID: [%d].", lolz, needed);
					SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					return 1;
				}
			}
			if(needed == 19)
			{

				lolz = "C4";
				if(PlayerInfo[playerid][pC4] == 0)
				{

					format(gstring, sizeof(gstring), "* Você não possui o item %s, ID: [%d].", lolz, needed);
					SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					return 1;
				}
			}
			if(needed == 20)
			{

				lolz = "Vibrador Gigante";
				if(PlayerInfo[playerid][pVibradorGigante] == 0)
				{

					format(gstring, sizeof(gstring), "* Você não possui o item %s, ID: [%d].", lolz, needed);
					SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					return 1;
				}
			}
			if(needed == 21)
			{

				lolz = "Mochila";
				if(PlayerInfo[playerid][pItemMochila] == 0)
				{

					format(gstring, sizeof(gstring), "* Você não possui o item %s, ID: [%d].", lolz, needed);
					SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					return 1;
				}
			}
			if(needed == 22)
			{

				lolz = "Chapéu Bruxa";
				if(TemChapeuBruxa[playerid] == 0)
				{

					format(gstring, sizeof(gstring), "* Você não possui o item %s, ID: [%d].", lolz, needed);
					SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
					return 1;
				}
			}
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)) { return 1; }
			money = strval(tmpzcmd);
			if(money < 1 || money > 5000000) { SendClientMessage(playerid, COR_GREY, "O valor deve ser entre 0 e R$5000000(5kk)!"); return 1; }
			if(IsPlayerConnected(playa))
			{

				if(playa != INVALID_PLAYER_ID)
				{

					if (ProxDetectorS(8.0, playerid, playa))
					{

						new stringDialog[100];
						GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(gstring, sizeof(gstring), "* Você ofereceu ao %s o acessório %s, ID:[%d] por R$[%d] .", PlayerName(playa),lolz, needed, money);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						format(stringDialog,sizeof(stringDialog),"* Jogador(a) %s lhe ofereceu o acessório %s, ID:[%d] por R$[%d]\nVocê deseja adquirir este Acessório?",PlayerName(playerid),lolz,needed, money);
						ShowPlayerDialog(playa, 1125, DIALOG_STYLE_MSGBOX,"Acessórios",stringDialog,"Sim","Não");
						AcessorioOffer[playa] = playerid;
						AcessorioPrice[playa] = money;
						AcessorioGram[playa] = needed;
					}
					else
					{

						SendClientMessage(playerid, COR_GREY, "O Jogador não está perto de você !");
					}
				}
			}
			else
			{

				SendClientMessage(playerid, COR_GREY, "Jogador offline.");
			}
		}
		return 1;
	}
	CMD:vendercoins(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pJailed] != 0)
    		{
	   			SendClientMessage(playerid,COR_AMARELO," Você não pode vender Coins na cadeia!");
	   			return 1;
    		}
		    if (PlayerInfo[playerid][pCoins] == 0)
		    {
				SendClientMessage(playerid, COR_GREY, "Você não possui Coins!");
				return 1;
		    }
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /vendercoins [id] [quantidade] [preco]");
				return 1;
			}
            new playa;
			new money;
			new needed;
			playa = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)) { return 1; }
			needed = strval(tmpzcmd);
			if(PlayerInfo[playerid][pCoins] < needed) { SendClientMessage(playerid, COR_GREY, "Você não possui essa quantia de Coins!"); return 1; }
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)) { return 1; }
			money = strval(tmpzcmd);
			if(money < 1 || money > 5000000) { SendClientMessage(playerid, COR_GREY, "O valor deve ser entre 0 e R$5000000(5kk)!"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
     				if (ProxDetectorS(8.0, playerid, playa))
					{
						new stringDialog[100];
					    GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(gstring, sizeof(gstring), "* Você ofereceu ao %s [%d] Coins por R$[%d] .", PlayerName(playa), needed, money);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
   						format(stringDialog,sizeof(stringDialog),"* Jogador(a) %s lhe ofereceu %d Coins por R$[%d]\nVocê deseja adquirir estas Coins?",PlayerName(playerid),needed, money);
						ShowPlayerDialog(playa, 1124, DIALOG_STYLE_MSGBOX,"Coins",stringDialog,"Sim","Não");
						MoedaOffer[playa] = playerid;
						MoedaPrice[playa] = money;
						MoedaGram[playa] = needed;
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "O Jogador não está perto de você !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "Jogador offline.");
			}
		}
		return 1;
	}
	CMD:sdrogas(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            SendClientMessage(playerid, COR_DBLUE,"___________~ Vender ~___________");
            SendClientMessage(playerid, COR_AMARELO,"Para Pegar E Esconder Drogas,digite /gps - Territorios");
            SendClientMessage(playerid, COR_AMARELO,"Quando chegar no pacotinho de drogas,aperte F !");
            SendClientMessage(playerid, COR_GRAD1,"BPL > USE: /vendermaconha(Gangsters)");
            SendClientMessage(playerid, COR_GRAD1,"BPL > USE: /vendercocaina(Gangsters)");
            SendClientMessage(playerid, COR_GRAD1,"BPL > USE: /vendercrack(Gangsters)");
            SendClientMessage(playerid, COR_GRAD1,"BPL > USE: /venderlsd(Gangsters)");
            SendClientMessage(playerid, COR_DBLUE,"___________~ Usar Drogas ~___________");
		    SendClientMessage(playerid, COR_GRAD1,"BPL > USE: /usarmaconha");
            SendClientMessage(playerid, COR_GRAD1,"BPL > USE: /usarcocaina");
            SendClientMessage(playerid, COR_GRAD1,"BPL > USE: /usarcrack");
            SendClientMessage(playerid, COR_GRAD1,"BPL > USE: /usarlsd");
			SendClientMessage(playerid, COR_DBLUE,".::| Page UP para subir e Page Down para descer |::.");
	    }
		return 1;
	}
	CMD:vendermaconha(playerid, params[])
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COR_AMARELO," Você não pode vender drogas na cadeia!");
	   		return 1;
    	}
	    if(IsPlayerConnected(playerid))
	    {
		    if (!IsAGangster(playerid))
		    {
				SendClientMessage(playerid, COR_GREY, "Você não é um Gangster!");
				return 1;
		    }
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /vendermaconha [id] [quantidade] [preco]");
				return 1;
			}
			if(PlayerInfo[giveplayeridzcmd][pLevel] <= 2)
			{
			    SendClientMessage(playerid, COR_GREY, "Você não pode vender drogas para jogadores level 2.");
				return 1;
			}
            new playa;
			new money;
			new needed;
			playa = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)) { return 1; }
			needed = strval(tmpzcmd);
			if(needed < 1 || needed > 99) { SendClientMessage(playerid, COR_GREY, "Minimo de Pedras 1, e Maximo de Pedras 99!"); return 1; }
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)) { return 1; }
			money = strval(tmpzcmd);
			if(money < 1 || money > 1000) { SendClientMessage(playerid, COR_GREY, "Preco maior que 1, menor que 1000!"); return 1; }
			if(needed > PlayerInfo[playerid][pMaconha]) { SendClientMessage(playerid, COR_GREY, "Você nao tem esta quantidade de pedras com Você !"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
					if (ProxDetectorS(8.0, playerid, playa))
					{
					    if(playa == playerid)
					    {
					        SendClientMessage(playerid, COR_GREY, "Você não pode vender maconha pra você mesmo!");
					        return 1;
					    }
					    GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(gstring, sizeof(gstring), "* Você ofereceu %s com %d pedras por R$%d .", giveplayerzcm, needed, money);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "* O Traficante %s quer te vender %d pedras de maconha por R$[%d], (Digite /aceitar maconha) para comprar.", sendername, needed, money);
						SendClientMessage(playa, COR_LIGHTBLUE, gstring);
						DrugOffer[playa] = playerid;
						DrugPrice[playa] = money;
						DrugGram[playa] = needed;
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "O Jogador não está perto de você !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "Jogador offline.");
			}
		}
		return 1;
	}
 	CMD:vendercocaina(playerid, params[])
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COR_AMARELO," Você não pode vender drogas na cadeia!");
	   		return 1;
    	}
	    if(IsPlayerConnected(playerid))
	    {
		    if (!IsAGangster(playerid))
		    {
				SendClientMessage(playerid, COR_GREY, "Você não é um Gangster!");
				return 1;
		    }
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /vendercocaina [id] [quantidade] [preco]");
				return 1;
			}
			if(PlayerInfo[giveplayeridzcmd][pLevel] <= 2)
			{
			    SendClientMessage(playerid, COR_GREY, "Você não pode vender drogas para jogadores level 2.");
				return 1;
			}
            new playa;
			new money;
			new needed;
			playa = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)) { return 1; }
			needed = strval(tmpzcmd);
			if(needed < 1 || needed > 99) { SendClientMessage(playerid, COR_GREY, "Minimo de Pedras 1, e Maximo de Pedras 99!"); return 1; }
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)) { return 1; }
			money = strval(tmpzcmd);
			if(money < 1 || money > 1000) { SendClientMessage(playerid, COR_GREY, "Preço maior que 1, menor que 1000!"); return 1; }
			if(needed > PlayerInfo[playerid][pCocaina]) { SendClientMessage(playerid, COR_GREY, "Você não tem esta quantidade de cocaina com você !"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
					if (ProxDetectorS(8.0, playerid, playa))
					{
					    if(playa == playerid)
					    {
					        SendClientMessage(playerid, COR_GREY, "Você não pode vender cocaina pra você mesmo!");
					        return 1;
					    }
					    GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(gstring, sizeof(gstring), "* Você ofereceu %s com %d pedras por R$%d .", giveplayerzcm, needed, money);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "* O Traficante %s quer te vender %d pedras de cocaina por R$[%d], (Digite /aceitar cocaina) para comprar.", sendername, needed, money);
						SendClientMessage(playa, COR_LIGHTBLUE, gstring);
						DrugOffer[playa] = playerid;
						DrugPrice[playa] = money;
						DrugGram[playa] = needed;
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "O Jogador não está perto de você !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "Jogador offline.");
			}
		}
		return 1;
	}
 	CMD:vendercrack(playerid, params[])
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COR_AMARELO," Você não pode vender drogas na cadeia!");
	   		return 1;
    	}
	    if(IsPlayerConnected(playerid))
	    {
		    if (!IsAGangster(playerid))
		    {
				SendClientMessage(playerid, COR_GREY, "Você não é um Gangster!");
				return 1;
		    }
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /vendercrack [id] [quantidade] [preco]");
				return 1;
			}
			if(PlayerInfo[giveplayeridzcmd][pLevel] <= 2)
			{
			    SendClientMessage(playerid, COR_GREY, "Você não pode vender drogas para jogadores level 2.");
				return 1;
			}
            new playa;
			new money;
			new needed;
			playa = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)) { return 1; }
			needed = strval(tmpzcmd);
			if(needed < 1 || needed > 99) { SendClientMessage(playerid, COR_GREY, "Minimo de Pedras 1, e Maximo de Pedras 99!"); return 1; }
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)) { return 1; }
			money = strval(tmpzcmd);
			if(money < 1 || money > 1000) { SendClientMessage(playerid, COR_GREY, "Preço maior que 1, menor que 1000!"); return 1; }
			if(needed > PlayerInfo[playerid][pCrack]) { SendClientMessage(playerid, COR_GREY, "Você nao tem esta quantidade de crack com Você !"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
					if (ProxDetectorS(8.0, playerid, playa))
					{
					    if(playa == playerid)
					    {
					        SendClientMessage(playerid, COR_GREY, "Você não pode vender crack pra você mesmo!");
					        return 1;
					    }
					    GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(gstring, sizeof(gstring), "* Você ofereceu %s com %d pedras por R$%d .", giveplayerzcm, needed, money);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "* O Traficante %s quer te vender %d pedras de crack por R$[%d], (Digite /aceitar crack) para comprar.", sendername, needed, money);
						SendClientMessage(playa, COR_LIGHTBLUE, gstring);
						DrugOffer[playa] = playerid;
						DrugPrice[playa] = money;
						DrugGram[playa] = needed;
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "O Jogador não está perto de você !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "Jogador offline.");
			}
		}
		return 1;
	}
	CMD:venderlsd(playerid, params[])
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COR_AMARELO," Você não pode vender drogas na cadeia!");
	   		return 1;
    	}
	    if(IsPlayerConnected(playerid))
	    {
		    if (!IsAGangster(playerid))
		    {
				SendClientMessage(playerid, COR_GREY, "Você não é um Gangster!");
				return 1;
		    }
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /venderlsd [id] [quantidade] [preco]");
				return 1;
			}
			if(PlayerInfo[giveplayeridzcmd][pLevel] <= 2)
			{
			    SendClientMessage(playerid, COR_GREY, "Você não pode vender drogas para jogadores level 2.");
				return 1;
			}
            new playa;
			new money;
			new needed;
			playa = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)) { return 1; }
			needed = strval(tmpzcmd);
			if(needed < 1 || needed > 99) { SendClientMessage(playerid, COR_GREY, "Minimo de Pedras 1, e Maximo de Pedras 99!"); return 1; }
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)) { return 1; }
			money = strval(tmpzcmd);
			if(money < 1 || money > 1000) { SendClientMessage(playerid, COR_GREY, "Preço maior que 1, menor que 1000!"); return 1; }
			if(needed > PlayerInfo[playerid][pCrack]) { SendClientMessage(playerid, COR_GREY, "Você nao tem esta quantidade de lsd com Você !"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
					if (ProxDetectorS(8.0, playerid, playa))
					{
					    if(playa == playerid)
					    {
					        SendClientMessage(playerid, COR_GREY, "Você não pode vender lsd pra você mesmo!");
					        return 1;
					    }
					    GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(gstring, sizeof(gstring), "* Você ofereceu %s com %d pedras por R$%d .", giveplayerzcm, needed, money);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "* O Traficante %s quer te vender %d pedras de lsd por R$[%d], (Digite /aceitar lsd) para comprar.", sendername, needed, money);
						SendClientMessage(playa, COR_LIGHTBLUE, gstring);
						DrugOffer[playa] = playerid;
						DrugPrice[playa] = money;
						DrugGram[playa] = needed;
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "O Jogador não está perto de você !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "Jogador offline.");
			}
		}
		return 1;
	}
    CMD:usarmaconha(playerid, params[])
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	  		SendClientMessage(playerid,COR_AMARELO," Você não usar drogas na cadeia!");
	  		TempoFumar[playerid] = GetTickCount();
			return 1;
		}
		new Float:PlayersArmour;
        GetPlayerArmour(playerid,PlayersArmour);
	    if(IsPlayerConnected(playerid))
	   	{
			if(PlayersArmour >= 140)
    		{
			    SetPlayerArmour(playerid, 140);
			    SendClientMessage(playerid,COR_LIGHTRED,"* Você não pode mais usar maconha,seu colete está cheio!");
		   	    return 1;
  	        }
  	        if(PlayerToPoint(80.0,playerid,-2312.8008,-1642.6188,483.7031) || PlayerToPoint(80.0,playerid,-2339.3459,-1645.2610,483.7031) ||PlayerToPoint(80.0,playerid,-2326.0491,-1579.8934,483.3037)
            || PlayerToPoint(80.0,playerid,-2346.4478,-1582.4911,484.6091) || IsPlayerInChuck(playerid))
  	        {
			   SendClientMessage(playerid, COR_GRAD1, "* Você não pode usar este comando durante um evento.");
			   TempoFumar[playerid] = GetTickCount();
			   return 1;
			}
  	        if(PlayerInfo[playerid][pDoenca] == 5)
  			{
			    SendClientMessage(playerid, COR_LIGHTBLUE, "* Você esta com câncer de pulmão, vá ate um hospital se tratar !");
			    TempoFumar[playerid] = GetTickCount();
				return 1;
	        }
			if(PlayerInfo[playerid][pMaconha] > 1)
   			{
   				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
       			PlayerStoned[playerid] += 1;
			    if(PlayerStoned[playerid] >= 3)
			    PlayerInfo[playerid][pMaconha] -= 2;
                new Float:plrarmour;
                GetPlayerArmour(playerid, plrarmour);
		    	SetPlayerArmour(playerid, PlayersArmour + 4);
			    GetPlayerName(playerid, sendername, sizeof(sendername));
		    	format(gstring, sizeof(gstring), "* %s Fumou Maconha.", sendername);
			    ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
			    format(gstring, sizeof(gstring), "Você fumou maconha e agora esté com [%.0f/140] de colete.", plrarmour);
			    SendClientMessage(playerid, COR_LIGHTRED, gstring);
			    PlayerInfo[playerid][pMaconheiro] ++;
			    TempoFumar[playerid] = GetTickCount();
			}
			else
			{
			    SendClientMessage(playerid,COR_GREY,"Você não tem gramas suficientes de maconha !");
			}
		}//not connected
		return 1;
	}
 	CMD:usarcocaina(playerid, params[])
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COR_AMARELO," Você não usar drogas na cadeia!");
	   		TempoFumar[playerid] = GetTickCount();
	   		return 1;
	   	}
        if(PlayerToPoint(80.0,playerid,-2312.8008,-1642.6188,483.7031) || PlayerToPoint(80.0,playerid,-2339.3459,-1645.2610,483.7031) ||PlayerToPoint(80.0,playerid,-2326.0491,-1579.8934,483.3037)
        || PlayerToPoint(80.0,playerid,-2346.4478,-1582.4911,484.6091) || IsPlayerInChuck(playerid))
        {
	        SendClientMessage(playerid, COR_GRAD1, "* Você não pode usar este comando durante um evento.");
	        TempoFumar[playerid] = GetTickCount();
		    return 1;
		}
		new Float:PlayersArmour;
        GetPlayerArmour(playerid,PlayersArmour);
	    if(IsPlayerConnected(playerid))
	   	{
	   	    if(PlayerInfo[playerid][pDorgado] >= 20)
  			{
    			PlayerInfo[playerid][pDoenca] = 5;
    			PlayerInfo[playerid][pDorgado] = 0;
			    SendClientMessage(playerid, COR_LIGHTBLUE, "* Você esta com câncer de pulmão, vá ate um hospital se tratar !");
			    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 2300);
			    TempoFumar[playerid] = GetTickCount();
				return 1;
  	        }
  	        if(PlayerInfo[playerid][pDoenca] == 5)
  			{
			    SendClientMessage(playerid, COR_LIGHTBLUE, "* Você esta com câncer de pulmão, vá ate um hospital se tratar !");
			    TempoFumar[playerid] = GetTickCount();
			    return 1;
			}
			if(PlayersArmour >= 140)
    		{
			    SetPlayerArmour(playerid, 140);
			    SendClientMessage(playerid,COR_LIGHTRED,"* Você não pode mais usar cocaina,seu colete está cheio!");
		   	    return 1;
	        }
			if(PlayerInfo[playerid][pCocaina] > 1)
			{
			    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			    PlayerStoned[playerid] += 1;
			    PlayerInfo[playerid][pCocaina] -= 2;
			    PlayerInfo[playerid][pDorgado] += 2;
                new Float:plrarmour;
                GetPlayerArmour(playerid, plrarmour);
		    	SetPlayerArmour(playerid, PlayersArmour + 8);
			    GetPlayerName(playerid, sendername, sizeof(sendername));
		    	format(gstring, sizeof(gstring), "* %s Cheirou Cocaina.", sendername);
			    ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
			    format(gstring, sizeof(gstring), "Você cheirou cocaina e agora está com [%.0f/140] de colete.", plrarmour);
			    SendClientMessage(playerid, COR_LIGHTRED, gstring);
			    PlayerInfo[playerid][pCheirador] ++;
			    TempoFumar[playerid] = GetTickCount();
			}
			else
			{
			    SendClientMessage(playerid,COR_GREY,"Você não tem pó suficientes de cocaína !");
			}
		}//not connected
		return 1;
	}
 	CMD:usarcrack(playerid, params[])
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
		   SendClientMessage(playerid,COR_AMARELO," Você não usar drogas na cadeia!");
		   TempoFumar[playerid] = GetTickCount();
		   return 1;
		}
        if(PlayerToPoint(80.0,playerid,-2312.8008,-1642.6188,483.7031) || PlayerToPoint(80.0,playerid,-2339.3459,-1645.2610,483.7031) ||PlayerToPoint(80.0,playerid,-2326.0491,-1579.8934,483.3037)
        || PlayerToPoint(80.0,playerid,-2346.4478,-1582.4911,484.6091) || IsPlayerInChuck(playerid))
        {
	        SendClientMessage(playerid, COR_GRAD1, "* Você não pode usar este comando durante um evento.");
	        TempoFumar[playerid] = GetTickCount();
		    return 1;
		}
		new Float:PlayersArmour;
        GetPlayerArmour(playerid,PlayersArmour);
	    if(IsPlayerConnected(playerid))
	   	{
	   	    if(PlayerInfo[playerid][pDorgado] >= 15)
  			{
    			PlayerInfo[playerid][pDoenca] = 5;
    			PlayerInfo[playerid][pDorgado] = 0;
			    SendClientMessage(playerid, COR_LIGHTBLUE, "* Você está com câncer de pulmão, vá ate um hospital se tratar !");
			    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 2300);
			    TempoFumar[playerid] = GetTickCount();
				return 1;
  	        }
  	        if(PlayerInfo[playerid][pDoenca] == 5)
  			{
			    SendClientMessage(playerid, COR_LIGHTBLUE, "* Você está com câncer de pulmão, vá ate um hospital se tratar !");
			    TempoFumar[playerid] = GetTickCount();
			    return 1;
			}
			if(PlayersArmour >= 140)
    		{
			    SetPlayerArmour(playerid, 140);
			    SendClientMessage(playerid,COR_LIGHTRED,"* Você não pode mais usar crack,seu colete está cheio!");
		   	    return 1;
	        }
		   	if(PlayerInfo[playerid][pCrack] > 1)
			{
			    PlayerInfo[playerid][pCrack] -= 2;
			    PlayerInfo[playerid][pDorgado] += 2;
			    PlayerStoned[playerid] += 1;
			    if(PlayerStoned[playerid] >= 3) { GameTextForPlayer(playerid,"~w~Você está~n~~p~Cherado",4000,1); }
                new Float:plrarmour;
                GetPlayerArmour(playerid, plrarmour);
		    	SetPlayerArmour(playerid, PlayersArmour + 12);
			    GetPlayerName(playerid, sendername, sizeof(sendername));
		    	format(gstring, sizeof(gstring), "* %s Fumou Crack.", sendername);
			    ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
			    format(gstring, sizeof(gstring), "Você fumou crack e agora está com [%.0f/140] de colete.", plrarmour);
			    SendClientMessage(playerid, COR_LIGHTRED, gstring);
			    ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
			    PlayerInfo[playerid][pCracudo] ++;
                TempoFumar[playerid] = GetTickCount();
			}
			else
			{
			    SendClientMessage(playerid,COR_GREY,"Você não tem Gramas de Drogas Suficiente.!");
			}
		}//not connected
		return 1;
	}
	CMD:usarlsd(playerid, params[])
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
		   SendClientMessage(playerid,COR_AMARELO," Você não usar drogas na cadeia!");
		   TempoFumar[playerid] = GetTickCount();
		   return 1;
		}
        if(PlayerToPoint(80.0,playerid,-2312.8008,-1642.6188,483.7031) || PlayerToPoint(80.0,playerid,-2339.3459,-1645.2610,483.7031) ||PlayerToPoint(80.0,playerid,-2326.0491,-1579.8934,483.3037)
        || PlayerToPoint(80.0,playerid,-2346.4478,-1582.4911,484.6091) || IsPlayerInChuck(playerid))
        {
	        SendClientMessage(playerid, COR_GRAD1, "* Você não pode usar este comando durante um evento.");
	        TempoFumar[playerid] = GetTickCount();
		    return 1;
		}
		new Float:PlayersArmour;
        GetPlayerArmour(playerid,PlayersArmour);
	    if(IsPlayerConnected(playerid))
	   	{
	   	    if(PlayerInfo[playerid][pDorgado] >= 15)
  			{
    			PlayerInfo[playerid][pDoenca] = 5;
    			PlayerInfo[playerid][pDorgado] = 0;
			    SendClientMessage(playerid, COR_LIGHTBLUE, "* Você está com câncer de pulmão, vá ate um hospital se tratar !");
			    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 2300);
			    TempoFumar[playerid] = GetTickCount();
				return 1;
  	        }
  	        if(PlayerInfo[playerid][pDoenca] == 5)
  			{
			    SendClientMessage(playerid, COR_LIGHTBLUE, "* Você está com câncer de pulmão, vá ate um hospital se tratar !");
			    TempoFumar[playerid] = GetTickCount();
			    return 1;
			}
			if(PlayersArmour >= 140)
    		{
			    SetPlayerArmour(playerid, 140);
			    SendClientMessage(playerid,COR_LIGHTRED,"* Você não pode mais usar lsd,seu colete está cheio!");
		   	    return 1;
	        }
		   	if(PlayerInfo[playerid][pLsd] > 1)
			{
			    PlayerInfo[playerid][pLsd] -= 2;
			    PlayerInfo[playerid][pDorgado] += 2;
			    PlayerStoned[playerid] += 1;
			    if(PlayerStoned[playerid] >= 3) { GameTextForPlayer(playerid,"~w~Você está~n~~p~Alucinado",4000,1); }
                new Float:plrarmour;
                GetPlayerArmour(playerid, plrarmour);
		    	SetPlayerArmour(playerid, PlayersArmour + 12);
			    GetPlayerName(playerid, sendername, sizeof(sendername));
		    	format(gstring, sizeof(gstring), "* %s Fumou Lsd.", sendername);
			    ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
			    format(gstring, sizeof(gstring), "Você fumou lsd e agora está com [%.0f/140] de colete.", plrarmour);
			    SendClientMessage(playerid, COR_LIGHTRED, gstring);
			    ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
			    PlayerInfo[playerid][pPsicopata] ++;
                TempoFumar[playerid] = GetTickCount();
			}
			else
			{
			    SendClientMessage(playerid,COR_GREY,"Você não tem Gramas de Drogas Suficiente.!");
			}
		}//not connected
		return 1;
	}
	CMD:curarme(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        if(PlayerToPoint(2.0, playerid,1168.7944,-1325.8097,-44.2836) || PlayerToPoint(2.0, playerid,1584.0472,1768.8959,10.8203) || PlayerToPoint(2.0, playerid,-2654.9932,639.5829,14.4545))
			{
				TogglePlayerControllable(playerid, 0);
				ShowPlayerDialog(playerid, 39, DIALOG_STYLE_MSGBOX,"BPL - Hospital","Você Deseja Se Curar?\nClique em Sim e pague R$3.000!","Sim","Não");
  				EmDialog[playerid] = 1;
				/*
			   	if(Medics <= 0)
   				{
					TogglePlayerControllable(playerid, 0);
     				ShowPlayerDialog(playerid, 39, DIALOG_STYLE_MSGBOX,"BPL - Hospital","Você Deseja Se Curar?\nClique em Sim e pague R$3.000!","Sim","Não");
	        		EmDialog[playerid] = 1;
        		}
		        else
	        	{
          			SendClientMessage(playerid, COR_GREY, "No momento existe médicos online, chame um para lhe curar !");
             		return 1;
   		        }*/
	        }
	        else
	        {
	            SendClientMessage(playerid, COR_GREY, "Você não está em um Hospital !");
	        }
        }
		return 1;
	}
	CMD:ejetar(playerid, params[])// || CMD:expulsar(playerid, params[])//)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        new State;
	        if(IsPlayerInAnyVehicle(playerid))
	        {
         		State=GetPlayerState(playerid);
		        if(State!=PLAYER_STATE_DRIVER)
		        {
		        	SendClientMessage(playerid,COR_GREY,"Você não é o motorista do carro !");
		            return 1;
		        }
				tmpzcmd = strtok(cmdtext, idxzcmd);
				if(!strlen(tmpzcmd))
				{
					SendClientMessage(playerid, COR_GRAD2, "USE: /ejetar [id]");
					return 1;
				}
               	new playa;
				playa = ReturnUser(tmpzcmd);
				new test;
				test = GetPlayerVehicleID(playerid);
				if(IsPlayerConnected(playa))
				{
				    if(playa != INVALID_PLAYER_ID)
				    {
				        if(playa == playerid) { SendClientMessage(playerid, COR_GREY, "Você não pode se expulsar... Aperte Enter!"); return 1; }
				        if(IsPlayerInVehicle(playa,test))
				        {
							new PName[MAX_PLAYER_NAME];
							GetPlayerName(playerid,PName,sizeof(PName));
							GetPlayerName(playa, giveplayerzcm, sizeof(giveplayerzcm));
							format(gstring, sizeof(gstring), "* Você expulsou o(a) %s para fora do carro!", giveplayerzcm);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* Você foi retirado do carro por %s !", PName);
							SendClientMessage(playa, COR_LIGHTBLUE, gstring);
							RemovePlayerFromVehicleEx(playa);
						}
						else
						{
						    SendClientMessage(playerid, COR_GREY, "Este jogador não está em seu carro !");
						    return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COR_GREY, "ID/Nick - Invalido!");
				}
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "Você precisa estar em um carro para usar este comando !");
			}
		}
		return 1;
	}
 	CMD:esmola(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 5)
		    {
				SendClientMessage(playerid, COR_GREY, "Você não é Mendigo!");
				return 1;
		    }
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /esmola [id] [preço]");
				return 1;
			}
			if(GetTickCount() - TempoEsmola[playerid] < 3000)
            {
	             SendClientMessage(playerid, COR_GREY, "Você só pode usar este comando a cada 3 segundos.");
                 return 1;
		    }
			new money;
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd)) { return 1; }
			money = strval(tmpzcmd);
			if(money < 1 || money > 50000) { SendClientMessage(playerid, COR_GREY, "O Valor da sua esmola deve ser entre R$1000 e R$50000!"); return 1; }
			if(IsPlayerConnected(giveplayeridzcmd))
			{
			    if(giveplayeridzcmd != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, giveplayeridzcmd))
					{
					    if(giveplayeridzcmd == playerid)
					    {
					        SendClientMessage(playerid, COR_GREY, "Você não pode usar este comando em si mesmo!");
					        return 1;
					    }
         				GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(gstring, sizeof(gstring), "* Você pediu ao %s uma esmola de R$%d.", giveplayerzcm, money);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "* Mendigo %s perguntou se você pode dar R$[%d] para ele... /pagar [quantidade] e ajuda o novato", sendername, money);
						SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
        				MendigoOffer[giveplayeridzcmd] = playerid;
        				MendigoPrice[giveplayeridzcmd] = money;
        				TempoEsmola[playerid] = GetTickCount();
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "O Jogador não está perto de você !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "O Jogador está Offline!");
			}
		}
		return 1;
	}
 	CMD:bafoxmetro)
    {
        if(IsPlayerConnected(playerid))
	    {
   			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COR_GREY, "Você não é um Oficial!");
			    return 1;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COR_GREY, "Você não Bateu o cartão!");
			    return 1;
			}
 			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_BRANCO, "USE: /bafoxmetro [id]");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			if(IsPlayerConnected(giveplayeridzcmd))
			{
				if(giveplayeridzcmd != INVALID_PLAYER_ID)
				{
			    	if (ProxDetectorS(8.0,playerid,giveplayeridzcmd))
					{
  	  					if(giveplayeridzcmd == playerid) { SendClientMessage(playerid,COR_GREY,"Você não pode fazer o teste em si mesmo!"); return 1; }
				    	GetPlayerName(giveplayeridzcmd,giveplayerzcm,sizeof(giveplayerzcm));
						GetPlayerName(playerid,sendername,sizeof(sendername));
				    	new bebado[32], bebado2[32];
					    if(PlayerDrunk[giveplayeridzcmd] > 0) { bebado = "Bêbado."; } else { bebado = "| Sóbrio "; }
				    	if(PlayerInfo[giveplayeridzcmd][pMats] > 0) { bebado2 = "Drogado."; } else { bebado2 = "| Sóbrio "; }
				    	format(gstring,sizeof(gstring),"|__________ %s __________|",giveplayerzcm);
			        	SendClientMessage(playerid,COR_BRANCO,gstring);
			        	format(gstring,sizeof(gstring),"%s.",bebado);
						SendClientMessage(playerid,COR_GREY,gstring);
						format(gstring,sizeof(gstring),"%s.",bebado2);
						format(gstring,sizeof(gstring),"* Oficial: %s faz o teste do Bafomêtro em: %s.",sendername ,giveplayerzcm);
						ProxDetector(30.0,playerid,gstring,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
					}
					else
					{
				    	SendClientMessage(playerid,COR_GREY,"O jogador não está perto de você !");
				    	return 1;
    				}
				}
			}
        	else
       		{
            	SendClientMessage(playerid,COR_GREY,"Esse jogador está off-line !");
            	return 1;
       		}
    		return 1;
		}
	}
	CMD:reforco(playerid, params[]) || strcmp(cmd,"/rf)
	{
		if(IsACop(playerid))
		{
		    new TempoReforco[MAX_PLAYERS];
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_BRANCO, "USE: /rf [ nick ]");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			if(GetTickCount() - TempoReforco[playerid] < 30000)
	   	    {
	            SendClientMessage(playerid, COR_GREY,"Você tem que esperar um pouco para pedir reforço novamente!");
	            return 1;
	        }
			if(OnDuty[playerid] != 1)
		    {
		        SendClientMessage(playerid, COR_GREY, "Você não bateu o cartão !");
		        return 1;
	        }
			new location[MAX_ZONE_NAME];
		    GetPlayer2DZone(giveplayeridzcmd, location, MAX_ZONE_NAME);
	        GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
		    GetPlayerName(playerid, sendername, sizeof(sendername));
		    format(gstring, sizeof(gstring), "Você pediu reforço contra %s[%d].",giveplayerzcm,giveplayeridzcmd);
	        SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
	        new vid = GetPlayerVehicleID(giveplayeridzcmd);
	        if(GetPlayerInterior(giveplayeridzcmd) == 0)
	        {
	           if(IsPlayerInVehicle(giveplayeridzcmd, vid))
	           {
	               if(IsAMoto(vid))
	               {
	      		       format(gstring, sizeof(gstring), "Oficial %s[%d] pede reforço contra: %s[%d] Local[%s] Crimes[%d] Int[Não] Veh[Moto].", sendername,playerid,giveplayerzcm,giveplayeridzcmd,location,WantedLevel[giveplayeridzcmd]);
	                   SendFamilyMessage(1,COR_LIGHTRED,gstring);
				       SendFamilyMessage(2,COR_LIGHTRED,gstring);
				       SendFamilyMessage(3,COR_LIGHTRED,gstring);
				       SendFamilyMessage(7,COR_LIGHTRED,gstring);
				       SendFamilyMessage(12,COR_LIGHTRED,gstring);
				       SendFamilyMessage(13,COR_LIGHTRED,gstring);
				       SendFamilyMessage(17,COR_LIGHTRED,gstring);
				       SendFamilyMessage(25,COR_LIGHTRED,gstring);
					   TempoReforco[playerid] = GetTickCount();
				   }
				   if(IsAAviao(vid))
	               {
	        	       format(gstring, sizeof(gstring), "Oficial %s[%d] pede reforço contra: %s[%d] Local[%s] Crimes[%d] Int[Não] Veh[Avião/Helicoptero].", sendername,playerid,giveplayerzcm,giveplayeridzcmd,location,WantedLevel[giveplayeridzcmd]);
	                   SendFamilyMessage(1,COR_LIGHTRED,gstring);
				       SendFamilyMessage(2,COR_LIGHTRED,gstring);
				       SendFamilyMessage(3,COR_LIGHTRED,gstring);
				       SendFamilyMessage(7,COR_LIGHTRED,gstring);
				       SendFamilyMessage(12,COR_LIGHTRED,gstring);
				       SendFamilyMessage(13,COR_LIGHTRED,gstring);
				       SendFamilyMessage(17,COR_LIGHTRED,gstring);
				       SendFamilyMessage(25,COR_LIGHTRED,gstring);
	                   TempoReforco[playerid] = GetTickCount();
				   }
	               if(IsABarco(vid))
	               {
	   				   format(gstring, sizeof(gstring), "Oficial %s[%d] pede reforço contra: %s[%d] Local[%s] Crimes[%d] Int[Não] Veh[Barco].", sendername,playerid,giveplayerzcm,giveplayeridzcmd,location,WantedLevel[giveplayeridzcmd]);
		               SendFamilyMessage(1,COR_LIGHTRED,gstring);
				       SendFamilyMessage(2,COR_LIGHTRED,gstring);
				       SendFamilyMessage(3,COR_LIGHTRED,gstring);
				       SendFamilyMessage(7,COR_LIGHTRED,gstring);
				       SendFamilyMessage(12,COR_LIGHTRED,gstring);
				       SendFamilyMessage(13,COR_LIGHTRED,gstring);
				       SendFamilyMessage(17,COR_LIGHTRED,gstring);
				       SendFamilyMessage(25,COR_LIGHTRED,gstring);
		               TempoReforco[playerid] = GetTickCount();
	               }
	               if(IsACamOni(vid))
	               {
	   			       format(gstring, sizeof(gstring), "Oficial %s[%d] pede reforço contra: %s[%d] Local[%s] Crimes[%d] Int[Não] Veh[Caminhão/Ônibus].", sendername,playerid,giveplayerzcm,giveplayeridzcmd,location,WantedLevel[giveplayeridzcmd]);
		               SendFamilyMessage(1,COR_LIGHTRED,gstring);
				       SendFamilyMessage(2,COR_LIGHTRED,gstring);
				       SendFamilyMessage(3,COR_LIGHTRED,gstring);
				       SendFamilyMessage(7,COR_LIGHTRED,gstring);
				       SendFamilyMessage(12,COR_LIGHTRED,gstring);
				       SendFamilyMessage(13,COR_LIGHTRED,gstring);
				       SendFamilyMessage(17,COR_LIGHTRED,gstring);
				       SendFamilyMessage(25,COR_LIGHTRED,gstring);
		               TempoReforco[playerid] = GetTickCount();
	               }
	               if(!IsAMoto(vid) && !IsAAviao(vid) && !IsABarco(vid) && !IsACamOni(vid))
	               {
	   				   format(gstring, sizeof(gstring), "Oficial %s[%d] pede reforço contra: %s[%d] Local[%s] Crimes[%d] Int[Não] Veh[Carro].", sendername,playerid,giveplayerzcm,giveplayeridzcmd,location,WantedLevel[giveplayeridzcmd]);
	                   SendFamilyMessage(1,COR_LIGHTRED,gstring);
				       SendFamilyMessage(2,COR_LIGHTRED,gstring);
				       SendFamilyMessage(3,COR_LIGHTRED,gstring);
				       SendFamilyMessage(7,COR_LIGHTRED,gstring);
				       SendFamilyMessage(12,COR_LIGHTRED,gstring);
				       SendFamilyMessage(13,COR_LIGHTRED,gstring);
				       SendFamilyMessage(17,COR_LIGHTRED,gstring);
				       SendFamilyMessage(25,COR_LIGHTRED,gstring);
		               TempoReforco[playerid] = GetTickCount();
	                }
				}
				else
	            {
	                   format(gstring, sizeof(gstring), "Oficial %s[%d] pede reforço contra: %s[%d] Local[%s] Crimes[%d] Int[Não] Veh[Nenhum].", sendername,playerid,giveplayerzcm,giveplayeridzcmd,location,WantedLevel[giveplayeridzcmd]);
	                   SendFamilyMessage(1,COR_LIGHTRED,gstring);
				       SendFamilyMessage(2,COR_LIGHTRED,gstring);
				       SendFamilyMessage(3,COR_LIGHTRED,gstring);
				       SendFamilyMessage(7,COR_LIGHTRED,gstring);
				       SendFamilyMessage(12,COR_LIGHTRED,gstring);
				       SendFamilyMessage(13,COR_LIGHTRED,gstring);
				       SendFamilyMessage(17,COR_LIGHTRED,gstring);
				       SendFamilyMessage(25,COR_LIGHTRED,gstring);
	                   TempoReforco[playerid] = GetTickCount();
	            }
	        }
	        else
	        {
	           format(gstring, sizeof(gstring), "Oficial %s[%d] pede reforço contra: %s[%d] Local[%s] Crimes[%d] Int[Sim] Veh[Nenhum].", sendername,playerid,giveplayerzcm,giveplayeridzcmd,location,WantedLevel[giveplayeridzcmd]);
	           SendFamilyMessage(1,COR_LIGHTRED,gstring);
		       SendFamilyMessage(2,COR_LIGHTRED,gstring);
		       SendFamilyMessage(3,COR_LIGHTRED,gstring);
		       SendFamilyMessage(7,COR_LIGHTRED,gstring);
	           SendFamilyMessage(11,COR_LIGHTRED,gstring);
		       SendFamilyMessage(16,COR_LIGHTRED,gstring);
		       SendFamilyMessage(23,COR_LIGHTRED,gstring);
		       SendFamilyMessage(25,COR_LIGHTRED,gstring);
	           TempoReforco[playerid] = GetTickCount();
	        }
		}
		else
		{
     		SendClientMessage(playerid, COR_GREY, "Você não é um policial !");
	 	}
		return 1;
	}
 	CMD:revistar)
    {
        if(IsPlayerConnected(playerid))
	    {
  			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COR_GREY, "Você não é um Oficial!");
			    return 1;
			}
			if(OnDuty[playerid] != 1 && GetPlayerOrg(playerid) != 7)
			{
			    SendClientMessage(playerid, COR_GREY, "Você não Bateu o cartão!");
			    return 1;
			}
        	tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_BRANCO, "USE: /revistar [id]");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			if(IsPlayerConnected(giveplayeridzcmd))
			{
				if(giveplayeridzcmd != INVALID_PLAYER_ID)
				{
			    	if (ProxDetectorS(8.0, playerid, giveplayeridzcmd))
					{
				    	if(giveplayeridzcmd == playerid) { SendClientMessage(playerid, COR_GREY, "Você não pode se Revistar!"); return 1; }
				    	GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
				    	new text1[20], text2[20], text3[20], text4[20], text5[20], text6[20];
         				if(PlayerInfo[giveplayeridzcmd][pMaconha] > 0) { text1 = "| Maconha."; } else { text1 = "| Vazio."; }
         				if(PlayerInfo[giveplayeridzcmd][pCocaina] > 0) { text2 = "| Cocaina."; } else { text2 = "| Vazio."; }
         				if(PlayerInfo[giveplayeridzcmd][pCrack] > 0) { text3 = "| Crack."; } else { text3 = "| Vazio."; }
         				if(PlayerInfo[giveplayeridzcmd][pLsd] > 0) { text4 = "| Lsd."; } else { text4 = "| Vazio."; }
				    	if(PlayerInfo[giveplayeridzcmd][pMats] > 0) { text5 = "| Materiais."; } else { text5 = "| Vazio."; }
				    	if(PlayerInfo[giveplayeridzcmd][pAgendaT] > 0) { text6 = "| Lista Telefonica."; } else { text6 = "| Vazio."; }
				    	format(gstring, sizeof(gstring), "|__________ Itens %s __________|", giveplayerzcm);
			        	SendClientMessage(playerid, COR_BRANCO, gstring);
			        	format(gstring, sizeof(gstring), "%s [Quantidade: %d].", text1, PlayerInfo[giveplayeridzcmd][pMaconha]);
						SendClientMessage(playerid, COR_GREY, gstring);
						format(gstring, sizeof(gstring), "%s [Quantidade: %d].", text2, PlayerInfo[giveplayeridzcmd][pCocaina]);
						SendClientMessage(playerid, COR_GREY, gstring);
						format(gstring, sizeof(gstring), "%s [Quantidade: %d].", text3, PlayerInfo[giveplayeridzcmd][pCrack]);
						SendClientMessage(playerid, COR_GREY, gstring);
						format(gstring, sizeof(gstring), "%s [Quantidade: %d].", text4, PlayerInfo[giveplayeridzcmd][pLsd]);
						SendClientMessage(playerid, COR_GREY, gstring);
						format(gstring, sizeof(gstring), "%s [Quantidade: %d].", text5, PlayerInfo[giveplayeridzcmd][pMats]);
						SendClientMessage(playerid, COR_GREY, gstring);
						format(gstring, sizeof(gstring), "%s.", text6);
						SendClientMessage(playerid, COR_GREY, gstring);
						format(gstring, sizeof(gstring), "* %s revistou %s para ver se tem qualquer item ilegal.", sendername ,giveplayerzcm);
						ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
					}
					else
					{
					    SendClientMessage(playerid, COR_GREY, "O Jogador está longe de Você !");
					    return 1;
					}
				}
			}
     	   	else
      	  	{
            	SendClientMessage(playerid, COR_GREY, "O Jogador Está Offline !");
            	return 1;
        	}
		}
    	return 1;
 	}
	CMD:presos(playerid, params[])
	{
		if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, 0xf5deb3FF, "|_B_P_L_|PRESOS|_B_P_L_|::");
			for(new i = 0; i < MAX_PLAYERS; ++i)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pJailed] == 1)
				    {
			     		 GetPlayerName(i, sendername, sizeof(sendername));
			     		 format(gstring, 128, "ID: %d Preso: %s Local: Penitenciária LS - Tempo: %d seg.", i, sendername, PlayerInfo[i][pJailTime]);
 					     SendClientMessage(playerid, COR_GRAD2, gstring);
      				}
      				if(PlayerInfo[playerid][pAdmin] > 0)
      				{
					     if(PlayerInfo[i][pJailed] == 2)
				         {
						      GetPlayerName(i, sendername, sizeof(sendername));
						      format(gstring, 128, "ID: %d Preso: %s Local: Carandiru Tempo: %d seg.", i, sendername, PlayerInfo[i][pJailTime]);
      					      SendClientMessage(playerid, COR_GRAD2, gstring);
      					 }
				         if(PlayerInfo[i][pJailed] == 3)
				         {
						      GetPlayerName(i, sendername, sizeof(sendername));
						      format(gstring, 128, "ID : %d Preso: %s Local: Cela Admin Tempo: %d seg.", i, sendername, PlayerInfo[i][pJailTime]);
      					      SendClientMessage(playerid, COR_GRAD2, gstring);
      					 }
				    }
				}
			}
		}
		return 1;
	}
 	CMD:procurados(playerid, params[])
	{
	    if(IsPlayerConnected(playerid) )
	   	{
   			if(!IsACop(playerid) && PlayerInfo[playerid][pAdmin] < 1)
			{
			    SendClientMessage(playerid, COR_GREY, "Você não é um Oficial/Administrador!");
			    return 1;
			}
			if(OnDuty[playerid] != 1 && GetPlayerOrg(playerid) != 7 && PlayerInfo[playerid][pAdmin] < 1)
			{
			    SendClientMessage(playerid, COR_GREY, "Você não Bateu o cartão!");
			    return 1;
			}
			new x;
			SendClientMessage(playerid, COR_GREEN, "|_B_P_L_|Suspeitos|_B_P_L_|:");
		    for(new i=0; i < MAX_PLAYERS; ++i)
			{
				if(IsPlayerConnected(i))
				{
				    if(WantedLevel[i] > 0)
				    {
						GetPlayerName(i, giveplayerzcm, sizeof(giveplayerzcm));
						format(gstring, sizeof(gstring), "%s%s(%d): %d", gstring,giveplayerzcm,i,WantedLevel[i]);
						x++;
						if(x > 3)
						{
						    SendClientMessage(playerid, COR_AMARELO, gstring);
						    x = 0;
							format(gstring, sizeof(gstring), "");
						}
						else
						{
							format(gstring, sizeof(gstring), "%s, ", gstring);
						}
					}
				}
			}
			if(x <= 3 && x > 0)
			{
				gstring[strlen(gstring)-2] = '.';
			    SendClientMessage(playerid, COR_AMARELO, gstring);
			}
		}//not connected
		return 1;
	}
	CMD:sairdoemprego(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	   	{
            tempocolheita[playerid] = 0;
            KillTimer(colheitapickup[playerid]);
		    if(PlayerInfo[playerid][pEmprego] > 0)
		    {
				if(GetPlayerInterior(playerid) > 0)
				{
	                rouboucarro[playerid] = 0;
	                tempocolheita[playerid] = 0;
	                StopPlayerHoldingObject(playerid);
			        if(PlayerInfo[playerid][pVIP] > 0)
			        {
			            if(PlayerInfo[playerid][pContractTime] >= 0)
						{
						    TransportDuty[playerid] = 0;
							ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
						    SendClientMessage(playerid, COR_LIGHTBLUE, "Você saiu do seu emprego!");
						    PlayerInfo[playerid][pEmprego] = 0;
						    PlayerInfo[playerid][pContractTime] = 0;
						    if(PlayerInfo[playerid][pSex] == 1){ SetPlayerSkin(playerid, 292); PlayerInfo[playerid][pSkin] = 292; }
			                if(PlayerInfo[playerid][pSex] == 2){ SetPlayerSkin(playerid, 41); PlayerInfo[playerid][pSkin] = 41; }
			                ResetPlayerWeaponsEx(playerid);
				  		}
			        }
			        else
			        {
						if(PlayerInfo[playerid][pContractTime] >= 0)
						{
						    TransportDuty[playerid] = 0;
							ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
						    SendClientMessage(playerid, COR_LIGHTBLUE, "Você saiu do seu emprego!");
						    PlayerInfo[playerid][pEmprego] = 0;
						    PlayerInfo[playerid][pContractTime] = 0;
			                ResetPlayerWeaponsEx(playerid);
			                if(PlayerInfo[playerid][pMembro] == 0 && PlayerInfo[playerid][pLider] == 0)
			                {
						    	if(PlayerInfo[playerid][pSex] == 1)
								{
									SetPlayerSkin(playerid, 292);
								}
								if(PlayerInfo[playerid][pSex] == 2)
								{
							 		SetPlayerSkin(playerid, 41);
							 	}
							}

						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COR_AMARELO, "Você precisa estar dentro de um interior para usar este comando!");
				}
			}
			else
			{
			    SendClientMessage(playerid, COR_VAGOS, "Você não está em nenhum emprego!");
			}
		}//not connected
		return 1;
	}
	CMD:limpar(playerid, params[])// || CMD:limparficha(playerid, params[])
	{
        if(IsPlayerConnected(playerid))
	    {
	        tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /limparficha [id] [Motivo]");
				return 1;
			}
            giveplayeridzcmd = ReturnUser(tmpzcmd);
			if(IsACop(playerid))
			{
                if(IsPlayerConnected(giveplayeridzcmd))
			    {
			        if(giveplayeridzcmd != INVALID_PLAYER_ID)
			        {
                        if(OnDuty[playerid] != 1) { return SendClientMessage(playerid, COR_GREY, "Você não Bateu o cartão !"); }
                        if(giveplayeridzcmd == playerid) { return SendClientMessage(playerid, COR_GREY, "Você não pode limpar sua propria ficha !"); }
                        if(!IsACop(playerid)) { return SendClientMessage(playerid, COR_GREY, "Você não é um policial !"); }
                        if(PlayerInfo[playerid][pCargo] < 4) { return SendClientMessage(playerid, COR_GREY, "Você precisa ser cargo 4+ para poder limpar fichas !"); }
                        if(DeslogandoSocio[playerid] == 1) { return SendClientMessage(playerid, COR_GREY, "Você não pode limpar ficha tendo usado o comando /entrarorg."); }
					    GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
						{
							idxzcmd++;
						}
						new offset = idxzcmd;
						new result[64];
						while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
						{
							result[idxzcmd - offset] = cmdtext[idxzcmd];
							idxzcmd++;
						}
						result[idxzcmd - offset] = EOS;
						if(!strlen(result))
   				         {
   						    SendClientMessage(playerid, COR_GRAD2, "USE: /limparficha [id] [Motivo]");
                            return 1;
						}
						format(gstring, sizeof(gstring), "* Você limpou a ficha de %s.", giveplayerzcm);
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "* Oficial %s limpou sua ficha.", sendername);
						SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "* Oficial %s limpou a ficha de: %s,Motivo: %s.",PlayerName(playerid),giveplayerzcm,(result));
						SendFamilyMessage(1, COR_LIGHTBLUE, gstring);
                        SendFamilyMessage(2, COR_LIGHTBLUE, gstring);
                        SendFamilyMessage(3, COR_LIGHTBLUE, gstring);
                        SendFamilyMessage(11, COR_LIGHTBLUE, gstring);
                        SendFamilyMessage(16, COR_LIGHTBLUE, gstring);
                        SendFamilyMessage(23, COR_LIGHTBLUE, gstring);
                        SendFamilyMessage(25, COR_LIGHTBLUE, gstring);
						WantedLevel[giveplayeridzcmd] = 0;
						SetPlayerChatBubble(giveplayeridzcmd, "*", COR_VERMELHO, 1, 1);
      					SetPlayerWantedLevel(giveplayeridzcmd, 0);
						ClearCrime(giveplayeridzcmd);
                     }
				}
				else
				{
					SendClientMessage(playerid, COR_GREY, "ID/Nick! Invalido");
				}
			}

		}//not connected
		return 1;
	}
	CMD:limparcrime(playerid, params[])
	{
        if(IsPlayerConnected(playerid))
	    {
	        tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /limparcrime [id] [Motivo]");
				return 1;
			}
			if(DeslogandoSocio[playerid] == 1)
			{
		 		SendClientMessage(playerid, COR_GRAD1, "Você entrou como sócio na org, não pode limpar crimes !");
		 		return 1;
			}
            giveplayeridzcmd = ReturnUser(tmpzcmd);
			if(IsACop(playerid))
			{
                if(IsPlayerConnected(giveplayeridzcmd))
			    {
			        if(giveplayeridzcmd != INVALID_PLAYER_ID)
			        {
			            if(PlayerToPoint(2, playerid,252.5212,69.6307,1003.6406) || PlayerToPoint(2,playerid,255.0129,76.0857,1003.6406) || PlayerToPoint(2,playerid,240.6702,112.7933,1003.2188) || PlayerToPoint(2, playerid,302.6840,-1529.6685,24.9219) || PlayerToPoint(2, playerid,2688.4722,-2443.8438,13.4729) || PlayerToPoint(2, playerid,326.4964,306.9705,999.1484) || PlayerToPoint(1, playerid,914.5157,-1235.1240,17.2109)
						|| PlayerToPoint(2, playerid,229.7716,165.0986,1003.0234) || PlayerToPoint(2, playerid,1709.7360,-1642.6481,20.2188) || PlayerToPoint(2, playerid,2497.8533,2389.3938,4.2109) || PlayerToPoint(2, playerid,2080.9387,-1376.1432,300.5588) || PlayerToPoint(2, playerid,2251.4067,2490.9138,10.9908))
						{
	                        if(OnDuty[playerid] != 1) { SendClientMessage(playerid, COR_GREY, "Você não Bateu o cartão !"); return 1; }
	                        if(giveplayeridzcmd == playerid) { SendClientMessage(playerid, COR_GREY, "Você não pode limpar seu proprio crime !"); return 1; }
	                        if(!IsACop(playerid)) { SendClientMessage(playerid, COR_GREY, "Você não é um Oficial !"); return 1; }
	                        if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COR_GREY, "Você precisa ser cargo 3+ para poder limpar fichas !"); return 1; }
	                        if(WantedLevel[giveplayeridzcmd] == 0) { SendClientMessage(playerid, COR_GREY, "Este jogador não está procurado !"); return 1; }
							if(DeslogandoSocio[playerid] == 1) { SendClientMessage(playerid, COR_GRAD1, "Você entrou como sócio na org, não pode limpar crimes !"); return 1;}
							GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
							{
								idxzcmd++;
							}
							new offset = idxzcmd;
							new result[64];
							while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
							{
								result[idxzcmd - offset] = cmdtext[idxzcmd];
								idxzcmd++;
							}
							result[idxzcmd - offset] = EOS;
							if(!strlen(result))
	   				         {
	   						    SendClientMessage(playerid, COR_GRAD2, "USE: /limparcrime [id] [Motivo]");
	                            return 1;
							}
							format(gstring, sizeof(gstring), "* Você limpou um crime de %s,  Motivo: %s.", giveplayerzcm,(result));
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* Oficial %s um crime seu, Motivo: %s.", sendername,(result));
							SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* Oficial %s limpou um crime de: %s,Motivo: %s",PlayerName(playerid),giveplayerzcm,(result));
							SendFamilyMessage(1, COR_LIGHTBLUE, gstring);
	                        SendFamilyMessage(2, COR_LIGHTBLUE, gstring);
	                        SendFamilyMessage(3, COR_LIGHTBLUE, gstring);
	                        SendFamilyMessage(11, COR_LIGHTBLUE, gstring);
	                        SendFamilyMessage(16, COR_LIGHTBLUE, gstring);
	                        SendFamilyMessage(23, COR_LIGHTBLUE, gstring);
	                        SendFamilyMessage(25, COR_LIGHTBLUE, gstring);
	                        if(WantedLevel[giveplayeridzcmd] == 1)
	                        {
	                             WantedLevel[giveplayeridzcmd] = 0;
								 return 1;
	                        }
							WantedLevel[giveplayeridzcmd] -= 1;
						}
						else
						{
						    SendClientMessage(playerid, COR_GRAD1, "Você não está em um ícone de equipamento dos cops!");
						    return 1;
						}
                     }
				}
				else
				{
					SendClientMessage(playerid, COR_GREY, "ID/Nick! Invalido");
				}
			}

		}//not connected
		return 1;
	}
	CMD:multar(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(!IsACop(playerid) && GetPlayerOrg(playerid) != 7)
			{
			    SendClientMessage(playerid, COR_GREY, "Você não é um Oficial da Justiça !");
			    return 1;
			}
			if(OnDuty[playerid] != 1 && GetPlayerOrg(playerid) != 7)
			{
			    SendClientMessage(playerid, COR_GREY, "Você não Bateu o cartão!");
			    return 1;
			}
	    	tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD2, "USE: /multar [ID] [Multa]");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			if(IsPlayerConnected(giveplayeridzcmd))
			{
                if(OnDuty[giveplayeridzcmd] != 0)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não pode multar Policiais!");
					return 1;
				}
				if(PlayerInfo[giveplayeridzcmd][pJailed] > 0)
				{
					SendClientMessage(playerid, COR_GRAD1, "Você não pode multar jogadores que estejam presos!");
					return 1;
				}
				if(GetPlayerState(giveplayeridzcmd) != PLAYER_STATE_DRIVER)
				{
					SendClientMessage(playerid, -1, "Este jogador não está dirigindo um veículo!");
	                return 1;
				}
				if(PlayerInfo[giveplayeridzcmd][pConnectTime] <  5)
				{
				    SendClientMessage(playerid, COR_GRAD1, "Você não pode multar jogadores com menos de 5 horas de jogada !");
				    return 1;
				}
				if(GetTickCount() - TempoMulta[giveplayeridzcmd] < 4000)
                {
					SendClientMessage(playerid, COR_GRAD5, "Usaram este comando a pouco tempo,aguarde um pouco !");
					return 1;
				}
			    if(giveplayeridzcmd != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(25.0, playerid, giveplayeridzcmd))
					{
					    GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idxzcmd < length) && (cmdtext[idxzcmd] <= ' '))
						{
							idxzcmd++;
						}
						new offset = idxzcmd;
						new result[64];
						while ((idxzcmd < length) && ((idxzcmd - offset) < (sizeof(result) - 1)))
						{
							result[idxzcmd - offset] = cmdtext[idxzcmd];
							idxzcmd++;
						}
						result[idxzcmd - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COR_GRAD2, "USE: /multar [ID] [Multa]");
							return 1;
						}
						if(!MultasServidor(result))
						{
							SendClientMessage(playerid, COR_LIGHTRED, "Esta multa que você digitou não existe, digite /multas para ver as multas existentes!");
							return 1;
						}
                        if(giveplayeridzcmd == playerid)
						{
							SendClientMessage(playerid, COR_GREY, "Você não pode se multar!");
							return 1;
						}
                        if(strcmp(result,"CM(playerid, params[]) { result = "Dirigindo na Contra-Mão"; MultadoCM[giveplayeridzcmd] = 1; }
						if(strcmp(result,"DB(playerid, params[]) { result = "Dirigindo Embreagado"; MultadoDB[giveplayeridzcmd] = 1; }
						if(strcmp(result,"DP(playerid, params[]) { result = "Direção Perigosa"; MultadoDP[giveplayeridzcmd] = 1; }
						if(strcmp(result,"EI(playerid, params[]) { result = "Estacionamento Indevido"; MultadoEI[giveplayeridzcmd] = 1; }
						if(strcmp(result,"FD(playerid, params[]) { result = "Farol Desligado"; MultadoFD[giveplayeridzcmd] = 1; }
						if(strcmp(result,"VD(playerid, params[]) { result = "Veículo Danificado"; MultadoVD[giveplayeridzcmd] = 1; }
						if(strcmp(result,"TNC(playerid, params[]) { result = "Trafegando na Calçada"; MultadoTNC[giveplayeridzcmd] = 1; }
						//talvez colocar aki as variavéls do setamento dos valores das multas.
						format(gstring, sizeof(gstring), "[MULTAS] %s multou %s por R$[%d], Razão:[%s] Speed:[%d]", PlayerName(playerid), giveplayerzcm, moneyszcmd, (result), GetPlayerSpeed(giveplayeridzcmd, true));
						SendFamilyMessage(1, COR_LIGHTBLUE, gstring);
			 	        SendFamilyMessage(2, COR_LIGHTBLUE, gstring);
				        SendFamilyMessage(3, COR_LIGHTBLUE, gstring);
				        SendFamilyMessage(7, COR_LIGHTBLUE, gstring);
				        SendFamilyMessage(12, COR_LIGHTBLUE, gstring);
			 	        SendFamilyMessage(13, COR_LIGHTBLUE, gstring);
				        SendFamilyMessage(17, COR_LIGHTBLUE, gstring);
	                    SendFamilyMessage(25, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "* Você multou %s por R$[%d], Razao:[%s]", giveplayerzcm, moneyszcmd, (result));
						SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						format(gstring, sizeof(gstring), "Oficial %s lhe multou no valor R$[%d], Razão:[%s] Speed:[%d], +2 Pontos !", PlayerName(playerid), moneyszcmd, (result), GetPlayerSpeed(giveplayeridzcmd, true));
						SendClientMessage(giveplayeridzcmd, COR_LIGHTBLUE, gstring);
						SendClientMessage(giveplayeridzcmd, COR_VERMELHO, "* Use /aceitar multa, para aceita-la, pague em 5 minutos ou ficará procurado(obs: se deslogar vai preso).");
						GameTextForPlayer(giveplayeridzcmd,"~r~MULTADO !", 5000, 1);
						TicketOffer[giveplayeridzcmd] = playerid;
						TicketMoney[giveplayeridzcmd] = moneyszcmd;
						DeslogandoMulta[giveplayeridzcmd] = 1;
						SetTimerEx("PresoMulta", 300000, false, "i", giveplayeridzcmd);
						PlayerInfo[playerid][pMultas] ++;
						TempoMulta[giveplayeridzcmd] = GetTickCount();
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COR_GREY, "O jogador está longe !");
						return 1;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "O jogador está Offline !");
			    return 1;
			}
		}
		return 1;
	}
	CMD:incendiar(playerid, params[])// || CMD:in(playerid, params[])
	{
	    if(IsAGangster(playerid) || GetPlayerOrg(playerid) == 8 || GetPlayerOrg(playerid) == 6 || GetPlayerOrg(playerid) == 16 || GetPlayerOrg(playerid) == 30)
	    {
	   		if(PlayerInfo[playerid][pJailed] != 0)
    	    {
	   		     SendClientMessage(playerid,COR_GRAD5,"Você nao pode criar incêndios neste local !");
	   		     return 1;
    	    }
    	    new carid = GetPlayerVehicleID(playerid);
	        if(IsAAviao(carid))
		    {
	   		     SendClientMessage(playerid, COR_GRAD5, "Você não pode usar este comando dentro de uma aeronave !");
	    	     return 1;
	        }
	        if(IsPlayerInAnyVehicle(playerid))
		    {
	   		     SendClientMessage(playerid, COR_GRAD5, "Você não pode usar este comando dentro de um veiculo !");
	    	     return 1;
	        }
	        if(IsPlayerInWater(playerid))
		    {
	   		     SendClientMessage(playerid, COR_GRAD5, "Você não pode usar este comando na água !");
	    	     return 1;
	        }
	        if(GetPlayerInterior(playerid) > 0)
    	    {
		         SendClientMessage(playerid,COR_GRAD5,"Você não pode usar este comando em interiores !");
		         return 1;
	        }
	        if(PlayerToPoint(20.0,playerid,2034.3182,-1300.1826,20.9183) || PlayerToPoint(20.0,playerid,-76.4639,-1130.5845,1.0781) || PlayerToPoint(20.0,playerid,1790.4182,-2363.9722,13.5455) || PlayerToPoint(20.0,playerid,1685.8202,-2239.2795,-2.6701) || PlayerToPoint(20.0,playerid,592.4020,-1508.6193,15.2718) || PlayerToPoint(20.0,playerid,218.5479,69.4251,1005.0391) || PlayerToPoint(20.0,playerid,592.4020,-1508.6193,15.2718)
		    || PlayerToPoint(20.0,playerid,218.5479,69.4251,1005.0391)
		    || PlayerToPoint(20.0,playerid,240.7362,112.7886,1003.2188)
		    || PlayerToPoint(20.0,playerid,-1346.9358,492.0078,11.2027)
	        || PlayerToPoint(20.0,playerid,2034.5068,-1402.1460,17.2980) || PlayerToPoint(20.0,playerid,2817.3291,-1167.0033,1029.1719) || PlayerToPoint(20.0,playerid,248.4990,302.1800,999.1484) || PlayerToPoint(20.0,playerid,354.8267,154.4102,1025.7964) || PlayerToPoint(20.0,playerid,2338.2690,-1272.4103,22.5080) || PlayerToPoint(20.0,playerid,735.3049,-1350.8284,13.5000) || PlayerToPoint(20.0,playerid,2495.3083,-1690.5221,14.7656)
		    || PlayerToPoint(20.0,playerid,2451.5259,-1686.4034,1013.5078)
		    || PlayerToPoint(20.0,playerid,918.6924,-1253.7435,120.0351)
		    || PlayerToPoint(20.0,playerid,2260.7551,-1222.4244,1049.0234)
	        || PlayerToPoint(20.0,playerid,2808.3562,-1176.4606,25.3687)|| PlayerToPoint(20.0,playerid,-2160.4102,638.5344,1057.5861) || PlayerToPoint(20.0,playerid,-2648.0791,1397.2968,906.4609) || PlayerToPoint(20.0,playerid,-515.8712,-539.2990,25.5234) || PlayerToPoint(20.0,playerid,2319.5225,-1211.7998,1049.0234) || PlayerToPoint(20.0,playerid,-2221.9097,134.4590,1035.6328) || PlayerToPoint(20.0,playerid,508.7702,-87.8531,998.9683)
		    || PlayerToPoint(20.0,playerid,936.1405,-9.1317,1000.9297)
		    || PlayerToPoint(20.0,playerid,1712.2338,-1640.0950,20.2239)
		    || PlayerToPoint(20.0,playerid,1031.0197,-1442.5164,13.5546)
		    || PlayerToPoint(20.0,playerid,1685.8202,-2239.2795,-2.6701))
      	    {
		         SendClientMessage(playerid,COR_GRAD5,"Você não pode criar incêndios neste local !");
		         return 1;
	        }
        	if(PlayerInfo[playerid][pJailed] == 1 || PlayerInfo[playerid][pJailed] == 2 || PlayerInfo[playerid][pJailed] == 3 || PlayerInfo[playerid][pJailed] == 4) return SendClientMessage(playerid, COR_VERMELHO, "[BPL] Você não pode usar esse comando na prisão.");
  			if(IncendioAcontecendo == true) return SendClientMessage(playerid, COR_AMARELO, "[ERRO]Alguém já incendiou algum lugar !");
  			SendClientMessage(playerid, COR_AMARELO, "[AVISO] O Local á sua frente pegará fogo em 5 segundos, saia de perto !");
	        new location[MAX_ZONE_NAME];
            GetPlayer2DZone(playerid, location, MAX_ZONE_NAME);
			new Float:PlayerX, Float:PlayerY, Float:PlayerZ;
			GetPlayerPos(playerid,PlayerX,PlayerY,PlayerZ);
            FogoX[0]=PlayerX+-1.9826;   FogoY[0]=PlayerY+-1.5052;   FogoZ[0]=PlayerZ-2;
			FogoX[1]=PlayerX+-1.9816;   FogoY[1]=PlayerY+-0.1017;   FogoZ[1]=PlayerZ-2;
			FogoX[2]=PlayerX+-3.2436;   FogoY[2]=PlayerY+-1.5876;   FogoZ[2]=PlayerZ-2;
			FogoX[3]=PlayerX+-1.9826;   FogoY[3]=PlayerY+-1.5052;   FogoZ[3]=PlayerZ-2;
			FogoX[4]=PlayerX+-1.7868;   FogoY[4]=PlayerY+-2.4806;   FogoZ[4]=PlayerZ-2;
			FogoX[5]=PlayerX+-1.1713;   FogoY[5]=PlayerY+-0.6008;   FogoZ[5]=PlayerZ-2;
			FogoX[6]=PlayerX+-2.4602;   FogoY[6]=PlayerY+0.0455;    FogoZ[6]=PlayerZ-2;
			FogoX[7]=PlayerX+-2.7717;   FogoY[7]=PlayerY+-0.6095;   FogoZ[7]=PlayerZ-2;
			FogoX[8]=PlayerX+-2.4602;   FogoY[8]=PlayerY+0.0455;    FogoZ[8]=PlayerZ-2;
			IncendioAcontecendo = true;
			SetTimerEx("Incendio", 5000, false, "i", playerid);
			PlayerInfo[playerid][pIncendio] += 1;
			return 1;

        }
	    else
		{
             SendClientMessage(playerid, COR_GREY,"Você não tem autorização para usar esse comando !");
             return 1;
		}
	}
	CMD:localincendio(playerid, params[])
	{
	    if(PlayerInfo[playerid][pLider] == 4 || PlayerInfo[playerid][pMembro] == 4)
	    {
			if(IncendioAcontecendo != true) return SendClientMessage(playerid, COR_AMARELO, "[ERRO] Não está acontecendo nenhum incêndio !");
			new Float:PlayerX, Float:PlayerY, Float:PlayerZ, Float:PlayerA;
			GetPlayerPos(playerid,PlayerX,PlayerY,PlayerZ);
			GetPlayerFacingAngle(playerid, PlayerA);
			SetPlayerCheckpoint(playerid, FogoX[1],FogoY[1],FogoZ[1],8.0);
			SendClientMessage(playerid, COR_VAGOS, "[BPL]: Incendio encontrado, siga o checkpoint !");
			SendClientMessage(playerid, COR_VAGOS, "[BPL]: Para apagar o fogo você precisa de um caminhão de agua ou extintor!.");
			return 1;
	    }
	    else
		{
		     SendClientMessage(playerid, COR_GREY,"Você não é dos SA:MU.");
		     return 1;
		}
    }
    CMD:destruirneon(playerid, params[])
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 1339)
            {
                SendClientMessage(playerid, COR_GRAD1, "Você não está autorizado a usar este comando !");
                return 1;
            }
            if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
            {
                SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
                return 1;
            }
            for(new i = 0; i < MAX_PLAYERS; ++i)
            {
                if(IsPlayerConnected(i))
                {
                     DestroyDynamicObject(GetPVarInt(i, "neon"));
                     DeletePVar(i, "Status");
			         DestroyDynamicObject(GetPVarInt(i, "neon1"));
			         DeletePVar(i, "Status");
			         DestroyDynamicObject(GetPVarInt(i, "neon2"));
			         DeletePVar(i, "Status");
			         DestroyDynamicObject(GetPVarInt(i, "neon3"));
			         DeletePVar(i, "Status");
			         DestroyDynamicObject(GetPVarInt(i, "neon4"));
			         DeletePVar(i, "Status");
			         DestroyDynamicObject(GetPVarInt(i, "neon5"));
			         DeletePVar(i, "Status");
			         DestroyDynamicObject(GetPVarInt(i, "neon6"));
			         DeletePVar(i, "Status");
			         DestroyDynamicObject(GetPVarInt(i, "neon7"));
			         DeletePVar(i, "Status");
			         DestroyDynamicObject(GetPVarInt(i, "neon8"));
			         DeletePVar(i, "Status");
			         DestroyDynamicObject(GetPVarInt(i, "neon9"));
			         DeletePVar(i, "Status");
			         DestroyDynamicObject(GetPVarInt(i, "neon10"));
			         DeletePVar(i, "Status");
			         DestroyDynamicObject(GetPVarInt(i, "neon11"));
			         DeletePVar(i, "Status");
			         DestroyDynamicObject(GetPVarInt(i, "neon12"));
			         DeletePVar(i, "Status");
			         DestroyDynamicObject(GetPVarInt(i, "neon13"));
			         DeletePVar(i, "Status");
			         DestroyDynamicObject(GetPVarInt(i, "interior"));
			         DeletePVar(i, "Status");
			         DestroyDynamicObject(GetPVarInt(i, "interior1"));
			         DeletePVar(i, "Status");
			         DestroyDynamicObject(GetPVarInt(i, "back"));
			         DeletePVar(i, "Status");
			         DestroyDynamicObject(GetPVarInt(i, "back1"));
			         DeletePVar(i, "Status");
			         DestroyDynamicObject(GetPVarInt(i, "front"));
			         DeletePVar(i, "Status");
			         DestroyDynamicObject(GetPVarInt(i, "front1"));
			         DeletePVar(i, "Status");
			         DestroyDynamicObject(GetPVarInt(i, "undercover"));
			         DeletePVar(i, "Status");
			         DestroyDynamicObject(GetPVarInt(i, "undercover1"));
			         DeletePVar(i, "Status");
                     NeonCarro[i] = 0;
                     GetPlayerName(i,PlayerName,sizeof(PlayerName));
                     format(gstring,sizeof(gstring),"ADMIN CMD: %s Retirou todos Neon dos Veiculos Vips!",PlayerName(playerid));
                     SendClientMessage(i,COR_LIGHTRED,gstring);
                }
            }
        }
        return 1;
    }
	CMD:paredao(playerid, params[]) || strcmp(cmdtext, "/paredaoadm(playerid, params[])
	{
        if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
		{
		    SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
		    return 1;
		}
		if(PlayerInfo[playerid][pAdmin] < 1)
	    {
			SendClientMessage(playerid, COR_GRAD1, "Você não tem autorização para usar esse comando.");
			return 1;
	    }
	    if(IsPlayerInAnyVehicle(playerid))
		{
		   SendClientMessage(playerid, COR_GREY, "Não é possivel plantar bloqueios dentro de veiculos!");
		   return 1;
		}
	    if(PlayerInfo[playerid][pJailed] != 0)
    	{
		   SendClientMessage(playerid,COR_AMARELO," Você não pode plantar Paredao na cadeia!");
		   return 1;
	    }
	    if(GetTickCount() - AguardarA[playerid] < 5000)
    	{
		   SendClientMessage(playerid,COR_EXE,"Aguarde um pouco para poder plantar outro Paredao!");
		   return 1;
	    }
		if(PlantouParedao[playerid] != 0)
		{
			SendClientMessage(playerid, COR_EXE, "Você ja tem um Paredao criado remova ele usando /rparedao para plantar outro!");
			return 1;
		}
		new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		Paredao[playerid] = CreateDynamicObject(972, X, Y, Z-2, 0.0, 0.0, A+90);
		SetPlayerPos(playerid, X, Y, Z+4);
		format(gstring, sizeof(gstring), "*ADMIN CMD:: %s Plantou um Paredao!.", PlayerName(playerid));
		SendClientMessageToAll(COR_ADMIN, gstring);
		GameTextForPlayer(playerid, "~w~Paredao ~p~Criado", 5000, 5);
		SendClientMessage(playerid,COR_VAGOS,"Paredao plantado use /rparedao para remove-lo!");
		AguardarA[playerid] = GetTickCount();
		PlantouParedao[playerid] = 1;
		return 1;
	}
	CMD:removerparedao(playerid, params[]) || strcmp(cmdtext, "/rparedao(playerid, params[])
	{
		if (!PlayerInfo[playerid][pAdmin])
		{
			SendClientMessage(playerid, COR_ADMIN, "Você não é um Admin!");
			return 1;
		}
		if (PlantouParedao[playerid] == 0)
		{
			SendClientMessage(playerid, COR_GREY, "Você não criou nenhum Paredao!");
			return 1;
		}
		RemoveParedao(playerid);
		SendClientMessage(playerid, COR_GREEN, "Paredao removido com sucesso.");
		PlantouParedao[playerid] = 0;
		return 1;
    }
    CMD:rmparedao(playerid, params[])
	{
		if(PlayerInfo[playerid][pAdmin] < 1338)
		{
			SendClientMessage(playerid, COR_GREY, "Você precisa ser admin master + para remover os paredões!");
			return 1;
		}
		if(AdminTrabalhando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1342 && PlayerInfo[playerid][pAdmin] != 1341)
		{
			SendClientMessage(playerid, COR_GRAD1, "Você não está trabalhando! (/trabalhar)");
			return 1;
		}
		for(new i = 0; i < MAX_PLAYERS; ++i)
		{
		    if(IsPlayerConnected(i))
			{
			    if(PlayerInfo[i][pAdmin] > 0)
			    {
					RemoveParedao(i);
			    }
			}
		}
		format(gstring,sizeof(gstring),"Todos os paredões foram retirados pelo Administrador: %s", PlayerName(playerid));
	    ABroadCast(0xffc801FF,gstring,1);
		return 1;
    }
  	CMD:plantarbarraca(playerid, params[]) || strcmp(cmdtext, "/barraca(playerid, params[])
	{
		if (PlayerInfo[playerid][pEmprego] != 5)
    	{
		   SendClientMessage(playerid,COR_AMARELO," Você não e um Mendigo!");
		   return 1;
	    }
	    if(IsPlayerInAnyVehicle(playerid))
		{
		   SendClientMessage(playerid, COR_GREY, "Não é possivel plantar barracas dentro de veiculos!");
		   return 1;
	    }
	    if(PlayerInfo[playerid][pJailed] != 0)
    	{
		   SendClientMessage(playerid,COR_AMARELO," Você não pode plantar barracas na cadeia!");
		   return 1;
	    }
	    if(GetPlayerInterior(playerid) > 0)
    	{
		   SendClientMessage(playerid,COR_EXE,"Voce nao pode usar este comando em interiores!");
		   return 1;
	    }
	    if(GetTickCount() - AguardarB[playerid] < 5000)
    	{
		   SendClientMessage(playerid,COR_EXE,"Aguarde um pouco para poder plantar outro barraca!");
		   return 1;
	    }
	    if (BarracaPlantada[playerid] != 0)
		{
			SendClientMessage(playerid, COR_EXE, "Você ja tem uma barraca criada remova ele usando /rbarraca para plantar outro!");
			return 1;
	    }
		new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		TemBarraca[playerid] = CreateDynamicObject(1457, X, Y, Z, 0.0, 0.0, A+180);
		SetPlayerPos(playerid, X, Y, Z+4);
		GameTextForPlayer(playerid, "~w~Barraquinha ~r~Criada", 5000, 5);
		SendClientMessage(playerid,COR_EXE,"Nao plante Barracas em lugares indevidos use /rbarraca para remover!");
		AguardarB[playerid] = GetTickCount();
		BarracaPlantada[playerid] = 1;
		return 1;
	}
	CMD:removerbarraca(playerid, params[]) || strcmp(cmdtext, "/rbarraca(playerid, params[])
	{
		if (PlayerInfo[playerid][pEmprego] != 5)
		{
			SendClientMessage(playerid, COR_GREY, "Você não é um Mendigo!");
			return 1;
		}
		if (BarracaPlantada[playerid] == 0)
		{
			SendClientMessage(playerid, COR_GREY, "Você não criou nenhum bloqueio!");
			return 1;
		}
		RemoveBarraca(playerid);
		SendClientMessage(playerid, COR_GREEN, "barraca removida com sucesso.");
		BarracaPlantada[playerid] = 0;
		return 1;
	}
	CMD:bqgg(playerid, params[])
	{
        if (PlayerInfo[playerid][pLider] != 5 && PlayerInfo[playerid][pMembro]!= 5 && PlayerInfo[playerid][pLider]!= 6 && PlayerInfo[playerid][pMembro]!= 6 && PlayerInfo[playerid][pLider]!= 11 && PlayerInfo[playerid][pMembro]!= 11 && PlayerInfo[playerid][pLider]!= 15 && PlayerInfo[playerid][pMembro]!= 15 && PlayerInfo[playerid][pLider]!= 16 && PlayerInfo[playerid][pMembro]!= 16 && PlayerInfo[playerid][pLider]!= 18 && PlayerInfo[playerid][pMembro]!= 18
        && PlayerInfo[playerid][pLider]!= 19 && PlayerInfo[playerid][pMembro]!= 19 && PlayerInfo[playerid][pLider]!= 20 && PlayerInfo[playerid][pMembro]!= 20 && PlayerInfo[playerid][pLider]!= 21 && PlayerInfo[playerid][pMembro]!= 21 && PlayerInfo[playerid][pLider]!= 22 && PlayerInfo[playerid][pMembro]!= 22 && PlayerInfo[playerid][pLider]!= 23 && PlayerInfo[playerid][pMembro]!= 23 && PlayerInfo[playerid][pLider]!= 24 && PlayerInfo[playerid][pMembro]!= 24
		&& PlayerInfo[playerid][pLider]!= 27 && PlayerInfo[playerid][pMembro]!= 27 && PlayerInfo[playerid][pLider]!= 28 && PlayerInfo[playerid][pMembro]!= 28 && PlayerInfo[playerid][pLider]!= 29 && PlayerInfo[playerid][pMembro]!= 29 && PlayerInfo[playerid][pLider]!= 30 && PlayerInfo[playerid][pMembro]!= 30)
		return SendClientMessage(playerid, COR_GREY, "Você não faz parte de uma organização criminosa!");
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
		   SendClientMessage(playerid,COR_AMARELO," Você não pode plantar bloqueio na cadeia!");
		   return 1;
	    }
	    if(IsPlayerInAnyVehicle(playerid))
		{
		   SendClientMessage(playerid, COR_AMARELO, "Você não pode criar objetos estando em um veículo !");
		   return 1;
	    }
	    if(GetTickCount() - Aguardar[playerid] < 5000)
    	{
		   SendClientMessage(playerid,COR_EXE,"Aguarde um pouco para poder plantar outro bloqueio!");
		   return 1;
	    }
	    if(GetPlayerInterior(playerid) > 0)
    	{
		   SendClientMessage(playerid,COR_EXE,"Voce nao pode usar este comando em interiores!");
		   return 1;
	    }
	    if(IsPlayerInTerritorio(playerid))
		{
			SendClientMessage(playerid, COR_AMARELO, "Você não pode colocar bloqueios de lixo neste local !");
			return 1;
		}
		anime = GetPlayerAnimationIndex(playerid) ;
		if ((anime== 1544) || (anime== 1250) || (anime== 1062) ||  ((anime>=  1538) && (anime<= 1542)))
		{
			SendClientMessage(playerid, COR_AMARELO, "Você não pode colocar bloqueios de lixo neste local !");
			return 1;
		}
	    if(LixoInfo[playerid][lCreated] == 1)
		{
			SendClientMessage(playerid, COR_EXE, "Você ja tem um bloqueio criado remova ele usando /bqgg para plantar outro!");
			return 1;
	    }
		new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		LixoInfo[playerid][lCreated] = 1;
        LixoInfo[playerid][lX] = X;
        LixoInfo[playerid][lY] = Y;
        LixoInfo[playerid][lZ] = Z-0.7;
        if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)
        {
            LixoInfo[playerid][LixoAztecas] = CreateDynamicObject(1358, X, Y, Z, 0.0, 0.0, A+180);
        }
        else if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
        {
            LixoInfo[playerid][LixoTaliban] = CreateDynamicObject(1358, X, Y, Z, 0.0, 0.0, A+180);
        }
        else if(PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)
        {
            LixoInfo[playerid][LixoHitmans] = CreateDynamicObject(1358, X, Y, Z, 0.0, 0.0, A+180);
        }
        else if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
        {
            LixoInfo[playerid][LixoPCC] = CreateDynamicObject(1358, X, Y, Z, 0.0, 0.0, A+180);
        }
        else if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
        {
            LixoInfo[playerid][LixoGroove] = CreateDynamicObject(1358, X, Y, Z, 0.0, 0.0, A+180);
        }
        else if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
        {
            LixoInfo[playerid][LixoAlqaeda] = CreateDynamicObject(1358, X, Y, Z, 0.0, 0.0, A+180);
        }
        else if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)
        {
            LixoInfo[playerid][LixoBallas] = CreateDynamicObject(1358, X, Y, Z, 0.0, 0.0, A+180);
        }
        else if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)
        {
            LixoInfo[playerid][LixoVagos] = CreateDynamicObject(1358, X, Y, Z, 0.0, 0.0, A+180);
        }
        else if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)
        {
            LixoInfo[playerid][LixoYakuza] = CreateDynamicObject(1358, X, Y, Z, 0.0, 0.0, A+180);
        }
        else if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
        {
            LixoInfo[playerid][LixoSons] = CreateDynamicObject(1358, X, Y, Z, 0.0, 0.0, A+180);
        }
        else if(PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)
        {
            LixoInfo[playerid][LixoMCN] = CreateDynamicObject(1358, X, Y, Z, 0.0, 0.0, A+180);
        }
        else if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
        {
            LixoInfo[playerid][LixoCV] = CreateDynamicObject(1358, X, Y, Z, 0.0, 0.0, A+180);
        }
        else if(PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)
        {
            LixoInfo[playerid][LixoMayans] = CreateDynamicObject(1358, X, Y, Z, 0.0, 0.0, A+180);
        }
        else if(PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)
        {
            LixoInfo[playerid][LixoAssassins] = CreateDynamicObject(1358, X, Y, Z, 0.0, 0.0, A+180);
        }
        SendClientMessage(playerid, COR_GREEN, "Bloqueio de Lixo Implantado... Use /rbgg Para Remover e Poder Criar Mais!.");
		format(gstring, sizeof(gstring), "* Meliante: %s colocou um bloqueio de lixo!", PlayerName(playerid));
		SendClientMessageToAll(GetPlayerColor(playerid), gstring);
		GameTextForPlayer(playerid, "~w~Bloqueio de lixo ~r~Criado", 5000, 5);
		Aguardar[playerid] = GetTickCount();
		return 1;
    }
 	CMD:rbgg(playerid, params[])
	{
		if (PlayerInfo[playerid][pLider] != 5 && PlayerInfo[playerid][pMembro]!= 5 && PlayerInfo[playerid][pLider]!= 11 && PlayerInfo[playerid][pMembro]!= 11 && PlayerInfo[playerid][pLider]!= 15 && PlayerInfo[playerid][pMembro]!= 15 && PlayerInfo[playerid][pLider]!= 16 && PlayerInfo[playerid][pMembro]!= 16 && PlayerInfo[playerid][pLider]!= 18 && PlayerInfo[playerid][pMembro]!= 18 && PlayerInfo[playerid][pLider]!= 19 && PlayerInfo[playerid][pMembro]!= 19
        && PlayerInfo[playerid][pLider]!= 20 && PlayerInfo[playerid][pMembro]!= 20 && PlayerInfo[playerid][pLider]!= 21 && PlayerInfo[playerid][pMembro]!= 21 && PlayerInfo[playerid][pLider]!= 22 && PlayerInfo[playerid][pMembro]!= 22 && PlayerInfo[playerid][pLider]!= 23 && PlayerInfo[playerid][pMembro]!= 23 && PlayerInfo[playerid][pLider]!= 24 && PlayerInfo[playerid][pMembro]!= 24 && PlayerInfo[playerid][pLider]!= 26 && PlayerInfo[playerid][pMembro]!= 26
		&& PlayerInfo[playerid][pLider]!= 27 && PlayerInfo[playerid][pMembro]!= 27 && PlayerInfo[playerid][pLider]!= 6 && PlayerInfo[playerid][pMembro]!= 6 && PlayerInfo[playerid][pLider]!= 16 && PlayerInfo[playerid][pMembro]!= 16)
		return SendClientMessage(playerid, COR_GREY, "Você não é um Gangster!");
		if(LixoInfo[playerid][lCreated] == 0)
		{
			 SendClientMessage(playerid, COR_GREY, "Você não criou nenhum bloqueio!");
			 return 1;
		}
		RemoveGangue(playerid);
		SendClientMessage(playerid, COR_GREEN, "bloqueio de Lixo removido com sucesso.");
		return 1;
	}
    CMD:rmgg(playerid, params[])//)
	{
		 if (PlayerInfo[playerid][pLider] != 5 && PlayerInfo[playerid][pMembro]!= 5 && PlayerInfo[playerid][pLider]!= 6 && PlayerInfo[playerid][pMembro]!= 6 && PlayerInfo[playerid][pLider]!= 11 && PlayerInfo[playerid][pMembro]!= 11 && PlayerInfo[playerid][pLider]!= 15 && PlayerInfo[playerid][pMembro]!= 15 && PlayerInfo[playerid][pLider]!= 16 && PlayerInfo[playerid][pMembro]!= 16 && PlayerInfo[playerid][pLider]!= 18 && PlayerInfo[playerid][pMembro]!= 18
		 && PlayerInfo[playerid][pLider]!= 19 && PlayerInfo[playerid][pMembro]!= 19 && PlayerInfo[playerid][pLider]!= 20 && PlayerInfo[playerid][pMembro]!= 20 && PlayerInfo[playerid][pLider]!= 21 && PlayerInfo[playerid][pMembro]!= 21 && PlayerInfo[playerid][pLider]!= 22 && PlayerInfo[playerid][pMembro]!= 22 && PlayerInfo[playerid][pLider]!= 23 && PlayerInfo[playerid][pMembro]!= 23 && PlayerInfo[playerid][pLider]!= 24 && PlayerInfo[playerid][pMembro]!= 24
		 && PlayerInfo[playerid][pLider]!= 27 && PlayerInfo[playerid][pMembro]!= 27 && PlayerInfo[playerid][pLider]!= 28 && PlayerInfo[playerid][pMembro]!= 28 && PlayerInfo[playerid][pLider]!= 29 && PlayerInfo[playerid][pMembro]!= 29 && PlayerInfo[playerid][pLider]!= 30 && PlayerInfo[playerid][pMembro]!= 30)
		 return SendClientMessage(playerid, COR_GREY, "Você não faz parte de uma organização criminosa!");
         if(PlayerInfo[playerid][pLider] > 0 || PlayerInfo[playerid][pCargo] == 5)
		 {
	          for(new i = 0; i < MAX_PLAYERS; ++i)
			  {
				   if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)
				   {
		                if(LixoInfo[i][lCreated] != 0 || LixoInfo[playerid][lCreated] != 0)
			            {
							 if(PlayerInfo[i][pMembro] == 5 || PlayerInfo[i][pLider] == 5)
							 {
                                  LixoInfo[i][lCreated] = 0;
                                  LixoInfo[i][lX]=0.0;
                                  LixoInfo[i][lY]=0.0;
                                  LixoInfo[i][lZ]=0.0;
                                  DestroyDynamicObject(LixoInfo[i][LixoAztecas]);
				                  format(gstring, sizeof(gstring), "* Todos os tapetes de bloqueios de lixo da %s foram retirados por: %s !", NomeORG(playerid), PlayerName(playerid));
                                  SendFamilyMessage(5,GetPlayerColor(playerid),gstring);
	                              SendClientMessage(playerid, COR_GRAD1, "Você removeu todos os bloqueios de lixo da sua organização !");
                                  return 1;
                             }
				        }
				        else
				        {
							 SendClientMessage(playerid, COR_GRAD1, "Não tem nenhum prego plantado!");
							 return 1;
				        }
				   }
				   if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
				   {
		                if(LixoInfo[i][lCreated] != 0 || LixoInfo[playerid][lCreated] != 0)
			            {
							 if(PlayerInfo[i][pMembro] == 6 || PlayerInfo[i][pLider] == 6)
							 {
                                  LixoInfo[i][lCreated] = 0;
                                  LixoInfo[i][lX]=0.0;
                                  LixoInfo[i][lY]=0.0;
                                  LixoInfo[i][lZ]=0.0;
                                  DestroyDynamicObject(LixoInfo[i][LixoTaliban]);
				                  format(gstring, sizeof(gstring), "* Todos os tapetes de bloqueios de lixo da %s foram retirados por: %s !", NomeORG(playerid), PlayerName(playerid));
                                  SendFamilyMessage(6,GetPlayerColor(playerid),gstring);
	                              SendClientMessage(playerid, COR_GRAD1, "Você removeu todos os bloqueios de lixo da sua organização !");
                                  return 1;
                             }
				        }
				        else
				        {
							 SendClientMessage(playerid, COR_GRAD1, "Não tem nenhum prego plantado!");
							 return 1;
				        }
				   }
				   if(PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)
				   {
		                if(LixoInfo[i][lCreated] != 0 || LixoInfo[playerid][lCreated] != 0)
			            {
							 if(PlayerInfo[i][pMembro] == 8 || PlayerInfo[i][pLider] == 8)
							 {
                                  LixoInfo[i][lCreated] = 0;
                                  LixoInfo[i][lX]=0.0;
                                  LixoInfo[i][lY]=0.0;
                                  LixoInfo[i][lZ]=0.0;
                                  DestroyDynamicObject(LixoInfo[i][LixoHitmans]);
				                  format(gstring, sizeof(gstring), "* Todos os tapetes de bloqueios de lixo da %s foram retirados por: %s !", NomeORG(playerid), PlayerName(playerid));
                                  SendFamilyMessage(8,GetPlayerColor(playerid),gstring);
	                              SendClientMessage(playerid, COR_GRAD1, "Você removeu todos os bloqueios de lixo da sua organização !");
                                  return 1;
                             }
				        }
				        else
				        {
							 SendClientMessage(playerid, COR_GRAD1, "Não tem nenhum prego plantado!");
							 return 1;
				        }
				   }
				   if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
				   {
		                if(LixoInfo[i][lCreated] != 0 || LixoInfo[playerid][lCreated] != 0)
			            {
							 if(PlayerInfo[i][pMembro] == 11 || PlayerInfo[i][pLider] == 11)
							 {
                                  LixoInfo[i][lCreated] = 0;
                                  LixoInfo[i][lX]=0.0;
                                  LixoInfo[i][lY]=0.0;
                                  LixoInfo[i][lZ]=0.0;
                                  DestroyDynamicObject(LixoInfo[i][LixoPCC]);
				                  format(gstring, sizeof(gstring), "* Todos os tapetes de bloqueios de lixo da %s foram retirados por: %s !", NomeORG(playerid), PlayerName(playerid));
                                  SendFamilyMessage(11,GetPlayerColor(playerid),gstring);
	                              SendClientMessage(playerid, COR_GRAD1, "Você removeu todos os bloqueios de lixo da sua organização !");
                                  return 1;
                             }
				        }
				        else
				        {
							 SendClientMessage(playerid, COR_GRAD1, "Não tem nenhum prego plantado!");
							 return 1;
				        }
				   }
				   if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
				   {
		                if(LixoInfo[i][lCreated] != 0 || LixoInfo[playerid][lCreated] != 0)
			            {
							 if(PlayerInfo[i][pMembro] == 15 || PlayerInfo[i][pLider] == 15)
							 {
                                  LixoInfo[i][lCreated] = 0;
                                  LixoInfo[i][lX]=0.0;
                                  LixoInfo[i][lY]=0.0;
                                  LixoInfo[i][lZ]=0.0;
                                  DestroyDynamicObject(LixoInfo[i][LixoGroove]);
				                  format(gstring, sizeof(gstring), "* Todos os tapetes de bloqueios de lixo da %s foram retirados por: %s !", NomeORG(playerid), PlayerName(playerid));
                                  SendFamilyMessage(15,GetPlayerColor(playerid),gstring);
	                              SendClientMessage(playerid, COR_GRAD1, "Você removeu todos os bloqueios de lixo da sua organização !");
                                  return 1;
                             }
				        }
				        else
				        {
							 SendClientMessage(playerid, COR_GRAD1, "Não tem nenhum prego plantado!");
							 return 1;
				        }
				   }
				   if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
				   {
		                if(LixoInfo[i][lCreated] != 0 || LixoInfo[playerid][lCreated] != 0)
			            {
							 if(PlayerInfo[i][pMembro] == 16 || PlayerInfo[i][pLider] == 16)
							 {
                                  LixoInfo[i][lCreated] = 0;
                                  LixoInfo[i][lX]=0.0;
                                  LixoInfo[i][lY]=0.0;
                                  LixoInfo[i][lZ]=0.0;
                                  DestroyDynamicObject(LixoInfo[i][LixoAlqaeda]);
				                  format(gstring, sizeof(gstring), "* Todos os tapetes de bloqueios de lixo da %s foram retirados por: %s !", NomeORG(playerid), PlayerName(playerid));
                                  SendFamilyMessage(16,GetPlayerColor(playerid),gstring);
	                              SendClientMessage(playerid, COR_GRAD1, "Você removeu todos os bloqueios de lixo da sua organização !");
                                  return 1;
                             }
				        }
				        else
				        {
							 SendClientMessage(playerid, COR_GRAD1, "Não tem nenhum prego plantado!");
							 return 1;
				        }
				   }
				   if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)
				   {
		                if(LixoInfo[i][lCreated] != 0 || LixoInfo[playerid][lCreated] != 0)
			            {
							 if(PlayerInfo[i][pMembro] == 18 || PlayerInfo[i][pLider] == 18)
							 {
                                  LixoInfo[i][lCreated] = 0;
                                  LixoInfo[i][lX]=0.0;
                                  LixoInfo[i][lY]=0.0;
                                  LixoInfo[i][lZ]=0.0;
                                  DestroyDynamicObject(LixoInfo[i][LixoBallas]);
				                  format(gstring, sizeof(gstring), "* Todos os tapetes de bloqueios de lixo da %s foram retirados por: %s !", NomeORG(playerid), PlayerName(playerid));
                                  SendFamilyMessage(18,GetPlayerColor(playerid),gstring);
	                              SendClientMessage(playerid, COR_GRAD1, "Você removeu todos os bloqueios de lixo da sua organização !");
                                  return 1;
                             }
				        }
				        else
				        {
							 SendClientMessage(playerid, COR_GRAD1, "Não tem nenhum prego plantado!");
							 return 1;
				        }
				   }
				   if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)
				   {
		                if(LixoInfo[i][lCreated] != 0 || LixoInfo[playerid][lCreated] != 0)
			            {
							 if(PlayerInfo[i][pMembro] == 19 || PlayerInfo[i][pLider] == 19)
							 {
                                  LixoInfo[i][lCreated] = 0;
                                  LixoInfo[i][lX]=0.0;
                                  LixoInfo[i][lY]=0.0;
                                  LixoInfo[i][lZ]=0.0;
                                  DestroyDynamicObject(LixoInfo[i][LixoVagos]);
				                  format(gstring, sizeof(gstring), "* Todos os tapetes de bloqueios de lixo da %s foram retirados por: %s !", NomeORG(playerid), PlayerName(playerid));
                                  SendFamilyMessage(19,GetPlayerColor(playerid),gstring);
	                              SendClientMessage(playerid, COR_GRAD1, "Você removeu todos os bloqueios de lixo da sua organização !");
                                  return 1;
                             }
				        }
				        else
				        {
							 SendClientMessage(playerid, COR_GRAD1, "Não tem nenhum prego plantado!");
							 return 1;
				        }
				   }
				   if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)
				   {
		                if(LixoInfo[i][lCreated] != 0 || LixoInfo[playerid][lCreated] != 0)
			            {
							 if(PlayerInfo[i][pMembro] == 20 || PlayerInfo[i][pLider] == 20)
							 {
                                  LixoInfo[i][lCreated] = 0;
                                  LixoInfo[i][lX]=0.0;
                                  LixoInfo[i][lY]=0.0;
                                  LixoInfo[i][lZ]=0.0;
                                  DestroyDynamicObject(LixoInfo[i][LixoYakuza]);
				                  format(gstring, sizeof(gstring), "* Todos os tapetes de bloqueios de lixo da %s foram retirados por: %s !", NomeORG(playerid), PlayerName(playerid));
                                  SendFamilyMessage(20,GetPlayerColor(playerid),gstring);
	                              SendClientMessage(playerid, COR_GRAD1, "Você removeu todos os bloqueios de lixo da sua organização !");
                                  return 1;
                             }
				        }
				        else
				        {
							 SendClientMessage(playerid, COR_GRAD1, "Não tem nenhum prego plantado!");
							 return 1;
				        }
				   }
				   if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
				   {
		                if(LixoInfo[i][lCreated] != 0 || LixoInfo[playerid][lCreated] != 0)
			            {
							 if(PlayerInfo[i][pMembro] == 21 || PlayerInfo[i][pLider] == 21)
							 {
                                  LixoInfo[i][lCreated] = 0;
                                  LixoInfo[i][lX]=0.0;
                                  LixoInfo[i][lY]=0.0;
                                  LixoInfo[i][lZ]=0.0;
                                  DestroyDynamicObject(LixoInfo[i][LixoSons]);
				                  format(gstring, sizeof(gstring), "* Todos os tapetes de bloqueios de lixo da %s foram retirados por: %s !", NomeORG(playerid), PlayerName(playerid));
                                  SendFamilyMessage(21,GetPlayerColor(playerid),gstring);
	                              SendClientMessage(playerid, COR_GRAD1, "Você removeu todos os bloqueios de lixo da sua organização !");
                                  return 1;
                             }
				        }
				        else
				        {
							 SendClientMessage(playerid, COR_GRAD1, "Não tem nenhum prego plantado!");
							 return 1;
				        }
				   }
				   if(PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)
				   {
		                if(LixoInfo[i][lCreated] != 0 || LixoInfo[playerid][lCreated] != 0)
			            {
							 if(PlayerInfo[i][pMembro] == 22 || PlayerInfo[i][pLider] == 22)
							 {
                                  LixoInfo[i][lCreated] = 0;
                                  LixoInfo[i][lX]=0.0;
                                  LixoInfo[i][lY]=0.0;
                                  LixoInfo[i][lZ]=0.0;
                                  DestroyDynamicObject(LixoInfo[i][LixoMCN]);
				                  format(gstring, sizeof(gstring), "* Todos os tapetes de bloqueios de lixo da %s foram retirados por: %s !", NomeORG(playerid), PlayerName(playerid));
                                  SendFamilyMessage(22,GetPlayerColor(playerid),gstring);
	                              SendClientMessage(playerid, COR_GRAD1, "Você removeu todos os bloqueios de lixo da sua organização !");
                                  return 1;
                             }
				        }
				        else
				        {
							 SendClientMessage(playerid, COR_GRAD1, "Não tem nenhum prego plantado!");
							 return 1;
				        }
				   }
				   if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
				   {
		                if(LixoInfo[i][lCreated] != 0 || LixoInfo[playerid][lCreated] != 0)
			            {
							 if(PlayerInfo[i][pMembro] == 23 || PlayerInfo[i][pLider] == 23)
							 {
                                  LixoInfo[i][lCreated] = 0;
                                  LixoInfo[i][lX]=0.0;
                                  LixoInfo[i][lY]=0.0;
                                  LixoInfo[i][lZ]=0.0;
                                  DestroyDynamicObject(LixoInfo[i][LixoCV]);
				                  format(gstring, sizeof(gstring), "* Todos os tapetes de bloqueios de lixo da %s foram retirados por: %s !", NomeORG(playerid), PlayerName(playerid));
                                  SendFamilyMessage(23,GetPlayerColor(playerid),gstring);
	                              SendClientMessage(playerid, COR_GRAD1, "Você removeu todos os bloqueios de lixo da sua organização !");
                                  return 1;
                             }
				        }
				        else
				        {
							 SendClientMessage(playerid, COR_GRAD1, "Não tem nenhum prego plantado!");
							 return 1;
				        }
				   }
				   if(PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)
				   {
		                if(LixoInfo[i][lCreated] != 0 || LixoInfo[playerid][lCreated] != 0)
			            {
							 if(PlayerInfo[i][pMembro] == 24 || PlayerInfo[i][pLider] == 24)
							 {
                                  LixoInfo[i][lCreated] = 0;
                                  LixoInfo[i][lX]=0.0;
                                  LixoInfo[i][lY]=0.0;
                                  LixoInfo[i][lZ]=0.0;
                                  DestroyDynamicObject(LixoInfo[i][LixoMayans]);
				                  format(gstring, sizeof(gstring), "* Todos os tapetes de bloqueios de lixo da %s foram retirados por: %s !", NomeORG(playerid), PlayerName(playerid));
                                  SendFamilyMessage(24,GetPlayerColor(playerid),gstring);
	                              SendClientMessage(playerid, COR_GRAD1, "Você removeu todos os bloqueios de lixo da sua organização !");
                                  return 1;
                             }
				        }
				        else
				        {
							 SendClientMessage(playerid, COR_GRAD1, "Não tem nenhum prego plantado!");
							 return 1;
				        }
				   }
				   if(PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)
				   {
		                if(LixoInfo[i][lCreated] != 0 || LixoInfo[playerid][lCreated] != 0)
			            {
							 if(PlayerInfo[i][pMembro] == 26 || PlayerInfo[i][pLider] == 26)
							 {
                                  LixoInfo[i][lCreated] = 0;
                                  LixoInfo[i][lX]=0.0;
                                  LixoInfo[i][lY]=0.0;
                                  LixoInfo[i][lZ]=0.0;
                                  DestroyDynamicObject(LixoInfo[i][LixoAssassins]);
				                  format(gstring, sizeof(gstring), "* Todos os tapetes de bloqueios de lixo da %s foram retirados por: %s !", NomeORG(playerid), PlayerName(playerid));
                                  SendFamilyMessage(26,GetPlayerColor(playerid),gstring);
	                              SendClientMessage(playerid, COR_GRAD1, "Você removeu todos os bloqueios de lixo da sua organização !");
                                  return 1;
                             }
				        }
				        else
				        {
							 SendClientMessage(playerid, COR_GRAD1, "Não tem nenhum prego plantado!");
							 return 1;
				        }
				   }
			  }
		 }
		 else
		 {
			 SendClientMessage(playerid, COR_GREY, "Você precisa ser lider ou sub lider para remover todos os bqgg !");
		 }
		 return 1;
	}
	CMD:bloqueio(playerid, params[]) || strcmp(cmdtext, "/bq(playerid, params[])
	{
		if (!IsACop(playerid))
    	{
		   SendClientMessage(playerid,COR_AMARELO," Você não e um policial!");
		   return 1;
	    }
	    if(IsPlayerInAnyVehicle(playerid))
		{
		   SendClientMessage(playerid, COR_GREY, "Não é possivel plantar bloqueios dentro de veiculos!");
		   return 1;
	    }
	    if(PlayerInfo[playerid][pJailed] != 0)
    	{
		   SendClientMessage(playerid,COR_AMARELO," Você não pode plantar bloqueio na cadeia!");
		   return 1;
	    }
	    if(GetTickCount() - AguardarB[playerid] < 5000)
    	{
		   SendClientMessage(playerid,COR_EXE,"Aguarde um pouco para poder plantar outro bloqueio!");
		   return 1;
	    }
	    if(GetPlayerInterior(playerid) > 0)
    	{
		   SendClientMessage(playerid,COR_AMARELO,"Você não pode colocar bloqueios neste local !");
		   return 1;
	    }
	    if (BloqueioInfo[playerid][bqCreated] == 1)
		{
			SendClientMessage(playerid, COR_EXE, "Você ja tem um bloqueio criado remova ele usando /rbq para plantar outro!");
			return 1;
	    }
		new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
        BloqueioInfo[playerid][bqX] = X;
        BloqueioInfo[playerid][bqY] = Y;
        BloqueioInfo[playerid][bqZ] = Z;
        BloqueioInfo[playerid][bqCreated] = 1;
		if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
        {
             BloqueioInfo[playerid][BloqueioPM] = CreateDynamicObject(4526, X, Y, Z+1, 0.0, 0.0, A+110);
        }
        else if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
        {
             BloqueioInfo[playerid][BloqueioBOPE] = CreateDynamicObject(4526, X, Y, Z+1, 0.0, 0.0, A+110);
        }
        else if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
        {
             BloqueioInfo[playerid][BloqueioEXE] = CreateDynamicObject(4526, X, Y, Z+1, 0.0, 0.0, A+110);
        }
        else if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
        {
             BloqueioInfo[playerid][BloqueioIP] = CreateDynamicObject(4526, X, Y, Z+1, 0.0, 0.0, A+110);
        }
        else if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
        {
             BloqueioInfo[playerid][BloqueioGATE] = CreateDynamicObject(4526, X, Y, Z+1, 0.0, 0.0, A+110);
        }
        else if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
        {
             BloqueioInfo[playerid][BloqueioPC] = CreateDynamicObject(4526, X, Y, Z+1, 0.0, 0.0, A+110);
        }
        else if(PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25)
        {
             BloqueioInfo[playerid][BloqueioPF] = CreateDynamicObject(4526, X, Y, Z+1, 0.0, 0.0, A+110);
        }
        PlantouBQ[playerid] = 1;
		SetPlayerPos(playerid, X, Y, Z+1);
		GameTextForPlayer(playerid, "~w~Bloqueio ~b~Criado", 2500, 5);
		AguardarB[playerid] = GetTickCount();
        SendClientMessage(playerid, COR_GREEN, "Bloqueio Implantado... Use /rbq Para Remover e Poder Criar Mais!.");
	}
	CMD:removerbloqueio(playerid, params[]) || strcmp(cmdtext, "/rbq(playerid, params[])
	{
		if (!IsACop(playerid))
		{
			SendClientMessage(playerid, COR_GREY, "Você não é um Oficial!");
			return 1;
		}
		if (BloqueioInfo[playerid][bqCreated] == 0)
		{
			SendClientMessage(playerid, COR_GREY, "Você não criou nenhum bloqueio!");
			return 1;
		}
		PlantouBQ[playerid] = 0;
		RemoveBloqueio(playerid);
		SendClientMessage(playerid, COR_GREEN, "Bloqueio removido com sucesso.");
        BloqueioInfo[playerid][bqCreated] = 0;
		return 1;
	}
	CMD:rmbq(playerid, params[])//)
	{
         if(PlayerInfo[playerid][pCargo] >= 5 && IsACop(playerid))
	     {
	          for(new i = 0; i < MAX_PLAYERS; ++i)
			  {
				   if(GetPlayerOrg(i) == GetPlayerOrg(playerid))
				   {
		                if(PlantouBQ[i] > 0)
			            {
                        	RemoveBloqueio(i);
                        	PlantouBQ[i] = 0;
				            format(gstring, sizeof(gstring), "* Todos os bloqueios da %s foram retirados por: %s !", NomeORG(playerid), PlayerName(playerid));
                            SendFamilyMessage(1,GetPlayerColor(playerid),gstring);
			                SendFamilyMessage(2,GetPlayerColor(playerid),gstring);
			                SendFamilyMessage(3,GetPlayerColor(playerid),gstring);
			                SendFamilyMessage(7,GetPlayerColor(playerid),gstring);
			                SendFamilyMessage(12,GetPlayerColor(playerid),gstring);
			                SendFamilyMessage(13,GetPlayerColor(playerid),gstring);
			                SendFamilyMessage(17,GetPlayerColor(playerid),gstring);
			                SendFamilyMessage(25,GetPlayerColor(playerid),gstring);
	                        SendClientMessage(playerid, COR_GRAD1, "Você removeu todos os bloqueios da sua organização");
				        }
				        else
				        {
							return SendClientMessage(playerid, COR_GRAD1, "Não tem nenhum bloqueio plantado!");
				        }
				   }
			  }
		 }
		 else
		 {
			 SendClientMessage(playerid, COR_GREY, "Você precisa ser lider ou sub lider para remover todos os bloqueios !");
		 }
		 return 1;
	}
  	CMD:barreira(playerid, params[]) || strcmp(cmdtext, "/br(playerid, params[])
	{
		if (!IsACop(playerid))
    	{
		   SendClientMessage(playerid,COR_AMARELO," Você não e um Oficial!");
		   return 1;
	    }
	    if(IsPlayerInAnyVehicle(playerid))
		{
		   SendClientMessage(playerid, COR_GREY, "Não é possivel plantar bloqueios dentro de veiculos!");
		   return 1;
	    }
	    if(PlayerInfo[playerid][pJailed] != 0)
    	{
		   SendClientMessage(playerid,COR_AMARELO,"Você não pode plantar bloqueio na cadeia!");
		   return 1;
	    }
	    if(GetPlayerInterior(playerid) > 0)
    	{
		   SendClientMessage(playerid,COR_AMARELO,"Você não pode colocar barreiras neste local !");
		   return 1;
	    }
	    if(GetTickCount() - AguardarBarreira[playerid] < 5000)
    	{
		   SendClientMessage(playerid,COR_EXE,"Aguarde um pouco para poder plantar outra Barreira!");
		   return 1;
	    }
	    if(BarreiraInfo[playerid][brCreated] != 0)
		{
			SendClientMessage(playerid, COR_EXE, "Você ja tem um bloqueio criado remova ele usando /rbq para plantar outro!");
			return 1;
	    }
	    if(PlayerInfo[playerid][pJailed] != 0)
	    {
		   SendClientMessage(playerid,COR_AMARELO,"Você não pode colocar barreiras neste local !");
		   return 1;
        }
        if(IsPlayerInAnyVehicle(playerid))
		{
		   SendClientMessage(playerid, COR_GREY, "Você não pode criar bloqueios dentro de veiculos !");
		   return 1;
		}
		new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
        BarreiraInfo[playerid][brX] = X;
        BarreiraInfo[playerid][brY] = Y;
        BarreiraInfo[playerid][brZ] = Z;
        BarreiraInfo[playerid][brCreated] = 1;
		if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
        {
             BarreiraInfo[playerid][BarreiraPM] = CreateDynamicObject(981, X, Y, Z, 0.0, 0.0, A+180);
        }
        else if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
        {
             BarreiraInfo[playerid][BarreiraBOPE] = CreateDynamicObject(981, X, Y, Z, 0.0, 0.0, A+180);
        }
        else if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
        {
             BarreiraInfo[playerid][BarreiraEXE] = CreateDynamicObject(981, X, Y, Z, 0.0, 0.0, A+180);
        }
        else if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
        {
             BarreiraInfo[playerid][BarreiraIP] = CreateDynamicObject(981, X, Y, Z, 0.0, 0.0, A+180);
        }
        else if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
        {
             BarreiraInfo[playerid][BarreiraGATE] = CreateDynamicObject(981, X, Y, Z, 0.0, 0.0, A+180);
        }
        else if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
        {
             BarreiraInfo[playerid][BarreiraPC] = CreateDynamicObject(981, X, Y, Z, 0.0, 0.0, A+180);
        }
        else if(PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25)
        {
             BarreiraInfo[playerid][BarreiraPF] = CreateDynamicObject(981, X, Y, Z, 0.0, 0.0, A+180);
        }
        PlantouBR[playerid] = 1;
		SetPlayerPos(playerid, X, Y, Z+4);
		GameTextForPlayer(playerid, "~w~Barreira ~r~Criada", 2500, 3);
		AguardarBarreira[playerid] = GetTickCount();
		SendClientMessage(playerid, COR_GREEN, "Barreira Implantada... Use /rbr Para Remover e Poder Criar Mais!.");
		return 1;
	}
	CMD:removerbarreira(playerid, params[]) || strcmp(cmdtext, "/rbr(playerid, params[])
	{
		if (!IsACop(playerid))
		{
			SendClientMessage(playerid, COR_GREY, " Você não é um Oficial da Justiça!");
			return 1;
		}
		if(BarreiraInfo[playerid][brCreated] == 0)
		{
			SendClientMessage(playerid, COR_GREY, "Você não criou nenhuma Barreira!");
			return 1;
		}
		RemoveBarreira(playerid);
		PlantouBR[playerid] = 0;
		SendClientMessage(playerid, COR_GREEN, "Barreira removida com sucesso.");
		BarreiraInfo[playerid][brCreated] = 0;
		return 1;
	}
    CMD:rmbr(playerid, params[])//)
	{
         if(PlayerInfo[playerid][pCargo] >= 5 && IsACop(playerid))
	     {
			  for(new i = 0; i < MAX_PLAYERS; ++i)
			  {
				   if(GetPlayerOrg(i) == GetPlayerOrg(playerid))
				   {
		                if(PlantouBR[i] > 0)
			            {
                        	RemoveBarreira(i);
                        	PlantouBR[i] = 0;
				            format(gstring, sizeof(gstring), "* Todos as barreiras da %s foram retirados por: %s !", NomeORG(playerid), PlayerName(playerid));
                            SendFamilyMessage(1,GetPlayerColor(playerid),gstring);
			                SendFamilyMessage(2,GetPlayerColor(playerid),gstring);
			                SendFamilyMessage(3,GetPlayerColor(playerid),gstring);
			                SendFamilyMessage(7,GetPlayerColor(playerid),gstring);
			                SendFamilyMessage(12,GetPlayerColor(playerid),gstring);
			                SendFamilyMessage(13,GetPlayerColor(playerid),gstring);
			                SendFamilyMessage(17,GetPlayerColor(playerid),gstring);
			                SendFamilyMessage(25,GetPlayerColor(playerid),gstring);
	                        SendClientMessage(playerid, COR_GRAD1, "Você removeu todos as barreiras da sua organização");
				        }
				        else
				        {
							 SendClientMessage(playerid, COR_GRAD1, "Não tem nenhuma barreiras plantado!");
							 return 1;
				        }
				   }
			  }
		 }
		 else
		 {
			 SendClientMessage(playerid, COR_GREY, "Você precisa ser lider ou sub lider para remover todos as barreiras !");
		 }
		 return 1;
	}
	CMD:kitcarro(playerid, params[])
    {
        new Float:vida;
        new vid = GetPlayerVehicleID(playerid);
        GetVehicleHealth(vid, vida);
        if(TemKitCarro[playerid] == 1)
        {
            if(!IsPlayerInAnyVehicle(playerid))
    	    {
	   			SendClientMessage(playerid, COR_LIGHTBLUE, "Voce não está em um veículo !");
	   			return 1;
    	    }
			if(GetPlayerState(playerid) == 2 && Quebrado[vid] == 0)
    		{
	   			SendClientMessage(playerid, COR_LIGHTBLUE, "Seu carro não está quebrado, não pode usar o kit !");
	   			return 1;
		    }
		    GetPlayerName(playerid,PlayerName,sizeof(PlayerName));
            RepairCar[playerid] = GetPlayerVehicleID(playerid);
            SetVehicleHealth(RepairCar[playerid], 500.0);
           	EngineCarro[playerid] = 1;
           	Quebrado[vid] = 0;
           	TemKitCarro[playerid] = 0;
            GetVehicleParamsEx(vid,enginezcmd,lightszcmd,alarmzcmd,doorszcmd,bonnetzcmd,bootzcmd,objectivezcmd);
       	    SetVehicleParamsEx(vid,VEHICLE_PARAMS_ON,lightszcmd,alarmzcmd,doorszcmd,bonnetzcmd,bootzcmd,objectivezcmd);
            SendClientMessage(playerid, COR_GRAD1, "Você usou seu o kit reparo, o veículo está com 50 por cento de vida!");
		}
		else
		{
		    SendClientMessage(playerid, COR_GRAD1, "Voce não tem um kit carro.");
		}
		return 1;
 	}
	CMD:motor(playerid, params[])
	{
    	new Float:vida;
        new vid = GetPlayerVehicleID(playerid);
        GetVehicleHealth(vid, vida);
		if(IsPlayerInAnyVehicle(playerid))
		{
			if(GetPlayerState(playerid) != 2)
			{
			   SendClientMessage(playerid, COR_LIGHTBLUE, "Você não é o motorista deste veículo !");
			   return 1;
			}
            if(GetPlayerState(playerid) == 2 && Gas[vid] <= 0)
            {
  	           SendClientMessage(playerid, COR_LIGHTBLUE, "Seu veículo está sem gasolina, use um galão !");
			   return 1;
            }
            if(EngineCarro[vid] == 1  && GetPlayerState(playerid) == 2 && GetPlayerSpeed(playerid, true) > 1)
            {
              SendClientMessage(playerid, COR_LIGHTBLUE, "Você não pode mecher no motor do veículo em movimento !");
              return 1;
            }
            if(GetPlayerState(playerid) == 2 && Quebrado[vid] == 1)
            {
  	           SendClientMessage(playerid, COR_LIGHTBLUE, "Seu veículo está quebrado, não pode mecher no motor !");
			   return 1;
            }
            if(AluguelCarros1(vid) || AluguelCarros2(vid) || AluguelCarros3(vid) || AluguelCarros4(vid) || BarcosAluguel(vid) || AeroAluguel(vid))
            {
                if(HireCar[playerid] != vid)
				{
				    SendClientMessage(playerid, COR_LIGHTBLUE, "Apenas quem alugou este veículo pode ligar o motor!");
                    return 1;
				}
            }
            if(EventoCarros(vid))
            {
				 SendClientMessage(playerid, COR_LIGHTBLUE, "Este veículo é de um evento, o motor liga sozinho, aguarde!");
				 return 1;
            }
            if(somligado[vid] == 1)
			{
			     SendClientMessage(playerid, COR_LIGHTRED, "Você não pode ligar o motor com o sistema de som ligado neste veículo(/ligarsom para desligar)!");
			     return 1;
            }
            if(PlayerInfo[playerid][pEmprego] == 9) //Ladrão de carro
			{
			    if(rouboucarro[playerid] == 0)
			    {
				    if((AztecasCarro(vid)) || (CVCarros(vid)) || (PccCarros(vid))
		 			|| (BallasCarros(vid)) || (VagosCarros(vid)) || (GrooveCarros(vid))
		 			|| (AlqaedaCarros(vid)) || (SonsCarros(vid)) || (MayansCarros(vid)) || (HitmansCarros(vid))
	        		|| (AssassinsCarros(vid)) || (YakuzaCarros(vid)) || (CNCarros(vid)) || (TalibanCarros(vid)) || (GloboCarros(vid)))
		    		{
						SendClientMessage(playerid, COR_ROTA, "Você só pode ligar o motor deste carro quando já estiver roubando ele!");
                        RemovePlayerFromVehicleEx(playerid);
                        return 1;
					}
				}
			}
            if(EngineCarro[vid] == 0)
		    {
                GetVehicleParamsEx(vid,enginezcmd,lightszcmd,alarmzcmd,doorszcmd,bonnetzcmd,bootzcmd,objectivezcmd);
            	SetVehicleParamsEx(vid,VEHICLE_PARAMS_ON,lightszcmd,alarmzcmd,doorszcmd,bonnetzcmd,bootzcmd,objectivezcmd);
            	SendClientMessage(playerid, 0xFFFFFFFF, "Veiculo: {228B22}Ligado!");
            	EngineCarro[vid] = 1;
    		}
			else if(EngineCarro[vid] == 1)
			{
                GetVehicleParamsEx(vid,enginezcmd,lightszcmd,alarmzcmd,doorszcmd,bonnetzcmd,bootzcmd,objectivezcmd);
            	SetVehicleParamsEx(vid,VEHICLE_PARAMS_OFF,lightszcmd,alarmzcmd,doorszcmd,bonnetzcmd,bootzcmd,objectivezcmd);
            	SendClientMessage(playerid, 0xFFFFFFFF, "Veiculo: {FF0000}Desligado!");
            	EngineCarro[vid] = 0;
			}
		}
    	return 1;
 	}
   	CMD:capo(playerid, params[])
    {
            new carro = GetPlayerVehicleID(playerid);
    	    if(carro != INVALID_VEHICLE_ID)
            {
                if(GetPVarInt(playerid, "bonnetzcmd") == 0)
				{
					GetVehicleParamsEx(carro,enginezcmd,lightszcmd,alarmzcmd,doorszcmd,bonnetzcmd,bootzcmd,objectivezcmd);
					SetVehicleParamsEx(carro,enginezcmd,lightszcmd,alarmzcmd,doorszcmd,VEHICLE_PARAMS_ON,bootzcmd,objectivezcmd);
					SendClientMessage(playerid, 0xF68E00F6, "{FFFFFF}Capô: {228B22}Aberto");
					SetPVarInt(playerid, "bonnetzcmd", 1);
				}
				else if(GetPVarInt(playerid, "bonnetzcmd") == 1)
				{
					GetVehicleParamsEx(carro,enginezcmd,lightszcmd,alarmzcmd,doorszcmd,bonnetzcmd,bootzcmd,objectivezcmd);
					SetVehicleParamsEx(carro,enginezcmd,lightszcmd,alarmzcmd,doorszcmd,VEHICLE_PARAMS_OFF,bootzcmd,objectivezcmd);
					SendClientMessage(playerid, 0xF68E00F6, "{FFFFFF}Capô: {FF0000}Fechado");
					SetPVarInt(playerid, "bonnetzcmd", 0);
				}
	        }
	        return 1;
   	}
    CMD:farol(playerid, params[])
    {
            new mot, lu, alar, por, cap, porma, ob;
            new carro = GetPlayerVehicleID(playerid);
            if(carro != INVALID_VEHICLE_ID)
            {
                if(luz[playerid] == 0)
                {
                    GetVehicleParamsEx(carro, mot, lu, alar, por, cap, porma, ob);
                    SetVehicleParamsEx(carro, mot, VEHICLE_PARAMS_ON, alar, por, cap, porma, ob);
                    luz[playerid] = 1;
                    SendClientMessage(playerid, 0xFFFFFFAA, "{FFFFFF}Farol: {228B22}Ligado!");
                }
				else if(luz[playerid] == 1)
                {
                    GetVehicleParamsEx(carro, mot, lu, alar, por, cap, porma, ob);
                    SetVehicleParamsEx(carro, mot, VEHICLE_PARAMS_OFF, alar, por, cap, porma, ob);
                    luz[playerid] = 0;
                    SendClientMessage(playerid, 0xFFFFFFAA, "{FFFFFF}Farol: {FF0000}Desligado!");
			    }
		    }
		    return 1;
	}
	CMD:flash(playerid, params[])
	{
        new vid = GetPlayerVehicleID(playerid);
        new panels, tires;
		if(GetPlayerState(playerid) == 2)
		{
            if(luz[playerid] == 0)
			{
			     return 1;
			}
			if(IsAMoto(vid) && IsAAviao(vid) && IsABarco(vid))
			{
				 return 1;
			}
			if(ativoualarme[playerid] == 0)
			{
		         GetVehicleDamageStatus(vid,panels,doorszcmd,lightszcmd,tires);
                 UpdateVehicleDamageStatus(vid, panels, doorszcmd, 5, tires);
                 alarmeativado[vid] = 1;
                 ativoualarme[playerid] = 1;
                 tempopiscar[playerid] = SetTimerEx("PiscarFarol", 200, 1, "i", playerid);
            }
            else if(ativoualarme[playerid] == 1)
            {
                 GetVehicleDamageStatus(vid,panels,doorszcmd,lightszcmd,tires);
                 UpdateVehicleDamageStatus(vid, panels, doorszcmd, 0, tires);
                 alarmeativado[vid] = 0;
                 ativoualarme[playerid] = 0;
                 KillTimer(tempopiscar[playerid]);
            }
		}
		else
		{
             SendClientMessage(playerid, COR_LIGHTBLUE, "Você não é o motorista deste veículo !");
			 return 1;
		}
    }
    CMD:cela(playerid, params[])
    {
		 if(IsACop(playerid))
		 {
              tmpzcmd = strtok(cmdtext, idxzcmd);
			  if(!strlen(tmpzcmd))
			  {
			       SendClientMessage(playerid, COR_GRAD5, "USE: /cela [playerid]");
			 	   return 1;
			  }
			  new para1;
			  para1 = strval(tmpzcmd);
			  if(!PlayerToPoint(3.0, playerid, 2082.3652,-1375.3173,300.5940))
		  	  {
			       SendClientMessage(playerid, COR_GREY, "Você não está dentro do enforcer, não pode prender o suspeito !");
				   return 1;
			  }
			  if(WantedLevel[para1] == 0)
			  {
                   SendClientMessage(playerid, COR_GREY, "O Jogador deve ter no mínimo 1 nível de procurado!");
	               return 1;
			  }
			  if(Algemado[para1] == 0)
              {
                   SendClientMessage(playerid, COR_GREY, "O Suspeito não está algemado !");
                   return 1;
              }
              if(IsACop(para1))
              {
				   SendClientMessage(playerid, COR_GRAD1, "* Você não pode prender outro Oficial !");
				   return 1;
              }
              if(celaenforcer[para1] == 0)
              {
                   new worldenforcer[MAX_PLAYERS];
                   celaenforcer[para1] = 1;
                   DeslogandoEnforcer[para1] = 1;
                   worldenforcer[para1] = GetPlayerVirtualWorld(para1);
                   SetPlayerVirtualWorld(para1, worldenforcer[para1]);
                   SetPlayerInterior(para1, 1);
                   RemovePlayerAttachedObject(giveplayeridzcmd, 4);
                   SetPlayerSpecialAction(giveplayeridzcmd, SPECIAL_ACTION_NONE);
                   PlayerCuffed[giveplayeridzcmd] = 0;
                   SetPlayerPos(para1, 2079.0908,-1374.3860,300.5940);
                   tempomover[para1] = SetTimerEx("MoverPeni", 180000, 0, "i", para1, playerid);
                   format(gstring, sizeof(gstring), "* Você foi colocado na cela provisória, você será movido para a penitenciária em 3 minutos.");
				   SendClientMessage(para1, COR_LIGHTBLUE, gstring);
                   format(gstring, sizeof(gstring), "* Você colocou %s na cela provisória, ele será movido para a penitenciária em 3 minutos, para retira-lo digite /cela.", PlayerName(giveplayeridzcmd));
				   SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
				   format(gstring, sizeof(gstring), "* Oficial %s colocou %s na cela provisória.",PlayerName(playerid), PlayerName(para1));
				   ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
              }
              else if(celaenforcer[para1] == 1)
              {
                   new Float: copx[MAX_PLAYERS], Float:copy[MAX_PLAYERS], Float:copz[MAX_PLAYERS];
                   GetPlayerPos(playerid, copx[playerid], copy[playerid], copz[playerid]);
                   celaenforcer[para1] = 0;
                   DeslogandoEnforcer[para1] = 0;
                   SetPlayerPos(para1, copx[playerid], copy[playerid], copz[playerid]);
                   KillTimer(tempomover[para1]);
                   format(gstring, sizeof(gstring), "* Você foi retirado %s da cela provisória.");
				   SendClientMessage(para1, COR_LIGHTBLUE, gstring);
                   format(gstring, sizeof(gstring), "* Você retirou %s da cela provisória.", PlayerName(giveplayeridzcmd));
				   SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
				   format(gstring, sizeof(gstring), "* Oficial %s retirou %s da cela provisória.",PlayerName(playerid), PlayerName(para1));
				   ProxDetector(30.0, playerid, gstring, COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE,COR_PURPLE);
              }

		 }
		 else
		 {
			  SendClientMessage(playerid, COR_GRAD1, "Você não é um Oficial !");
			  return 1;
		 }
    }
    CMD:prender(playerid, params[])
	{
        if(IsPlayerConnected(playerid))
    	{
            if(IsACop(playerid) || PlayerInfo[playerid][pEmprego] == 7)
			{
		        if(!PlayerToPoint(60.0, playerid, 1767.2574,-1573.4009,1735.5995))
				{
				    SendClientMessage(playerid, COR_GREY, "Você não está perto da cela, não pode prender o suspeito !");
				    return 1;
				}
			    tmpzcmd = strtok(cmdtext, idxzcmd);
			    if(!strlen(tmpzcmd))
			    {
				     SendClientMessage(playerid, COR_GRAD2, "USE: /prender [id] [tempo]");
				     return 1;
			    }
			    new suspect;
			    new time;
			    suspect = ReturnUser(tmpzcmd);
			    tmpzcmd = strtok(cmdtext, idxzcmd);
			    if(!strlen(tmpzcmd))
			    {
				     SendClientMessage(playerid, COR_GRAD2, "USE: /prender [id] [tempo]");
				     return 1;
			    }
			    time = strval(tmpzcmd);
			    if(time < 3 || time > 80) { SendClientMessage(playerid, COR_GREY, "O Tempo não pode ser menor que 3 e nem maior que 80 minutos !"); return 1; }
			    GetPlayerName(suspect, giveplayerzcm, sizeof(giveplayerzcm));
			    GetPlayerName(playerid, sendername, sizeof(sendername));
				if(IsPlayerConnected(suspect))
				{
					if(GetDistanceBetweenPlayers(playerid,suspect) < 15)
					{
                         if(IsACop(playerid) || PlayerInfo[playerid][pEmprego] == 7)
                         {
							GetPlayerName(suspect, giveplayerzcm, sizeof(giveplayerzcm));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(IsACop(suspect))
				            {
				                 SendClientMessage(playerid, COR_GRAD1, "Você não pode prender membros do governo!");
				                 return 1;
			 	            }
							if(Algemado[suspect] == 0)
                            {
                                 SendClientMessage(playerid, COR_GREY, "O Suspeito não está algemado !");
                                 return true;
                            }
							if(WantedLevel[suspect] < 1)
							{
                                 SendClientMessage(playerid, COR_GREY, "O Jogador deve ter no mínimo 1 nível de procurado!");
							     return 1;
							}
							else if(WantedLevel[suspect] == 1)
							{
								 if(time != 3)
								 {
                                      SendClientMessage(playerid, COR_GRAD1, "Este jogador está com nivel [1] de procura, tempo de prisão 3 min(180 segundos) !");
								      return 1;
								 }
							}
							else if(WantedLevel[suspect] == 2)
							{
								 if(time != 6)
								 {
                                      SendClientMessage(playerid, COR_GRAD1, "Este jogador está com nivel [2] de procura, tempo de prisão 6 min(360 segundos) !");
								      return 1;
								 }
							}
							else if(WantedLevel[suspect] == 3)
							{
								 if(time != 9)
								 {
                                      SendClientMessage(playerid, COR_GRAD1, "Este jogador está com nivel [3] de procura, tempo de prisão 9 min(540 segundos) !");
								      return 1;
								 }
							}
							else if(WantedLevel[suspect] == 4)
							{
								 if(time != 12)
								 {
                                      SendClientMessage(playerid, COR_GRAD1, "Este jogador está com nivel [4] de procura, tempo de prisão 12 min(720 segundos) !");
								      return 1;
								 }
							}
							else if(WantedLevel[suspect] == 5)
							{
								 if(time != 15)
								 {
                                      SendClientMessage(playerid, COR_GRAD1, "Este jogador está com nivel [5] de procura, tempo de prisão 15 min(900 segundos) !");
								      return 1;
								 }
							}
							else if(WantedLevel[suspect] == 6)
							{
								 if(time != 18)
								 {
                                      SendClientMessage(playerid, COR_GRAD1, "Este jogador está com nivel [6] de procura, tempo de prisão 18 min(1080 segundos) !");
								      return 1;
								 }
							}
                            else if(WantedLevel[suspect] == 7)
							{
								 if(time != 21)
								 {
                                      SendClientMessage(playerid, COR_GRAD1, "Este jogador está com nivel [7] de procura, tempo de prisão 21 min(1260 segundos) !");
								      return 1;
								 }
							}
							else if(WantedLevel[suspect] == 8)
							{
								 if(time != 24)
								 {
                                      SendClientMessage(playerid, COR_GRAD1, "Este jogador está com nivel [8] de procura, tempo de prisão 24 min(1440 segundos) !");
								      return 1;
								 }
							}
							else if(WantedLevel[suspect] == 9)
							{
								 if(time != 27)
								 {
                                      SendClientMessage(playerid, COR_GRAD1, "Este jogador está com nivel [9] de procura, tempo de prisão 27 min(1620 segundos) !");
								      return 1;
								 }
							}
							else if(WantedLevel[suspect] == 10)
							{
								 if(time != 30)
								 {
                                      SendClientMessage(playerid, COR_GRAD1, "Este jogador está com nivel [10] de procura, tempo de prisão 30 min(1800 segundos) !");
								      return 1;
								 }
							}
							else if(WantedLevel[suspect] == 11)
							{
								 if(time != 33)
								 {
                                      SendClientMessage(playerid, COR_GRAD1, "Este jogador está com nivel [11] de procura, tempo de prisão 33 min(1980 segundos) !");
								      return 1;
								 }
							}
							else if(WantedLevel[suspect] == 12)
							{
								 if(time != 36)
								 {
                                      SendClientMessage(playerid, COR_GRAD1, "Este jogador está com nivel [12] de procura, tempo de prisão 36 min(2160 segundos) !");
								      return 1;
								 }
							}
							else if(WantedLevel[suspect] == 13)
							{
								 if(time != 39)
								 {
                                      SendClientMessage(playerid, COR_GRAD1, "Este jogador está com nivel [13] de procura, tempo de prisão 39 min(2340 segundos) !");
								      return 1;
								 }
							}
							else if(WantedLevel[suspect] == 14)
							{
								 if(time != 42)
								 {
                                      SendClientMessage(playerid, COR_GRAD1, "Este jogador está com nivel [14] de procura, tempo de prisão 42 min(2520 segundos) !");
								      return 1;
								 }
							}
							else if(WantedLevel[suspect] == 15)
							{
								 if(time != 45)
								 {
                                      SendClientMessage(playerid, COR_GRAD1, "Este jogador está com nivel [15] de procura, tempo de prisão 45 min(2700 segundos) !");
								      return 1;
								 }
							}
							else if(WantedLevel[suspect] == 16)
							{
								 if(time != 48)
								 {
                                      SendClientMessage(playerid, COR_GRAD1, "Este jogador está com nivel [16] de procura, tempo de prisão 48 min(2880 segundos) !");
								      return 1;
								 }
							}
							else if(WantedLevel[suspect] == 17)
							{
								 if(time != 51)
								 {
                                      SendClientMessage(playerid, COR_GRAD1, "Este jogador está com nivel [17] de procura, tempo de prisão 51 min(3060 segundos) !");
								      return 1;
								 }
							}
							else if(WantedLevel[suspect] == 18)
							{
								 if(time != 54)
								 {
                                      SendClientMessage(playerid, COR_GRAD1, "Este jogador está com nivel [18] de procura, tempo de prisão 54 min(3240 segundos) !");
								      return 1;
								 }
							}
							else if(WantedLevel[suspect] == 19)
							{
								 if(time != 57)
								 {
                                      SendClientMessage(playerid, COR_GRAD1, "Este jogador está com nivel [19] de procura, tempo de prisão 57 min(3420 segundos) !");
								      return 1;
								 }
							}
							else if(WantedLevel[suspect] == 20)
							{
								 if(time != 60)
								 {
                                      SendClientMessage(playerid, COR_GRAD1, "Este jogador está com nivel [20] de procura, tempo de prisão 60 min(3600 segundos) !");
								      return 1;
								 }
							}
							else if(WantedLevel[suspect] >= 21)
							{
								 if(time != 63)
								 {
                                      SendClientMessage(playerid, COR_GRAD1, "Este jogador está com nivel [20+] de procura, tempo de prisão 63 min(3780 segundos) !");
								      return 1;
								 }
							}
							format(gstring, sizeof(gstring), "* Você prendeu o suspeito %s !", giveplayerzcm);
							SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "~n~~w~Preso por %s", sendername);
							GameTextForPlayer(suspect, gstring, 2500, 5);
							ResetPlayerWeaponsEx(suspect);
							DeslogandoMulta[suspect] = 0;
							DeslogandoEnforcer[suspect] = 0;
							if(PlayerInfo[playerid][pEmprego] == 7)
                            {
                                new price = WantedLevel[suspect] * 100;
                                format(gstring, sizeof(gstring), "[%s] %s prendeu o suspeito: %s, Crimes[%d] Tempo[%d] e ganhou R$[%d].",NomeORG(playerid),PlayerName(playerid),giveplayerzcm,WantedLevel[suspect],PlayerInfo[suspect][pJailTime],price);
                                GivePlayerMoneyEx(playerid, price / 1);
                                SendFamilyMessage(1, COR_LIGHTBLUE, gstring);
                                SendFamilyMessage(2, COR_LIGHTBLUE, gstring);
                                SendFamilyMessage(3, COR_LIGHTBLUE, gstring);
                                SendFamilyMessage(4, COR_LIGHTBLUE, gstring);
                                SendFamilyMessage(7, COR_LIGHTBLUE, gstring);
                                SendFamilyMessage(11, COR_LIGHTBLUE, gstring);
                                SendFamilyMessage(16, COR_LIGHTBLUE, gstring);
                                SendFamilyMessage(23, COR_LIGHTBLUE, gstring);
                                SendFamilyMessage(25, COR_LIGHTBLUE, gstring);
                                SendEmpregoMessage(7, COR_LIGHTBLUE, gstring);
                            }
                            if(IsACop(playerid))
		       	            {
								new price = WantedLevel[suspect] * 100;
                                format(gstring, sizeof(gstring), "[%s] %s prendeu o suspeito: %s, Crimes[%d] Tempo[%d] e ganhou R$[%d].",NomeORG(playerid),PlayerName(playerid),giveplayerzcm,WantedLevel[suspect],PlayerInfo[suspect][pJailTime],price);
                                GivePlayerMoneyEx(playerid, price / 1);
                                SendFamilyMessage(1, COR_LIGHTBLUE, gstring);
                                SendFamilyMessage(2, COR_LIGHTBLUE, gstring);
                                SendFamilyMessage(3, COR_LIGHTBLUE, gstring);
                                SendFamilyMessage(4, COR_LIGHTBLUE, gstring);
                                SendFamilyMessage(7, COR_LIGHTBLUE, gstring);
                                SendFamilyMessage(11, COR_LIGHTBLUE, gstring);
                                SendFamilyMessage(16, COR_LIGHTBLUE, gstring);
                                SendFamilyMessage(23, COR_LIGHTBLUE, gstring);
                                SendFamilyMessage(25, COR_LIGHTBLUE, gstring);
                                SendEmpregoMessage(7, COR_LIGHTBLUE, gstring);
							}
                            if(localizarpen[suspect] == 1)
							{
								 PlayerInfo[playerid][pPenitenciaria] = 0;
							}
							if(localizarpenlv[suspect] == 1)
							{
                                 PlayerInfo[playerid][pPenitenciaria] = 1;
							}
							PlayerInfo[suspect][pPreso] ++;
							SetPlayerSkin(suspect, 268);
                            if(PlayerInfo[suspect][pSex] == 2) {  SetPlayerSkin(suspect, 69); }
                   	        if(PlayerInfo[suspect][pSocio] >= 1) {  SetPlayerSkin(suspect, 42); }
							SetPlayerInterior(suspect, 6);
							new rand;
                            rand = random(sizeof(PenitenciariaSpawn));
			                SetPlayerPos(suspect, PenitenciariaSpawn[rand][0], PenitenciariaSpawn[rand][1], PenitenciariaSpawn[rand][2]); // Warp the player
			                SetPlayerFacingAngle(suspect, PenitenciariaSpawn[rand][3]);
							PlayerInfo[suspect][pJailTime] = time * 60;
							PlayerCuffed[suspect] = 0;
                            PlayerMutado[suspect] = 0;
                            RemovePlayerAttachedObject(suspect, 4);
                            SetPlayerSpecialAction(suspect, SPECIAL_ACTION_NONE);
							SetPlayerChatBubble(suspect, "*", COR_VERMELHO, 1, 1);
                            format(gstring, sizeof(gstring), "Você foi preso por %d segundos. Precisa de um advogado? /servico advogado", PlayerInfo[suspect][pJailTime]);
							SendClientMessage(suspect, COR_LIGHTBLUE, gstring);
							PlayerInfo[suspect][pJailed] = 1;
							WantedLevel[suspect] = 0;
							SetPlayerWantedLevel(suspect, 0);
							PlayerMutado[suspect] = 0;
							TogglePlayerControllable(suspect, 1);
							PlayerCuffed[suspect] = 0;
							Algemado[suspect] = 0;
							PlayerInfo[suspect][pMaconha] = 0;
				            PlayerInfo[suspect][pCocaina] = 0;
				            PlayerInfo[suspect][pCrack] = 0;
				            PlayerInfo[suspect][pLsd] = 0;
				            PlayerInfo[suspect][pMats] = 0;
				            PlayerInfo[suspect][pDina] = 0;
				            PlayerInfo[playerid][pCarcereiro] ++;
							return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COR_GREY, "Esse não é um jogador ativo !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COR_GREY, "Você não é um Oficial !");
			    return 1;
			}
		}//not connected
		return 1;
	}
	CMD:ccontrato(playerid, params[])
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pMembro] != 8 && PlayerInfo[playerid][pLider] != 8 && PlayerInfo[playerid][pMembro] != 26 && PlayerInfo[playerid][pLider] != 26)
    	    {
	   			SendClientMessage(playerid, COR_GREY, "Você não está autorizado a usar esse comando!");
	   			return 1;
    	    }
    	    if(GoChase[playerid] == 999)
    		{
	   			SendClientMessage(playerid, COR_GREY, "Você não tem um contrato !");
	   			return 1;
	        }
	        GetPlayerName(playerid,PlayerName,sizeof(PlayerName));
	        new Giver[MAX_PLAYER_NAME];
            GetPlayerName(GoChase[playerid], Giver, sizeof(Giver));
            if(GetPlayerOrg(playerid) == 8)
            {
			     format(gstring,128,"* Hitman %s, cancelou o contrato de matar: %s[%d].",PlayerName(playerid),Giver,GoChase[playerid]);
			     SendFamilyMessage(8, COR_AMARELO, gstring);
			     PlayerInfo[hitmanid][pHeadValue] = 0;
			     GetChased[hitmanid] = 999;
			     GotHit[hitmanid] = 0;
			}
			else if(GetPlayerOrg(playerid) == 26)
            {
			     format(gstring,128,"* Assassin %s, cancelou o contrato de matar: %s[%d].",PlayerName(playerid),Giver,GoChase[playerid]);
			     SendFamilyMessage(26, COR_AMARELO, gstring);
			     PlayerInfo[assid][pHeadValue] = 0;
			     GetChased[assid] = 999;
			     GotAss[assid] = 0;
			}
			GameTextForPlayer(playerid, "~r~contrato cancelado", 5000, 1);
			GoChase[playerid] = 999;
			return 1;
		}
		return 1;
	}
    CMD:contrato(playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	   	{
	   	    new money2;
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD1, "USE: /contrato [ID/Nome] [Quantia]");
				return 1;
			}
			giveplayeridzcmd = ReturnUser(tmpzcmd);
			tmpzcmd = strtok(cmdtext, idxzcmd);
			if(!strlen(tmpzcmd))
			{
				SendClientMessage(playerid, COR_GRAD1, "USE: /contrato [ID/Nome] [Quantia]");
				return 1;
			}
			moneyszcmd = strval(tmpzcmd);
			if(moneyszcmd < 2000 || moneyszcmd > 15000) { SendClientMessage(playerid, COR_GREY, "Seu contrato não pode ser menos que 2000 nem maior que 15000"); return 1; }
			if(PlayerInfo[playerid][pLevel] < 2)
			{
				SendClientMessage(playerid, COR_GRAD1, "Você precisa de ter Nivel +3 para por um Contrato !");
				return 1;
			}
			if (IsPlayerConnected(giveplayeridzcmd))
			{
			    if(giveplayeridzcmd != INVALID_PLAYER_ID)
			    {

					if(PlayerInfo[giveplayeridzcmd][pHeadValue] > 15000)
					{
 			 			SendClientMessage(playerid, COR_LIGHTBLUE, "Esté jogador já possui R$[15000] de contrato, o máximo que se pode colocar é R$[15000].");
					    return 1;
					}
			        if(Dormindo[giveplayeridzcmd] == true) // sistema de dormir
			        {
			            SendClientMessage(playerid, COR_GREY, "Você não pode por contrato em jogadores dormindo!");
					}
			    	if(PlayerInfo[giveplayeridzcmd][pLevel] == 2)
					{
						SendClientMessage(playerid, COR_GRAD1, "Você não pode por contrato em novatos !");
						return 1;
					}
					if(GetPlayerOrg(playerid) == 8)
					{
					    SendClientMessage(playerid, COR_GREY,"Você é um hitman, não pode por contratos !");
					    return true;
					}
					if(GetPlayerOrg(playerid) == 26)
					{
					    SendClientMessage(playerid, COR_GREY,"Você é um assassin, não pode por contratos !");
					    return true;
					}
					if(GetPlayerOrg(giveplayeridzcmd) == 8)
					{
					    SendClientMessage(playerid, COR_GREY,"Você é não pode colocar contrato em um hitman !");
					    return true;
					}
					if(GetPlayerOrg(giveplayeridzcmd) == 26)
					{
					    SendClientMessage(playerid, COR_GREY,"Você é não pode colocar contrato em um assassins !");
					    return true;
					}
				    else if(PlayerInfo[giveplayeridzcmd][pAdmin] > 0)
				    {
				        SendClientMessage(playerid, COR_GREY, "Você não pode colocar contratos em administradores!");
				        return true;
				    }
				    if(IsACop(giveplayeridzcmd) && moneyszcmd <= 4000)
				    {
				        SendClientMessage(playerid, COR_GREY, "Contratos em cops devem ser maiores que R$4000!");
						return true;
				    }
                    if(giveplayeridzcmd == playerid) { SendClientMessage(playerid, COR_GREY, "Nao pode colocar contrato em si mesmo!"); return 1; }
					GetPlayerName(giveplayeridzcmd, giveplayerzcm, sizeof(giveplayerzcm));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					money2 = GetPlayerMoneyEx(playerid);
					if (moneyszcmd > 0 && money2 >= moneyszcmd)
					{
						GivePlayerMoneyEx(playerid, (0 - moneyszcmd));
						PlayerInfo[giveplayeridzcmd][pHeadValue]+=moneyszcmd;
						//if(IsPlayerInLS(giveplayeridzcmd)) //
						if(Contrato1paracada == true)
						{
						     format(gstring, sizeof(gstring), "%s colocou um contrato em %s, por R$[%d].",sendername, giveplayerzcm, moneyszcmd);
						     SendFamilyMessage(8, COR_AMARELO, gstring);
						     format(gstring, sizeof(gstring), "* Você colocou um contrato em %s, por R$[%d], foi para os Hitmans.",giveplayerzcm, moneyszcmd);
						     SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
                             Contrato1paracada = false;
						}
						//	else if(IsPlayerInLV(giveplayeridzcmd))
						else if(Contrato1paracada == false)
						{
                             format(gstring, sizeof(gstring), "%s colocou um contrato em %s, por R$[%d].",sendername, giveplayerzcm, moneyszcmd);
						     SendFamilyMessage(26, COR_AMARELO, gstring);
						     format(gstring, sizeof(gstring), "* Você colocou um contrato em %s, por R$[%d], foi para os Assassins.",giveplayerzcm, moneyszcmd);
						     SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
						     Contrato1paracada = true;
						}
						else
						{
							 new cont = 1 + random(1);
							 if(cont == 1)
							 {
                                  format(gstring, sizeof(gstring), "%s colocou um contrato em %s, por R$[%d].",sendername, giveplayerzcm, moneyszcmd);
						          SendFamilyMessage(8, COR_AMARELO, gstring);
						          format(gstring, sizeof(gstring), "* Você colocou um contrato em %s, por R$[%d], foi para os Hitmans.",giveplayerzcm, moneyszcmd);
						          SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							 }
							 else if(cont == 2)
							 {
                                  format(gstring, sizeof(gstring), "%s colocou um contrato em %s, por R$[%d].",sendername, giveplayerzcm, moneyszcmd);
						          SendFamilyMessage(26, COR_AMARELO, gstring);
						          format(gstring, sizeof(gstring), "* Você colocou um contrato em %s, por R$[%d], foi para os Assassins.",giveplayerzcm, moneyszcmd);
						          SendClientMessage(playerid, COR_LIGHTBLUE, gstring);
							 }
						}
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					}
					else
					{
						SendClientMessage(playerid, COR_GRAD1, "   Você não possui essa grana.");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COR_GRAD1, "Esse não é um jogador ativo.");
			}
		}
	}


